{
  "com.google.common.collect.SingletonImmutableBiMap:createKeySet()" : [ "of" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:createKeySet()" : [ "sortedMap" ],
  "com.google.common.math.BigIntegerMath:floorPowerOfTwo(java.math.BigInteger)" : [ "log2" ],
  "com.google.common.primitives.UnsignedBytes:parseUnsignedByte(java.lang.String)" : [ "parseUnsignedByte" ],
  "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:addAll(java.util.Collection)" : [ "addAll" ],
  "com.google.common.collect.EnumMultiset$Itr:next()" : [ "hasNext" ],
  "com.google.common.eventbus.SubscriberRegistry:getSubscribersForTesting(java.lang.Class)" : [ "firstNonNull", "of" ],
  "com.google.common.collect.Multimaps:toMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)" : [ "toMultimap" ],
  "com.google.common.collect.Iterables:filter(java.lang.Iterable,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AtomicDoubleArray:addAndGet(int,double)" : [ "accumulateAndGet" ],
  "com.google.common.collect.Maps$FilteredEntryMap$KeySet:toArray()" : [ "newArrayList" ],
  "com.google.common.hash.Hashing:hmacSha256(java.security.Key)" : [ "<init>", "hmacToString" ],
  "com.google.common.cache.LocalCache$Segment:recordLockedRead(com.google.common.cache.ReferenceEntry,long)" : [ "recordsAccess" ],
  "com.google.common.graph.UndirectedGraphConnections:removePredecessor(java.lang.Object)" : [ "removeSuccessor" ],
  "com.google.common.cache.LocalCache$HashIterator:nextEntry()" : [ "advance" ],
  "com.google.common.io.Resources:asCharSource(java.net.URL,java.nio.charset.Charset)" : [ "asCharSource", "asByteSource" ],
  "com.google.common.collect.Queues:newLinkedBlockingQueue(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.hash.AbstractCompositeHashFunction$1:putBytes(byte[])" : [ "putBytes" ],
  "com.google.common.hash.Hasher:putLong(long)" : [ "putLong" ],
  "com.google.common.collect.ImmutableSortedSet:last()" : [ "descendingIterator" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:next()" : [ "validateIterator" ],
  "com.google.common.collect.HashMultimap:create(int,int)" : [ "<init>" ],
  "com.google.common.graph.Graphs:checkNonNegative(int)" : [ "checkArgument" ],
  "com.google.common.io.Files:toString(java.io.File,java.nio.charset.Charset)" : [ "asCharSource", "read" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:containsKey(java.lang.Object)" : [ "get" ],
  "com.google.common.collect.CompactLinkedHashMap:createWithExpectedSize(int)" : [ "<init>" ],
  "com.google.common.reflect.Types$ParameterizedTypeImpl:toString()" : [ "jdkTypeDuplicatesOwnerName", "typeName", "join", "transform" ],
  "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:hasNext()" : [ "checkModCount", "nextNotInSkipMe", "size" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:tailSet(java.lang.Object)" : [ "getSortedSetDelegate" ],
  "com.google.common.util.concurrent.AggregateFuture:decrementCountAndMaybeComplete(com.google.common.collect.ImmutableCollection)" : [ "checkState", "processCompleted" ],
  "com.google.common.hash.Fingerprint2011:hashLength33To64(byte[],int,int)" : [ "load64", "shiftMix" ],
  "com.google.common.primitives.Doubles:ensureCapacity(double[],int,int)" : [ "checkArgument" ],
  "com.google.common.collect.ImmutableSortedSet:ceiling(java.lang.Object)" : [ "getFirst", "tailSet" ],
  "com.google.common.graph.ImmutableGraph:incidentEdgeOrder()" : [ "stable" ],
  "com.google.common.collect.TreeRangeSet$Complement:add(com.google.common.collect.Range)" : [ "remove" ],
  "com.google.common.collect.Maps:immutableEnumMap(java.util.Map)" : [ "of", "checkEntryNotNull", "asImmutable" ],
  "com.google.common.cache.AbstractCache$SimpleStatsCounter:<init>()" : [ "create" ],
  "com.google.common.graph.StandardValueGraph:<init>(com.google.common.graph.AbstractGraphBuilder,java.util.Map,long)" : [ "<init>", "cast", "checkNonNegative" ],
  "com.google.common.collect.ContiguousSet:<init>(com.google.common.collect.DiscreteDomain)" : [ "<init>", "natural" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:<init>(java.util.concurrent.ExecutorService)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeSet:copyOf(java.lang.Iterable)" : [ "<init>", "addAll", "build" ],
  "com.google.common.base.Enums:stringConverter(java.lang.Class)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractService:<init>()" : [ "<init>" ],
  "com.google.common.collect.TreeRangeMap:putAll(com.google.common.collect.RangeMap)" : [ "put" ],
  "com.google.common.collect.StandardTable$CellIterator:next()" : [ "immutableCell" ],
  "com.google.common.io.CharStreams:toString(java.lang.Readable)" : [ "toStringBuilder" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:keySet()" : [ "delegate" ],
  "com.google.common.collect.Ordering:from(com.google.common.collect.Ordering)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.RateLimiter:create(double,java.time.Duration)" : [ "create", "toNanosSaturated" ],
  "com.google.common.collect.ImmutableSortedMap:orderedBy(java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.Serialization:populateMap(java.util.Map,java.io.ObjectInputStream)" : [ "populateMap" ],
  "com.google.common.collect.Tables:newCustomTable(java.util.Map,com.google.common.base.Supplier)" : [ "<init>", "checkArgument", "checkNotNull" ],
  "com.google.common.graph.GraphBuilder:directed()" : [ "<init>" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.ForwardingListMultimap:<init>()" : [ "<init>" ],
  "com.google.common.collect.Range:gap(com.google.common.collect.Range)" : [ "compareTo", "create" ],
  "com.google.common.collect.ContiguousSet:headSet(java.lang.Comparable)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableEnumSet:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.EnumMultiset:forEachEntry(java.util.function.ObjIntConsumer)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:ceilingEntry(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.SmallCharMatcher:matches(char)" : [ "checkFilter", "smear" ],
  "com.google.common.collect.Lists$TransformingRandomAccessList:removeIf(java.util.function.Predicate)" : [ "checkNotNull" ],
  "com.google.common.collect.Sets:newLinkedHashSetWithExpectedSize(int)" : [ "capacity" ],
  "com.google.common.collect.Multimaps:filterEntries(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)" : [ "<init>", "checkNotNull", "filterFiltered" ],
  "com.google.common.cache.LocalCache$LocalLoadingCache:getUnchecked(java.lang.Object)" : [ "<init>", "get" ],
  "com.google.common.collect.EnumMultiset:elementSet()" : [ "elementSet" ],
  "com.google.common.collect.Multimaps$CustomMultimap:<init>(java.util.Map,com.google.common.base.Supplier)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Multisets:iteratorImpl(com.google.common.collect.Multiset)" : [ "<init>" ],
  "com.google.common.collect.Iterators:concat(java.util.Iterator,java.util.Iterator)" : [ "concat", "checkNotNull" ],
  "com.google.common.collect.AbstractMultiset:setCount(java.lang.Object,int)" : [ "setCountImpl" ],
  "com.google.common.base.Strings:isNullOrEmpty(java.lang.String)" : [ "stringIsNullOrEmpty" ],
  "com.google.common.collect.ForwardingList:subList(int,int)" : [ "delegate" ],
  "com.google.common.collect.ForwardingMultimap:containsValue(java.lang.Object)" : [ "delegate" ],
  "com.google.common.reflect.TypeToken:getSupertypeFromUpperBounds(java.lang.Class,java.lang.reflect.Type[])" : [ "of", "isSubtypeOf", "getSupertype" ],
  "com.google.common.reflect.TypeResolver:covariantly(java.lang.reflect.Type)" : [ "<init>", "where", "getTypeMappings" ],
  "com.google.common.primitives.Primitives:isWrapperType(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.graph.ImmutableNetwork:copyOf(com.google.common.graph.ImmutableNetwork)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSet:builderWithExpectedSize(int)" : [ "<init>", "checkNonnegative" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:higher(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.graph.Graphs$TransposedNetwork:inEdges(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Maps$SortedMapDifferenceImpl:entriesDiffering()" : [ "entriesDiffering" ],
  "com.google.common.reflect.Invokable:getParameters()" : [ "<init>", "builder", "add", "of", "build" ],
  "com.google.common.util.concurrent.RateLimiter:create(double,com.google.common.util.concurrent.RateLimiter$SleepingStopwatch)" : [ "<init>" ],
  "com.google.common.cache.CacheBuilder:setValueStrength(com.google.common.cache.LocalCache$Strength)" : [ "checkState", "checkNotNull" ],
  "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl:copy()" : [ "<init>" ],
  "com.google.common.reflect.ClassPath$LocationInfo:scanJar(java.io.File,java.util.Set,com.google.common.collect.ImmutableSet$Builder)" : [ "getClassPathFromManifest", "scanJarFile" ],
  "com.google.common.primitives.ImmutableIntArray$Builder:addAll(java.util.Collection)" : [ "ensureRoomFor" ],
  "com.google.common.graph.Graphs:reachableNodes(com.google.common.graph.Graph,java.lang.Object)" : [ "checkArgument", "copyOf", "forGraph", "breadthFirst" ],
  "com.google.common.collect.LinkedListMultimap$NodeIterator:hasPrevious()" : [ "checkForConcurrentModification" ],
  "com.google.common.collect.ImmutableMultimap$Values:size()" : [ "size" ],
  "com.google.common.cache.LocalCache$KeySet:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.ForwardingCollection:containsAll(java.util.Collection)" : [ "delegate" ],
  "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:forEach(java.util.function.Consumer)" : [ "forEach" ],
  "com.google.common.graph.GraphBuilder:incidentEdgeOrder(com.google.common.graph.ElementOrder)" : [ "checkArgument", "type", "cast", "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:toArray()" : [ "delegate" ],
  "com.google.common.collect.CompactHashSet:resizeEntries(int)" : [ "requireEntries", "requireElements" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:equals(java.lang.Object)" : [ "equals", "size" ],
  "com.google.common.cache.ForwardingCache:put(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableList$Builder:addAll(java.util.Iterator)" : [ "addAll" ],
  "com.google.common.io.TempFileCreator$JavaNioCreator:createTempFile(java.lang.String)" : [ "value" ],
  "com.google.common.collect.RegularImmutableSortedSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "tailSetImpl" ],
  "com.google.common.collect.TreeTraverser$PostOrderIterator:expand(java.lang.Object)" : [ "<init>" ],
  "com.google.common.reflect.ClassPath$LocationInfo:<init>(java.io.File,java.lang.ClassLoader)" : [ "checkNotNull" ],
  "com.google.common.primitives.UnsignedInteger:doubleValue()" : [ "longValue" ],
  "com.google.common.collect.RegularImmutableSortedSet:descendingIterator()" : [ "reverse", "iterator" ],
  "com.google.common.collect.Maps$TransformedEntriesMap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull" ],
  "com.google.common.cache.AbstractCache:invalidateAll(java.lang.Iterable)" : [ "invalidate" ],
  "com.google.common.reflect.ClassPath$LocationInfo:scanDirectory(java.io.File,com.google.common.collect.ImmutableSet$Builder)" : [ "scanDirectory" ],
  "com.google.common.hash.BloomFilter:readFrom(java.io.InputStream,com.google.common.hash.Funnel)" : [ "<init>", "checkNotNull", "checkedMultiply", "putData", "toInt" ],
  "com.google.common.graph.Graphs$TransposedGraph:successors(java.lang.Object)" : [ "delegate", "predecessors" ],
  "com.google.common.collect.Tables:transformValues(com.google.common.collect.Table,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.base.Strings:commonPrefix(java.lang.CharSequence,java.lang.CharSequence)" : [ "checkNotNull", "validSurrogatePairAt" ],
  "com.google.common.collect.TableCollectors:toTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.Tables$TransformedTable:get(java.lang.Object,java.lang.Object)" : [ "contains", "uncheckedCastNullableTToT" ],
  "com.google.common.graph.GraphBuilder:from(com.google.common.graph.Graph)" : [ "<init>", "allowsSelfLoops", "nodeOrder", "incidentEdgeOrder" ],
  "com.google.common.collect.StandardTable$Row:containsKey(java.lang.Object)" : [ "updateBackingRowMapField", "safeContainsKey" ],
  "com.google.common.collect.EnumBiMap:clear()" : [ "clear" ],
  "com.google.common.collect.Serialization:populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream)" : [ "populateMultiset" ],
  "com.google.common.collect.TreeBasedTable:rowKeySet()" : [ "rowKeySet" ],
  "com.google.common.base.Converter$ConverterComposition:correctedDoBackward(java.lang.Object)" : [ "correctedDoBackward" ],
  "com.google.common.collect.ReverseOrdering:max(java.lang.Object,java.lang.Object)" : [ "min" ],
  "com.google.common.hash.BloomFilter:isCompatible(com.google.common.hash.BloomFilter)" : [ "checkNotNull", "bitSize" ],
  "com.google.common.collect.Maps$SortedMapDifferenceImpl:entriesOnlyOnLeft()" : [ "entriesOnlyOnLeft" ],
  "com.google.common.util.concurrent.Monitor:waitFor(com.google.common.util.concurrent.Monitor$Guard)" : [ "await" ],
  "com.google.common.base.CharMatcher:and(com.google.common.base.CharMatcher)" : [ "<init>" ],
  "com.google.common.graph.NetworkBuilder:undirected()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:headMap(java.lang.Object,boolean)" : [ "navigableMap", "delegate" ],
  "com.google.common.collect.Multimaps$UnmodifiableSetMultimap:entries()" : [ "unmodifiableEntrySet", "delegate" ],
  "com.google.common.graph.AbstractValueGraph:equals(java.lang.Object)" : [ "edgeValueMap" ],
  "com.google.common.primitives.Shorts$ShortArrayAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.Multimaps$Keys:spliterator()" : [ "map" ],
  "com.google.common.collect.Synchronized$SynchronizedListMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.CompactHashMap:remove(java.lang.Object)" : [ "delegateOrNull", "removeHelper" ],
  "com.google.common.collect.ForwardingMultiset:count(java.lang.Object)" : [ "delegate" ],
  "com.google.common.io.ByteSource$ByteArrayByteSource:openBufferedStream()" : [ "openStream" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:descendingSet()" : [ "filter", "unfiltered" ],
  "com.google.common.primitives.Doubles:sortDescending(double[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.graph.AbstractDirectedNetworkConnections:adjacentNodes()" : [ "union" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:<init>(com.google.common.collect.RegularImmutableSortedSet,long[],int,int)" : [ "<init>" ],
  "com.google.common.base.Predicates:defensiveCopy(java.lang.Iterable)" : [ "checkNotNull" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:encodeChunkTo(java.lang.Appendable,byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "checkArgument", "encode" ],
  "com.google.common.collect.Multimaps$CustomSetMultimap:unmodifiableCollectionSubclass(java.util.Collection)" : [ "unmodifiableNavigableSet" ],
  "com.google.common.graph.UndirectedNetworkConnections:of()" : [ "<init>", "create" ],
  "com.google.common.eventbus.SubscriberRegistry:getSubscribers(java.lang.Object)" : [ "flattenHierarchy", "newArrayListWithCapacity", "concat" ],
  "com.google.common.collect.Lists$RandomAccessReverseList:<init>(java.util.List)" : [ "<init>" ],
  "com.google.common.io.CharSource$CharSequenceCharSource:readFirstLine()" : [ "linesIterator" ],
  "com.google.common.cache.LocalCache$ManualSerializationProxy:<init>(com.google.common.cache.LocalCache)" : [ "<init>" ],
  "com.google.common.collect.FilteredKeyMultimap:entryPredicate()" : [ "keyPredicateOnEntries" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:values()" : [ "<init>" ],
  "com.google.common.collect.Multimaps:newSortedSetMultimap(java.util.Map,com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.collect.ImmutableClassToInstanceMap$Builder:cast(java.lang.Class,java.lang.Object)" : [ "wrap" ],
  "com.google.common.graph.EndpointPair$Unordered:equals(java.lang.Object)" : [ "isOrdered", "nodeU", "nodeV" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet:removeAll(java.util.Collection)" : [ "removeAllImpl" ],
  "com.google.common.hash.AbstractHasher:putUnencodedChars(java.lang.CharSequence)" : [ "putChar" ],
  "com.google.common.collect.MoreCollectors$ToOptionalState:getOptional()" : [ "multiples" ],
  "com.google.common.collect.Multisets:difference(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "checkNotNull" ],
  "com.google.common.cache.ForwardingCache:getAllPresent(java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:descendingEntryIterator()" : [ "hasUpperBound", "upperEndpoint", "peekingIterator" ],
  "com.google.common.collect.RegularImmutableTable:checkNoDuplicate(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "checkArgument" ],
  "com.google.common.graph.ImmutableNetwork:nodeOrder()" : [ "nodeOrder" ],
  "com.google.common.collect.Maps$Values:retainAll(java.util.Collection)" : [ "checkNotNull", "map", "newHashSet" ],
  "com.google.common.collect.NullsFirstOrdering:reverse()" : [ "reverse", "nullsLast" ],
  "com.google.common.collect.TreeRangeSet:create()" : [ "<init>" ],
  "com.google.common.collect.ForwardingList:standardAdd(java.lang.Object)" : [ "add" ],
  "com.google.common.collect.Iterators$PeekingImpl:next()" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.util.concurrent.AtomicDouble:longValue()" : [ "get" ],
  "com.google.common.graph.AbstractNetwork:outDegree(java.lang.Object)" : [ "degree" ],
  "com.google.common.collect.ImmutableMapKeySet:contains(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.collect.Maps$TransformedEntriesSortedMap:tailMap(java.lang.Object)" : [ "transformEntries", "fromMap" ],
  "com.google.common.util.concurrent.Futures$CallbackListener:<init>(java.util.concurrent.Future,com.google.common.util.concurrent.FutureCallback)" : [ "run" ],
  "com.google.common.collect.CompactLinkedHashSet:create()" : [ "<init>" ],
  "com.google.common.collect.AbstractSetMultimap:<init>(java.util.Map)" : [ "<init>" ],
  "com.google.common.collect.HashBasedTable:clear()" : [ "clear" ],
  "com.google.common.util.concurrent.AbstractService:notifyFailed(java.lang.Throwable)" : [ "<init>", "checkNotNull", "enter", "state", "enqueueFailedEvent", "leave", "dispatchListenerEvents" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:valueComparator()" : [ "delegate" ],
  "com.google.common.io.Resources:toByteArray(java.net.URL)" : [ "asByteSource", "read" ],
  "com.google.common.collect.Multimap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AbstractFuture:addPendingString(java.lang.StringBuilder)" : [ "appendUserObject", "emptyToNull", "pendingToString", "isDone", "addDoneString" ],
  "com.google.common.net.MediaType:parametersAsMap()" : [ "transformValues", "copyOf" ],
  "com.google.common.primitives.Floats:toArray(java.util.Collection)" : [ "toFloatArray", "checkNotNull" ],
  "com.google.common.collect.Maps$TransformedEntriesSortedMap:subMap(java.lang.Object,java.lang.Object)" : [ "transformEntries", "fromMap" ],
  "com.google.common.collect.CompactHashMap$KeySetView:iterator()" : [ "keySetIterator" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceListener:starting()" : [ "transitionService" ],
  "com.google.common.collect.ImmutableMap$SerializedForm:readResolve()" : [ "legacyReadResolve", "makeBuilder", "put", "buildOrThrow" ],
  "com.google.common.collect.Collections2:toStringImpl(java.util.Collection)" : [ "newStringBuilderForCollection" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:throwCause(java.lang.Exception,boolean)" : [ "concat" ],
  "com.google.common.collect.Synchronized$SynchronizedSetMultimap:get(java.lang.Object)" : [ "set", "delegate" ],
  "com.google.common.graph.StandardMutableNetwork:addNodeInternal(java.lang.Object)" : [ "newConnections", "checkState", "put" ],
  "com.google.common.collect.ForwardingList:listIterator(int)" : [ "delegate" ],
  "com.google.common.collect.TreeMultiset$AvlNode:balanceFactor()" : [ "height" ],
  "com.google.common.util.concurrent.ListeningExecutorService:invokeAny(java.util.Collection,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.graph.AbstractNetwork:hashCode()" : [ "edgeIncidentNodesMap" ],
  "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues:retainAll(java.util.Collection)" : [ "checkNotNull", "newArrayList", "columnKeySet", "column" ],
  "com.google.common.collect.AbstractMultiset:hashCode()" : [ "entrySet" ],
  "com.google.common.collect.Iterators:paddedPartition(java.util.Iterator,int)" : [ "partitionImpl" ],
  "com.google.common.base.CharMatcher$Negated:<init>(com.google.common.base.CharMatcher)" : [ "<init>", "checkNotNull" ],
  "com.google.common.io.CountingInputStream:<init>(java.io.InputStream)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeRangeMap$1:put(com.google.common.collect.Range,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ClosingFuture:becomeSubsumedInto(com.google.common.util.concurrent.ClosingFuture$CloseableList)" : [ "checkAndUpdateState", "add", "directExecutor" ],
  "com.google.common.collect.RegularContiguousSet:subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean)" : [ "<init>", "intersectionInCurrentDomain", "forBoolean" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:findInterruptibleMethods(java.lang.Class)" : [ "declaresInterruptedEx", "newHashSet" ],
  "com.google.common.cache.LocalCache$LoadingSerializationProxy:readObject(java.io.ObjectInputStream)" : [ "build" ],
  "com.google.common.cache.LocalCache$Segment:copyEntry(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)" : [ "copyEntry" ],
  "com.google.common.graph.ValueGraphBuilder:<init>(boolean)" : [ "<init>" ],
  "com.google.common.math.DoubleMath:fuzzyCompare(double,double,double)" : [ "fuzzyEquals", "compare" ],
  "com.google.common.collect.Multimaps:index(java.lang.Iterable,com.google.common.base.Function)" : [ "index" ],
  "com.google.common.net.InternetDomainName:hasRegistrySuffix()" : [ "registrySuffixIndex" ],
  "com.google.common.primitives.UnsignedInts$LexicographicalComparator:compare(int[],int[])" : [ "compare" ],
  "com.google.common.collect.LinkedHashMultiset:readObject(java.io.ObjectInputStream)" : [ "readCount", "populateMultiset" ],
  "com.google.common.collect.ImmutableSortedMap:copyOf(java.lang.Iterable,java.util.Comparator)" : [ "fromEntries", "checkNotNull" ],
  "com.google.common.cache.LocalCache$LocalManualCache:get(java.lang.Object,java.util.concurrent.Callable)" : [ "get", "checkNotNull" ],
  "com.google.common.hash.Hashing$ConcatenatedHashFunction:makeHash(com.google.common.hash.Hasher[])" : [ "bits", "writeBytesTo", "fromBytesNoCopy" ],
  "com.google.common.hash.Hashing:hmacSha512(java.security.Key)" : [ "<init>", "hmacToString" ],
  "com.google.common.cache.LocalCache:newValueReference(com.google.common.cache.ReferenceEntry,java.lang.Object,int)" : [ "segmentFor", "checkNotNull" ],
  "com.google.common.util.concurrent.ClosingFuture:withoutCloser(com.google.common.util.concurrent.AsyncFunction)" : [ "checkNotNull" ],
  "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:get()" : [ "newLinkedHashSetWithExpectedSize" ],
  "com.google.common.graph.ImmutableNetwork:<init>(com.google.common.graph.Network)" : [ "<init>", "from", "getNodeConnections", "getEdgeToReferenceNode" ],
  "com.google.common.collect.RegularContiguousSet$SerializedForm:readResolve()" : [ "<init>" ],
  "com.google.common.graph.ImmutableValueGraph:copyOf(com.google.common.graph.ImmutableValueGraph)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.RateLimiter:setRate(double)" : [ "checkArgument", "mutex" ],
  "com.google.common.reflect.TypeToken:wrap()" : [ "wrap", "isPrimitive", "of" ],
  "com.google.common.cache.LocalCache$LocalLoadingCache:get(java.lang.Object)" : [ "getOrLoad" ],
  "com.google.common.graph.StandardValueGraph:hasEdgeConnectingInternal(java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.collect.AbstractBiMap$KeySet:iterator()" : [ "keyIterator", "entrySet" ],
  "com.google.common.base.Optional:toJavaUtil(com.google.common.base.Optional)" : [ "toJavaUtil" ],
  "com.google.common.io.ByteStreams:exhaust(java.io.InputStream)" : [ "createBuffer" ],
  "com.google.common.hash.AbstractByteHasher:update(byte[])" : [ "update" ],
  "com.google.common.collect.Synchronized$SynchronizedBiMap:inverse()" : [ "<init>", "delegate" ],
  "com.google.common.cache.LocalCache$Segment:storeLoadedValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,java.lang.Object)" : [ "preWriteCleanup", "expand", "equivalent", "isActive", "enqueueNotification", "getWeight", "setValue", "evictEntries", "newEntry", "postWriteCleanup" ],
  "com.google.common.base.CharMatcher$RangesMatcher:negate()" : [ "negate" ],
  "com.google.common.primitives.ImmutableDoubleArray:<init>(double[])" : [ "<init>" ],
  "com.google.common.collect.ForwardingNavigableSet:descendingSet()" : [ "delegate" ],
  "com.google.common.collect.FluentIterable:index(com.google.common.base.Function)" : [ "index", "getDelegate" ],
  "com.google.common.primitives.Shorts$ShortArrayAsList:subList(int,int)" : [ "<init>", "size", "checkPositionIndexes" ],
  "com.google.common.collect.TransformedListIterator:hasPrevious()" : [ "backingIterator" ],
  "com.google.common.collect.Synchronized:setMultimap(com.google.common.collect.SetMultimap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.MutableClassToInstanceMap:create(java.util.Map)" : [ "<init>" ],
  "com.google.common.io.Files$FileByteSource:read()" : [ "create", "register", "openStream", "toByteArray", "rethrow", "close" ],
  "com.google.common.collect.ContiguousSet:closed(int,int)" : [ "create", "integers" ],
  "com.google.common.base.CaseFormat$1:normalizeWord(java.lang.String)" : [ "toLowerCase" ],
  "com.google.common.collect.AbstractTable:putAll(com.google.common.collect.Table)" : [ "put" ],
  "com.google.common.primitives.Booleans:rotate(boolean[],int)" : [ "rotate" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:<init>(java.util.Map,java.util.Map,int)" : [ "<init>" ],
  "com.google.common.collect.ForwardingMultiset:standardHashCode()" : [ "entrySet" ],
  "com.google.common.collect.Collections2$FilteredCollection:createCombined(com.google.common.base.Predicate)" : [ "<init>", "and" ],
  "com.google.common.collect.ImmutableMap:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.base.FunctionalEquivalence:<init>(com.google.common.base.Function,com.google.common.base.Equivalence)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:isEmpty()" : [ "delegate" ],
  "com.google.common.net.MediaType:createApplicationType(java.lang.String)" : [ "create" ],
  "com.google.common.primitives.ImmutableLongArray:subArray(int,int)" : [ "<init>", "checkPositionIndexes", "length" ],
  "com.google.common.io.LittleEndianDataOutputStream:writeLong(long)" : [ "toByteArray", "write" ],
  "com.google.common.collect.RegularContiguousSet:tailSetImpl(java.lang.Comparable,boolean)" : [ "intersectionInCurrentDomain", "forBoolean" ],
  "com.google.common.graph.ImmutableGraph:adjacentNodes(java.lang.Object)" : [ "adjacentNodes" ],
  "com.google.common.collect.ImmutableMultiset:entrySet()" : [ "createEntrySet" ],
  "com.google.common.collect.Synchronized$SynchronizedQueue:poll()" : [ "delegate" ],
  "com.google.common.base.Enums:getIfPresent(java.lang.Class,java.lang.String)" : [ "checkNotNull", "getEnumIfPresent" ],
  "com.google.common.collect.Multisets:unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset)" : [ "<init>", "checkNotNull" ],
  "com.google.common.base.CharMatcher$None:indexIn(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.CompactLinkedHashMap:setLink(int,long)" : [ "requireLinks" ],
  "com.google.common.graph.MapIteratorCache:put(java.lang.Object,java.lang.Object)" : [ "checkNotNull", "clearCache" ],
  "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(java.util.stream.DoubleStream)" : [ "ensureRoomFor", "saturatedCast", "add" ],
  "com.google.common.hash.Crc32cHashFunction$Crc32cHasher:makeHash()" : [ "processRemaining", "fromInt" ],
  "com.google.common.cache.LocalCache$StrongValueReference:waitForValue()" : [ "get" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:<init>(java.util.NavigableMap,com.google.common.collect.Range)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task:run()" : [ "restoreInterruptIfIsInterruptedException", "shutDown" ],
  "com.google.common.cache.LocalCache$Segment:reclaimKey(com.google.common.cache.ReferenceEntry,int)" : [ "removeValueFromChain", "postWriteCleanup" ],
  "com.google.common.io.MultiReader:<init>(java.util.Iterator)" : [ "advance" ],
  "com.google.common.collect.TreeMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)" : [ "subMultiset" ],
  "com.google.common.collect.ForwardingMultiset:standardAdd(java.lang.Object)" : [ "add" ],
  "com.google.common.collect.AbstractTable:clear()" : [ "clear", "cellSet" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:containsValue(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ForwardingNavigableSet:standardLast()" : [ "descendingIterator" ],
  "com.google.common.cache.CacheBuilderSpec:toCacheBuilder()" : [ "newBuilder", "initialCapacity", "maximumSize", "maximumWeight", "concurrencyLevel", "weakKeys", "softValues", "weakValues", "recordStats", "expireAfterWrite", "expireAfterAccess", "refreshAfterWrite" ],
  "com.google.common.collect.TreeRangeMap:coalescedRange(com.google.common.collect.Range,java.lang.Object)" : [ "coalesce" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:putFirst(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ForwardingMultiset:delegate()" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractService:awaitTerminated(long,java.util.concurrent.TimeUnit)" : [ "enterWhenUninterruptibly", "checkCurrentState", "leave", "state" ],
  "com.google.common.hash.AbstractCompositeHashFunction$1:putLong(long)" : [ "putLong" ],
  "com.google.common.cache.LocalCache$ValueIterator:next()" : [ "getValue" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:higherKey(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.GeneralRange:tooLow(java.lang.Object)" : [ "hasLowerBound", "uncheckedCastNullableTToT", "getLowerEndpoint", "getLowerBoundType" ],
  "com.google.common.collect.ImmutableSetMultimap:entries()" : [ "<init>" ],
  "com.google.common.collect.AbstractSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "replaceValues" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:crossOverUp(int,java.lang.Object)" : [ "getParentIndex", "elementData", "getRightChildIndex", "getLeftChildIndex" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:setCount(java.lang.Object,int)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:containsKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ArrayTable:row(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.graph.StandardMutableValueGraph:removeEdge(java.lang.Object,java.lang.Object)" : [ "checkNotNull", "get", "checkNonNegative" ],
  "com.google.common.collect.CollectSpliterators:flatMap(java.util.Spliterator,java.util.function.Function,int,long)" : [ "<init>", "checkArgument", "checkNotNull" ],
  "com.google.common.graph.Graphs$TransposedNetwork:edgeConnectingOrNull(com.google.common.graph.EndpointPair)" : [ "delegate", "transpose" ],
  "com.google.common.cache.LocalCache$Segment:preWriteCleanup(long)" : [ "runLockedCleanup" ],
  "com.google.common.cache.LocalCache:isLive(com.google.common.cache.ReferenceEntry,long)" : [ "segmentFor", "getLiveValue" ],
  "com.google.common.hash.FarmHashFingerprint64:hashLength33To64(byte[],int,int)" : [ "load64", "hashLength16" ],
  "com.google.common.primitives.ImmutableLongArray$Builder:addAll(com.google.common.primitives.ImmutableLongArray)" : [ "ensureRoomFor", "length" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:equals(java.lang.Object)" : [ "asMapOfRanges" ],
  "com.google.common.collect.MultimapBuilder:hashKeys()" : [ "hashKeys" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:remove(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ForwardingCollection:retainAll(java.util.Collection)" : [ "delegate" ],
  "com.google.common.collect.LinkedHashMultimap:deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink)" : [ "succeedsInValueSet" ],
  "com.google.common.cache.LocalCache$EntryFactory$5:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.base.FunctionalEquivalence:doEquivalent(java.lang.Object,java.lang.Object)" : [ "equivalent" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:headMap(com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.base.CharMatcher$AnyOf:<init>(java.lang.CharSequence)" : [ "<init>" ],
  "com.google.common.collect.ComparisonChain$1:compareTrueFirst(boolean,boolean)" : [ "compare" ],
  "com.google.common.collect.Synchronized$SynchronizedBiMap:<init>(com.google.common.collect.BiMap,java.lang.Object,com.google.common.collect.BiMap)" : [ "<init>" ],
  "com.google.common.cache.LocalCache$Segment:scheduleRefresh(com.google.common.cache.ReferenceEntry,java.lang.Object,int,java.lang.Object,long,com.google.common.cache.CacheLoader)" : [ "refreshes", "refresh" ],
  "com.google.common.collect.EmptyContiguousSet:<init>(com.google.common.collect.DiscreteDomain)" : [ "<init>" ],
  "com.google.common.collect.Queues:newConcurrentLinkedQueue(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:entryIterator()" : [ "isEmpty", "emptyIterator", "firstNonNull" ],
  "com.google.common.collect.Maps$DescendingMap:values()" : [ "<init>" ],
  "com.google.common.collect.Collections2$PermutationIterator:calculateNextPermutation()" : [ "switchDirection" ],
  "com.google.common.collect.ImmutableMultiset:elementSet()" : [ "elementSet" ],
  "com.google.common.collect.EnumBiMap:replaceAll(java.util.function.BiFunction)" : [ "replaceAll" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:tailMap(com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.collect.CompactHashMap$KeySetView:spliterator()" : [ "needsAllocArrays", "delegateOrNull" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:iterator()" : [ "delegate" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner:<init>(boolean,java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:awaitStopped(long,java.util.concurrent.TimeUnit)" : [ "enter", "waitForUninterruptibly", "filterKeys", "not", "in", "leave" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:callUninterruptiblyWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "checkPositiveTimeout", "getUninterruptibly", "wrapAndThrowExecutionExceptionOrError" ],
  "com.google.common.io.ByteSource$EmptyByteSource:asCharSource(java.nio.charset.Charset)" : [ "checkNotNull", "empty" ],
  "com.google.common.graph.AbstractNetwork:adjacentEdges(java.lang.Object)" : [ "union", "nodeU", "nodeV", "difference", "of" ],
  "com.google.common.collect.MapMakerInternalMap:containsKey(java.lang.Object)" : [ "containsKey", "hash", "segmentFor" ],
  "com.google.common.collect.ImmutableBiMap:of(java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.hash.BloomFilter:apply(java.lang.Object)" : [ "mightContain" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:getEntry(java.lang.Comparable)" : [ "getEntry", "contains", "immutableEntry", "intersection" ],
  "com.google.common.math.BigIntegerMath:factorial(int)" : [ "checkNonNegative", "divide", "log2", "listProduct" ],
  "com.google.common.io.CharSource:concat(java.util.Iterator)" : [ "concat", "copyOf" ],
  "com.google.common.collect.TreeBasedTable:create(java.util.Comparator,java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Iterables:removeAll(java.lang.Iterable,java.util.Collection)" : [ "removeAll", "checkNotNull" ],
  "com.google.common.reflect.TypeResolver$TypeTable$1:resolveInternal(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable)" : [ "resolveInternal" ],
  "com.google.common.collect.Queues:synchronizedQueue(java.util.Queue)" : [ "queue" ],
  "com.google.common.collect.Iterators:tryFind(java.util.Iterator,com.google.common.base.Predicate)" : [ "checkNotNull", "of", "absent" ],
  "com.google.common.collect.ImmutableSortedMap:copyOfInternal(java.util.Map,java.util.Comparator)" : [ "isPartialView", "fromEntries" ],
  "com.google.common.primitives.Ints:tryParse(java.lang.String)" : [ "tryParse" ],
  "com.google.common.graph.Graphs$TransposedNetwork:predecessors(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.TimeoutFuture:<init>(com.google.common.util.concurrent.ListenableFuture)" : [ "checkNotNull" ],
  "com.google.common.primitives.UnsignedInteger:minus(com.google.common.primitives.UnsignedInteger)" : [ "fromIntBits", "checkNotNull" ],
  "com.google.common.util.concurrent.FuturesGetChecked:getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator,java.util.concurrent.Future,java.lang.Class)" : [ "newWithCause", "wrapAndThrowExceptionOrError" ],
  "com.google.common.collect.Maps$MapDifferenceImpl:equals(java.lang.Object)" : [ "entriesOnlyOnLeft", "entriesOnlyOnRight", "entriesInCommon", "entriesDiffering" ],
  "com.google.common.collect.Cut$BelowValue:isLessThan(java.lang.Comparable)" : [ "compareOrThrow" ],
  "com.google.common.collect.ArrayListMultimap:readObject(java.io.ObjectInputStream)" : [ "readCount", "populateMultimap", "newHashMap" ],
  "com.google.common.cache.LocalCache$Strength$3:defaultEquivalence()" : [ "identity" ],
  "com.google.common.collect.Range$RangeLexOrdering:compare(com.google.common.collect.Range,com.google.common.collect.Range)" : [ "start" ],
  "com.google.common.math.Quantiles$Scale:indexes(java.util.Collection)" : [ "toArray" ],
  "com.google.common.cache.CacheBuilder:weakKeys()" : [ "setKeyStrength" ],
  "com.google.common.collect.ImmutableRangeSet$Builder:add(com.google.common.collect.Range)" : [ "checkArgument", "isEmpty" ],
  "com.google.common.collect.ImmutableList$SubList:subList(int,int)" : [ "subList", "checkPositionIndexes" ],
  "com.google.common.collect.Maps$AbstractFilteredMap:containsKey(java.lang.Object)" : [ "apply" ],
  "com.google.common.collect.AbstractIterator:peek()" : [ "hasNext", "uncheckedCastNullableTToT" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:values()" : [ "delegate" ],
  "com.google.common.collect.Maps$SortedAsMapView:firstKey()" : [ "backingSet" ],
  "com.google.common.collect.TreeRangeSet:create(java.lang.Iterable)" : [ "create" ],
  "com.google.common.util.concurrent.FuturesGetChecked:wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class)" : [ "<init>", "newWithCause" ],
  "com.google.common.util.concurrent.ListeningExecutorService:awaitTermination(java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.base.CaseFormat$2:normalizeWord(java.lang.String)" : [ "toLowerCase" ],
  "com.google.common.collect.TreeMultimap:asMap()" : [ "asMap" ],
  "com.google.common.collect.AbstractBiMap$Inverse:values()" : [ "values" ],
  "com.google.common.collect.TreeRangeSet:enclosesAll(com.google.common.collect.RangeSet)" : [ "enclosesAll" ],
  "com.google.common.io.AppendableWriter:write(int)" : [ "checkNotClosed" ],
  "com.google.common.collect.Maps$EntrySet:remove(java.lang.Object)" : [ "contains" ],
  "com.google.common.math.IntMath:saturatedMultiply(int,int)" : [ "saturatedCast" ],
  "com.google.common.collect.AbstractBiMap:remove(java.lang.Object)" : [ "removeFromBothMaps" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:removeIf(java.util.function.Predicate)" : [ "delegate" ],
  "com.google.common.collect.Sets$ImprovedAbstractSet:retainAll(java.util.Collection)" : [ "checkNotNull" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)" : [ "<init>" ],
  "com.google.common.primitives.UnsignedLong:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.ImmutableListMultimap:copyOf(com.google.common.collect.Multimap)" : [ "of", "fromMapEntries" ],
  "com.google.common.primitives.UnsignedLong:dividedBy(com.google.common.primitives.UnsignedLong)" : [ "fromLongBits", "divide", "checkNotNull" ],
  "com.google.common.base.Splitter:on(java.util.regex.Pattern)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeSet$Complement:remove(com.google.common.collect.Range)" : [ "add" ],
  "com.google.common.graph.StandardMutableValueGraph:putEdgeValue(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "checkNotNull", "checkArgument", "get", "addNodeInternal", "checkPositive" ],
  "com.google.common.collect.Synchronized$SynchronizedList:get(int)" : [ "delegate" ],
  "com.google.common.collect.Lists:newCopyOnWriteArrayList(java.lang.Iterable)" : [ "newArrayList" ],
  "com.google.common.cache.LocalCache$HashIterator:advanceTo(com.google.common.cache.ReferenceEntry)" : [ "getLiveValue", "postReadCleanup" ],
  "com.google.common.collect.Maps$KeySet:isEmpty()" : [ "map" ],
  "com.google.common.graph.Graphs:inducedSubgraph(com.google.common.graph.Graph,java.lang.Iterable)" : [ "from", "expectedNodeCount", "build", "successors" ],
  "com.google.common.collect.Maps$UnmodifiableEntrySet:hashCode()" : [ "hashCodeImpl" ],
  "com.google.common.collect.ForwardingMultiset:standardCount(java.lang.Object)" : [ "entrySet", "equal" ],
  "com.google.common.collect.ForwardingSortedMap:subMap(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:clear()" : [ "delegate" ],
  "com.google.common.io.LittleEndianDataInputStream:readFloat()" : [ "readInt" ],
  "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Comparator,java.lang.Iterable)" : [ "checkNotNull", "hasSameComparator", "toArray" ],
  "com.google.common.collect.EnumHashBiMap:create(java.util.Map)" : [ "create", "inferKeyTypeOrObjectUnderJ2cl", "putAll" ],
  "com.google.common.collect.CollectSpliterators$FlatMapSpliteratorOfDouble:trySplit()" : [ "trySplit" ],
  "com.google.common.collect.AbstractMapBasedMultiset:forEachEntry(java.util.function.ObjIntConsumer)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps:toMap(java.lang.Iterable,com.google.common.base.Function)" : [ "toMap" ],
  "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet:addAll(java.util.Collection)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSortedSet:emptySet(java.util.Comparator)" : [ "<init>", "natural", "of" ],
  "com.google.common.collect.ImmutableMapKeySet:iterator()" : [ "keyIterator" ],
  "com.google.common.graph.ImmutableValueGraph:copyOf(com.google.common.graph.ValueGraph)" : [ "<init>" ],
  "com.google.common.io.ByteSource:copyTo(com.google.common.io.ByteSink)" : [ "checkNotNull", "create", "register", "copy", "rethrow", "close" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:hashFloodingDetected(java.lang.Object[])" : [ "maxRunBeforeFallback" ],
  "com.google.common.util.concurrent.Striped$LargeLazyStriped:<init>(int,com.google.common.base.Supplier)" : [ "<init>", "weakValues", "makeMap" ],
  "com.google.common.math.DoubleMath:checkFinite(double)" : [ "checkArgument", "isFinite" ],
  "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.math.DoubleUtils:getSignificand(double)" : [ "checkArgument", "isFinite" ],
  "com.google.common.util.concurrent.AbstractFuture:getFutureValue(com.google.common.util.concurrent.ListenableFuture)" : [ "<init>", "getUninterruptibly" ],
  "com.google.common.collect.Iterables:contains(java.lang.Iterable,java.lang.Object)" : [ "contains", "safeContains" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:stream()" : [ "delegate" ],
  "com.google.common.collect.AbstractBiMap$Inverse:checkValue(java.lang.Object)" : [ "checkKey" ],
  "com.google.common.util.concurrent.Monitor:waitFor(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)" : [ "toSafeNanos", "awaitNanos" ],
  "com.google.common.io.ReaderInputStream:grow(java.nio.CharBuffer)" : [ "position", "limit" ],
  "com.google.common.hash.AbstractHashFunction:hashBytes(byte[],int,int)" : [ "checkPositionIndexes", "newHasher", "putBytes" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,char,char)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:remove(java.lang.Object)" : [ "refreshIfEmpty", "removeIfEmpty" ],
  "com.google.common.reflect.ClassPath:toFile(java.net.URL)" : [ "checkArgument" ],
  "com.google.common.io.AppendableWriter:<init>(java.lang.Appendable)" : [ "checkNotNull" ],
  "com.google.common.collect.EnumHashBiMap:clear()" : [ "clear" ],
  "com.google.common.reflect.TypeToken:getCovariantTypeResolver()" : [ "covariantly" ],
  "com.google.common.base.Splitter:split(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.hash.AbstractByteHasher:putShort(short)" : [ "update" ],
  "com.google.common.graph.ImmutableNetwork:asGraph()" : [ "<init>" ],
  "com.google.common.math.Stats:of(java.util.stream.DoubleStream)" : [ "<init>", "snapshot", "add", "addAll" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:compareElements(int,int)" : [ "elementData" ],
  "com.google.common.cache.LocalCache$LocalManualCache:<init>(com.google.common.cache.CacheBuilder)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture:<init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction)" : [ "<init>" ],
  "com.google.common.base.CharMatcher$Digit:<init>()" : [ "<init>", "zeroes", "nines" ],
  "com.google.common.cache.LocalCache$WeightedWeakValueReference:copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.util.concurrent.Striped$WeakSafeLock:newCondition()" : [ "<init>" ],
  "com.google.common.base.Stopwatch:createStarted()" : [ "<init>", "start" ],
  "com.google.common.graph.UndirectedGraphConnections:ofImmutable(java.util.Map)" : [ "<init>", "copyOf" ],
  "com.google.common.collect.ImmutableSetMultimap:emptySet(java.util.Comparator)" : [ "emptySet", "of" ],
  "com.google.common.primitives.UnsignedBytes:checkedCast(long)" : [ "checkArgument" ],
  "com.google.common.graph.AbstractValueGraph:outDegree(java.lang.Object)" : [ "outDegree" ],
  "com.google.common.primitives.Floats:reverse(float[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.collect.DescendingMultiset:toString()" : [ "entrySet" ],
  "com.google.common.collect.ImmutableMultimap:createValues()" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap:get(java.lang.Object)" : [ "createCollection", "wrapCollection" ],
  "com.google.common.collect.ForwardingMap:standardContainsKey(java.lang.Object)" : [ "containsKeyImpl" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:compute(java.lang.Object,java.util.function.BiFunction)" : [ "start", "setException", "set" ],
  "com.google.common.util.concurrent.AbstractFuture:addListener(java.lang.Runnable,java.util.concurrent.Executor)" : [ "<init>", "checkNotNull", "isDone", "executeListener" ],
  "com.google.common.reflect.TypeToken:<init>()" : [ "checkState" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedMap:comparator()" : [ "delegate" ],
  "com.google.common.graph.Graphs$TransposedNetwork:successors(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.TreeMultiset$AvlNode:count(java.util.Comparator,java.lang.Object)" : [ "getElement" ],
  "com.google.common.collect.EnumMultiset:create(java.lang.Class)" : [ "<init>" ],
  "com.google.common.reflect.Invokable:isVolatile()" : [ "getModifiers" ],
  "com.google.common.collect.Ordering:sortedCopy(java.lang.Iterable)" : [ "toArray", "newArrayList" ],
  "com.google.common.io.ByteSource$ByteArrayByteSource:<init>(byte[])" : [ "<init>" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:contains(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.reflect.TypeToken:getRawType()" : [ "getRawTypes" ],
  "com.google.common.collect.Lists$StringAsImmutableList:<init>(java.lang.String)" : [ "<init>" ],
  "com.google.common.collect.Iterables:removeIf(java.lang.Iterable,com.google.common.base.Predicate)" : [ "removeIf" ],
  "com.google.common.collect.MutableClassToInstanceMap:create()" : [ "<init>" ],
  "com.google.common.collect.ImmutableTable$Builder:orderRowsBy(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableBiMap$Builder:<init>(int)" : [ "<init>" ],
  "com.google.common.collect.Iterators:unmodifiableIterator(com.google.common.collect.UnmodifiableIterator)" : [ "checkNotNull" ],
  "com.google.common.graph.StandardMutableNetwork:removeNode(java.lang.Object)" : [ "checkNotNull", "get", "copyOf", "removeEdge", "remove", "iterator" ],
  "com.google.common.collect.Collections2:safeContains(java.util.Collection,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.RateLimiter:tryAcquire(long,java.util.concurrent.TimeUnit)" : [ "tryAcquire" ],
  "com.google.common.io.AppendableWriter:append(java.lang.CharSequence,int,int)" : [ "checkNotClosed" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:combine(com.google.common.collect.ImmutableMultimap$Builder)" : [ "combine" ],
  "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:processRemaining(java.nio.ByteBuffer)" : [ "mixK1", "mixK2", "toInt" ],
  "com.google.common.util.concurrent.Futures$FutureCombiner:call(java.util.concurrent.Callable,java.util.concurrent.Executor)" : [ "<init>" ],
  "com.google.common.collect.CompactHashMap:containsKey(java.lang.Object)" : [ "delegateOrNull", "indexOf" ],
  "com.google.common.math.PairedStatsAccumulator:ensureInUnitRange(double)" : [ "constrainToRange" ],
  "com.google.common.reflect.TypeResolver$TypeVariableKey:equals(java.lang.Object)" : [ "equalsTypeVariable" ],
  "com.google.common.io.CharSource$CharSequenceCharSource:<init>(java.lang.CharSequence)" : [ "<init>", "checkNotNull" ],
  "com.google.common.base.CharMatcher:collapseFrom(java.lang.CharSequence,char)" : [ "finishCollapseFrom" ],
  "com.google.common.util.concurrent.Monitor:signalNextWaiter()" : [ "isSatisfied" ],
  "com.google.common.base.Converter$ConverterComposition:correctedDoForward(java.lang.Object)" : [ "correctedDoForward" ],
  "com.google.common.collect.LinkedListMultimap$NodeIterator:remove()" : [ "checkForConcurrentModification", "checkState" ],
  "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable:call()" : [ "reschedule" ],
  "com.google.common.graph.AbstractGraphBuilder:<init>(boolean)" : [ "unordered", "absent", "insertion" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addValue(boolean)" : [ "addUnconditionalHolder" ],
  "com.google.common.primitives.Longs:tryParse(java.lang.String,int)" : [ "checkNotNull", "digit" ],
  "com.google.common.collect.ImmutableSet:copyOf(java.util.Iterator)" : [ "<init>", "of", "add", "addAll", "build" ],
  "com.google.common.collect.ImmutableSortedMultiset$Builder:setCount(java.lang.Object,int)" : [ "setCount" ],
  "com.google.common.collect.ImmutableMapValues$SerializedForm:readResolve()" : [ "values" ],
  "com.google.common.collect.ImmutableMap:toImmutableMap(java.util.function.Function,java.util.function.Function)" : [ "toImmutableMap" ],
  "com.google.common.collect.ForwardingBlockingDeque:pollFirst(long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.FluentIterable:toMultiset()" : [ "copyOf", "getDelegate" ],
  "com.google.common.primitives.Chars:indexOf(char[],char)" : [ "indexOf" ],
  "com.google.common.escape.ArrayBasedEscaperMap:create(java.util.Map)" : [ "<init>", "createReplacementArray" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:count(java.lang.Object)" : [ "indexOf", "getCount" ],
  "com.google.common.primitives.ImmutableDoubleArray:of(double,double,double,double)" : [ "<init>" ],
  "com.google.common.collect.Maps:unmodifiableOrNull(java.util.Map$Entry)" : [ "unmodifiableEntry" ],
  "com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue:run()" : [ "checkState" ],
  "com.google.common.collect.ForwardingMultiset$StandardElementSet:iterator()" : [ "elementIterator", "multiset" ],
  "com.google.common.primitives.ImmutableDoubleArray:copyOf(double[])" : [ "<init>" ],
  "com.google.common.collect.ForwardingMap:standardContainsValue(java.lang.Object)" : [ "containsValueImpl" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:lastEntry()" : [ "transformEntry", "fromMap" ],
  "com.google.common.collect.ForwardingMap:remove(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Cut$BelowValue:withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)" : [ "<init>", "aboveAll" ],
  "com.google.common.graph.ElementOrder:createMap(int)" : [ "newHashMapWithExpectedSize", "newLinkedHashMapWithExpectedSize", "newTreeMap", "comparator" ],
  "com.google.common.primitives.ImmutableLongArray:get(int)" : [ "checkElementIndex", "length" ],
  "com.google.common.graph.AbstractDirectedNetworkConnections:removeInEdge(java.lang.Object,boolean)" : [ "checkNonNegative" ],
  "com.google.common.io.ReaderInputStream:<init>(java.io.Reader,java.nio.charset.Charset,int)" : [ "<init>" ],
  "com.google.common.reflect.TypeToken:getSubtype(java.lang.Class)" : [ "checkArgument", "getSubtypeFromLowerBounds", "isArray", "getRawType", "resolveTypeArgsForSubclass", "of", "isSubtypeOf" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:pollFirstEntry()" : [ "pollAsMapEntry" ],
  "com.google.common.collect.Tables$UnmodifiableTable:column(java.lang.Object)" : [ "column" ],
  "com.google.common.collect.CompactLinkedHashSet:insertEntry(int,java.lang.Object,int,int)" : [ "insertEntry", "setSucceeds" ],
  "com.google.common.collect.ForwardingMap:keySet()" : [ "delegate" ],
  "com.google.common.collect.Collections2$FilteredCollection:clear()" : [ "removeIf" ],
  "com.google.common.collect.ArrayTable:set(int,int,java.lang.Object)" : [ "checkElementIndex" ],
  "com.google.common.hash.BloomFilter:putAll(com.google.common.hash.BloomFilter)" : [ "putAll", "checkNotNull", "checkArgument", "bitSize" ],
  "com.google.common.base.Converter$ReverseConverter:correctedDoForward(java.lang.Object)" : [ "correctedDoBackward" ],
  "com.google.common.graph.Graphs:hasCycle(com.google.common.graph.Graph)" : [ "newHashMapWithExpectedSize" ],
  "com.google.common.collect.ImmutableSortedMultiset:copyOf(java.util.Comparator,java.lang.Iterable)" : [ "comparator", "copyOfSortedEntries", "newArrayList", "create", "checkNotNull", "addAll" ],
  "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:add(java.lang.Object)" : [ "add" ],
  "com.google.common.collect.Lists$ReverseList:listIterator(int)" : [ "reversePosition" ],
  "com.google.common.net.InetAddresses:getTeredoInfo(java.net.Inet6Address)" : [ "<init>", "checkArgument", "isTeredoAddress", "toAddrString", "getInet4Address", "newDataInput" ],
  "com.google.common.reflect.Invokable:isPackagePrivate()" : [ "isPrivate", "isPublic", "isProtected" ],
  "com.google.common.collect.ImmutableMap:writeReplace()" : [ "<init>" ],
  "com.google.common.primitives.ImmutableDoubleArray$Builder:add(double)" : [ "ensureRoomFor" ],
  "com.google.common.collect.ForwardingSortedMultiset:comparator()" : [ "delegate" ],
  "com.google.common.collect.ForwardingList:standardListIterator()" : [ "listIterator" ],
  "com.google.common.collect.ImmutableMapValues:<init>(com.google.common.collect.ImmutableMap)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:parallelStream()" : [ "delegate" ],
  "com.google.common.reflect.ClassPath$LocationInfo:scanDirectory(java.io.File,java.lang.String,java.util.Set,com.google.common.collect.ImmutableSet$Builder)" : [ "add", "of" ],
  "com.google.common.cache.AbstractLoadingCache:apply(java.lang.Object)" : [ "getUnchecked" ],
  "com.google.common.primitives.Bytes:indexOf(byte[],byte[])" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSet:last()" : [ "delegate" ],
  "com.google.common.collect.Maps$KeySet:clear()" : [ "map" ],
  "com.google.common.eventbus.Dispatcher$ImmediateDispatcher:dispatch(java.lang.Object,java.util.Iterator)" : [ "checkNotNull", "dispatchEvent" ],
  "com.google.common.collect.TransformedListIterator:nextIndex()" : [ "backingIterator" ],
  "com.google.common.graph.EndpointPair:<init>(java.lang.Object,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:tryStartTiming(com.google.common.util.concurrent.Service)" : [ "enter", "createStarted", "leave" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:headMap(java.lang.Object,boolean)" : [ "unmodifiableNavigableMap" ],
  "com.google.common.graph.EdgesConnecting:<init>(java.util.Map,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.MoreExecutors:submitAndAddQueueListener(com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.Callable,java.util.concurrent.BlockingQueue)" : [ "submit", "directExecutor" ],
  "com.google.common.collect.ImmutableTable$SerializedForm:readResolve()" : [ "<init>", "of", "add", "cellOf", "forOrderedComponents", "build", "copyOf" ],
  "com.google.common.collect.ImmutableMultimap$Keys:writeReplace()" : [ "<init>" ],
  "com.google.common.primitives.Floats:reverse(float[])" : [ "reverse", "checkNotNull" ],
  "com.google.common.collect.ImmutableTable$Builder:<init>()" : [ "newArrayList" ],
  "com.google.common.collect.Maps$NavigableKeySet:pollFirst()" : [ "keyOrNull", "map" ],
  "com.google.thirdparty.publicsuffix.TrieParser:parseFullString(java.lang.String)" : [ "builder", "doParseTrieToBuilder", "buildOrThrow", "newArrayDeque" ],
  "com.google.common.collect.Lists:asList(java.lang.Object,java.lang.Object[])" : [ "<init>" ],
  "com.google.common.hash.AbstractHashFunction:hashLong(long)" : [ "newHasher", "putLong" ],
  "com.google.common.util.concurrent.Striped$SmallLazyStriped:getAt(int)" : [ "<init>", "checkElementIndex", "size", "drainQueue" ],
  "com.google.common.graph.ElementOrder:natural()" : [ "<init>", "natural" ],
  "com.google.common.eventbus.EventBus:post(java.lang.Object)" : [ "<init>", "getSubscribers" ],
  "com.google.common.cache.ForwardingCache:invalidate(java.lang.Object)" : [ "delegate" ],
  "com.google.common.math.StatsAccumulator:max()" : [ "checkState" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner:callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner$AsyncCombiningCallable,java.util.concurrent.Executor)" : [ "callAsync", "futureCombiner", "add", "directExecutor" ],
  "com.google.common.collect.Platform:preservesInsertionOrderOnAddsSet()" : [ "newLinkedHashSet" ],
  "com.google.common.graph.AbstractDirectedNetworkConnections:addInEdge(java.lang.Object,java.lang.Object,boolean)" : [ "checkNotNull", "checkPositive", "checkState" ],
  "com.google.common.io.ByteSource:contentEquals(com.google.common.io.ByteSource)" : [ "checkNotNull", "create", "register", "rethrow", "close", "read", "createBuffer" ],
  "com.google.common.io.ByteStreams:limit(java.io.InputStream,long)" : [ "<init>" ],
  "com.google.common.collect.Maps:transformValues(java.util.NavigableMap,com.google.common.base.Function)" : [ "transformEntries" ],
  "com.google.common.math.DoubleMath:isMathematicalInteger(double)" : [ "isFinite", "getSignificand" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:<init>(java.util.Comparator)" : [ "<init>", "emptySet" ],
  "com.google.common.collect.TreeRangeMap:span()" : [ "create" ],
  "com.google.common.graph.AbstractGraph:incidentEdgeOrder()" : [ "incidentEdgeOrder" ],
  "com.google.common.graph.Graphs$TransposedNetwork:outDegree(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.CharMatcher:or(com.google.common.base.CharMatcher)" : [ "<init>" ],
  "com.google.common.collect.Lists$StringAsImmutableList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.Sets$CartesianSet:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:startupTimes()" : [ "enter", "newArrayListWithCapacity", "isRunning", "immutableEntry", "elapsed", "leave", "natural", "onResultOf", "copyOf" ],
  "com.google.common.collect.Lists:reverse(java.util.List)" : [ "<init>", "reverse", "getForwardList" ],
  "com.google.common.collect.ForwardingMapEntry:getValue()" : [ "delegate" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:writeReplace()" : [ "<init>" ],
  "com.google.common.primitives.UnsignedLongs:divide(long,long)" : [ "compare" ],
  "com.google.common.primitives.UnsignedLong:valueOf(java.lang.String)" : [ "valueOf" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:isEmpty()" : [ "delegate" ],
  "com.google.common.collect.Range:apply(java.lang.Comparable)" : [ "contains" ],
  "com.google.common.primitives.Doubles:reverse(double[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.hash.HashCode$IntHashCode:padToLong()" : [ "toLong" ],
  "com.google.common.collect.TreeMultiset$AvlNode:addLeftChild(java.lang.Object,int)" : [ "<init>", "pred" ],
  "com.google.common.primitives.Ints:checkedCast(long)" : [ "checkArgument" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:expand()" : [ "newEntryArray" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.primitives.Doubles$DoubleArrayAsList:toString()" : [ "size" ],
  "com.google.common.collect.Maps:asMap(java.util.NavigableSet,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.io.MoreFiles:deleteDirectoryContentsSecure(java.nio.file.SecureDirectoryStream)" : [ "concat", "addException" ],
  "com.google.common.base.Present:or(com.google.common.base.Optional)" : [ "checkNotNull" ],
  "com.google.common.hash.AbstractCompositeHashFunction$1:putBytes(byte[],int,int)" : [ "putBytes" ],
  "com.google.common.base.Joiner:appendTo(java.lang.StringBuilder,java.lang.Object[])" : [ "appendTo" ],
  "com.google.common.collect.ImmutableMultiset:copyOf(java.util.Iterator)" : [ "create", "addAll", "copyFromEntries", "entrySet" ],
  "com.google.common.reflect.Types:subtypeOf(java.lang.reflect.Type)" : [ "<init>" ],
  "com.google.common.collect.Maps:safeGet(java.util.Map,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:awaitHealthy(long,java.util.concurrent.TimeUnit)" : [ "enter", "waitForUninterruptibly", "filterKeys", "in", "of", "checkHealthy", "leave" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:edgeValueOrDefault(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.LinkedListMultimap:createAsMap()" : [ "<init>" ],
  "com.google.common.hash.HashCode$BytesHashCode:<init>(byte[])" : [ "<init>", "checkNotNull" ],
  "com.google.common.reflect.Invokable:returning(com.google.common.reflect.TypeToken)" : [ "isSupertypeOf", "getReturnType" ],
  "com.google.common.math.Stats:mean()" : [ "checkState" ],
  "com.google.common.primitives.Booleans$BooleanArrayAsList:equals(java.lang.Object)" : [ "size" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:toString()" : [ "refreshIfEmpty" ],
  "com.google.common.cache.LocalCache$LocalLoadingCache:getAll(java.lang.Iterable)" : [ "getAll" ],
  "com.google.common.util.concurrent.Futures$CallbackListener:run()" : [ "getDone" ],
  "com.google.common.collect.ImmutableRangeSet:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.util.concurrent.AbstractScheduledService$Scheduler:newFixedRateSchedule(java.time.Duration,java.time.Duration)" : [ "newFixedRateSchedule", "toNanosSaturated" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:ceiling(java.lang.Object)" : [ "find", "unfiltered" ],
  "com.google.common.collect.CompactHashSet:createWithExpectedSize(int)" : [ "<init>" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:<init>(java.lang.String,java.lang.String,java.lang.Character)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:<init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeMap:hashCode()" : [ "hashCode", "asMapOfRanges" ],
  "com.google.common.primitives.ImmutableLongArray:of(long,long,long,long,long,long)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:headSet(java.lang.Object,boolean)" : [ "wrap", "getSortedSetDelegate" ],
  "com.google.common.collect.AbstractSortedMultiset:descendingIterator()" : [ "iteratorImpl", "descendingMultiset" ],
  "com.google.common.cache.LocalCache$EntryFactory$4:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)" : [ "copyEntry" ],
  "com.google.common.collect.AbstractSortedMultiset:<init>()" : [ "<init>", "natural" ],
  "com.google.common.collect.MapMakerInternalMap$KeySet:contains(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.collect.Multisets$ViewMultiset:iterator()" : [ "iteratorImpl" ],
  "com.google.common.collect.MapMakerInternalMap$KeySet:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.cache.CacheBuilder:getValueEquivalence()" : [ "firstNonNull", "getValueStrength" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:contains(java.lang.Object)" : [ "delegate" ],
  "com.google.common.reflect.TypeToken$ClassSet:readResolve()" : [ "getTypes", "classes" ],
  "com.google.common.util.concurrent.WrappingExecutorService:submit(java.util.concurrent.Callable)" : [ "checkNotNull" ],
  "com.google.common.math.LongMath:factorial(int)" : [ "checkNonNegative" ],
  "com.google.common.collect.ForwardingBlockingDeque:putLast(java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.StandardNetwork:incidentEdges(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.collect.Collections2$TransformedCollection:<init>(java.util.Collection,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMultiset$Builder:addAll(java.lang.Iterable)" : [ "addAll", "forEachEntry" ],
  "com.google.common.graph.ElementOrder:sorted(java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.HashMultimap:readObject(java.io.ObjectInputStream)" : [ "readCount", "newHashMapWithExpectedSize", "populateMultimap" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.util.concurrent.AtomicDouble:getAndAccumulate(double,java.util.function.DoubleBinaryOperator)" : [ "checkNotNull", "getAndUpdate" ],
  "com.google.common.primitives.ImmutableIntArray:of(int)" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:replace(java.lang.Object,int,java.lang.Object,java.lang.Object)" : [ "preWriteCleanup", "equivalent", "valueEquivalence" ],
  "com.google.common.collect.ForwardingMultiset:standardRemove(java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.TreeMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "<init>", "intersect", "upTo", "comparator" ],
  "com.google.common.collect.RegularImmutableTable:forOrderedComponents(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet)" : [ "<init>" ],
  "com.google.common.cache.CacheLoader:loadAll(java.lang.Iterable)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset:remove(java.lang.Object,int)" : [ "remove", "checkNonnegative", "count", "get", "contains", "comparator", "checkAndSet" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:getDelegateIterator()" : [ "validateIterator" ],
  "com.google.common.util.concurrent.AbstractTransformFuture:run()" : [ "getDone", "restoreInterruptIfIsInterruptedException" ],
  "com.google.common.util.concurrent.MoreExecutors:useDaemonThreadFactory(java.util.concurrent.ThreadPoolExecutor)" : [ "<init>", "setThreadFactory", "setDaemon", "build" ],
  "com.google.common.io.CharStreams$NullWriter:write(char[],int,int)" : [ "checkPositionIndexes" ],
  "com.google.common.collect.EnumMultiset:<init>(java.lang.Class)" : [ "checkArgument" ],
  "com.google.common.collect.HashBiMap:values()" : [ "inverse" ],
  "com.google.common.collect.Multimaps$CustomSetMultimap:<init>(java.util.Map,com.google.common.base.Supplier)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ConcurrentHashMultiset:create()" : [ "<init>" ],
  "com.google.common.primitives.Longs:sortDescending(long[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.reflect.Types$TypeVariableImpl:<init>(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[])" : [ "checkNotNull", "copyOf" ],
  "com.google.common.io.LittleEndianDataOutputStream:writeChar(int)" : [ "writeShort" ],
  "com.google.common.escape.UnicodeEscaper:escapeSlow(java.lang.String,int)" : [ "charBufferFromThreadLocal", "codePointAt", "nextEscapeIndex", "growBuffer" ],
  "com.google.common.collect.RegularContiguousSet:equals(java.lang.Object)" : [ "first", "last" ],
  "com.google.common.base.CharMatcher:matchesAnyOf(java.lang.CharSequence)" : [ "matchesNoneOf" ],
  "com.google.common.util.concurrent.Striped:semaphore(int,int)" : [ "custom" ],
  "com.google.common.collect.ImmutableSortedMap:createEntrySet()" : [ "of" ],
  "com.google.common.util.concurrent.Futures:transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)" : [ "create" ],
  "com.google.common.primitives.Chars$CharArrayAsList:subList(int,int)" : [ "<init>", "size", "checkPositionIndexes" ],
  "com.google.common.collect.Sets:symmetricDifference(java.util.Set,java.util.Set)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:rebuildHashTable(int,java.lang.Object[],int)" : [ "smear" ],
  "com.google.common.collect.Interners$InternerImpl:intern(java.lang.Object)" : [ "getEntry", "putIfAbsent" ],
  "com.google.common.collect.MapMakerInternalMap:isLiveForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry)" : [ "segmentFor", "getLiveValueForTesting" ],
  "com.google.common.cache.CacheStats:minus(com.google.common.cache.CacheStats)" : [ "<init>", "saturatedSubtract" ],
  "com.google.common.collect.CompactHashMap$MapEntry:updateLastKnownIndex()" : [ "size", "equal" ],
  "com.google.common.collect.AbstractBiMap:setDelegates(java.util.Map,java.util.Map)" : [ "checkState", "checkArgument", "makeInverse" ],
  "com.google.common.collect.ForwardingSortedMultiset:standardPollFirstEntry()" : [ "immutableEntry" ],
  "com.google.common.collect.ForwardingMultimap:removeAll(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:writeLock()" : [ "<init>" ],
  "com.google.common.util.concurrent.AggregateFuture:afterDone()" : [ "releaseResources" ],
  "com.google.common.math.LongMath:isPrime(long)" : [ "checkNonNegative", "test" ],
  "com.google.common.collect.ArrayTable$ArrayMap:put(java.lang.Object,java.lang.Object)" : [ "keySet" ],
  "com.google.common.collect.TreeRangeMap:split(com.google.common.collect.Cut)" : [ "getUpperBound", "compareTo", "putRangeMapEntry", "getLowerBound" ],
  "com.google.common.primitives.Ints$LexicographicalComparator:compare(int[],int[])" : [ "compare" ],
  "com.google.common.collect.ImmutableBiMap$Builder:combine(com.google.common.collect.ImmutableMap$Builder)" : [ "combine" ],
  "com.google.common.io.CharSource$AsByteSource:asCharSource(java.nio.charset.Charset)" : [ "asCharSource" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:floorEntry(java.lang.Object)" : [ "transformEntry", "fromMap" ],
  "com.google.common.util.concurrent.ImmediateFuture:addListener(java.lang.Runnable,java.util.concurrent.Executor)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMapEntrySet:isHashCodeFast()" : [ "isHashCodeFast" ],
  "com.google.common.collect.LinkedListMultimap:<init>()" : [ "<init>" ],
  "com.google.common.collect.HashBasedTable:containsRow(java.lang.Object)" : [ "containsRow" ],
  "com.google.common.collect.RegularImmutableSet:contains(java.lang.Object)" : [ "smearedHash" ],
  "com.google.common.math.IntMath:isPrime(int)" : [ "isPrime" ],
  "com.google.common.collect.ImmutableMultimap:builder()" : [ "<init>" ],
  "com.google.common.collect.HashMultiset:create(java.lang.Iterable)" : [ "create", "inferDistinctElements", "addAll" ],
  "com.google.common.collect.HashMultiset:forEachEntry(java.util.function.ObjIntConsumer)" : [ "forEachEntry" ],
  "com.google.common.collect.Sets:newHashSetWithExpectedSize(int)" : [ "capacity" ],
  "com.google.common.collect.ImmutableTable:toImmutableTable(java.util.function.Function,java.util.function.Function,java.util.function.Function)" : [ "toImmutableTable" ],
  "com.google.common.primitives.UnsignedLong:minus(com.google.common.primitives.UnsignedLong)" : [ "fromLongBits", "checkNotNull" ],
  "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:hash()" : [ "checkState" ],
  "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl:<init>(com.google.common.collect.ImmutableSet$SetBuilderImpl)" : [ "<init>", "newHashSetWithExpectedSize" ],
  "com.google.common.primitives.UnsignedBytes:toString(byte,int)" : [ "checkArgument", "toInt" ],
  "com.google.common.collect.ForwardingDeque:getLast()" : [ "delegate" ],
  "com.google.common.graph.MapRetrievalCache:addToCache(java.lang.Object,java.lang.Object)" : [ "<init>", "addToCache" ],
  "com.google.common.collect.Sets:newHashSet(java.lang.Iterable)" : [ "newHashSet" ],
  "com.google.common.primitives.Ints$IntArrayAsList:toString()" : [ "size" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:getWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry)" : [ "castForTesting", "getValueReference" ],
  "com.google.common.collect.ArrayTable:cellSpliterator()" : [ "indexed", "size", "getCell" ],
  "com.google.common.cache.CacheBuilder:softValues()" : [ "setValueStrength" ],
  "com.google.common.math.Quantiles$Scale:<init>(int)" : [ "checkArgument" ],
  "com.google.common.graph.EndpointPair$Unordered:iterator()" : [ "iterator" ],
  "com.google.common.collect.Synchronized:listMultimap(com.google.common.collect.ListMultimap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.base.CharMatcher$Negated:matchesNoneOf(java.lang.CharSequence)" : [ "matchesAllOf" ],
  "com.google.common.util.concurrent.AbstractIdleService:awaitRunning(java.time.Duration)" : [ "awaitRunning" ],
  "com.google.common.collect.Collections2:isPermutation(java.util.List,java.util.List)" : [ "create" ],
  "com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard:isSatisfied()" : [ "state" ],
  "com.google.common.collect.ImmutableBiMap:builder()" : [ "<init>" ],
  "com.google.common.primitives.Floats:ensureCapacity(float[],int,int)" : [ "checkArgument" ],
  "com.google.common.reflect.Types:getComponentType(java.lang.reflect.Type)" : [ "checkNotNull" ],
  "com.google.common.graph.GraphBuilder:nodeOrder(com.google.common.graph.ElementOrder)" : [ "cast", "checkNotNull" ],
  "com.google.common.io.ByteSource:concat(java.util.Iterator)" : [ "concat", "copyOf" ],
  "com.google.common.collect.Platform:tryWeakKeys(com.google.common.collect.MapMaker)" : [ "weakKeys" ],
  "com.google.common.util.concurrent.AbstractExecutionThreadService$1:toString()" : [ "toString" ],
  "com.google.common.hash.HashCode:fromString(java.lang.String)" : [ "checkArgument", "decode", "fromBytesNoCopy" ],
  "com.google.common.collect.HashMultimap:create()" : [ "<init>" ],
  "com.google.common.cache.LocalCache:compute(java.lang.Object,java.util.function.BiFunction)" : [ "compute", "checkNotNull", "hash", "segmentFor" ],
  "com.google.common.collect.ForwardingQueue:remove()" : [ "delegate" ],
  "com.google.common.collect.Iterables:all(java.lang.Iterable,com.google.common.base.Predicate)" : [ "all" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:upperCase()" : [ "upperCase", "newInstance" ],
  "com.google.common.collect.ForwardingListMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue:removeAndGet(int)" : [ "elementData", "removeAt" ],
  "com.google.common.collect.AbstractSortedMultiset:<init>(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.base.Predicates:alwaysTrue()" : [ "withNarrowedType" ],
  "com.google.common.collect.EnumBiMap:readObject(java.io.ObjectInputStream)" : [ "populateMap" ],
  "com.google.common.primitives.UnsignedLongs:decode(java.lang.String)" : [ "fromString", "parseUnsignedLong" ],
  "com.google.common.base.Converter$ReverseConverter:<init>(com.google.common.base.Converter)" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry)" : [ "newEntry" ],
  "com.google.common.collect.MapMaker:concurrencyLevel(int)" : [ "checkState", "checkArgument" ],
  "com.google.common.primitives.ImmutableIntArray:of(int,int,int,int,int)" : [ "<init>" ],
  "com.google.common.collect.SortedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "replaceValues" ],
  "com.google.common.reflect.TypeToken:any(java.lang.reflect.Type[])" : [ "<init>" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:keySet()" : [ "<init>" ],
  "com.google.common.collect.ForwardingDeque:removeLast()" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:verifyIndex(int)" : [ "getLeftChildIndex", "compareElements", "getRightChildIndex", "getParentIndex", "getGrandparentIndex" ],
  "com.google.common.net.InetAddresses:hasEmbeddedIPv4ClientAddress(java.net.Inet6Address)" : [ "isCompatIPv4Address", "is6to4Address", "isTeredoAddress" ],
  "com.google.common.util.concurrent.AtomicLongMap:removeIfZero(java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.Iterators:any(java.util.Iterator,com.google.common.base.Predicate)" : [ "indexOf" ],
  "com.google.common.io.FileBackedOutputStream:<init>(int,boolean)" : [ "checkArgument" ],
  "com.google.common.hash.AbstractHasher:putFloat(float)" : [ "putInt" ],
  "com.google.common.base.Converter$ConverterComposition:<init>(com.google.common.base.Converter,com.google.common.base.Converter)" : [ "<init>" ],
  "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator:set(java.lang.Object)" : [ "checkState" ],
  "com.google.common.collect.ForwardingNavigableMap:<init>()" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap:remove(java.lang.Object,java.lang.Object)" : [ "remove", "hash", "segmentFor" ],
  "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:put(java.lang.Class,java.lang.Object)" : [ "put", "of" ],
  "com.google.common.base.Optional:presentInstances(java.lang.Iterable)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture:<init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.reflect.TypeToken$TypeCollector$3:collectTypes(java.lang.Iterable)" : [ "add", "build", "builder" ],
  "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:compare(byte[],byte[])" : [ "compare" ],
  "com.google.common.base.Converter$FunctionBasedConverter:<init>(com.google.common.base.Function,com.google.common.base.Function)" : [ "<init>", "checkNotNull" ],
  "com.google.common.math.PairedStats:pearsonsCorrelationCoefficient()" : [ "checkState", "count", "xStats", "sumOfSquaresOfDeltas", "yStats", "ensurePositive", "ensureInUnitRange" ],
  "com.google.common.hash.AbstractStreamingHasher:hash()" : [ "munch", "flip", "processRemaining", "position" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:clear()" : [ "maybeClearReferenceQueues" ],
  "com.google.common.collect.MinMaxPriorityQueue:peek()" : [ "elementData" ],
  "com.google.common.io.Files:getFileExtension(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.MinMaxPriorityQueue$Builder:ordering()" : [ "from" ],
  "com.google.common.base.Equivalence$Wrapper:equals(java.lang.Object)" : [ "equivalent" ],
  "com.google.common.io.Closer:rethrow(java.lang.Throwable,java.lang.Class,java.lang.Class)" : [ "checkNotNull", "propagateIfPossible" ],
  "com.google.common.collect.Iterators:toArray(java.util.Iterator,java.lang.Class)" : [ "toArray", "newArrayList" ],
  "com.google.common.collect.Multimaps$TransformedEntriesMultimap:<init>(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache$Segment:replace(java.lang.Object,int,java.lang.Object)" : [ "preWriteCleanup", "equivalent", "removeValueFromChain", "enqueueNotification", "setValue", "evictEntries", "postWriteCleanup" ],
  "com.google.common.collect.ForwardingMap:<init>()" : [ "<init>" ],
  "com.google.common.cache.CacheBuilderSpec$LongParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)" : [ "isNullOrEmpty" ],
  "com.google.common.base.Joiner:join(java.lang.Iterable)" : [ "join" ],
  "com.google.common.collect.ImmutableMultimap$Values:iterator()" : [ "valueIterator" ],
  "com.google.common.base.Joiner:on(java.lang.String)" : [ "<init>" ],
  "com.google.common.primitives.Floats$FloatArrayAsList:equals(java.lang.Object)" : [ "size" ],
  "com.google.common.collect.CompactHashSet:setHashTableMask(int)" : [ "maskCombine" ],
  "com.google.common.collect.Multisets:retainAllImpl(com.google.common.collect.Multiset,java.util.Collection)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeMultiset:forEachEntry(java.util.function.ObjIntConsumer)" : [ "checkNotNull", "firstNode", "tooHigh", "getElement", "getCount" ],
  "com.google.common.cache.LocalCache$WriteQueue:offer(com.google.common.cache.ReferenceEntry)" : [ "connectWriteOrder" ],
  "com.google.common.math.IntMath:saturatedPow(int,int)" : [ "checkNonNegative", "saturatedMultiply" ],
  "com.google.common.collect.Maps:toStringImpl(java.util.Map)" : [ "newStringBuilderForCollection" ],
  "com.google.common.collect.ForwardingDeque:delegate()" : [ "delegate" ],
  "com.google.common.collect.ForwardingMultiset:standardToString()" : [ "entrySet" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:set(java.lang.Object)" : [ "getDelegateListIterator" ],
  "com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm:readResolve()" : [ "keySet" ],
  "com.google.common.collect.HashBiMap$Inverse:clear()" : [ "forward" ],
  "com.google.common.collect.StandardTable:cellSet()" : [ "cellSet" ],
  "com.google.common.io.CharSequenceReader:mark(int)" : [ "checkArgument", "checkOpen" ],
  "com.google.common.graph.NetworkBuilder:directed()" : [ "<init>" ],
  "com.google.common.graph.Graphs$TransposedNetwork:edgeConnecting(com.google.common.graph.EndpointPair)" : [ "delegate", "transpose" ],
  "com.google.common.collect.Iterators:emptyIterator()" : [ "emptyListIterator" ],
  "com.google.common.primitives.UnsignedBytes:toString(byte)" : [ "toString" ],
  "com.google.common.math.LinearTransformation$VerticalLinearTransformation:createInverse()" : [ "<init>" ],
  "com.google.common.collect.ImmutableBiMap$Builder:put(java.util.Map$Entry)" : [ "put" ],
  "com.google.common.collect.TreeRangeMap:subRangeMap(com.google.common.collect.Range)" : [ "equals", "all" ],
  "com.google.common.reflect.ClassPath$ClassInfo:<init>(java.io.File,java.lang.String,java.lang.ClassLoader)" : [ "<init>", "getClassName" ],
  "com.google.common.collect.HashBiMap:readObject(java.io.ObjectInputStream)" : [ "readCount", "init", "populateMap" ],
  "com.google.common.collect.EmptyContiguousSet:headSetImpl(java.lang.Object,boolean)" : [ "headSetImpl" ],
  "com.google.common.collect.Synchronized$SynchronizedListMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:firstEntry()" : [ "getEntry" ],
  "com.google.common.collect.Iterators$PeekingImpl:remove()" : [ "checkState" ],
  "com.google.common.util.concurrent.MoreExecutors:renamingDecorator(java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSet:copyOfEnumSet(java.util.EnumSet)" : [ "asImmutable" ],
  "com.google.common.primitives.UnsignedInts:sortDescending(int[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:drainTo(java.util.Collection,int)" : [ "delegate" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:descendingMultiset()" : [ "<init>", "delegate" ],
  "com.google.common.cache.ForwardingLoadingCache:<init>()" : [ "<init>" ],
  "com.google.common.collect.CollectCollectors:toImmutableMultiset(java.util.function.Function,java.util.function.ToIntFunction)" : [ "checkNotNull", "create" ],
  "com.google.common.collect.Multimaps$UnmodifiableMultimap:asMap()" : [ "transformValues" ],
  "com.google.common.collect.ForwardingDeque:removeFirst()" : [ "delegate" ],
  "com.google.common.hash.Hashing:sipHash24(long,long)" : [ "<init>" ],
  "com.google.common.collect.Multisets$MultisetIteratorImpl:remove()" : [ "checkRemove" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:tailMap(java.lang.Object,boolean)" : [ "navigableMap", "delegate" ],
  "com.google.common.collect.ForwardingMultimap:hashCode()" : [ "delegate" ],
  "com.google.common.collect.Multisets$FilteredMultiset:remove(java.lang.Object,int)" : [ "checkNonnegative", "count" ],
  "com.google.common.collect.Cut$AboveValue:withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)" : [ "belowAll" ],
  "com.google.common.net.MediaType:equals(java.lang.Object)" : [ "parametersAsMap" ],
  "com.google.common.collect.ImmutableMultiset$Builder:buildJdkBacked()" : [ "of", "create" ],
  "com.google.common.collect.StandardTable:containsRow(java.lang.Object)" : [ "safeContainsKey" ],
  "com.google.common.collect.Multimaps:synchronizedMultimap(com.google.common.collect.Multimap)" : [ "multimap" ],
  "com.google.common.collect.ImmutableSortedMultiset$Builder:<init>(java.util.Comparator)" : [ "<init>", "create", "checkNotNull" ],
  "com.google.common.collect.Maps$Values:contains(java.lang.Object)" : [ "map" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:elementSet()" : [ "delegate" ],
  "com.google.common.util.concurrent.Striped:bulkGet(java.lang.Iterable)" : [ "newArrayList", "of" ],
  "com.google.common.collect.Maps$NavigableKeySet:subSet(java.lang.Object,java.lang.Object)" : [ "subSet" ],
  "com.google.common.util.concurrent.AggregateFuture:processCompleted(com.google.common.collect.ImmutableCollection)" : [ "collectValueFromNonCancelledFuture", "releaseResources" ],
  "com.google.common.util.concurrent.FakeTimeLimiter:runWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Ordering:nullsLast()" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm:readResolve()" : [ "inverse" ],
  "com.google.common.collect.Iterators:indexOf(java.util.Iterator,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.collect.MapMakerInternalMap$KeySet:isEmpty()" : [ "isEmpty" ],
  "com.google.common.collect.CompactHashSet:create(java.util.Collection)" : [ "createWithExpectedSize" ],
  "com.google.common.reflect.TypeToken:getGenericInterfaces()" : [ "boundsAsInterfaces", "builder", "getRawType", "resolveSupertype", "add", "build" ],
  "com.google.common.cache.LocalCache:clear()" : [ "clear" ],
  "com.google.common.primitives.Ints:sortDescending(int[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.collect.SingletonImmutableList:iterator()" : [ "singletonIterator" ],
  "com.google.common.cache.LocalCache:copyEntry(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)" : [ "copyEntry", "segmentFor" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:getSortedSetDelegate()" : [ "getSortedSetDelegate" ],
  "com.google.common.graph.AbstractBaseGraph:incidentEdgeOrder()" : [ "unordered" ],
  "com.google.common.collect.ImmutableTable:copyOf(java.lang.Iterable)" : [ "builder", "put", "build" ],
  "com.google.common.collect.EnumMultiset:size()" : [ "saturatedCast" ],
  "com.google.common.collect.Multisets:immutableEntry(java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.collect.Maps$Values:iterator()" : [ "valueIterator", "map" ],
  "com.google.common.primitives.ImmutableIntArray:of(int,int,int,int)" : [ "<init>" ],
  "com.google.common.collect.HashBasedTable:containsColumn(java.lang.Object)" : [ "containsColumn" ],
  "com.google.common.net.MediaType:createAudioType(java.lang.String)" : [ "create" ],
  "com.google.common.collect.CompactHashing:remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[])" : [ "smearedHash", "tableGet", "getHashPrefix", "getNext", "tableSet", "maskCombine", "equal" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap:tailMap(java.lang.Object)" : [ "<init>", "sortedMap" ],
  "com.google.common.collect.ForwardingListIterator:<init>()" : [ "<init>" ],
  "com.google.common.base.Joiner:appendTo(java.lang.Appendable,java.lang.Iterable)" : [ "appendTo" ],
  "com.google.common.collect.Maps:difference(java.util.Map,java.util.Map,com.google.common.base.Equivalence)" : [ "<init>", "checkNotNull", "doDifference", "newLinkedHashMap" ],
  "com.google.common.collect.Collections2$OrderedPermutationIterator:<init>(java.util.List,java.util.Comparator)" : [ "<init>", "newArrayList" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:higherEntry(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(double[])" : [ "ensureRoomFor" ],
  "com.google.common.collect.ArrayTable:create(com.google.common.collect.Table)" : [ "<init>" ],
  "com.google.common.math.StatsAccumulator:snapshot()" : [ "<init>" ],
  "com.google.common.collect.AbstractSetMultimap:removeAll(java.lang.Object)" : [ "removeAll" ],
  "com.google.common.primitives.Ints:sortDescending(int[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSet:encloses(com.google.common.collect.Range)" : [ "encloses", "isEmpty", "intersection" ],
  "com.google.common.collect.Multimaps:transformValues(com.google.common.collect.Multimap,com.google.common.base.Function)" : [ "checkNotNull", "transformEntries" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:ensureTableCapacity(int)" : [ "chooseTableSize", "rebuildHashTable", "maxRunBeforeFallback" ],
  "com.google.common.collect.ImmutableMap:builderWithExpectedSize(int)" : [ "<init>", "checkNonnegative" ],
  "com.google.common.cache.CacheBuilderSpec$WriteDurationParser:parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit)" : [ "checkArgument" ],
  "com.google.common.collect.EmptyContiguousSet:iterator()" : [ "emptyIterator" ],
  "com.google.common.graph.DirectedGraphConnections:incidentEdgeIterator(java.lang.Object)" : [ "checkNotNull", "concat", "transform", "predecessors", "successors" ],
  "com.google.common.collect.CartesianList:<init>(com.google.common.collect.ImmutableList)" : [ "checkedMultiply" ],
  "com.google.common.collect.JdkBackedImmutableBiMap:<init>(com.google.common.collect.ImmutableList,java.util.Map,java.util.Map)" : [ "<init>" ],
  "com.google.common.collect.ImmutableTable:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addUnconditionalHolder(java.lang.Object)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.Iterables:toArray(java.lang.Iterable)" : [ "castOrCopyToCollection" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "sortedMap" ],
  "com.google.common.collect.MinMaxPriorityQueue:isIntact()" : [ "heapForIndex" ],
  "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:get()" : [ "get" ],
  "com.google.common.primitives.Shorts:constrainToRange(short,short,short)" : [ "checkArgument" ],
  "com.google.common.collect.Lists$TransformingSequentialList:removeIf(java.util.function.Predicate)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeRangeSet:removeAll(com.google.common.collect.RangeSet)" : [ "removeAll" ],
  "com.google.common.base.Joiner$MapJoiner:appendTo(java.lang.StringBuilder,java.util.Map)" : [ "appendTo" ],
  "com.google.common.primitives.UnsignedInts:divide(int,int)" : [ "toLong" ],
  "com.google.common.collect.ForwardingList:add(int,java.lang.Object)" : [ "delegate" ],
  "com.google.common.net.MediaType:withParameters(java.lang.String,java.lang.Iterable)" : [ "<init>", "checkNotNull", "normalizeToken", "builder", "put", "normalizeParameterValue", "build", "firstNonNull" ],
  "com.google.common.collect.MapMakerInternalMap:get(java.lang.Object)" : [ "get", "hash", "segmentFor" ],
  "com.google.common.util.concurrent.AbstractExecutionThreadService:awaitRunning(java.time.Duration)" : [ "awaitRunning" ],
  "com.google.common.graph.AbstractNetwork:edgeIncidentNodesMap(com.google.common.graph.Network)" : [ "asMap" ],
  "com.google.common.cache.AbstractLoadingCache:getUnchecked(java.lang.Object)" : [ "<init>" ],
  "com.google.common.math.LinearTransformation$RegularLinearTransformation:<init>(double,double,com.google.common.math.LinearTransformation)" : [ "<init>" ],
  "com.google.common.base.Ascii:equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" : [ "getAlphaIndex" ],
  "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,int,double)" : [ "create" ],
  "com.google.common.collect.HashBiMap$Inverse:containsKey(java.lang.Object)" : [ "forward" ],
  "com.google.common.util.concurrent.AtomicDoubleArray:writeObject(java.io.ObjectOutputStream)" : [ "length", "get" ],
  "com.google.common.util.concurrent.Monitor:isSatisfied(com.google.common.util.concurrent.Monitor$Guard)" : [ "signalAllWaiters" ],
  "com.google.common.collect.Maps$KeySet:<init>(java.util.Map)" : [ "checkNotNull" ],
  "com.google.common.base.Optional:absent()" : [ "withType" ],
  "com.google.common.hash.AbstractHasher:putString(java.lang.CharSequence,java.nio.charset.Charset)" : [ "putBytes" ],
  "com.google.common.graph.StandardNetwork:incidentNodes(java.lang.Object)" : [ "checkedReferenceNode", "get", "of" ],
  "com.google.common.collect.Queues:newPriorityQueue(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.reflect.ClassPath:locationsFrom(java.lang.ClassLoader)" : [ "<init>", "builder", "getClassPathEntries", "entrySet", "add", "build" ],
  "com.google.common.collect.SingletonImmutableBiMap:createEntrySet()" : [ "of", "immutableEntry" ],
  "com.google.common.util.concurrent.TimeLimiter:newProxy(java.lang.Object,java.lang.Class,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.primitives.ImmutableLongArray:copyOf(java.util.stream.LongStream)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:delegate()" : [ "delegate" ],
  "com.google.common.math.PairedStats:toByteArray()" : [ "writeTo" ],
  "com.google.common.collect.CompactHashMap:size()" : [ "delegateOrNull" ],
  "com.google.common.collect.ForwardingConcurrentMap:remove(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableMap:entryOf(java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset:lastNode()" : [ "get", "hasUpperBound", "uncheckedCastNullableTToT", "getUpperEndpoint", "comparator", "getUpperBoundType", "getElement", "contains" ],
  "com.google.common.base.Preconditions:checkPositionIndex(int,int)" : [ "checkPositionIndex" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.NaturalOrdering:compare(java.lang.Comparable,java.lang.Comparable)" : [ "checkNotNull" ],
  "com.google.common.collect.Ordering:greatestOf(java.util.Iterator,int)" : [ "reverse", "leastOf" ],
  "com.google.common.util.concurrent.ClosingFuture:from(com.google.common.util.concurrent.ListenableFuture)" : [ "<init>" ],
  "com.google.common.collect.CompactLinkedHashMap:allocArrays()" : [ "allocArrays" ],
  "com.google.common.primitives.UnsignedInts:remainder(int,int)" : [ "toLong" ],
  "com.google.common.collect.ForwardingCollection:standardClear()" : [ "clear", "iterator" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:hasNext()" : [ "validateIterator" ],
  "com.google.common.collect.ForwardingQueue:poll()" : [ "delegate" ],
  "com.google.common.collect.ImmutableRangeMap:builder()" : [ "<init>" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:equals(java.lang.Object)" : [ "equals", "size" ],
  "com.google.common.graph.ElementOrder:toString()" : [ "toString", "toStringHelper", "add" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:bubbleUp(int,java.lang.Object)" : [ "crossOverUp", "bubbleUpAlternatingLevels" ],
  "com.google.common.eventbus.Subscriber:invokeSubscriberMethod(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.io.FileBackedOutputStream:write(byte[])" : [ "write" ],
  "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:<init>(int)" : [ "checkNonnegative" ],
  "com.google.common.util.concurrent.ServiceManager:isHealthy()" : [ "iterator" ],
  "com.google.common.collect.TreeTraverser:preOrderTraversal(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.base.Splitter:splitToStream(java.lang.CharSequence)" : [ "split" ],
  "com.google.common.cache.CacheBuilder:getKeyEquivalence()" : [ "firstNonNull", "getKeyStrength" ],
  "com.google.common.hash.AbstractHashFunction:newHasher(int)" : [ "checkArgument" ],
  "com.google.common.collect.ForwardingMultimap:delegate()" : [ "delegate" ],
  "com.google.common.collect.Maps$TransformedEntriesSortedMap:headMap(java.lang.Object)" : [ "transformEntries", "fromMap" ],
  "com.google.common.collect.ArrayTable$ArrayMap:entrySpliterator()" : [ "indexed", "size", "getEntry" ],
  "com.google.common.collect.CompactHashSet:create()" : [ "<init>" ],
  "com.google.common.collect.ImmutableRangeMap:span()" : [ "create" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:lower(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:waitForValue()" : [ "getUninterruptibly" ],
  "com.google.common.collect.ImmutableRangeSet:toImmutableRangeSet()" : [ "toImmutableRangeSet" ],
  "com.google.common.collect.ImmutableMap:containsValue(java.lang.Object)" : [ "values" ],
  "com.google.common.io.BaseEncoding$Alphabet:ignoreCase()" : [ "<init>", "checkState" ],
  "com.google.common.collect.Range:toString()" : [ "toString" ],
  "com.google.common.collect.SingletonImmutableList:<init>(java.lang.Object)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ForwardingNavigableSet:pollFirst()" : [ "delegate" ],
  "com.google.common.collect.CompactHashSet:convertToHashFloodingResistantImplementation()" : [ "createHashFloodingResistantDelegate", "hashTableMask", "firstEntryIndex", "getSuccessor", "element", "incrementModCount" ],
  "com.google.common.collect.FilteredKeyMultimap$Entries:delegate()" : [ "filter", "entryPredicate" ],
  "com.google.common.collect.ForwardingQueue:standardPoll()" : [ "remove" ],
  "com.google.common.cache.RemovalNotification:create(java.lang.Object,java.lang.Object,com.google.common.cache.RemovalCause)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeMap$1:subRangeMap(com.google.common.collect.Range)" : [ "checkNotNull" ],
  "com.google.common.collect.CompactHashMap:createWithExpectedSize(int)" : [ "<init>" ],
  "com.google.common.collect.CompactHashMap:containsValue(java.lang.Object)" : [ "delegateOrNull", "value", "equal" ],
  "com.google.common.collect.ImmutableMapEntrySet:writeReplace()" : [ "<init>" ],
  "com.google.common.util.concurrent.ForwardingFuture:isCancelled()" : [ "delegate" ],
  "com.google.common.collect.EnumMultiset:count(java.lang.Object)" : [ "isActuallyE" ],
  "com.google.common.cache.CacheLoader$SupplierToCacheLoader:load(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.MinMaxPriorityQueue:create()" : [ "create", "natural" ],
  "com.google.common.collect.ImmutableSortedMap$Builder:putAll(java.util.Map)" : [ "putAll" ],
  "com.google.common.collect.TreeMultiset:descendingMultiset()" : [ "descendingMultiset" ],
  "com.google.common.collect.TreeRangeSet:clear()" : [ "clear" ],
  "com.google.common.collect.ArrayTable:containsRow(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.collect.LinkedHashMultimap$ValueEntry:newHeader()" : [ "<init>" ],
  "com.google.common.reflect.Types$ParameterizedTypeImpl:hashCode()" : [ "hashCode" ],
  "com.google.common.hash.AbstractStreamingHasher:munch()" : [ "flip" ],
  "com.google.common.cache.CacheBuilderSpec$DurationParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)" : [ "isNullOrEmpty" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addHolder(java.lang.Object)" : [ "addHolder" ],
  "com.google.common.reflect.Invokable:isProtected()" : [ "getModifiers" ],
  "com.google.common.graph.AbstractValueGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "hasEdgeConnecting" ],
  "com.google.common.io.CharSource$ConcatenatedCharSource:openStream()" : [ "<init>" ],
  "com.google.common.cache.LocalCache$EntryFactory:copyWriteEntry(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)" : [ "connectWriteOrder", "nullifyWriteOrder" ],
  "com.google.common.io.CharStreams:toStringBuilder(java.lang.Readable)" : [ "copyReaderToBuilder", "copy" ],
  "com.google.common.collect.Synchronized:multiset(com.google.common.collect.Multiset,java.lang.Object)" : [ "<init>" ],
  "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)" : [ "<init>", "create" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:containsValue(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$Segment:compute(java.lang.Object,int,java.util.function.BiFunction)" : [ "<init>", "preWriteCleanup", "equivalent", "isExpired", "enqueueNotification", "remove", "newEntry", "recordWrite", "getAndRecordStats", "immediateFuture", "removeLoadingValue", "removeEntry", "postWriteCleanup" ],
  "com.google.common.collect.ImmutableList:builderWithExpectedSize(int)" : [ "<init>", "checkNonnegative" ],
  "com.google.common.hash.MessageDigestHashFunction$SerializedForm:readResolve()" : [ "<init>" ],
  "com.google.common.collect.ImmutableTable:hashCode()" : [ "hashCode" ],
  "com.google.common.hash.Hasher:putBytes(byte[])" : [ "putBytes" ],
  "com.google.common.collect.ForwardingMultiset:standardRemoveAll(java.util.Collection)" : [ "removeAllImpl" ],
  "com.google.common.collect.CollectCollectors:toImmutableSetMultimap(java.util.function.Function,java.util.function.Function)" : [ "checkNotNull", "build", "builder", "combine" ],
  "com.google.common.collect.TreeBasedTable:<init>(java.util.Comparator,java.util.Comparator)" : [ "<init>" ],
  "com.google.common.io.CharSequenceReader:read()" : [ "checkOpen", "hasRemaining" ],
  "com.google.common.collect.StandardTable$Row:entryIterator()" : [ "updateBackingRowMapField", "emptyModifiableIterator" ],
  "com.google.common.base.Suppliers$ThreadSafeSupplier:<init>(com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.Tables$TransformedTable:rowMap()" : [ "transformValues" ],
  "com.google.common.hash.HashingInputStream:read(byte[],int,int)" : [ "putBytes" ],
  "com.google.common.base.internal.Finalizer:<init>(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)" : [ "run" ],
  "com.google.common.hash.Hashing:hmacSha256(byte[])" : [ "hmacSha256", "checkNotNull" ],
  "com.google.common.collect.EnumMultiset:entrySet()" : [ "entrySet" ],
  "com.google.common.collect.AbstractMultiset:setCount(java.lang.Object,int,int)" : [ "setCountImpl" ],
  "com.google.common.base.CharMatcher$NamedFastMatcher:<init>(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.LinkedHashMultiset:create(java.lang.Iterable)" : [ "create", "inferDistinctElements", "addAll" ],
  "com.google.common.primitives.Shorts:reverse(short[])" : [ "reverse", "checkNotNull" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:pollLast(long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.Streams:mapWithIndex(java.util.stream.LongStream,com.google.common.collect.Streams$LongFunctionWithIndex)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:get(java.lang.Object)" : [ "contains", "equals" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:clear()" : [ "delegate" ],
  "com.google.common.collect.Lists:charactersOf(java.lang.CharSequence)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Multimaps$TransformedEntriesListMultimap:removeAll(java.lang.Object)" : [ "transform" ],
  "com.google.common.collect.RegularImmutableSortedSet:spliterator()" : [ "spliterator" ],
  "com.google.common.io.CharSource$ConcatenatedCharSource:isEmpty()" : [ "isEmpty" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:addAll(int,java.util.Collection)" : [ "getListDelegate" ],
  "com.google.common.collect.ImmutableMap:checkNoConflict(boolean,java.lang.String,java.lang.Object,java.lang.Object)" : [ "conflictException" ],
  "com.google.common.util.concurrent.ServiceManager:awaitHealthy(long,java.util.concurrent.TimeUnit)" : [ "awaitHealthy" ],
  "com.google.common.math.IntMath:ceilingPowerOfTwo(int)" : [ "checkPositive" ],
  "com.google.common.collect.Multisets$FilteredMultiset:createEntrySet()" : [ "filter" ],
  "com.google.common.collect.StandardTable$Row$2:setValue(java.lang.Object)" : [ "setValue", "checkNotNull" ],
  "com.google.common.collect.RegularImmutableBiMap:createKeySet()" : [ "<init>" ],
  "com.google.common.collect.ForwardingSortedMap:standardSubMap(java.lang.Object,java.lang.Object)" : [ "checkArgument", "unsafeCompare", "comparator", "tailMap" ],
  "com.google.common.primitives.UnsignedInteger:valueOf(java.lang.String)" : [ "valueOf" ],
  "com.google.common.collect.TreeMultiset:firstEntry()" : [ "firstEntry" ],
  "com.google.common.collect.Sets$FilteredSortedSet:first()" : [ "find" ],
  "com.google.common.hash.Funnels$SequentialFunnel:<init>(com.google.common.hash.Funnel)" : [ "checkNotNull" ],
  "com.google.common.primitives.ImmutableDoubleArray:of(double,double)" : [ "<init>" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:entryIterator()" : [ "filter" ],
  "com.google.common.primitives.UnsignedLong:fromLongBits(long)" : [ "<init>" ],
  "com.google.common.collect.CollectPreconditions:checkRemove(boolean)" : [ "checkState" ],
  "com.google.common.graph.DirectedGraphConnections:of(com.google.common.graph.ElementOrder)" : [ "<init>", "type" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:elementSet()" : [ "elementSet" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:rowMap()" : [ "map", "transformValues", "delegate" ],
  "com.google.common.base.CharMatcher$BitSetMatcher:<init>(java.util.BitSet,java.lang.String)" : [ "<init>" ],
  "com.google.common.io.LineBuffer:finish()" : [ "finishLine" ],
  "com.google.common.collect.HashBiMap$Inverse:replaceAll(java.util.function.BiFunction)" : [ "checkNotNull", "clear", "put" ],
  "com.google.common.graph.AbstractNetwork:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "hasEdgeConnecting", "checkNotNull", "isOrderingCompatible", "nodeU", "nodeV" ],
  "com.google.common.collect.TableCollectors$ImmutableTableCollectorState:toTable()" : [ "copyOf" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:ceilingKey(java.lang.Object)" : [ "fromMap" ],
  "com.google.common.collect.ArrayTable:containsColumn(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.net.InetAddresses:getIsatapIPv4Address(java.net.Inet6Address)" : [ "checkArgument", "isIsatapAddress", "toAddrString", "getInet4Address" ],
  "com.google.common.collect.Sets:newCopyOnWriteArraySet(java.lang.Iterable)" : [ "newArrayList" ],
  "com.google.common.base.CharMatcher$Any:removeFrom(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:comparator()" : [ "natural" ],
  "com.google.common.primitives.Ints$IntArrayAsList:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.ForwardingMultiset:standardIterator()" : [ "iteratorImpl" ],
  "com.google.common.graph.ImmutableValueGraph$Builder:<init>(com.google.common.graph.ValueGraphBuilder)" : [ "copy", "incidentEdgeOrder", "stable", "build" ],
  "com.google.common.graph.UndirectedGraphConnections:incidentEdgeIterator(java.lang.Object)" : [ "transform" ],
  "com.google.common.collect.CompactHashMap:setValue(int,java.lang.Object)" : [ "requireValues" ],
  "com.google.common.collect.ImmutableTable:isEmpty()" : [ "isEmpty" ],
  "com.google.common.collect.ForwardingNavigableMap:descendingKeySet()" : [ "delegate" ],
  "com.google.common.collect.ForwardingSortedSet:<init>()" : [ "<init>" ],
  "com.google.common.collect.Maps$SortedAsMapView:lastKey()" : [ "backingSet" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:<init>(java.util.Set,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedBiMap:delegate()" : [ "delegate" ],
  "com.google.common.collect.Iterators:consumingIterator(java.util.Iterator)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache$HashIterator:nextInTable()" : [ "advanceTo", "nextInChain" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:add(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ForwardingMultiset:hashCode()" : [ "delegate" ],
  "com.google.common.cache.LocalCache$EntryFactory$7:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)" : [ "copyEntry" ],
  "com.google.common.collect.JdkBackedImmutableBiMap:inverse()" : [ "<init>" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:inDegree(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ForwardingMultiset:standardRetainAll(java.util.Collection)" : [ "retainAllImpl" ],
  "com.google.common.io.CharStreams:copyReaderToBuilder(java.io.Reader,java.lang.StringBuilder)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.collect.ImmutableSortedMap:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.LinkedListMultimap:create(com.google.common.collect.Multimap)" : [ "<init>" ],
  "com.google.common.collect.Iterators:peekingIterator(com.google.common.collect.PeekingIterator)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:putAll(com.google.common.collect.Table)" : [ "delegate" ],
  "com.google.thirdparty.publicsuffix.TrieParser:doParseTrieToBuilder(java.util.Deque,java.lang.CharSequence,int,com.google.common.collect.ImmutableMap$Builder)" : [ "reverse", "join", "put", "fromCode" ],
  "com.google.common.collect.HashMultimap:<init>()" : [ "<init>" ],
  "com.google.common.graph.AbstractValueGraph$1:edges()" : [ "edges" ],
  "com.google.common.io.CharSink:writeFrom(java.lang.Readable)" : [ "checkNotNull", "copy", "rethrow", "create", "close", "register" ],
  "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet:forEach(java.util.function.Consumer)" : [ "forEach" ],
  "com.google.common.collect.Ordering:compound(java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.CollectCollectors:toImmutableEnumSetGeneric()" : [ "combine", "toImmutableSet" ],
  "com.google.common.collect.MapMaker:setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength)" : [ "checkState", "checkNotNull" ],
  "com.google.common.io.FileBackedOutputStream:update(int)" : [ "getCount", "getBuffer" ],
  "com.google.common.collect.AbstractMultimap$Entries:spliterator()" : [ "entrySpliterator" ],
  "com.google.common.collect.ContiguousSet:tailSet(java.lang.Comparable,boolean)" : [ "checkNotNull" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:withPadChar(char)" : [ "newInstance" ],
  "com.google.common.collect.TreeRangeSet:isEmpty()" : [ "isEmpty" ],
  "com.google.common.cache.CacheBuilder:getKeyStrength()" : [ "firstNonNull" ],
  "com.google.common.util.concurrent.WrappingExecutorService:<init>(java.util.concurrent.ExecutorService)" : [ "checkNotNull" ],
  "com.google.common.collect.StandardTable$Column$Values:removeAll(java.util.Collection)" : [ "removeFromColumnIf", "valuePredicateOnEntries", "in" ],
  "com.google.common.collect.EvictingQueue:create(int)" : [ "<init>" ],
  "com.google.common.hash.HashCode$IntHashCode:<init>(int)" : [ "<init>" ],
  "com.google.common.math.IntMath:sqrt(int,java.math.RoundingMode)" : [ "checkNonNegative", "sqrtFloor", "checkRoundingUnnecessary", "lessThanBranchFree" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:predecessors(java.lang.Object)" : [ "delegate", "successors" ],
  "com.google.common.collect.GeneralRange:tooHigh(java.lang.Object)" : [ "hasUpperBound", "uncheckedCastNullableTToT", "getUpperEndpoint", "getUpperBoundType" ],
  "com.google.common.util.concurrent.ExecutionSequencer:submitAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor)" : [ "checkNotNull", "create", "nonCancellationPropagating", "directExecutor" ],
  "com.google.common.net.MediaType:createVideoType(java.lang.String)" : [ "create" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:keys()" : [ "multiset", "delegate" ],
  "com.google.common.base.FinalizableReferenceQueue$DecoupledLoader:loadFinalizer()" : [ "newLoader", "getBaseUrl" ],
  "com.google.common.collect.Iterators:limit(java.util.Iterator,int)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.Synchronized:set(java.util.Set,java.lang.Object)" : [ "<init>" ],
  "com.google.common.hash.BloomFilter:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.util.concurrent.ListenerCallQueue:enqueueHelper(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.Object)" : [ "checkNotNull", "add" ],
  "com.google.common.collect.StandardTable$Column$EntrySet:isEmpty()" : [ "containsColumn" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:firstEntry()" : [ "transformEntry", "fromMap" ],
  "com.google.common.graph.Graphs$TransposedNetwork:incidentNodes(java.lang.Object)" : [ "delegate", "of", "nodeV", "nodeU" ],
  "com.google.common.math.BigIntegerMath$BigIntegerToDoubleRounder:roundToDoubleArbitrarily(java.math.BigInteger)" : [ "bigToDouble" ],
  "com.google.common.collect.HashBiMap:<init>(int)" : [ "init" ],
  "com.google.common.collect.AbstractMapBasedMultimap:getOrCreateCollection(java.lang.Object)" : [ "createCollection" ],
  "com.google.common.base.Equivalence$Wrapper:<init>(com.google.common.base.Equivalence,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter:<init>(java.util.concurrent.Future)" : [ "<init>" ],
  "com.google.common.graph.ImmutableValueGraph$Builder:build()" : [ "copyOf" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:clear()" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:previousIndex()" : [ "getDelegateListIterator" ],
  "com.google.common.collect.TreeMultiset$AvlNode:rotateLeft()" : [ "checkState", "recompute", "recomputeHeight" ],
  "com.google.common.util.concurrent.AtomicLongMap:putAll(java.util.Map)" : [ "put" ],
  "com.google.common.math.DoubleMath:factorial(int)" : [ "checkNonNegative" ],
  "com.google.common.base.CharMatcher:noneOf(java.lang.CharSequence)" : [ "anyOf", "negate" ],
  "com.google.common.collect.Maps$FilteredKeyMap:<init>(java.util.Map,com.google.common.base.Predicate,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.collect.ForwardingList:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.ElementOrder:<init>(com.google.common.graph.ElementOrder$Type,java.util.Comparator)" : [ "checkNotNull", "checkState" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:size()" : [ "length" ],
  "com.google.common.collect.RegularImmutableSortedSet:forEach(java.util.function.Consumer)" : [ "forEach" ],
  "com.google.common.base.CharMatcher$None:matchesNoneOf(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:putAll(com.google.common.collect.Multimap)" : [ "delegate" ],
  "com.google.common.collect.FilteredKeyMultimap:createKeySet()" : [ "filter" ],
  "com.google.common.io.CharSource:readLines()" : [ "create", "register", "openBufferedStream", "copyOf", "rethrow", "close", "newArrayList" ],
  "com.google.common.collect.HashBasedTable:columnMap()" : [ "columnMap" ],
  "com.google.common.hash.AbstractByteHasher:putBytes(byte[],int,int)" : [ "checkPositionIndexes", "update" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedMap:tailMap(java.lang.Object)" : [ "sortedMap", "delegate" ],
  "com.google.common.util.concurrent.TrustedListenableFutureTask:run()" : [ "run" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:descendingKeySet()" : [ "descendingMap" ],
  "com.google.common.collect.CompoundOrdering:<init>(java.lang.Iterable)" : [ "<init>", "toArray" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.math.LinearTransformation$VerticalLinearTransformation:<init>(double,com.google.common.math.LinearTransformation)" : [ "<init>" ],
  "com.google.common.collect.Multimaps$UnmodifiableSetMultimap:<init>(com.google.common.collect.SetMultimap)" : [ "<init>" ],
  "com.google.common.io.ByteSource$ConcatenatedByteSource:openStream()" : [ "<init>" ],
  "com.google.common.util.concurrent.ServiceManager:toString()" : [ "toString", "toStringHelper", "add", "filter", "not", "instanceOf" ],
  "com.google.common.collect.RegularImmutableMap:checkNoConflictInKeyBucket(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableMapEntry,boolean)" : [ "getNextInKeyBucket" ],
  "com.google.common.graph.AbstractUndirectedNetworkConnections:outEdges()" : [ "incidentEdges" ],
  "com.google.common.primitives.ImmutableLongArray:trimmed()" : [ "<init>", "isPartialView", "toArray" ],
  "com.google.common.collect.RegularContiguousSet:<init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)" : [ "<init>" ],
  "com.google.common.collect.GeneralRange:range(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)" : [ "<init>" ],
  "com.google.common.util.concurrent.TimeLimiter:runUninterruptiblyWithTimeout(java.lang.Runnable,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.collect.Multimaps$MapMultimap:containsEntry(java.lang.Object,java.lang.Object)" : [ "immutableEntry" ],
  "com.google.common.cache.LocalCache$AccessQueue:remove(java.lang.Object)" : [ "connectAccessOrder", "nullifyAccessOrder" ],
  "com.google.common.collect.HashBiMap$Itr:next()" : [ "hasNext" ],
  "com.google.common.base.Preconditions:checkPositionIndex(int,int,java.lang.String)" : [ "badPositionIndex" ],
  "com.google.common.base.Suppliers$ExpiringMemoizingSupplier:get()" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.graph.ValueGraphBuilder:from(com.google.common.graph.ValueGraph)" : [ "<init>", "allowsSelfLoops", "nodeOrder", "incidentEdgeOrder" ],
  "com.google.common.collect.LinkedListMultimap:create()" : [ "<init>" ],
  "com.google.common.io.Files:readLines(java.io.File,java.nio.charset.Charset)" : [ "<init>", "readLines", "asCharSource" ],
  "com.google.common.collect.Multisets:retainOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "retainOccurrencesImpl" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:headMap(com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:get(long,java.util.concurrent.TimeUnit)" : [ "get" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Maps$EntrySet:removeAll(java.util.Collection)" : [ "removeAll", "checkNotNull", "removeAllImpl" ],
  "com.google.common.util.concurrent.ServiceManager:awaitStopped(long,java.util.concurrent.TimeUnit)" : [ "awaitStopped" ],
  "com.google.common.collect.ForwardingNavigableSet:standardSubSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "tailSet" ],
  "com.google.common.collect.Comparators:emptiesFirst(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.graph.Traverser$Traversal$2:<init>(com.google.common.graph.SuccessorsFunction)" : [ "<init>" ],
  "com.google.common.primitives.Bytes:reverse(byte[])" : [ "reverse", "checkNotNull" ],
  "com.google.common.primitives.UnsignedInts:compare(int,int)" : [ "compare", "flip" ],
  "com.google.common.util.concurrent.AtomicLongMap:asMap()" : [ "createAsMap" ],
  "com.google.common.net.MediaType:normalizeParameterValue(java.lang.String,java.lang.String)" : [ "checkNotNull", "checkArgument", "ascii", "matchesAllOf", "toLowerCase" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:floor(java.lang.Object)" : [ "find", "unfiltered" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:tailSet(java.lang.Object,boolean)" : [ "wrap", "getSortedSetDelegate" ],
  "com.google.common.cache.LocalCache:recordsAccess()" : [ "expiresAfterAccess" ],
  "com.google.common.primitives.Ints:fromByteArray(byte[])" : [ "checkArgument", "fromBytes" ],
  "com.google.common.cache.LocalCache$Values:contains(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.primitives.Booleans$BooleanArrayAsList:toString()" : [ "size" ],
  "com.google.common.collect.ImmutableSet$Indexed:spliterator()" : [ "indexed" ],
  "com.google.common.collect.Lists:computeArrayListCapacity(int)" : [ "checkNonnegative", "saturatedCast" ],
  "com.google.common.hash.Hashing:combineUnordered(java.lang.Iterable)" : [ "checkArgument", "fromBytesNoCopy" ],
  "com.google.common.primitives.ImmutableIntArray:hashCode()" : [ "hashCode" ],
  "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher:putBytes(java.nio.ByteBuffer)" : [ "write" ],
  "com.google.common.base.CharMatcher$None:and(com.google.common.base.CharMatcher)" : [ "checkNotNull" ],
  "com.google.common.io.BaseEncoding$Alphabet:decodabetFor(char[])" : [ "checkArgument" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:remove(java.lang.Object,int,java.lang.Object)" : [ "preWriteCleanup", "equivalent", "valueEquivalence" ],
  "com.google.common.collect.ForwardingSortedMultiset:standardSubMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)" : [ "tailMultiset" ],
  "com.google.common.base.Stopwatch:start()" : [ "checkState" ],
  "com.google.common.graph.Graphs:checkPositive(int)" : [ "checkArgument" ],
  "com.google.common.cache.LocalCache$EntryFactory$1:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.collect.LinkedListMultimap:createKeys()" : [ "<init>" ],
  "com.google.common.base.CharMatcher$Invisible:<init>()" : [ "<init>" ],
  "com.google.common.io.Files:fileTraverser()" : [ "forTree" ],
  "com.google.common.collect.ImmutableAsList:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.AbstractSortedKeySortedSetMultimap:asMap()" : [ "asMap" ],
  "com.google.common.collect.Maps:filterEntries(java.util.SortedMap,com.google.common.base.Predicate)" : [ "<init>", "checkNotNull", "filterFiltered" ],
  "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:<init>()" : [ "builder" ],
  "com.google.common.collect.Collections2$FilteredCollection:spliterator()" : [ "filter" ],
  "com.google.common.util.concurrent.ListeningExecutorService:submit(java.util.concurrent.Callable)" : [ "submit" ],
  "com.google.common.collect.ArrayListMultimap:<init>(com.google.common.collect.Multimap)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractService$IsStoppedGuard:isSatisfied()" : [ "state" ],
  "com.google.common.collect.Multimaps$UnmodifiableMultimap:forEach(java.util.function.BiConsumer)" : [ "forEach", "checkNotNull" ],
  "com.google.common.util.concurrent.AtomicDouble:doubleValue()" : [ "get" ],
  "com.google.common.collect.ForwardingConcurrentMap:putIfAbsent(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.CollectSpliterators:flatMapToInt(java.util.Spliterator,java.util.function.Function,int,long)" : [ "<init>", "checkArgument", "checkNotNull" ],
  "com.google.common.cache.LocalCache$AccessQueue:poll()" : [ "remove" ],
  "com.google.common.collect.ImmutableListMultimap:toImmutableListMultimap(java.util.function.Function,java.util.function.Function)" : [ "toImmutableListMultimap" ],
  "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Comparator,java.util.Collection)" : [ "copyOf" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:canDecode(java.lang.CharSequence)" : [ "canDecode", "checkNotNull", "trimTrailingPadding", "isValidPaddingStartPosition" ],
  "com.google.common.cache.LocalCache$WriteQueue:clear()" : [ "nullifyWriteOrder" ],
  "com.google.common.collect.TreeRangeMap:get(java.lang.Comparable)" : [ "getEntry" ],
  "com.google.common.graph.StandardNetwork:successors(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.collect.Iterators:filter(java.util.Iterator,java.lang.Class)" : [ "filter", "instanceOf" ],
  "com.google.common.collect.ContiguousSet:create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)" : [ "<init>", "checkNotNull", "hasLowerBound", "intersection", "minValue", "hasUpperBound", "maxValue", "isEmpty", "compareOrThrow" ],
  "com.google.common.collect.ImmutableBiMap$SerializedForm:makeBuilder(int)" : [ "<init>" ],
  "com.google.common.collect.ReverseNaturalOrdering:<init>()" : [ "<init>" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:put(com.google.common.collect.Range,java.lang.Object)" : [ "put", "checkArgument", "encloses" ],
  "com.google.common.collect.FluentIterable:filter(com.google.common.base.Predicate)" : [ "filter", "from", "getDelegate" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.List)" : [ "checkAcquiredLock" ],
  "com.google.common.collect.ConcurrentHashMultiset:contains(java.lang.Object)" : [ "contains" ],
  "com.google.common.collect.CompactLinkedHashMap:link(int)" : [ "requireLinks" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:tailSet(java.lang.Object,boolean)" : [ "navigableSet", "delegate" ],
  "com.google.common.collect.MapMakerInternalMap$Values:size()" : [ "size" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:column(java.lang.Object)" : [ "map", "delegate" ],
  "com.google.common.collect.ImmutableMap:copyOfEnumMap(java.util.EnumMap)" : [ "checkEntryNotNull", "asImmutable" ],
  "com.google.common.collect.ImmutableSet$Indexed:copyIntoArray(java.lang.Object[],int)" : [ "copyIntoArray" ],
  "com.google.common.collect.ArrayTable:<init>(com.google.common.collect.Table)" : [ "<init>", "putAll" ],
  "com.google.common.util.concurrent.ForwardingListeningExecutorService:submit(java.lang.Runnable)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:removeAll(java.util.Collection)" : [ "removeAll" ],
  "com.google.common.math.IntMath:saturatedSubtract(int,int)" : [ "saturatedCast" ],
  "com.google.common.math.StatsAccumulator:sampleStandardDeviation()" : [ "sampleVariance" ],
  "com.google.common.base.Functions$FunctionForMapNoDefault:apply(java.lang.Object)" : [ "checkArgument", "uncheckedCastNullableTToT" ],
  "com.google.common.io.AppendableWriter:write(char[],int,int)" : [ "checkNotClosed" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:getGrandparentIndex(int)" : [ "getParentIndex" ],
  "com.google.common.reflect.Invokable$ConstructorInvokable:getGenericParameterTypes()" : [ "mayNeedHiddenThis" ],
  "com.google.common.util.concurrent.Futures:submitAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor)" : [ "create" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:containsValue(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.LinkedListMultimap:keySet()" : [ "keySet" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset$AvlNode:ceiling(java.util.Comparator,java.lang.Object)" : [ "getElement", "firstNonNull" ],
  "com.google.common.io.ByteSink:write(byte[])" : [ "checkNotNull", "rethrow", "create", "close", "register" ],
  "com.google.common.collect.ForwardingBlockingDeque:offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.base.Splitter:fixedLength(int)" : [ "<init>", "checkArgument" ],
  "com.google.common.collect.ImmutableSortedMultiset:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMap:<init>(java.util.Map,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ForwardingMultiset:standardSetCount(java.lang.Object,int)" : [ "setCountImpl" ],
  "com.google.common.cache.LocalCache:remove(java.lang.Object,java.lang.Object)" : [ "remove", "hash", "segmentFor" ],
  "com.google.common.base.Converter:andThen(com.google.common.base.Converter)" : [ "doAndThen" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:retainAll(java.util.Collection)" : [ "retainAll" ],
  "com.google.common.hash.Hashing:hmacSha1(byte[])" : [ "hmacSha1", "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:add(int,java.lang.Object)" : [ "getListDelegate" ],
  "com.google.common.collect.Sets$PowerSet:iterator()" : [ "size" ],
  "com.google.common.collect.HashMultiset:size()" : [ "size" ],
  "com.google.common.collect.ImmutableSortedMultiset:copyOf(java.lang.Iterable)" : [ "copyOf", "natural" ],
  "com.google.common.collect.AbstractTable:contains(java.lang.Object,java.lang.Object)" : [ "safeGet", "safeContainsKey" ],
  "com.google.common.graph.UndirectedGraphConnections:predecessors()" : [ "adjacentNodes" ],
  "com.google.common.reflect.TypeToken:method(java.lang.reflect.Method)" : [ "checkArgument", "someRawTypeIsSubclassOf" ],
  "com.google.common.base.Predicates:or(java.lang.Iterable)" : [ "defensiveCopy" ],
  "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:removeExact(java.lang.Object)" : [ "removeAt" ],
  "com.google.common.io.TempFileCreator$JavaNioCreator:userPermissions()" : [ "of", "value" ],
  "com.google.common.base.Suppliers:compose(com.google.common.base.Function,com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.collect.Sets$PowerSet:hashCode()" : [ "hashCode", "keySet" ],
  "com.google.common.collect.Collections2$FilteredCollection:iterator()" : [ "filter" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:remove()" : [ "removeIfEmpty" ],
  "com.google.common.collect.MapMakerInternalMap$HashIterator:nextInTable()" : [ "nextInChain" ],
  "com.google.common.collect.CompactHashMap:convertToHashFloodingResistantImplementation()" : [ "createHashFloodingResistantDelegate", "hashTableMask", "firstEntryIndex", "getSuccessor", "key", "value", "incrementModCount" ],
  "com.google.common.collect.Maps:filterValues(com.google.common.collect.BiMap,com.google.common.base.Predicate)" : [ "filterEntries", "valuePredicateOnEntries" ],
  "com.google.common.collect.Sets:newTreeSet(java.lang.Iterable)" : [ "newTreeSet", "addAll" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:markReady()" : [ "enter", "servicesByState", "leave", "newArrayList" ],
  "com.google.common.cache.LocalCache$ComputingValueReference:<init>(com.google.common.cache.LocalCache$ValueReference)" : [ "<init>" ],
  "com.google.common.cache.LocalCache$Segment:removeEntry(com.google.common.cache.ReferenceEntry,int,com.google.common.cache.RemovalCause)" : [ "removeValueFromChain" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:add(java.lang.Object)" : [ "getDelegateListIterator" ],
  "com.google.common.collect.MapMakerInternalMap:putIfAbsent(java.lang.Object,java.lang.Object)" : [ "checkNotNull", "hash", "segmentFor", "put" ],
  "com.google.common.hash.HashingOutputStream:<init>(com.google.common.hash.HashFunction,java.io.OutputStream)" : [ "checkNotNull" ],
  "com.google.common.math.Stats:of(java.util.Iterator)" : [ "<init>", "addAll", "snapshot" ],
  "com.google.common.collect.Maps$KeySet:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap:lastKey()" : [ "sortedMap", "uncheckedCastNullableTToT" ],
  "com.google.common.primitives.UnsignedBytes:sort(byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "flip" ],
  "com.google.common.reflect.MutableTypeToInstanceMap:<init>()" : [ "<init>", "newHashMap" ],
  "com.google.common.collect.TreeMultiset:size()" : [ "saturatedCast", "aggregateForEntries" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:createDescendingSet()" : [ "<init>" ],
  "com.google.common.graph.AbstractDirectedNetworkConnections$1:iterator()" : [ "iterator", "union", "concat", "unmodifiableIterator" ],
  "com.google.common.collect.Ordering:greatestOf(java.lang.Iterable,int)" : [ "reverse", "leastOf" ],
  "com.google.common.collect.Tables$UnmodifiableRowSortedMap:delegate()" : [ "delegate" ],
  "com.google.common.primitives.UnsignedLong:compareTo(com.google.common.primitives.UnsignedLong)" : [ "checkNotNull", "compare" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:last()" : [ "getSortedSetDelegate" ],
  "com.google.common.collect.Multisets:retainOccurrencesImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "checkNotNull" ],
  "com.google.common.primitives.ImmutableDoubleArray:hashCode()" : [ "hashCode" ],
  "com.google.common.io.ByteSource$ConcatenatedByteSource:sizeIfKnown()" : [ "sizeIfKnown", "absent", "of" ],
  "com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue:<init>(java.lang.Object,java.util.concurrent.Executor)" : [ "checkNotNull", "run", "newArrayDeque" ],
  "com.google.common.collect.RegularImmutableMap:removeDuplicates(java.util.Map$Entry[],int,int,java.util.IdentityHashMap)" : [ "createEntryArray" ],
  "com.google.common.collect.ForwardingNavigableSet:floor(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.EnumBiMap:writeObject(java.io.ObjectOutputStream)" : [ "writeMap" ],
  "com.google.common.collect.ForwardingSortedSet:first()" : [ "delegate" ],
  "com.google.common.hash.AbstractCompositeHashFunction:newHasher()" : [ "fromHashers" ],
  "com.google.common.math.BigIntegerMath:listProduct(java.util.List)" : [ "listProduct" ],
  "com.google.common.collect.Iterables:transform(java.lang.Iterable,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.reflect.Types$JavaVersion$2:usedInGenericType(java.lang.reflect.Type)" : [ "checkNotNull" ],
  "com.google.common.escape.Escapers:computeReplacement(com.google.common.escape.CharEscaper,char)" : [ "stringOrNull" ],
  "com.google.common.collect.AbstractNavigableMap:descendingKeySet()" : [ "descendingMap" ],
  "com.google.common.collect.HashBasedTable:rowMap()" : [ "rowMap" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner2:<init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture)" : [ "of" ],
  "com.google.common.collect.Multisets:unmodifiableMultiset(com.google.common.collect.Multiset)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ArrayListMultimap:create(com.google.common.collect.Multimap)" : [ "<init>" ],
  "com.google.common.collect.Multimaps$TransformedEntriesMultimap:createAsMap()" : [ "transformEntries" ],
  "com.google.common.collect.Maps:containsKeyImpl(java.util.Map,java.lang.Object)" : [ "contains", "keyIterator" ],
  "com.google.common.collect.AbstractSetMultimap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.graph.AbstractDirectedNetworkConnections:<init>(java.util.Map,java.util.Map,int)" : [ "checkNotNull", "checkNonNegative", "checkState" ],
  "com.google.common.io.CharSource:lines()" : [ "openBufferedStream" ],
  "com.google.common.collect.Synchronized$SynchronizedSet:hashCode()" : [ "delegate" ],
  "com.google.common.base.Splitter$SplittingIterator:<init>(com.google.common.base.Splitter,java.lang.CharSequence)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap:removeAll(java.lang.Object)" : [ "createUnmodifiableEmptyCollection", "unmodifiableCollectionSubclass" ],
  "com.google.common.collect.ImmutableSortedMap:higherEntry(java.lang.Object)" : [ "tailMap", "firstEntry" ],
  "com.google.common.collect.RegularImmutableSet:createAsList()" : [ "<init>", "of" ],
  "com.google.common.io.ByteSource$SlicedByteSource:isEmpty()" : [ "isEmpty" ],
  "com.google.common.cache.AbstractCache$SimpleStatsCounter:incrementBy(com.google.common.cache.AbstractCache$StatsCounter)" : [ "hitCount", "missCount", "loadSuccessCount", "loadExceptionCount", "totalLoadTime", "evictionCount" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:hashSetValues()" : [ "hashSetValues" ],
  "com.google.common.math.Quantiles:movePivotToStartOfSlice(double[],int,int)" : [ "swap" ],
  "com.google.common.util.concurrent.Striped:lazyWeakReadWriteLock(int)" : [ "<init>" ],
  "com.google.common.net.InetAddresses:increment(java.net.InetAddress)" : [ "checkArgument" ],
  "com.google.common.io.BaseEncoding:ignoringReader(java.io.Reader,java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeMultiset$AvlNode:recomputeHeight()" : [ "height" ],
  "com.google.common.hash.Hashing:murmur3_128(int)" : [ "<init>" ],
  "com.google.common.net.InetAddresses:getEmbeddedIPv4ClientAddress(java.net.Inet6Address)" : [ "isCompatIPv4Address", "getCompatIPv4Address", "is6to4Address", "get6to4IPv4Address", "isTeredoAddress", "getTeredoInfo", "getClient", "toAddrString" ],
  "com.google.common.collect.CollectCollectors:flatteningToImmutableListMultimap(java.util.function.Function,java.util.function.Function)" : [ "checkNotNull", "flatteningToMultimap", "linkedHashKeys", "arrayListValues", "copyOf" ],
  "com.google.common.collect.Collections2:orderedPermutations(java.lang.Iterable)" : [ "orderedPermutations", "natural" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:hashCode()" : [ "delegate" ],
  "com.google.common.graph.StandardValueGraph:checkedConnections(java.lang.Object)" : [ "get", "checkNotNull" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:ceilingEntry(java.lang.Object)" : [ "transformEntry", "fromMap" ],
  "com.google.common.base.Predicates:or(com.google.common.base.Predicate,com.google.common.base.Predicate)" : [ "asList", "checkNotNull" ],
  "com.google.common.collect.ImmutableMultimap$EntryCollection:<init>(com.google.common.collect.ImmutableMultimap)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSet$Builder:combine(com.google.common.collect.ImmutableSet$Builder)" : [ "copyIfNecessary" ],
  "com.google.common.collect.SingletonImmutableTable:createCellSet()" : [ "of" ],
  "com.google.common.collect.EnumBiMap:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.cache.CacheBuilderSpec$RecordStatsParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)" : [ "checkArgument" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:insertInHashTable(java.lang.Object)" : [ "<init>", "smear", "ensureTableCapacity", "add" ],
  "com.google.common.collect.ImmutableSortedSet$Builder:addAll(java.util.Iterator)" : [ "addAll" ],
  "com.google.common.math.LongMath:pow(long,int)" : [ "checkNonNegative" ],
  "com.google.common.collect.Maps$Values:size()" : [ "map" ],
  "com.google.common.collect.DescendingImmutableSortedSet:<init>(com.google.common.collect.ImmutableSortedSet)" : [ "<init>", "from", "comparator", "reverse" ],
  "com.google.common.collect.AbstractMultimap$EntrySet:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet:iterator()" : [ "iterator" ],
  "com.google.common.collect.ForwardingNavigableSet:pollLast()" : [ "delegate" ],
  "com.google.common.cache.CacheLoader$FunctionToCacheLoader:load(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.graph.StandardMutableNetwork:addNode(java.lang.Object)" : [ "checkNotNull", "addNodeInternal" ],
  "com.google.common.hash.AbstractStreamingHasher:<init>(int)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:remove(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:<init>(com.google.common.cache.LocalCache$ValueReference)" : [ "unset", "createUnstarted", "create" ],
  "com.google.common.primitives.Floats$FloatArrayAsList:subList(int,int)" : [ "<init>", "size", "checkPositionIndexes" ],
  "com.google.common.collect.RegularImmutableSortedSet:headSetImpl(java.lang.Object,boolean)" : [ "getSubSet", "headIndex" ],
  "com.google.common.collect.MapMaker:setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength)" : [ "checkState", "checkNotNull" ],
  "com.google.common.collect.ImmutableTable:get(java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.collect.ConcurrentHashMultiset:toArray(java.lang.Object[])" : [ "snapshot" ],
  "com.google.common.collect.TopKSelector:offerAll(java.util.Iterator)" : [ "offer" ],
  "com.google.common.util.concurrent.Striped:readWriteLock(int)" : [ "custom" ],
  "com.google.common.collect.StandardTable$Row:put(java.lang.Object,java.lang.Object)" : [ "put", "checkNotNull" ],
  "com.google.common.primitives.UnsignedLong:plus(com.google.common.primitives.UnsignedLong)" : [ "fromLongBits", "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:remove(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Lists$ReverseList:get(int)" : [ "reverseIndex" ],
  "com.google.common.collect.ForwardingBlockingDeque:takeLast()" : [ "delegate" ],
  "com.google.common.util.concurrent.WrappingExecutorService:invokeAll(java.util.Collection)" : [ "wrapTasks" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:delegate()" : [ "delegate" ],
  "com.google.common.net.MediaType:normalizeToken(java.lang.String)" : [ "checkArgument", "matchesAllOf", "toLowerCase" ],
  "com.google.common.hash.HashingOutputStream:write(byte[],int,int)" : [ "putBytes" ],
  "com.google.common.collect.ForwardingSortedSetMultimap:valueComparator()" : [ "delegate" ],
  "com.google.common.collect.HashMultiset:entrySet()" : [ "entrySet" ],
  "com.google.common.cache.LocalCache$WriteQueue:poll()" : [ "remove" ],
  "com.google.common.collect.MutableClassToInstanceMap$1:setValue(java.lang.Object)" : [ "setValue" ],
  "com.google.common.math.BigIntegerMath:isPowerOfTwo(java.math.BigInteger)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ClosingFuture$CloseableList:applyClosingFunction(com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.lang.Object)" : [ "immediateFuture", "add", "directExecutor" ],
  "com.google.common.collect.NullsLastOrdering:reverse()" : [ "reverse", "nullsFirst" ],
  "com.google.common.collect.GeneralRange:equals(java.lang.Object)" : [ "getLowerBoundType", "getUpperBoundType", "getLowerEndpoint", "getUpperEndpoint", "equal" ],
  "com.google.common.collect.ImmutableSortedSet:toImmutableSortedSet(java.util.Comparator)" : [ "toImmutableSortedSet" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:take()" : [ "delegate" ],
  "com.google.common.graph.AbstractNetwork:edgeConnectingOrNull(com.google.common.graph.EndpointPair)" : [ "edgeConnectingOrNull", "validateEndpoints", "nodeU", "nodeV" ],
  "com.google.common.collect.ImmutableSortedMap:subMap(java.lang.Object,java.lang.Object)" : [ "subMap" ],
  "com.google.common.collect.ImmutableSortedMap:fromEntries(java.util.Comparator,boolean,java.lang.Iterable)" : [ "fromEntries", "toArray" ],
  "com.google.common.collect.Maps$NavigableAsMapView:subMap(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "asMap" ],
  "com.google.common.collect.ImmutableMap$Builder:build()" : [ "buildOrThrow" ],
  "com.google.common.collect.MultimapBuilder$ArrayListSupplier:<init>(int)" : [ "checkNonnegative" ],
  "com.google.common.collect.Maps$6:tailSet(java.lang.Object,boolean)" : [ "tailSet" ],
  "com.google.common.cache.CacheLoader$FunctionToCacheLoader:<init>(com.google.common.base.Function)" : [ "<init>", "checkNotNull" ],
  "com.google.common.util.concurrent.Futures:withTimeout(com.google.common.util.concurrent.ListenableFuture,java.time.Duration,java.util.concurrent.ScheduledExecutorService)" : [ "withTimeout", "toNanosSaturated" ],
  "com.google.common.collect.ImmutableTable:row(java.lang.Object)" : [ "checkNotNull", "firstNonNull", "rowMap", "of" ],
  "com.google.common.reflect.ImmutableTypeToInstanceMap:getInstance(java.lang.Class)" : [ "trustedGet", "of" ],
  "com.google.common.collect.ConcurrentHashMultiset:create(java.lang.Iterable)" : [ "create", "addAll" ],
  "com.google.common.collect.TreeMultiset$AvlNode:recomputeMultiset()" : [ "distinctElements", "totalCount" ],
  "com.google.common.collect.ForwardingNavigableSet:headSet(java.lang.Object,boolean)" : [ "delegate" ],
  "com.google.common.collect.ForwardingSortedSet:standardContains(java.lang.Object)" : [ "tailSet", "unsafeCompare", "comparator" ],
  "com.google.common.graph.ForwardingValueGraph:successors(java.lang.Object)" : [ "successors" ],
  "com.google.common.collect.CompactLinkedHashMap:moveLastEntry(int,int)" : [ "moveLastEntry", "setSucceeds", "getPredecessor", "getSuccessor", "setLink" ],
  "com.google.common.collect.Iterators:find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:headMap(java.lang.Object,boolean)" : [ "sortedMap" ],
  "com.google.common.math.DoubleMath:roundIntermediate(double,java.math.RoundingMode)" : [ "isFinite", "checkRoundingUnnecessary", "isMathematicalInteger" ],
  "com.google.common.collect.ExplicitOrdering:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.AbstractMultiset:add(java.lang.Object)" : [ "add" ],
  "com.google.common.collect.ForwardingCollection:addAll(java.util.Collection)" : [ "delegate" ],
  "com.google.common.graph.Traverser:depthFirstPostOrder(java.lang.Object)" : [ "depthFirstPostOrder", "of" ],
  "com.google.common.collect.Collections2$FilteredCollection:remove(java.lang.Object)" : [ "contains" ],
  "com.google.common.primitives.Chars$CharArrayAsList:hashCode()" : [ "hashCode" ],
  "com.google.common.base.Joiner:appendTo(java.lang.Appendable,java.util.Iterator)" : [ "checkNotNull", "toString" ],
  "com.google.common.collect.CollectSpliterators:map(java.util.Spliterator,java.util.function.Function)" : [ "checkNotNull" ],
  "com.google.common.io.CharSource:isEmpty()" : [ "lengthIfKnown", "create", "register", "rethrow", "close" ],
  "com.google.common.util.concurrent.AbstractFuture:setFuture(com.google.common.util.concurrent.ListenableFuture)" : [ "<init>", "checkNotNull", "getFutureValue", "complete" ],
  "com.google.common.collect.HashBasedTable:cellSet()" : [ "cellSet" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:putIfAbsent(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.io.CharStreams$NullWriter:write(java.lang.String,int,int)" : [ "checkPositionIndexes" ],
  "com.google.common.io.MoreFiles:fileTraverser()" : [ "forTree", "fileTreeChildren" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:last()" : [ "lastKey" ],
  "com.google.common.collect.ForwardingNavigableMap:higherEntry(java.lang.Object)" : [ "delegate" ],
  "com.google.common.io.CharStreams:copyReaderToWriter(java.io.Reader,java.io.Writer)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingMapEntry:standardToString()" : [ "getKey", "getValue" ],
  "com.google.common.collect.ImmutableSetMultimap:valueComparator()" : [ "comparator" ],
  "com.google.common.graph.NetworkBuilder:build()" : [ "<init>" ],
  "com.google.common.cache.LocalCache$EntryFactory$4:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.primitives.Ints:reverse(int[])" : [ "reverse", "checkNotNull" ],
  "com.google.common.cache.CacheBuilder:getValueStrength()" : [ "firstNonNull" ],
  "com.google.common.collect.ReverseOrdering:min(java.lang.Iterable)" : [ "max" ],
  "com.google.common.collect.Maps$TransformedEntriesMap:values()" : [ "<init>" ],
  "com.google.common.cache.LocalCache:refresh(java.lang.Object)" : [ "refresh", "hash", "checkNotNull", "segmentFor" ],
  "com.google.common.collect.HashBiMap$Inverse:inverse()" : [ "forward" ],
  "com.google.common.collect.LinkedListMultimap:remove(java.lang.Object,java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:<init>(java.util.NavigableMap)" : [ "all" ],
  "com.google.common.graph.AbstractUndirectedNetworkConnections:addOutEdge(java.lang.Object,java.lang.Object)" : [ "checkState" ],
  "com.google.common.collect.RegularImmutableMultiset:<init>(com.google.common.collect.Multisets$ImmutableEntry[],com.google.common.collect.Multisets$ImmutableEntry[],int,int,com.google.common.collect.ImmutableSet)" : [ "<init>" ],
  "com.google.common.collect.Lists$TwoPlusArrayList:size()" : [ "saturatedAdd" ],
  "com.google.common.collect.ArrayListMultimap:create(int,int)" : [ "<init>" ],
  "com.google.common.io.CharStreams:readLines(java.lang.Readable)" : [ "<init>", "readLine" ],
  "com.google.common.primitives.Booleans$BooleanArrayAsList:subList(int,int)" : [ "<init>", "size", "checkPositionIndexes" ],
  "com.google.common.collect.CompactLinkedHashMap:<init>(int)" : [ "<init>" ],
  "com.google.common.net.MediaType:withoutParameters()" : [ "create" ],
  "com.google.common.primitives.ImmutableDoubleArray:indexOf(double)" : [ "areEqual" ],
  "com.google.common.primitives.UnsignedInts:toString(int)" : [ "toString" ],
  "com.google.common.hash.AbstractStreamingHasher:putShort(short)" : [ "munchIfFull" ],
  "com.google.common.collect.ExplicitOrdering:rank(java.lang.Object)" : [ "<init>" ],
  "com.google.common.cache.LocalCache$Segment:cleanUp()" : [ "runLockedCleanup", "runUnlockedCleanup" ],
  "com.google.common.collect.MinMaxPriorityQueue:offer(java.lang.Object)" : [ "checkNotNull", "growIfNeeded", "heapForIndex", "bubbleUp", "pollLast" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:offer(java.lang.Object,long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:lowerEntry(java.lang.Object)" : [ "transformEntry", "fromMap" ],
  "com.google.common.collect.AbstractMapBasedMultiset:add(java.lang.Object,int)" : [ "<init>", "add", "count", "checkArgument", "get" ],
  "com.google.common.io.BaseEncoding$Base16Encoding:decodeTo(byte[],java.lang.CharSequence)" : [ "<init>", "checkNotNull", "decode" ],
  "com.google.common.util.concurrent.RateLimiter:tryAcquire(java.time.Duration)" : [ "tryAcquire", "toNanosSaturated" ],
  "com.google.common.collect.AbstractMapBasedMultimap$Itr:next()" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.collect.CompactLinkedHashSet:<init>()" : [ "<init>" ],
  "com.google.common.base.JdkPattern:<init>(java.util.regex.Pattern)" : [ "checkNotNull" ],
  "com.google.common.reflect.ClassPath$ResourceInfo:asCharSource(java.nio.charset.Charset)" : [ "asCharSource", "url" ],
  "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator:next()" : [ "get" ],
  "com.google.common.util.concurrent.ForwardingExecutorService:<init>()" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedAsList:lastIndexOf(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:subList(int,int)" : [ "subArray", "asList" ],
  "com.google.common.collect.StandardTable$ColumnKeySet:iterator()" : [ "createColumnKeyIterator" ],
  "com.google.common.collect.LinkedHashMultimap$ValueEntry:matchesValue(java.lang.Object,int)" : [ "equal" ],
  "com.google.common.collect.Sets:complementOf(java.util.Collection,java.lang.Class)" : [ "checkNotNull", "makeComplementByHand" ],
  "com.google.common.collect.Maps$SortedMapDifferenceImpl:<init>(java.util.SortedMap,java.util.SortedMap,java.util.SortedMap,java.util.SortedMap)" : [ "<init>" ],
  "com.google.common.collect.Maps$UnmodifiableEntries:iterator()" : [ "unmodifiableEntryIterator" ],
  "com.google.common.collect.ImmutableMap$Builder:ensureCapacity(int)" : [ "expandedCapacity" ],
  "com.google.common.collect.AbstractBiMap:makeInverse(java.util.Map)" : [ "<init>" ],
  "com.google.common.collect.Maps$DescendingMap:comparator()" : [ "natural", "reverse" ],
  "com.google.common.io.MoreFiles$PathByteSource:size()" : [ "readAttributes" ],
  "com.google.common.graph.StandardMutableNetwork:removeEdge(java.lang.Object)" : [ "checkNotNull", "get", "remove" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:isEmpty()" : [ "delegate" ],
  "com.google.common.primitives.Bytes$ByteArrayAsList:toString()" : [ "size" ],
  "com.google.common.math.StatsAccumulator:addAll(java.util.stream.IntStream)" : [ "<init>", "addAll", "add" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:subMap(java.lang.Object,java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.Maps$KeySet:iterator()" : [ "keyIterator", "map" ],
  "com.google.common.collect.StandardTable$Column:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.collect.HashBasedTable:create(com.google.common.collect.Table)" : [ "create" ],
  "com.google.common.collect.Synchronized:list(java.util.List,java.lang.Object)" : [ "<init>" ],
  "com.google.common.io.CharSource:wrap(java.lang.CharSequence)" : [ "<init>" ],
  "com.google.common.collect.RegularContiguousSet:hashCode()" : [ "hashCodeImpl" ],
  "com.google.common.collect.Maps$UnmodifiableBiMap:<init>(com.google.common.collect.BiMap,com.google.common.collect.BiMap)" : [ "<init>" ],
  "com.google.common.io.CharSequenceReader:reset()" : [ "checkOpen" ],
  "com.google.common.primitives.Doubles$DoubleArrayAsList:<init>(double[])" : [ "<init>" ],
  "com.google.common.net.InternetDomainName:isTopDomainUnderRegistrySuffix()" : [ "registrySuffixIndex" ],
  "com.google.common.graph.AbstractNetwork:edgeConnecting(java.lang.Object,java.lang.Object)" : [ "edgeConnectingOrNull" ],
  "com.google.common.collect.ForwardingMap:isEmpty()" : [ "delegate" ],
  "com.google.common.graph.StandardNetwork:outEdges(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.primitives.Doubles:rotate(double[],int)" : [ "rotate" ],
  "com.google.common.collect.RegularImmutableMap:createEntrySet()" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:setWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference)" : [ "castForTesting" ],
  "com.google.common.collect.Synchronized$SynchronizedList:set(int,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Tables:unmodifiableTable(com.google.common.collect.Table)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:floor(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Multimaps:unmodifiableMultimap(com.google.common.collect.Multimap)" : [ "<init>" ],
  "com.google.common.collect.CompactLinkedHashMap:insertEntry(int,java.lang.Object,java.lang.Object,int,int)" : [ "insertEntry", "setSucceeds" ],
  "com.google.common.escape.CharEscaperBuilder:addEscape(char,java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.eventbus.EventBus:<init>(java.lang.String)" : [ "<init>", "directExecutor", "perThreadDispatchQueue" ],
  "com.google.common.collect.Synchronized$SynchronizedEntry:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.TreeMultimap:readObject(java.io.ObjectInputStream)" : [ "populateMultimap", "checkNotNull" ],
  "com.google.common.collect.MapMakerInternalMap$Strength$2:defaultEquivalence()" : [ "identity" ],
  "com.google.common.collect.ForwardingCollection:standardContains(java.lang.Object)" : [ "contains", "iterator" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:of()" : [ "<init>" ],
  "com.google.common.collect.ArrayTable:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.reflect.TypeToken:canonicalizeWildcardsInType(java.lang.reflect.Type)" : [ "newArrayType" ],
  "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet:<init>(java.lang.Object)" : [ "<init>" ],
  "com.google.common.graph.IncidentEdgeSet:size()" : [ "successors" ],
  "com.google.common.base.CharMatcher$None:lastIndexIn(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ClosingFuture$CloseableList:applyAsyncClosingFunction(com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.lang.Object)" : [ "add", "directExecutor" ],
  "com.google.common.collect.Maps$DescendingMap:navigableKeySet()" : [ "<init>" ],
  "com.google.common.collect.CompactHashSet:entry(int)" : [ "requireEntries" ],
  "com.google.common.base.Strings:nullToEmpty(java.lang.String)" : [ "nullToEmpty" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:keySet()" : [ "createKeySet" ],
  "com.google.common.hash.AbstractCompositeHashFunction$1:putChar(char)" : [ "putChar" ],
  "com.google.common.collect.ComparatorOrdering:<init>(java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.EvictingQueue:addAll(java.util.Collection)" : [ "addAll", "skip" ],
  "com.google.common.cache.LocalCache$WeightedSoftValueReference:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry,int)" : [ "<init>" ],
  "com.google.common.io.CharSource$ConcatenatedCharSource:<init>(java.lang.Iterable)" : [ "<init>", "checkNotNull" ],
  "com.google.common.util.concurrent.AtomicDouble:addAndGet(double)" : [ "accumulateAndGet" ],
  "com.google.common.primitives.ImmutableLongArray:<init>(long[])" : [ "<init>" ],
  "com.google.common.reflect.TypeResolver$TypeTable:resolve(java.lang.reflect.TypeVariable)" : [ "resolveInternal" ],
  "com.google.common.hash.Hasher:putDouble(double)" : [ "putDouble" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:last()" : [ "find", "unfiltered" ],
  "com.google.common.collect.Maps$6:headSet(java.lang.Object,boolean)" : [ "headSet" ],
  "com.google.common.collect.MapMakerInternalMap:putAll(java.util.Map)" : [ "put" ],
  "com.google.common.base.Suppliers$MemoizingSupplier:<init>(com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedList:delegate()" : [ "delegate" ],
  "com.google.common.collect.Lists$ReverseList:subList(int,int)" : [ "checkPositionIndexes", "size", "reverse", "reversePosition" ],
  "com.google.common.collect.SparseImmutableTable:<init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet)" : [ "<init>", "indexMap", "put", "copyOf", "buildOrThrow", "newLinkedHashMap" ],
  "com.google.common.collect.ForwardingNavigableMap:standardFirstEntry()" : [ "getFirst" ],
  "com.google.common.util.concurrent.AbstractService:enqueueStartingEvent()" : [ "enqueue" ],
  "com.google.common.base.Utf8:encodedLengthGeneral(java.lang.CharSequence,int)" : [ "unpairedSurrogateMsg" ],
  "com.google.common.primitives.ImmutableIntArray:copyOf(java.util.Collection)" : [ "<init>", "toArray" ],
  "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.util.concurrent.Monitor:enterWhen(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)" : [ "toSafeNanos", "initNanoTime", "awaitNanos", "remainingNanos", "signalNextWaiter" ],
  "com.google.common.hash.HashCode:hashCode()" : [ "getBytesInternal" ],
  "com.google.common.collect.Maps:filterValues(java.util.SortedMap,com.google.common.base.Predicate)" : [ "filterEntries", "valuePredicateOnEntries" ],
  "com.google.common.util.concurrent.AbstractService:awaitRunning(java.time.Duration)" : [ "awaitRunning" ],
  "com.google.common.collect.RegularImmutableMap:makeImmutable(java.util.Map$Entry,java.lang.Object,java.lang.Object)" : [ "<init>", "isReusable" ],
  "com.google.common.util.concurrent.AbstractService:state()" : [ "externalState" ],
  "com.google.common.hash.BloomFilter:toBloomFilter(com.google.common.hash.Funnel,long,double)" : [ "checkNotNull", "checkArgument", "put" ],
  "com.google.common.collect.ImmutableSortedAsList:indexOf(java.lang.Object)" : [ "delegateCollection" ],
  "com.google.common.collect.AbstractNavigableMap:navigableKeySet()" : [ "<init>" ],
  "com.google.common.io.ByteSource$ByteArrayByteSource:<init>(byte[],int,int)" : [ "<init>" ],
  "com.google.common.collect.CompactHashMap:writeObject(java.io.ObjectOutputStream)" : [ "size", "entrySetIterator" ],
  "com.google.common.collect.ImmutableTable:containsRow(java.lang.Object)" : [ "containsRow" ],
  "com.google.common.base.Predicates$NotPredicate:<init>(com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.io.CharStreams:skipFully(java.io.Reader,long)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:forEach(java.util.function.BiConsumer)" : [ "delegate" ],
  "com.google.common.collect.ForwardingNavigableSet:standardHigher(java.lang.Object)" : [ "getNext", "tailSet" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:headMap(java.lang.Object)" : [ "headMap" ],
  "com.google.common.collect.SingletonImmutableBiMap:<init>(java.lang.Object,java.lang.Object)" : [ "<init>", "checkEntryNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:tailMap(java.lang.Object,boolean)" : [ "sortedMap" ],
  "com.google.common.cache.ForwardingLoadingCache:refresh(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.CharMatcher$Whitespace:<init>()" : [ "<init>" ],
  "com.google.common.collect.Multimaps$UnmodifiableSetMultimap:delegate()" : [ "delegate" ],
  "com.google.common.collect.ImmutableTable$Builder:buildOrThrow()" : [ "<init>", "of", "getOnlyElement", "forCells" ],
  "com.google.common.collect.AbstractMultimap:containsValue(java.lang.Object)" : [ "asMap" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:lastIndexOf(java.lang.Object)" : [ "getListDelegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:ceiling(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.util.concurrent.Futures$CallbackListener:toString()" : [ "toString", "toStringHelper", "addValue" ],
  "com.google.common.collect.ConcurrentHashMultiset$EntrySet:toArray(java.lang.Object[])" : [ "snapshot" ],
  "com.google.common.collect.Maps$6:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "subSet" ],
  "com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm:readResolve()" : [ "entrySet" ],
  "com.google.common.eventbus.AsyncEventBus:<init>(java.util.concurrent.Executor)" : [ "<init>", "legacyAsync" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:subSet(java.lang.Object,java.lang.Object)" : [ "subSet" ],
  "com.google.common.collect.Maps:containsEntryImpl(java.util.Collection,java.lang.Object)" : [ "unmodifiableEntry" ],
  "com.google.common.reflect.Invokable:isAbstract()" : [ "getModifiers" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:addInEdge(java.lang.Object,java.lang.Object,boolean)" : [ "addOutEdge" ],
  "com.google.common.util.concurrent.ClosingFuture:transformAsync(com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor)" : [ "checkNotNull", "derive" ],
  "com.google.common.collect.FluentIterable:transform(com.google.common.base.Function)" : [ "transform", "from", "getDelegate" ],
  "com.google.common.collect.ImmutableBiMap$Builder:buildOrThrow()" : [ "of", "from", "onResultOf", "valueFunction", "fromEntryArray" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:hashCode()" : [ "delegate" ],
  "com.google.common.cache.CacheStats:toString()" : [ "toString", "toStringHelper", "add" ],
  "com.google.common.collect.ImmutableSortedMap:toImmutableSortedMap(java.util.Comparator,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" : [ "toImmutableSortedMap" ],
  "com.google.common.cache.CacheBuilder:toString()" : [ "toString", "toStringHelper", "add", "toLowerCase", "addValue" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:<init>(com.google.common.collect.ImmutableSet$RegularSetBuilderImpl)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable:reschedule()" : [ "<init>", "restoreInterruptIfIsInterruptedException", "notifyFailed", "immediateCancelledFuture", "initializeOrUpdateCancellationDelegate" ],
  "com.google.common.collect.HashBiMap:forcePut(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.collect.Synchronized$SynchronizedObject:<init>(java.lang.Object,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.ArrayTable$ArrayMap:containsKey(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.util.concurrent.AtomicDouble:intValue()" : [ "get" ],
  "com.google.common.collect.TableCollectors:toTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.Supplier)" : [ "toTable" ],
  "com.google.common.graph.Graphs:copyOf(com.google.common.graph.Network)" : [ "from", "expectedNodeCount", "expectedEdgeCount", "build", "nodeU", "nodeV" ],
  "com.google.common.collect.ArrayTable$ArrayMap:getKey(int)" : [ "keySet" ],
  "com.google.common.collect.ImmutableSortedMultiset:naturalOrder()" : [ "<init>", "natural" ],
  "com.google.common.util.concurrent.FakeTimeLimiter:newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull" ],
  "com.google.common.collect.CollectCollectors:toImmutableEnumMap(java.util.function.Function,java.util.function.Function)" : [ "checkNotNull", "toImmutableMap", "combine" ],
  "com.google.common.reflect.TypeToken$ClassSet:rawTypes()" : [ "classesOnly", "collectTypes", "copyOf" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:awaitStopped()" : [ "enterWhenUninterruptibly", "leave" ],
  "com.google.common.collect.ImmutableSortedMap:naturalOrder()" : [ "<init>", "natural" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:lastEntry()" : [ "getEntry" ],
  "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:add(int,java.lang.Object)" : [ "checkPositionIndex" ],
  "com.google.common.collect.Multimaps:newSetMultimap(java.util.Map,com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.cache.ForwardingLoadingCache:apply(java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:predecessorsMultiset()" : [ "getReference", "create" ],
  "com.google.common.collect.SortedMultisets$ElementSet:last()" : [ "multiset" ],
  "com.google.common.collect.ForwardingMultimap:values()" : [ "delegate" ],
  "com.google.common.collect.ImmutableRangeSet:subRangeSet(com.google.common.collect.Range)" : [ "<init>", "isEmpty", "span", "encloses", "isConnected", "intersectRanges", "of" ],
  "com.google.common.graph.ImmutableValueGraph:incidentEdges(java.lang.Object)" : [ "incidentEdges" ],
  "com.google.common.math.IntMath:floorPowerOfTwo(int)" : [ "checkPositive" ],
  "com.google.common.util.concurrent.Monitor:toSafeNanos(long,java.util.concurrent.TimeUnit)" : [ "constrainToRange" ],
  "com.google.common.collect.ImmutableMultimap$Builder:orderKeysBy(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.collect.Iterators:partition(java.util.Iterator,int)" : [ "partitionImpl" ],
  "com.google.common.collect.CompactHashMap:value(int)" : [ "requireValues" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMap:entrySet()" : [ "<init>" ],
  "com.google.common.collect.ImmutableList:reverse()" : [ "<init>" ],
  "com.google.common.util.concurrent.ExecutionList:add(java.lang.Runnable,java.util.concurrent.Executor)" : [ "<init>", "checkNotNull", "executeListener" ],
  "com.google.common.cache.LocalCache$WeakAccessEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>", "nullEntry" ],
  "com.google.common.collect.Maps:keyPredicateOnEntries(com.google.common.base.Predicate)" : [ "compose", "keyFunction" ],
  "com.google.common.util.concurrent.AbstractService:enqueueTerminatedEvent(com.google.common.util.concurrent.Service$State)" : [ "enqueue" ],
  "com.google.common.collect.Sets:newTreeSet(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.cache.AbstractLoadingCache:getAll(java.lang.Iterable)" : [ "copyOf", "newLinkedHashMap" ],
  "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:<init>(java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.CollectSpliterators:indexed(int,int,java.util.function.IntFunction)" : [ "indexed" ],
  "com.google.common.collect.SingletonImmutableTable:rowMap()" : [ "of" ],
  "com.google.common.collect.ImmutableSortedAsList:contains(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.collect.ConcurrentHashMultiset:remove(java.lang.Object,int)" : [ "count", "checkPositive", "safeGet" ],
  "com.google.common.collect.AbstractMultimap:valueSpliterator()" : [ "valueIterator" ],
  "com.google.common.collect.Maps$NavigableKeySet:lower(java.lang.Object)" : [ "map" ],
  "com.google.common.graph.Graphs:inducedSubgraph(com.google.common.graph.ValueGraph,java.lang.Iterable)" : [ "from", "expectedNodeCount", "build", "successors" ],
  "com.google.common.base.Predicates$ContainsPatternPredicate:<init>(com.google.common.base.CommonPattern)" : [ "checkNotNull" ],
  "com.google.common.collect.EvictingQueue:offer(java.lang.Object)" : [ "add" ],
  "com.google.common.escape.CharEscaperBuilder:toEscaper()" : [ "<init>", "toArray" ],
  "com.google.common.collect.Maps:unmodifiableNavigableMap(java.util.NavigableMap)" : [ "<init>", "checkNotNull" ],
  "com.google.common.graph.ValueGraphBuilder:expectedNodeCount(int)" : [ "of", "checkNonNegative" ],
  "com.google.common.collect.ImmutableRangeSet$Builder:<init>()" : [ "newArrayList" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:ignoreCase()" : [ "ignoreCase", "newInstance" ],
  "com.google.common.collect.StandardTable$RowMap$EntrySet:iterator()" : [ "asMapEntryIterator" ],
  "com.google.common.collect.RegularImmutableTable:<init>()" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractService:startAsync()" : [ "<init>", "enterIf", "enqueueStartingEvent", "restoreInterruptIfIsInterruptedException", "notifyFailed", "leave", "dispatchListenerEvents" ],
  "com.google.common.io.ByteSource$ByteArrayByteSource:sizeIfKnown()" : [ "of" ],
  "com.google.common.collect.LinkedListMultimap:hashCode()" : [ "hashCode" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "delegate", "transpose" ],
  "com.google.common.graph.AbstractUndirectedNetworkConnections:<init>(java.util.Map)" : [ "checkNotNull" ],
  "com.google.common.base.CaseFormat$StringConverter:<init>(com.google.common.base.CaseFormat,com.google.common.base.CaseFormat)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.RegularContiguousSet:indexOf(java.lang.Object)" : [ "contains", "first" ],
  "com.google.common.util.concurrent.Striped$SmallLazyStriped:<init>(int,com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.primitives.Longs$LongArrayAsList:subList(int,int)" : [ "<init>", "size", "checkPositionIndexes" ],
  "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:process(java.nio.ByteBuffer)" : [ "bmix64" ],
  "com.google.common.primitives.Shorts$ShortArrayAsList:equals(java.lang.Object)" : [ "size" ],
  "com.google.common.collect.AbstractMapBasedMultiset:entrySet()" : [ "entrySet" ],
  "com.google.common.cache.LocalCache$WriteThroughEntry:toString()" : [ "getKey", "getValue" ],
  "com.google.common.util.concurrent.Monitor:enter(java.time.Duration)" : [ "enter", "toNanosSaturated" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:last()" : [ "sortedMap" ],
  "com.google.common.net.MediaType$Tokenizer:consumeToken(com.google.common.base.CharMatcher)" : [ "consumeTokenIfPresent", "checkState" ],
  "com.google.common.util.concurrent.ClosingFuture:finishToFuture()" : [ "compareAndUpdateState", "directExecutor" ],
  "com.google.common.collect.ForwardingNavigableSet:tailSet(java.lang.Object,boolean)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:pollFirst()" : [ "delegate" ],
  "com.google.common.net.MediaType:withParameter(java.lang.String,java.lang.String)" : [ "withParameters", "of" ],
  "com.google.common.cache.CacheBuilderSpec$AccessDurationParser:parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit)" : [ "checkArgument" ],
  "com.google.common.util.concurrent.ClosingFuture:catchingMoreGeneric(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor)" : [ "checkNotNull", "derive" ],
  "com.google.common.math.LinearTransformation:mapping(double,double)" : [ "checkArgument", "isFinite" ],
  "com.google.common.hash.AbstractNonStreamingHashFunction:hashBytes(java.nio.ByteBuffer)" : [ "newHasher" ],
  "com.google.common.hash.FarmHashFingerprint64:hashLength65Plus(byte[],int,int)" : [ "shiftMix", "load64", "weakHashLength32WithSeeds", "hashLength16" ],
  "com.google.common.reflect.TypeResolver:resolveParameterizedType(java.lang.reflect.ParameterizedType)" : [ "resolveType", "resolveTypes" ],
  "com.google.common.cache.LocalCache$Segment:postReadCleanup()" : [ "cleanUp" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:ceilingKey(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.LinkedHashMultimap:createCollection()" : [ "newLinkedHashSetWithExpectedSize" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:size()" : [ "refreshIfEmpty" ],
  "com.google.common.io.ByteStreams:copy(java.io.InputStream,java.io.OutputStream)" : [ "checkNotNull", "createBuffer" ],
  "com.google.common.collect.DescendingImmutableSortedMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "descendingMultiset" ],
  "com.google.common.collect.Synchronized$SynchronizedSet:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableSet:chooseTableSize(int)" : [ "checkArgument" ],
  "com.google.common.net.HostAndPort:fromString(java.lang.String)" : [ "<init>", "checkNotNull", "getHostAndPortFromBracketedHost", "isNullOrEmpty", "checkArgument", "isValidPort", "matchesAllOf", "ascii" ],
  "com.google.common.collect.TreeMultiset$AvlNode:removeMax(com.google.common.collect.TreeMultiset$AvlNode)" : [ "rebalance" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:size()" : [ "size", "entryIterator" ],
  "com.google.common.collect.ImmutableSortedMap$Builder:buildOrThrow()" : [ "emptyMap" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:merge(com.google.common.collect.Range,java.lang.Object,java.util.function.BiFunction)" : [ "merge", "checkArgument", "encloses" ],
  "com.google.common.hash.HashCode:fromBytesNoCopy(byte[])" : [ "<init>" ],
  "com.google.common.base.Joiner$MapJoiner:join(java.lang.Iterable)" : [ "join" ],
  "com.google.common.cache.RemovalNotification:<init>(java.lang.Object,java.lang.Object,com.google.common.cache.RemovalCause)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps$EntrySet:contains(java.lang.Object)" : [ "safeGet", "equal" ],
  "com.google.common.util.concurrent.Futures:catching(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor)" : [ "create" ],
  "com.google.common.collect.Synchronized$SynchronizedList:sort(java.util.Comparator)" : [ "delegate" ],
  "com.google.common.collect.HashBiMap:rehashIfNecessary()" : [ "needsResizing", "createTable", "insert" ],
  "com.google.common.eventbus.DeadEvent:<init>(java.lang.Object,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.io.ReaderInputStream:readMoreChars()" : [ "availableCapacity", "flip", "grow", "limit" ],
  "com.google.common.cache.LocalCache$LocalManualCache:invalidate(java.lang.Object)" : [ "checkNotNull", "remove" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit)" : [ "newProxy", "checkNotNull", "checkPositiveTimeout", "checkArgument", "findInterruptibleMethods" ],
  "com.google.common.primitives.Bytes$ByteArrayAsList:set(int,java.lang.Byte)" : [ "checkElementIndex", "size", "checkNotNull" ],
  "com.google.common.reflect.TypeToken:getRawTypes()" : [ "builder", "build" ],
  "com.google.common.cache.LocalCache:cleanUp()" : [ "cleanUp" ],
  "com.google.common.math.Stats:meanOf(java.util.Iterator)" : [ "checkArgument", "isFinite", "calculateNewMeanNonFinite" ],
  "com.google.common.io.Resources:readLines(java.net.URL,java.nio.charset.Charset,com.google.common.io.LineProcessor)" : [ "readLines", "asCharSource" ],
  "com.google.common.graph.EdgesConnecting:contains(java.lang.Object)" : [ "getConnectingEdge" ],
  "com.google.common.cache.CacheLoader:reload(java.lang.Object,java.lang.Object)" : [ "checkNotNull", "immediateFuture" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:drainValueReferenceQueue(java.lang.ref.ReferenceQueue)" : [ "reclaimValue" ],
  "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:spliterator()" : [ "spliterator" ],
  "com.google.common.collect.FluentIterable:toMap(com.google.common.base.Function)" : [ "toMap", "getDelegate" ],
  "com.google.common.collect.ForwardingSortedSet:standardSubSet(java.lang.Object,java.lang.Object)" : [ "tailSet" ],
  "com.google.common.collect.ForwardingList:standardIterator()" : [ "listIterator" ],
  "com.google.common.collect.Maps:filterEntries(java.util.Map,com.google.common.base.Predicate)" : [ "<init>", "checkNotNull", "filterFiltered" ],
  "com.google.common.hash.AbstractHashFunction:hashBytes(byte[])" : [ "hashBytes" ],
  "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:checkNotDone()" : [ "checkState" ],
  "com.google.common.collect.TreeMultiset$AvlNode:<init>(java.lang.Object,int)" : [ "checkArgument" ],
  "com.google.common.collect.Lists$ReverseList:reverseIndex(int)" : [ "size", "checkElementIndex" ],
  "com.google.common.graph.AbstractNetwork:inDegree(java.lang.Object)" : [ "degree" ],
  "com.google.common.cache.LocalCache$EntryFactory$6:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)" : [ "copyEntry" ],
  "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator:remove()" : [ "checkState" ],
  "com.google.common.util.concurrent.ClosingFuture:finalize()" : [ "finishToFuture" ],
  "com.google.common.cache.LocalCache:get(java.lang.Object)" : [ "get", "hash", "segmentFor" ],
  "com.google.common.collect.TreeMultimap:keySet()" : [ "keySet" ],
  "com.google.common.graph.AbstractValueGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "hasEdgeConnecting" ],
  "com.google.common.collect.ForwardingMultiset:standardSize()" : [ "linearTimeSizeImpl" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:remove(int)" : [ "getListDelegate" ],
  "com.google.common.collect.ConcurrentHashMultiset$EntrySet:toArray()" : [ "snapshot" ],
  "com.google.common.collect.TreeTraverser$BreadthFirstIterator:next()" : [ "addAll" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap:get(java.lang.Object)" : [ "safeGet", "wrapCollection" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:get(java.lang.Object)" : [ "encloses", "isEmpty", "compareTo", "isConnected", "intersection", "equals" ],
  "com.google.common.cache.LocalCache$StrongAccessWriteEntry:<init>(java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>", "nullEntry" ],
  "com.google.common.collect.Multisets:unmodifiableMultiset(com.google.common.collect.ImmutableMultiset)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMap:keySpliterator()" : [ "map", "entrySet" ],
  "com.google.common.collect.HashMultimap:writeObject(java.io.ObjectOutputStream)" : [ "writeMultimap" ],
  "com.google.common.util.concurrent.ForwardingBlockingQueue:<init>()" : [ "<init>" ],
  "com.google.common.collect.GeneralRange:reverse()" : [ "<init>", "reverse", "getUpperEndpoint", "getUpperBoundType", "getLowerEndpoint", "getLowerBoundType", "from" ],
  "com.google.common.primitives.Chars:lastIndexOf(char[],char)" : [ "lastIndexOf" ],
  "com.google.common.math.PairedStatsAccumulator:sampleCovariance()" : [ "checkState", "count" ],
  "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "of" ],
  "com.google.common.primitives.Floats:rotate(float[],int,int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.collect.RegularImmutableBiMap$Inverse:size()" : [ "inverse" ],
  "com.google.common.collect.ImmutableSetMultimap:valuesBuilder(java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.SingletonImmutableTable:columnMap()" : [ "of" ],
  "com.google.common.collect.ImmutableBiMap$SerializedForm:<init>(com.google.common.collect.ImmutableBiMap)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSet$Builder:add(java.lang.Object)" : [ "add", "checkNotNull", "copyIfNecessary" ],
  "com.google.common.collect.Maps$FilteredEntryMap:<init>(java.util.Map,com.google.common.base.Predicate)" : [ "<init>", "filter" ],
  "com.google.common.collect.ImmutableSortedSet:descendingIterator()" : [ "descendingIterator" ],
  "com.google.common.graph.AbstractValueGraph$1:outDegree(java.lang.Object)" : [ "outDegree" ],
  "com.google.common.base.Ascii:toLowerCase(java.lang.CharSequence)" : [ "toLowerCase" ],
  "com.google.common.math.StatsAccumulator:populationStandardDeviation()" : [ "populationVariance" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:higherKey(java.lang.Object)" : [ "fromMap" ],
  "com.google.common.collect.ImmutableSortedMap$Builder:<init>(java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:iterator()" : [ "asMapEntryIterator", "columnKeySet" ],
  "com.google.common.collect.StandardTable$Row:remove(java.lang.Object)" : [ "updateBackingRowMapField", "safeRemove", "maintainEmptyInvariant" ],
  "com.google.common.collect.ImmutableTable:columnKeySet()" : [ "keySet" ],
  "com.google.common.collect.TreeRangeSet:<init>(java.util.NavigableMap)" : [ "<init>" ],
  "com.google.common.primitives.SignedBytes:checkedCast(long)" : [ "checkArgument" ],
  "com.google.common.collect.Collections2$FilteredCollection:contains(java.lang.Object)" : [ "safeContains" ],
  "com.google.common.collect.ImmutableRangeSet:intersects(com.google.common.collect.Range)" : [ "binarySearch", "natural", "isConnected", "intersection", "isEmpty" ],
  "com.google.common.reflect.Invokable:from(java.lang.reflect.Constructor)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset:comparator()" : [ "comparator" ],
  "com.google.common.base.Stopwatch:createUnstarted(com.google.common.base.Ticker)" : [ "<init>" ],
  "com.google.common.io.BaseEncoding:trimTrailingPadding(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableTable:of(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.graph.StandardMutableGraph:<init>(com.google.common.graph.AbstractGraphBuilder)" : [ "<init>" ],
  "com.google.common.collect.MutableClassToInstanceMap:<init>(java.util.Map)" : [ "<init>", "checkNotNull" ],
  "com.google.common.io.BaseEncoding:encode(byte[],int,int)" : [ "checkPositionIndexes" ],
  "com.google.common.collect.Streams:mapWithIndex(java.util.stream.IntStream,com.google.common.collect.Streams$IntFunctionWithIndex)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps$AsMapView:size()" : [ "backingSet" ],
  "com.google.common.cache.LocalCache$WriteQueue:remove(java.lang.Object)" : [ "connectWriteOrder", "nullifyWriteOrder" ],
  "com.google.common.collect.AbstractSortedSetMultimap:asMap()" : [ "asMap" ],
  "com.google.common.collect.SortedMultisets$NavigableElementSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "<init>", "forBoolean" ],
  "com.google.common.collect.ForwardingNavigableMap:standardFirstKey()" : [ "firstEntry" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.base.FunctionalEquivalence:doHash(java.lang.Object)" : [ "hash" ],
  "com.google.common.net.InternetDomainName:topPrivateDomain()" : [ "isTopPrivateDomain", "checkState", "isUnderPublicSuffix", "ancestor", "publicSuffixIndex" ],
  "com.google.common.collect.Iterators:elementsEqual(java.util.Iterator,java.util.Iterator)" : [ "equal" ],
  "com.google.common.collect.ForwardingMap:entrySet()" : [ "delegate" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:maxRunBeforeFallback(int)" : [ "log2" ],
  "com.google.common.graph.StandardMutableNetwork:<init>(com.google.common.graph.NetworkBuilder)" : [ "<init>" ],
  "com.google.common.net.MediaType:charset()" : [ "absent", "get", "of", "iterator" ],
  "com.google.common.eventbus.EventBus:<init>(java.lang.String,java.util.concurrent.Executor,com.google.common.eventbus.Dispatcher,com.google.common.eventbus.SubscriberExceptionHandler)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Maps$5:subSet(java.lang.Object,java.lang.Object)" : [ "subSet" ],
  "com.google.common.collect.RegularImmutableBiMap$Inverse:createKeySet()" : [ "<init>" ],
  "com.google.common.collect.Iterables:retainAll(java.lang.Iterable,java.util.Collection)" : [ "retainAll", "checkNotNull" ],
  "com.google.common.primitives.Booleans:reverse(boolean[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.io.ByteSource$ConcatenatedByteSource:size()" : [ "size" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:addFirst(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:crossOver(int,java.lang.Object)" : [ "findMinChild", "elementData", "crossOverUp" ],
  "com.google.common.collect.Multimaps$CustomSortedSetMultimap:<init>(java.util.Map,com.google.common.base.Supplier)" : [ "<init>", "checkNotNull" ],
  "com.google.common.graph.AbstractValueGraph:incidentEdges(java.lang.Object)" : [ "incidentEdges" ],
  "com.google.common.io.CharSource:readFirstLine()" : [ "create", "register", "openBufferedStream", "rethrow", "close" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap:wrapEntry(java.util.Map$Entry)" : [ "immutableEntry", "wrapCollection" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)" : [ "newEntry" ],
  "com.google.common.collect.StandardTable:containsMapping(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.primitives.Longs$LongArrayAsList:set(int,java.lang.Long)" : [ "checkElementIndex", "size", "checkNotNull" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:loadFuture(java.lang.Object,com.google.common.cache.CacheLoader)" : [ "start", "set", "immediateFuture", "reload", "transform", "directExecutor", "setException", "fullyFailedFuture" ],
  "com.google.common.io.Files:move(java.io.File,java.io.File)" : [ "checkNotNull", "checkArgument", "copy" ],
  "com.google.common.base.Suppliers:ofInstance(java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Synchronized:queue(java.util.Queue,java.lang.Object)" : [ "<init>" ],
  "com.google.common.base.CharMatcher:replaceFrom(java.lang.CharSequence,char)" : [ "indexIn" ],
  "com.google.common.primitives.UnsignedLong:mod(com.google.common.primitives.UnsignedLong)" : [ "fromLongBits", "remainder", "checkNotNull" ],
  "com.google.common.collect.ImmutableList:subList(int,int)" : [ "checkPositionIndexes", "of", "subListUnchecked" ],
  "com.google.common.collect.ForwardingMultiset:setCount(java.lang.Object,int,int)" : [ "delegate" ],
  "com.google.common.reflect.Invokable:getReturnType()" : [ "of" ],
  "com.google.common.collect.Synchronized:table(com.google.common.collect.Table,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.MinMaxPriorityQueue$Builder:create()" : [ "create" ],
  "com.google.common.collect.Cut$BelowValue:<init>(java.lang.Comparable)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.AbstractNavigableMap:firstEntry()" : [ "getNext" ],
  "com.google.common.math.LongMath:gcd(long,long)" : [ "checkNonNegative" ],
  "com.google.common.reflect.Parameter:getDeclaredAnnotation(java.lang.Class)" : [ "checkNotNull", "from", "filter", "first" ],
  "com.google.common.io.MultiInputStream:skip(long)" : [ "read" ],
  "com.google.common.collect.Streams:findLast(java.util.stream.IntStream)" : [ "findLast" ],
  "com.google.common.cache.LocalCache:usesAccessQueue()" : [ "expiresAfterAccess", "evictsBySize" ],
  "com.google.common.io.BaseEncoding:separatingWriter(java.io.Writer,java.lang.String,int)" : [ "separatingAppendable" ],
  "com.google.common.collect.ImmutableSortedAsList:subListUnchecked(int,int)" : [ "<init>", "comparator" ],
  "com.google.common.collect.TableCollectors$ImmutableTableCollectorState:combine(com.google.common.collect.TableCollectors$ImmutableTableCollectorState,java.util.function.BinaryOperator)" : [ "put", "getRowKey", "getColumnKey", "getValue" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:omitPadding()" : [ "newInstance" ],
  "com.google.common.cache.CacheBuilder:expireAfterWrite(java.time.Duration)" : [ "expireAfterWrite", "toNanosSaturated" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:headMap(com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.collect.FluentIterable:firstMatch(com.google.common.base.Predicate)" : [ "tryFind", "getDelegate" ],
  "com.google.common.base.Joiner$MapJoiner:join(java.util.Map)" : [ "join" ],
  "com.google.common.collect.RegularImmutableBiMap$Inverse:get(java.lang.Object)" : [ "smear", "getNextInValueBucket" ],
  "com.google.common.graph.ImmutableValueGraph:<init>(com.google.common.graph.ValueGraph)" : [ "<init>", "from", "getNodeConnections" ],
  "com.google.common.base.CharMatcher$And:<init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher)" : [ "<init>", "checkNotNull" ],
  "com.google.common.graph.StandardNetwork:checkedConnections(java.lang.Object)" : [ "get", "checkNotNull" ],
  "com.google.common.util.concurrent.Platform:restoreInterruptIfIsInterruptedException(java.lang.Throwable)" : [ "checkNotNull" ],
  "com.google.common.collect.SortedIterables:hasSameComparator(java.util.Comparator,java.lang.Iterable)" : [ "checkNotNull", "comparator" ],
  "com.google.common.cache.CacheBuilderSpec:parse(java.lang.String)" : [ "<init>", "split", "copyOf", "checkArgument" ],
  "com.google.common.collect.AbstractTable:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putBytes(java.nio.ByteBuffer)" : [ "putInt", "putByte" ],
  "com.google.common.util.concurrent.AtomicLongMap:getAndIncrement(java.lang.Object)" : [ "getAndAdd" ],
  "com.google.common.reflect.TypeResolver:invariantly(java.lang.reflect.Type)" : [ "<init>", "capture", "where", "getTypeMappings" ],
  "com.google.common.collect.Streams:zip(java.util.stream.Stream,java.util.stream.Stream,java.util.function.BiFunction)" : [ "checkNotNull" ],
  "com.google.common.collect.CompactLinkedHashMap:init(int)" : [ "init" ],
  "com.google.common.cache.LocalCache$StrongAccessEntry:<init>(java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>", "nullEntry" ],
  "com.google.common.cache.LocalCache$Segment:enqueueNotification(java.lang.Object,int,java.lang.Object,int,com.google.common.cache.RemovalCause)" : [ "create" ],
  "com.google.common.reflect.Types$GenericArrayTypeImpl:toString()" : [ "toString" ],
  "com.google.common.hash.Funnels$StringCharsetFunnel:writeReplace()" : [ "<init>" ],
  "com.google.common.graph.ElementOrder:unordered()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedListMultimap:delegate()" : [ "delegate" ],
  "com.google.common.collect.ImmutableMultimap$EntryCollection:isPartialView()" : [ "isPartialView" ],
  "com.google.common.util.concurrent.AbstractService$IsStartableGuard:isSatisfied()" : [ "state" ],
  "com.google.common.graph.ImmutableValueGraph:adjacentNodes(java.lang.Object)" : [ "adjacentNodes" ],
  "com.google.common.base.Converter:convert(java.lang.Object)" : [ "correctedDoForward" ],
  "com.google.common.util.concurrent.MoreExecutors:newThread(java.lang.String,java.lang.Runnable)" : [ "checkNotNull", "platformThreadFactory" ],
  "com.google.common.collect.ForwardingNavigableMap:standardCeilingKey(java.lang.Object)" : [ "keyOrNull", "ceilingEntry" ],
  "com.google.common.collect.SortedLists:binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)" : [ "checkNotNull", "newArrayList" ],
  "com.google.common.base.CommonPattern:compile(java.lang.String)" : [ "compilePattern" ],
  "com.google.common.hash.Hashing:hmacSha1(java.security.Key)" : [ "<init>", "hmacToString" ],
  "com.google.common.graph.Traverser$Traversal$2:visitNext(java.util.Deque)" : [ "checkNotNull" ],
  "com.google.common.eventbus.EventBus:toString()" : [ "toString", "toStringHelper", "addValue" ],
  "com.google.common.base.Predicates$ContainsPatternFromStringPredicate:<init>(java.lang.String)" : [ "<init>", "compilePattern" ],
  "com.google.common.collect.Multimaps$CustomListMultimap:<init>(java.util.Map,com.google.common.base.Supplier)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ForwardingMultimap:containsKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Multisets:spliteratorImpl(com.google.common.collect.Multiset)" : [ "flatMap" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSet:add(com.google.common.collect.Range)" : [ "add", "checkArgument", "encloses" ],
  "com.google.common.primitives.Bytes$ByteArrayAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.TreeRangeSet:span()" : [ "create" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceListener:stopping(com.google.common.util.concurrent.Service$State)" : [ "transitionService" ],
  "com.google.common.graph.EndpointPair$Ordered:toString()" : [ "source", "target" ],
  "com.google.common.primitives.ImmutableDoubleArray:writeReplace()" : [ "trimmed" ],
  "com.google.common.graph.AbstractGraph:equals(java.lang.Object)" : [ "edges" ],
  "com.google.common.collect.AbstractIterator:<init>()" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableMap$Values$SerializedForm:readResolve()" : [ "values" ],
  "com.google.common.collect.SingletonImmutableSet:asList()" : [ "of" ],
  "com.google.common.hash.AbstractStreamingHasher:putInt(int)" : [ "munchIfFull" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:higher(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.SortedMultisets$ElementSet:subSet(java.lang.Object,java.lang.Object)" : [ "multiset" ],
  "com.google.common.net.InetAddresses:decrement(java.net.InetAddress)" : [ "checkArgument" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:toString()" : [ "toString" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:subList(int,int)" : [ "subList", "checkPositionIndexes", "size", "reversePosition", "reverse" ],
  "com.google.common.collect.Synchronized$SynchronizedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:size()" : [ "delegate" ],
  "com.google.common.math.StatsAccumulator:addAll(com.google.common.math.Stats)" : [ "count", "merge", "mean", "sumOfSquaresOfDeltas", "min", "max" ],
  "com.google.common.reflect.TypeToken$InterfaceSet:rawTypes()" : [ "collectTypes", "from", "filter", "toSet" ],
  "com.google.common.collect.ImmutableSortedMap:ceilingKey(java.lang.Object)" : [ "keyOrNull", "ceilingEntry" ],
  "com.google.common.cache.LocalCache$Segment:removeEntryFromChain(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)" : [ "copyEntry", "removeCollectedEntry" ],
  "com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier:get()" : [ "serviceName", "state" ],
  "com.google.common.util.concurrent.AbstractCatchingFuture:run()" : [ "getDone", "uncheckedCastNullableTToT", "isInstanceOfThrowableClass", "restoreInterruptIfIsInterruptedException" ],
  "com.google.common.collect.MinMaxPriorityQueue$Builder:<init>(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.collect.Interners:newWeakInterner()" : [ "newBuilder", "weak", "build" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "unmodifiableSortedMultiset", "delegate" ],
  "com.google.common.collect.Maps:toMap(java.util.Iterator,com.google.common.base.Function)" : [ "checkNotNull", "builder", "put", "buildKeepingLast" ],
  "com.google.common.io.AppendableWriter:write(java.lang.String)" : [ "checkNotNull", "checkNotClosed" ],
  "com.google.common.util.concurrent.ListenerCallQueue:addListener(java.lang.Object,java.util.concurrent.Executor)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.AbstractMultimap:toString()" : [ "asMap" ],
  "com.google.common.collect.ForwardingQueue:element()" : [ "delegate" ],
  "com.google.common.math.LongMath:checkedAdd(long,long)" : [ "checkNoOverflow" ],
  "com.google.common.collect.ConcurrentHashMultiset:setCount(java.lang.Object,int,int)" : [ "checkNotNull", "checkNonnegative", "safeGet" ],
  "com.google.common.collect.ArrayTable$Column:getValue(int)" : [ "at" ],
  "com.google.common.collect.LinkedListMultimap:asMap()" : [ "asMap" ],
  "com.google.common.collect.ImmutableSet$Builder:<init>(boolean)" : [ "<init>" ],
  "com.google.common.graph.EndpointPairIterator:advance()" : [ "checkState", "successors" ],
  "com.google.common.base.Platform$JdkPatternCompiler:compile(java.lang.String)" : [ "<init>" ],
  "com.google.common.graph.DirectedNetworkConnections:ofImmutable(java.util.Map,java.util.Map,int)" : [ "<init>", "copyOf" ],
  "com.google.common.collect.HashBasedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.collect.ForwardingSortedMap:comparator()" : [ "delegate" ],
  "com.google.common.graph.ImmutableGraph$Builder:build()" : [ "copyOf" ],
  "com.google.common.collect.ImmutableMultiset$Builder:add(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.primitives.UnsignedLongs:compare(long,long)" : [ "compare", "flip" ],
  "com.google.common.collect.Interners$InternerBuilder:build()" : [ "weakKeys" ],
  "com.google.common.primitives.ImmutableIntArray$Builder:addAll(com.google.common.primitives.ImmutableIntArray)" : [ "ensureRoomFor", "length" ],
  "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,int)" : [ "create" ],
  "com.google.common.base.Ascii:toUpperCase(java.lang.CharSequence)" : [ "toUpperCase" ],
  "com.google.common.reflect.ClassPath$LocationInfo:scan(java.io.File,java.util.Set,com.google.common.collect.ImmutableSet$Builder)" : [ "scanDirectory", "scanJar" ],
  "com.google.common.reflect.TypeToken:where(com.google.common.reflect.TypeParameter,com.google.common.reflect.TypeToken)" : [ "<init>", "where", "of", "resolveType" ],
  "com.google.common.primitives.UnsignedLongs:sort(long[])" : [ "sort", "checkNotNull" ],
  "com.google.common.cache.CacheBuilder:maximumWeight(long)" : [ "checkState", "checkArgument" ],
  "com.google.common.collect.FilteredMultimapValues:retainAll(java.util.Collection)" : [ "removeIf", "and", "valuePredicateOnEntries", "not", "in" ],
  "com.google.common.collect.ForwardingList:hashCode()" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractService:notifyStarted()" : [ "<init>", "enter", "notifyFailed", "enqueueRunningEvent", "leave", "dispatchListenerEvents" ],
  "com.google.common.collect.MapMakerInternalMap:replace(java.lang.Object,java.lang.Object)" : [ "replace", "checkNotNull", "hash", "segmentFor" ],
  "com.google.common.collect.ForwardingNavigableSet:standardSubSet(java.lang.Object,java.lang.Object)" : [ "subSet" ],
  "com.google.common.util.concurrent.ListenerCallQueue:enqueue(com.google.common.util.concurrent.ListenerCallQueue$Event)" : [ "enqueueHelper" ],
  "com.google.common.collect.ForwardingNavigableMap:standardLowerEntry(java.lang.Object)" : [ "headMap" ],
  "com.google.common.io.Closer:close()" : [ "propagateIfPossible" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:lowerKey(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.util.concurrent.RateLimiter:getRate()" : [ "mutex" ],
  "com.google.common.collect.TreeRangeSet:contains(java.lang.Comparable)" : [ "contains" ],
  "com.google.common.collect.ImmutableBiMap:values()" : [ "inverse" ],
  "com.google.common.util.concurrent.RateLimiter:tryAcquire()" : [ "tryAcquire" ],
  "com.google.common.primitives.Ints:constrainToRange(int,int,int)" : [ "checkArgument" ],
  "com.google.common.primitives.Shorts$ShortArrayAsList:hashCode()" : [ "hashCode" ],
  "com.google.common.base.Absent:or(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.eventbus.AsyncEventBus:<init>(java.util.concurrent.Executor,com.google.common.eventbus.SubscriberExceptionHandler)" : [ "<init>", "legacyAsync" ],
  "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putLong(long)" : [ "update" ],
  "com.google.common.util.concurrent.FuturesGetChecked:checkExceptionClassValidity(java.lang.Class)" : [ "checkArgument", "isCheckedException", "hasConstructorUsableByGetChecked" ],
  "com.google.common.collect.CompactHashMap:indexOf(java.lang.Object)" : [ "needsAllocArrays", "smearedHash", "hashTableMask", "tableGet", "requireTable", "getHashPrefix", "entry", "key", "getNext", "equal" ],
  "com.google.common.util.concurrent.FakeTimeLimiter:runUninterruptiblyWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)" : [ "runWithTimeout" ],
  "com.google.common.cache.LocalCache$LocalManualCache:invalidateAll(java.lang.Iterable)" : [ "invalidateAll" ],
  "com.google.common.collect.Lists$RandomAccessPartition:<init>(java.util.List,int)" : [ "<init>" ],
  "com.google.common.io.BaseEncoding:decodingSource(com.google.common.io.CharSource)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMap:hashCode()" : [ "hashCodeImpl", "entrySet" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:floorKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ForwardingCollection:standardContainsAll(java.util.Collection)" : [ "containsAllImpl" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ForwardingSortedMultiset:elementSet()" : [ "delegate" ],
  "com.google.common.collect.ComparisonChain$1:compareFalseFirst(boolean,boolean)" : [ "compare" ],
  "com.google.common.io.Files:copy(java.io.File,java.io.File)" : [ "checkArgument", "asByteSource", "copyTo" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry:<init>(java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.collect.TopKSelector:partition(int,int,int)" : [ "uncheckedCastNullableTToT", "swap" ],
  "com.google.common.hash.HashCode:toString()" : [ "getBytesInternal" ],
  "com.google.common.io.ByteSource:sizeIfKnown()" : [ "absent" ],
  "com.google.common.collect.TreeRangeMap:equals(java.lang.Object)" : [ "asMapOfRanges" ],
  "com.google.common.collect.MutableClassToInstanceMap:cast(java.lang.Class,java.lang.Object)" : [ "wrap" ],
  "com.google.common.reflect.Reflection:getPackageName(java.lang.Class)" : [ "getPackageName" ],
  "com.google.common.math.DoubleMath:roundToLong(double,java.math.RoundingMode)" : [ "roundIntermediate", "checkInRangeForRoundingInputs" ],
  "com.google.common.collect.FilteredEntrySetMultimap:createEntries()" : [ "filter", "unfiltered", "entries" ],
  "com.google.common.math.Stats:of(java.lang.Iterable)" : [ "<init>", "addAll", "snapshot" ],
  "com.google.common.collect.Tables$UnmodifiableTable:rowMap()" : [ "rowMap", "transformValues" ],
  "com.google.common.net.MediaType:createTextType(java.lang.String)" : [ "create" ],
  "com.google.common.collect.HashBasedTable:containsValue(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.collect.Collections2$OrderedPermutationCollection:<init>(java.lang.Iterable,java.util.Comparator)" : [ "sortedCopyOf", "calculateSize" ],
  "com.google.common.collect.CompactHashMap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull", "delegateOrNull", "firstEntryIndex", "getSuccessor", "key", "value" ],
  "com.google.common.collect.ForwardingMapEntry:standardHashCode()" : [ "getKey", "getValue" ],
  "com.google.common.base.Throwables:propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class)" : [ "propagateIfPossible", "checkNotNull", "propagateIfInstanceOf" ],
  "com.google.common.hash.BloomFilter:toBloomFilter(com.google.common.hash.Funnel,long)" : [ "toBloomFilter" ],
  "com.google.common.collect.TreeMultiset$AvlNode:toString()" : [ "immutableEntry", "getElement", "getCount" ],
  "com.google.common.util.concurrent.ClosingFuture:catchingAsyncMoreGeneric(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor)" : [ "checkNotNull", "derive" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:add(java.lang.Object,int)" : [ "delegate" ],
  "com.google.common.collect.LinkedListMultimap:writeObject(java.io.ObjectOutputStream)" : [ "size", "entries" ],
  "com.google.common.collect.MoreCollectors$ToOptionalState:add(java.lang.Object)" : [ "checkNotNull", "multiples" ],
  "com.google.common.primitives.UnsignedInts:sort(int[])" : [ "sort", "checkNotNull" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:pollFirstEntry()" : [ "removeFirstMatching" ],
  "com.google.common.graph.Traverser:breadthFirst(java.lang.Object)" : [ "breadthFirst", "of" ],
  "com.google.common.io.ByteStreams:newDataOutput(java.io.ByteArrayOutputStream)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ForwardingMultiset:standardContains(java.lang.Object)" : [ "count" ],
  "com.google.common.collect.ImmutableMultiset$EntrySet:writeReplace()" : [ "<init>" ],
  "com.google.common.io.CharSource$EmptyCharSource:<init>()" : [ "<init>" ],
  "com.google.common.collect.ImmutableTable:rowMap()" : [ "rowMap" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:headSet(java.lang.Object)" : [ "headSet" ],
  "com.google.common.math.StatsAccumulator:calculateNewMeanNonFinite(double,double)" : [ "isFinite" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:replace(java.lang.Object,int,java.lang.Object)" : [ "preWriteCleanup", "equivalent" ],
  "com.google.common.primitives.ImmutableDoubleArray:contains(double)" : [ "indexOf" ],
  "com.google.common.collect.MinMaxPriorityQueue:addAll(java.util.Collection)" : [ "offer" ],
  "com.google.common.cache.LocalCache$EntryFactory$6:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.collect.ImmutableMap$Builder:orderEntriesByValue(java.util.Comparator)" : [ "checkState", "checkNotNull" ],
  "com.google.common.collect.ArrayTable$ArrayMap:isEmpty()" : [ "isEmpty" ],
  "com.google.common.collect.ImmutableSetMultimap:copyOf(java.lang.Iterable)" : [ "<init>", "putAll", "build" ],
  "com.google.common.hash.FarmHashFingerprint64:hashBytes(byte[],int,int)" : [ "checkPositionIndexes", "fromLong", "fingerprint" ],
  "com.google.common.cache.AbstractCache:getAllPresent(java.lang.Iterable)" : [ "copyOf", "newLinkedHashMap" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:count(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ForwardingCollection:delegate()" : [ "delegate" ],
  "com.google.common.primitives.Longs:reverse(long[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.math.LongMath$MillerRabinTester:test(long,long)" : [ "testWitness" ],
  "com.google.common.collect.ForwardingMultiset:<init>()" : [ "<init>" ],
  "com.google.common.collect.Lists$TwoPlusArrayList:<init>(java.lang.Object,java.lang.Object,java.lang.Object[])" : [ "checkNotNull" ],
  "com.google.common.collect.CollectCollectors:toImmutableSortedMap(java.util.Comparator,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" : [ "checkNotNull", "copyOfSorted" ],
  "com.google.common.collect.ImmutableSortedMap:descendingMap()" : [ "<init>", "emptyMap", "from", "comparator", "reverse" ],
  "com.google.common.collect.EnumHashBiMap:keySet()" : [ "keySet" ],
  "com.google.common.cache.LocalCache$AccessQueue:offer(com.google.common.cache.ReferenceEntry)" : [ "connectAccessOrder" ],
  "com.google.common.primitives.Chars:rotate(char[],int,int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.util.concurrent.Futures:scheduleAsync(com.google.common.util.concurrent.AsyncCallable,java.time.Duration,java.util.concurrent.ScheduledExecutorService)" : [ "scheduleAsync", "toNanosSaturated" ],
  "com.google.common.collect.Multimaps$TransformedEntriesMultimap:createValues()" : [ "transform" ],
  "com.google.common.collect.ImmutableSortedSet:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.ExplicitOrdering:toString()" : [ "keySet" ],
  "com.google.common.collect.ImmutableSetMultimap:toImmutableSetMultimap(java.util.function.Function,java.util.function.Function)" : [ "toImmutableSetMultimap" ],
  "com.google.common.collect.Sets$FilteredSortedSet:<init>(java.util.SortedSet,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedList:hashCode()" : [ "delegate" ],
  "com.google.common.primitives.Longs$LongArrayAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.io.Files:newWriter(java.io.File,java.nio.charset.Charset)" : [ "checkNotNull" ],
  "com.google.common.collect.ContiguousSet:tailSet(java.lang.Comparable)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:putAll(com.google.common.collect.Multimap)" : [ "putAll" ],
  "com.google.common.collect.ArrayTable:containsValue(java.lang.Object)" : [ "equal" ],
  "com.google.common.collect.Sets:removeAllImpl(java.util.Set,java.util.Collection)" : [ "removeAllImpl", "checkNotNull", "removeAll" ],
  "com.google.common.collect.Synchronized:typePreservingSet(java.util.Set,java.lang.Object)" : [ "sortedSet", "set" ],
  "com.google.common.collect.HashBiMap:create(int)" : [ "<init>" ],
  "com.google.common.math.LongMath$MillerRabinTester:testWitness(long,long)" : [ "powMod" ],
  "com.google.common.collect.ForwardingSetMultimap:entries()" : [ "entries", "delegate" ],
  "com.google.common.collect.Tables:toTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.Supplier)" : [ "toTable" ],
  "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch:createFromSystemTimer()" : [ "<init>" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:isEmpty()" : [ "equals", "all", "entryIterator" ],
  "com.google.common.util.concurrent.ServiceManager:awaitHealthy(java.time.Duration)" : [ "awaitHealthy", "toNanosSaturated" ],
  "com.google.common.base.CharMatcher:isEither(char,char)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedMultiset$Builder:addAll(java.util.Iterator)" : [ "addAll" ],
  "com.google.common.collect.Collections2$PermutationIterator:<init>(java.util.List)" : [ "<init>" ],
  "com.google.common.collect.ImmutableTable:toImmutableTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" : [ "toImmutableTable" ],
  "com.google.common.math.PairedStatsAccumulator:populationCovariance()" : [ "checkState", "count" ],
  "com.google.common.collect.HashMultiset:add(java.lang.Object,int)" : [ "add" ],
  "com.google.common.collect.Synchronized$SynchronizedEntry:delegate()" : [ "delegate" ],
  "com.google.common.graph.AbstractValueGraph:toString()" : [ "edgeValueMap" ],
  "com.google.common.cache.CacheBuilder:removalListener(com.google.common.cache.RemovalListener)" : [ "checkState", "checkNotNull" ],
  "com.google.common.util.concurrent.CollectionFuture:collectOneValue(int,java.lang.Object)" : [ "<init>" ],
  "com.google.common.primitives.ImmutableDoubleArray:readResolve()" : [ "isEmpty" ],
  "com.google.common.io.CharSource:forEachLine(java.util.function.Consumer)" : [ "lines" ],
  "com.google.common.escape.CharEscaper:escape(java.lang.String)" : [ "checkNotNull", "escapeSlow" ],
  "com.google.common.collect.CompactLinkedHashSet:setPredecessor(int,int)" : [ "requirePredecessors" ],
  "com.google.common.collect.ForwardingDeque:offerLast(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.EnumBiMap:containsValue(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.cache.LocalCache$Strength$3:referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.collect.Cut$AboveValue:<init>(java.lang.Comparable)" : [ "<init>", "checkNotNull" ],
  "com.google.common.base.CharMatcher:removeFrom(java.lang.CharSequence)" : [ "indexIn" ],
  "com.google.common.primitives.UnsignedLongs:parseUnsignedLong(java.lang.String)" : [ "parseUnsignedLong" ],
  "com.google.common.collect.Lists$TwoPlusArrayList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.IndexedImmutableSet:iterator()" : [ "iterator" ],
  "com.google.common.primitives.Booleans:ensureCapacity(boolean[],int,int)" : [ "checkArgument" ],
  "com.google.common.graph.AbstractGraph:toString()" : [ "edges" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedMap:<init>(java.util.SortedMap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeSet:rangeEnclosing(com.google.common.collect.Range)" : [ "checkNotNull", "encloses" ],
  "com.google.common.collect.ForwardingMultimap:remove(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.MutableClassToInstanceMap:getInstance(java.lang.Class)" : [ "cast" ],
  "com.google.common.base.internal.Finalizer:cleanUp(java.lang.ref.Reference)" : [ "getFinalizeReferentMethod" ],
  "com.google.common.collect.EnumMultiset:readObject(java.io.ObjectInputStream)" : [ "populateMultiset" ],
  "com.google.common.graph.NetworkBuilder:<init>(boolean)" : [ "<init>", "absent", "insertion" ],
  "com.google.common.graph.Graphs$TransposedGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:lowerEntry(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.Multimaps:unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap)" : [ "checkNotNull" ],
  "com.google.common.graph.MapRetrievalCache:getIfCached(java.lang.Object)" : [ "getIfCached", "addToCache" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSet:headSet(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:columnMap()" : [ "map", "transformValues", "delegate" ],
  "com.google.common.reflect.ClassPath:getClassLoaderUrls(java.lang.ClassLoader)" : [ "copyOf", "parseJavaClassPath", "of" ],
  "com.google.common.util.concurrent.ForwardingBlockingQueue:put(java.lang.Object)" : [ "delegate" ],
  "com.google.common.primitives.ImmutableDoubleArray:of(double,double,double)" : [ "<init>" ],
  "com.google.common.collect.CompactLinkedHashSet:setSuccessor(int,int)" : [ "requireSuccessors" ],
  "com.google.common.graph.ImmutableValueGraph:nodes()" : [ "nodes" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:encodeTo(java.lang.Appendable,byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "encodeChunkTo" ],
  "com.google.common.collect.CompactHashMap$KeySetView:toArray()" : [ "needsAllocArrays", "delegateOrNull", "copyAsObjectArray" ],
  "com.google.common.collect.Maps$TransformedEntriesMap:<init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps$NavigableKeySet:<init>(java.util.NavigableMap)" : [ "<init>" ],
  "com.google.common.base.Splitter$MapSplitter:split(java.lang.CharSequence)" : [ "split", "checkArgument" ],
  "com.google.common.util.concurrent.FluentFuture:from(com.google.common.util.concurrent.FluentFuture)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingMultiset:standardClear()" : [ "clear", "entrySet" ],
  "com.google.common.collect.ImmutableList:toImmutableList()" : [ "toImmutableList" ],
  "com.google.common.io.MultiReader:advance()" : [ "close" ],
  "com.google.common.primitives.ImmutableIntArray:of(int,int,int)" : [ "<init>" ],
  "com.google.common.collect.ImmutableRangeSet:intersection(com.google.common.collect.RangeSet)" : [ "create", "removeAll", "copyOf" ],
  "com.google.common.collect.ForwardingSetMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractTable:values()" : [ "createValues" ],
  "com.google.common.collect.Lists$RandomAccessListWrapper:<init>(java.util.List)" : [ "<init>" ],
  "com.google.common.collect.Maps$NavigableAsMapView:descendingEntryIterator()" : [ "descendingMap" ],
  "com.google.common.primitives.Chars:reverse(char[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.collect.EnumHashBiMap:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.SingletonImmutableBiMap:inverse()" : [ "<init>" ],
  "com.google.common.util.concurrent.TimeoutFuture:create(com.google.common.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)" : [ "<init>", "directExecutor" ],
  "com.google.common.collect.ImmutableListMultimap:invert()" : [ "builder", "put", "build" ],
  "com.google.common.collect.ForwardingMap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractService:enqueueRunningEvent()" : [ "enqueue" ],
  "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask:runInterruptibly()" : [ "checkNotNull" ],
  "com.google.common.collect.Iterables:elementsEqual(java.lang.Iterable,java.lang.Iterable)" : [ "elementsEqual" ],
  "com.google.common.util.concurrent.AtomicLongMap:replace(java.lang.Object,long,long)" : [ "putIfAbsent" ],
  "com.google.common.collect.Maps$AbstractFilteredMap:put(java.lang.Object,java.lang.Object)" : [ "checkArgument", "apply" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:newWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)" : [ "castForTesting" ],
  "com.google.common.collect.FilteredKeySetMultimap$EntrySet:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.ForwardingMultimap:put(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.TreeRangeMap:hashCode()" : [ "asMapOfRanges" ],
  "com.google.common.primitives.Shorts:sortDescending(short[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:subMap(com.google.common.collect.Range)" : [ "<init>", "isConnected", "intersection", "of" ],
  "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "of" ],
  "com.google.common.collect.ImmutableSetMultimap:readObject(java.io.ObjectInputStream)" : [ "builder", "valuesBuilder", "add", "build", "put", "buildOrThrow", "set", "emptySet" ],
  "com.google.common.collect.ForwardingList:standardListIterator(int)" : [ "listIteratorImpl" ],
  "com.google.common.graph.StandardMutableNetwork:addEdge(com.google.common.graph.EndpointPair,java.lang.Object)" : [ "addEdge", "nodeU", "nodeV" ],
  "com.google.common.cache.LocalCache$LocalLoadingCache:apply(java.lang.Object)" : [ "getUnchecked" ],
  "com.google.common.util.concurrent.ClosingFuture:whenClosedCountDown()" : [ "whenClosedCountDown" ],
  "com.google.common.collect.Maps$SortedKeySet:headSet(java.lang.Object)" : [ "<init>", "map" ],
  "com.google.common.collect.Maps$SortedAsMapView:subMap(java.lang.Object,java.lang.Object)" : [ "asMap", "backingSet" ],
  "com.google.common.collect.TreeMultiset:pollLastEntry()" : [ "pollLastEntry" ],
  "com.google.common.collect.ForwardingSortedMultiset:pollFirstEntry()" : [ "delegate" ],
  "com.google.common.util.concurrent.ListeningScheduledExecutorService:schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)" : [ "schedule" ],
  "com.google.common.collect.Interners:asFunction(com.google.common.collect.Interner)" : [ "<init>", "checkNotNull" ],
  "com.google.common.cache.LocalCache$AccessQueue:iterator()" : [ "peek" ],
  "com.google.common.primitives.ImmutableDoubleArray$Builder:ensureRoomFor(int)" : [ "expandedCapacity" ],
  "com.google.common.collect.Synchronized$SynchronizedSetMultimap:entries()" : [ "set", "delegate" ],
  "com.google.common.cache.CacheLoader$1:reload(java.lang.Object,java.lang.Object)" : [ "create" ],
  "com.google.common.collect.ImmutableRangeSet:asDescendingSetOfRanges()" : [ "<init>", "of", "reverse", "rangeLexOrdering" ],
  "com.google.common.collect.FilteredEntryMultimap:removeAll(java.lang.Object)" : [ "firstNonNull", "unmodifiableEmptyCollection" ],
  "com.google.common.collect.LinkedHashMultiset:clear()" : [ "clear" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:aboutToAcquire(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)" : [ "checkAcquiredLocks" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:validateIterator()" : [ "refreshIfEmpty" ],
  "com.google.common.collect.Maps:valuePredicateOnEntries(com.google.common.base.Predicate)" : [ "compose", "valueFunction" ],
  "com.google.common.collect.LinkedListMultimap:removeAll(java.lang.Object)" : [ "getCopy", "removeAllNodes" ],
  "com.google.common.collect.AbstractMapBasedMultimap:put(java.lang.Object,java.lang.Object)" : [ "createCollection" ],
  "com.google.common.collect.Multimaps$UnmodifiableMultimap:<init>(com.google.common.collect.Multimap)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.FilteredKeyMultimap:<init>(com.google.common.collect.Multimap,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.graph.DirectedGraphConnections:removePredecessor(java.lang.Object)" : [ "<init>", "checkNotNull", "checkNonNegative" ],
  "com.google.common.primitives.Bytes$ByteArrayAsList:subList(int,int)" : [ "<init>", "size", "checkPositionIndexes" ],
  "com.google.common.graph.ImmutableValueGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "hasEdgeConnecting" ],
  "com.google.common.reflect.Invokable:isTransient()" : [ "getModifiers" ],
  "com.google.common.collect.ConcurrentHashMultiset:elementSet()" : [ "elementSet" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:spliterator()" : [ "refreshIfEmpty" ],
  "com.google.common.collect.Sets$ImprovedAbstractSet:removeAll(java.util.Collection)" : [ "removeAllImpl" ],
  "com.google.common.collect.ForwardingSortedMultiset:lastEntry()" : [ "delegate" ],
  "com.google.common.graph.Graphs$TransposedGraph:predecessors(java.lang.Object)" : [ "delegate", "successors" ],
  "com.google.common.graph.DirectedGraphConnections:addPredecessor(java.lang.Object,java.lang.Object)" : [ "<init>", "checkPositive" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:addInEdge(java.lang.Object,java.lang.Object,boolean)" : [ "addInEdge", "getReference", "checkState" ],
  "com.google.common.primitives.ImmutableLongArray:toString()" : [ "isEmpty", "length" ],
  "com.google.common.collect.ForwardingMap:standardRemove(java.lang.Object)" : [ "entrySet", "equal" ],
  "com.google.common.collect.MinMaxPriorityQueue:maximumSize(int)" : [ "maximumSize", "natural" ],
  "com.google.common.collect.Lists$ReverseList:set(int,java.lang.Object)" : [ "reverseIndex" ],
  "com.google.common.base.CharMatcher$None:countIn(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingSetMultimap:<init>()" : [ "<init>" ],
  "com.google.common.collect.Ordering:onKeys()" : [ "onResultOf", "keyFunction" ],
  "com.google.common.io.MoreFiles:deleteRecursivelyInsecure(java.nio.file.Path)" : [ "addException" ],
  "com.google.common.graph.StandardMutableValueGraph:removeEdge(com.google.common.graph.EndpointPair)" : [ "removeEdge", "nodeU", "nodeV" ],
  "com.google.common.io.ByteStreams:readFully(java.io.InputStream,byte[])" : [ "readFully" ],
  "com.google.common.collect.ImmutableTable:cellSet()" : [ "cellSet" ],
  "com.google.common.collect.AbstractSortedMultiset:descendingMultiset()" : [ "createDescendingMultiset" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:size()" : [ "size", "equals", "all", "entryIterator" ],
  "com.google.common.collect.RegularImmutableTable:forCells(java.lang.Iterable)" : [ "forCellsInternal" ],
  "com.google.common.util.concurrent.ClosingFuture:cancel(boolean)" : [ "close" ],
  "com.google.common.reflect.Invokable:isStatic()" : [ "getModifiers" ],
  "com.google.common.reflect.TypeToken:boundAsSuperclass(java.lang.reflect.Type)" : [ "of", "getRawType" ],
  "com.google.common.collect.Tables$UnmodifiableTable:columnKeySet()" : [ "columnKeySet" ],
  "com.google.common.base.Throwables:jlaStackTrace(java.lang.Throwable)" : [ "checkNotNull" ],
  "com.google.common.base.CharMatcher$Any:<init>()" : [ "<init>" ],
  "com.google.common.util.concurrent.AtomicDoubleArray:readObject(java.io.ObjectInputStream)" : [ "builder", "add", "build", "toArray" ],
  "com.google.common.reflect.TypeToken:writeReplace()" : [ "<init>", "of", "resolveType" ],
  "com.google.common.util.concurrent.WrappingExecutorService:submit(java.lang.Runnable,java.lang.Object)" : [ "wrapTask" ],
  "com.google.common.io.FileBackedOutputStream:<init>(int)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedAsList:spliterator()" : [ "indexed", "comparator" ],
  "com.google.common.collect.Synchronized:multimap(com.google.common.collect.Multimap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.DescendingMultiset:iterator()" : [ "iteratorImpl" ],
  "com.google.common.collect.ForwardingSortedSetMultimap:removeAll(java.lang.Object)" : [ "delegate" ],
  "com.google.common.io.BaseEncoding$Base16Encoding:newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler:schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable)" : [ "reschedule" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:get(int)" : [ "get" ],
  "com.google.common.io.ByteSource$ConcatenatedByteSource:isEmpty()" : [ "isEmpty" ],
  "com.google.common.reflect.ClassPath$ClassInfo:getSimpleName()" : [ "inRange", "trimLeadingFrom", "getPackageName" ],
  "com.google.common.collect.Maps:capacity(int)" : [ "checkNonnegative" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:<init>(java.util.Deque,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.AbstractMultimap$Values:iterator()" : [ "valueIterator" ],
  "com.google.common.collect.Collections2:orderedPermutations(java.lang.Iterable,java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.Maps$FilteredMapValues:remove(java.lang.Object)" : [ "equal" ],
  "com.google.common.io.LittleEndianDataInputStream:readFully(byte[])" : [ "readFully" ],
  "com.google.common.collect.ForwardingNavigableMap:ceilingKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,char,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.CollectCollectors:toImmutableSortedMap(java.util.Comparator,java.util.function.Function,java.util.function.Function)" : [ "checkNotNull", "build", "combine" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:removeEntryIf(com.google.common.base.Predicate)" : [ "entrySet", "remove", "newArrayList" ],
  "com.google.common.collect.Tables$ImmutableCell:<init>(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.math.DoubleUtils:ensureNonNegative(double)" : [ "checkArgument" ],
  "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:remove()" : [ "checkForConcurrentModification", "checkState" ],
  "com.google.common.collect.CompactHashMap$EntrySetView:remove(java.lang.Object)" : [ "remove", "delegateOrNull", "needsAllocArrays", "moveLastEntry", "incrementModCount" ],
  "com.google.common.primitives.Ints:rotate(int[],int,int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.collect.MinMaxPriorityQueue$Builder:maximumSize(int)" : [ "checkArgument" ],
  "com.google.common.collect.ForwardingQueue:delegate()" : [ "delegate" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State)" : [ "checkNotNull", "checkArgument", "enter", "checkState", "createStarted", "isRunning", "stop", "enqueueFailedEvent", "enqueueHealthyEvent", "enqueueStoppedEvent", "leave", "dispatchListenerEvents" ],
  "com.google.common.collect.ImmutableSortedMap:copyOf(java.util.Map,java.util.Comparator)" : [ "copyOfInternal", "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap:entrySpliterator()" : [ "flatMap", "size" ],
  "com.google.common.collect.CompactHashMap:resizeTable(int,int,int,int)" : [ "createTable", "tableSet", "requireTable", "requireEntries", "tableGet", "getHashPrefix", "maskCombine", "getNext", "setHashTableMask" ],
  "com.google.common.collect.ForwardingCollection:toArray()" : [ "delegate" ],
  "com.google.common.cache.CacheBuilder:expireAfterWrite(long,java.util.concurrent.TimeUnit)" : [ "checkState", "checkArgument" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:outDegree(java.lang.Object)" : [ "delegate" ],
  "com.google.common.net.InternetDomainName:findSuffixOfType(com.google.common.base.Optional)" : [ "join", "subList", "matchesType", "fromNullable", "containsKey" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "filter", "unfiltered" ],
  "com.google.common.collect.ForwardingSortedMultiset:firstEntry()" : [ "delegate" ],
  "com.google.common.math.Stats:min()" : [ "checkState" ],
  "com.google.common.io.CharSequenceReader:hasRemaining()" : [ "remaining" ],
  "com.google.common.collect.CompactHashMap$ValuesView:iterator()" : [ "valuesIterator" ],
  "com.google.common.collect.Maps:transformEntry(com.google.common.collect.Maps$EntryTransformer,java.util.Map$Entry)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps:asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)" : [ "checkNotNull" ],
  "com.google.common.reflect.TypeToken:getArraySupertype(java.lang.Class)" : [ "getComponentType", "of", "newArrayClassOrGenericArrayType" ],
  "com.google.common.collect.Range:lowerEndpoint()" : [ "endpoint" ],
  "com.google.common.collect.Iterators:partitionImpl(java.util.Iterator,int,boolean)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.primitives.UnsignedLong:valueOf(long)" : [ "checkArgument", "fromLongBits" ],
  "com.google.common.collect.MinMaxPriorityQueue:removeLast()" : [ "removeAndGet", "getMaxElementIndex" ],
  "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues:removeAll(java.util.Collection)" : [ "checkNotNull", "newArrayList", "columnKeySet", "column" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:iterator()" : [ "refreshIfEmpty" ],
  "com.google.common.util.concurrent.InterruptibleTask$Blocker:toString()" : [ "toString" ],
  "com.google.common.collect.AbstractMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "checkNotNull", "putAll" ],
  "com.google.common.collect.CompactHashSet:isEmpty()" : [ "size" ],
  "com.google.common.hash.SipHashFunction$SipHasher:<init>(int,int,long,long)" : [ "<init>" ],
  "com.google.common.graph.ImmutableValueGraph:successors(java.lang.Object)" : [ "successors" ],
  "com.google.common.graph.EdgesConnecting:size()" : [ "getConnectingEdge" ],
  "com.google.common.reflect.TypeResolver$WildcardCapturer:captureAsTypeVariable(java.lang.reflect.Type[])" : [ "on", "join" ],
  "com.google.common.io.MoreFiles$PathByteSource:read()" : [ "toByteArray" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:bubbleUpAlternatingLevels(int,java.lang.Object)" : [ "getGrandparentIndex", "elementData" ],
  "com.google.common.graph.AbstractBaseGraph:outDegree(java.lang.Object)" : [ "degree" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "checkPositiveTimeout", "wrapAndThrowExecutionExceptionOrError" ],
  "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putBytes(byte[],int,int)" : [ "checkPositionIndexes", "update", "putByte" ],
  "com.google.common.hash.BloomFilter:bitSize()" : [ "bitSize" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:floorEntry(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.graph.GraphBuilder:build()" : [ "<init>" ],
  "com.google.common.hash.ChecksumHashFunction$ChecksumHasher:hash()" : [ "fromInt", "fromLong" ],
  "com.google.common.hash.AbstractByteHasher:putChar(char)" : [ "update" ],
  "com.google.common.collect.Ordering:onResultOf(com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.graph.AbstractValueGraph$1:degree(java.lang.Object)" : [ "degree" ],
  "com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture:<init>(java.util.concurrent.Future)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.AbstractTable$CellSet:contains(java.lang.Object)" : [ "safeGet", "safeContains", "immutableEntry" ],
  "com.google.common.hash.Murmur3_32HashFunction:hashString(java.lang.CharSequence,java.nio.charset.Charset)" : [ "mixK1", "mixH1", "charToTwoUtf8Bytes", "charToThreeUtf8Bytes", "codePointToFourUtf8Bytes", "fmix" ],
  "com.google.common.collect.TreeTraverser:using(com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,long)" : [ "addUnconditionalHolder" ],
  "com.google.common.cache.CacheBuilder:build(com.google.common.cache.CacheLoader)" : [ "<init>", "checkWeightWithWeigher" ],
  "com.google.common.collect.ImmutableSortedMap:lowerEntry(java.lang.Object)" : [ "headMap", "lastEntry" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:adjacentNodes()" : [ "adjacentNodesMultiset" ],
  "com.google.common.collect.Multiset:forEachEntry(java.util.function.ObjIntConsumer)" : [ "checkNotNull" ],
  "com.google.common.primitives.Floats$FloatArrayAsList:toString()" : [ "size" ],
  "com.google.common.base.CharMatcher:matchesNoneOf(java.lang.CharSequence)" : [ "indexIn" ],
  "com.google.common.collect.HashBiMap:putInverse(java.lang.Object,java.lang.Object,boolean)" : [ "<init>", "smearedHash", "seekByValue", "seekByKey", "delete", "insert", "rehashIfNecessary", "keyOrNull", "equal" ],
  "com.google.common.base.Platform:getEnumIfPresent(java.lang.Class,java.lang.String)" : [ "getEnumConstants", "absent", "of" ],
  "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl:add(java.lang.Object)" : [ "<init>", "add" ],
  "com.google.common.collect.FluentIterable:toArray(java.lang.Class)" : [ "toArray", "getDelegate" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:enqueueFailedEvent(com.google.common.util.concurrent.Service)" : [ "enqueue" ],
  "com.google.common.collect.TableCollectors:toImmutableTable(java.util.function.Function,java.util.function.Function,java.util.function.Function)" : [ "<init>", "checkNotNull", "build", "combine" ],
  "com.google.common.reflect.TypeResolver:where(java.lang.reflect.Type,java.lang.reflect.Type)" : [ "where", "populateTypeMappings", "checkNotNull", "newHashMap" ],
  "com.google.common.collect.Synchronized:navigableMap(java.util.NavigableMap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:headSet(java.lang.Object,boolean)" : [ "navigableSet", "delegate" ],
  "com.google.common.collect.ForwardingSetMultimap:removeAll(java.lang.Object)" : [ "removeAll", "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:indexOf(java.lang.Object)" : [ "getListDelegate" ],
  "com.google.common.collect.ImmutableList$SerializedForm:readResolve()" : [ "copyOf" ],
  "com.google.common.collect.AbstractMultiset:elementSet()" : [ "createElementSet" ],
  "com.google.common.util.concurrent.Futures:lazyTransform(java.util.concurrent.Future,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractBiMap$BiMapEntry:setValue(java.lang.Object)" : [ "checkValue", "checkState", "entrySet", "checkArgument", "containsValue", "equal" ],
  "com.google.common.math.DoubleMath:log2(double,java.math.RoundingMode)" : [ "checkArgument", "isFinite", "isNormal", "checkRoundingUnnecessary", "isPowerOfTwo", "scaleNormalize" ],
  "com.google.common.io.CharSource:concat(java.lang.Iterable)" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:clearValueForTesting(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference)" : [ "equivalent" ],
  "com.google.common.collect.ImmutableSortedMap:copyOf(java.util.Map)" : [ "copyOfInternal" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:put(java.lang.Object,int,java.lang.Object,boolean)" : [ "preWriteCleanup", "expand", "equivalent" ],
  "com.google.common.collect.Maps$Values:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.primitives.UnsignedInts:parseUnsignedInt(java.lang.String)" : [ "parseUnsignedInt" ],
  "com.google.common.collect.ImmutableSetMultimap:inverse()" : [ "invert" ],
  "com.google.common.collect.TreeMultimap:createCollection(java.lang.Object)" : [ "keyComparator" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)" : [ "<init>" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceListener:terminated(com.google.common.util.concurrent.Service$State)" : [ "transitionService" ],
  "com.google.common.collect.Maps$NavigableKeySet:ceiling(java.lang.Object)" : [ "map" ],
  "com.google.common.reflect.TypeToken:canonicalizeWildcardType(java.lang.reflect.TypeVariable,java.lang.reflect.WildcardType)" : [ "<init>", "any", "isSubtypeOf" ],
  "com.google.common.collect.TopKSelector:least(int,java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:remove()" : [ "checkRemove", "checkModCount", "size", "removeAt", "foundAndRemovedExactReference", "checkState", "removeExact" ],
  "com.google.common.net.MediaType:createImageType(java.lang.String)" : [ "create" ],
  "com.google.common.collect.ArrayListMultimap:writeObject(java.io.ObjectOutputStream)" : [ "writeMultimap" ],
  "com.google.common.collect.FilteredEntryMultimap:get(java.lang.Object)" : [ "filterCollection" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:<init>(int)" : [ "<init>" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap:firstKey()" : [ "keySet" ],
  "com.google.common.collect.Maps$Values:clear()" : [ "map" ],
  "com.google.common.collect.GeneralRange:all(java.util.Comparator)" : [ "<init>" ],
  "com.google.common.graph.Graphs$TransposedNetwork:edgeConnecting(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.CompactLinkedHashMap:setSucceeds(int,int)" : [ "setSuccessor", "setPredecessor" ],
  "com.google.common.collect.ImmutableMultiset:iterator()" : [ "entrySet" ],
  "com.google.common.io.ByteSource:read()" : [ "create", "register", "sizeIfKnown", "toByteArray", "rethrow", "close" ],
  "com.google.common.eventbus.Subscriber:create(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method)" : [ "<init>", "isDeclaredThreadSafe" ],
  "com.google.common.net.MediaType:create(java.lang.String,java.lang.String)" : [ "create", "of", "absent" ],
  "com.google.common.primitives.Shorts$ShortArrayAsList:toString()" : [ "size" ],
  "com.google.common.collect.AbstractMapBasedMultiset:remove(java.lang.Object,int)" : [ "count", "checkArgument", "get", "add" ],
  "com.google.common.collect.ForwardingBlockingDeque:putFirst(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.Striped:ceilToPowerOfTwo(int)" : [ "log2" ],
  "com.google.common.io.ReaderInputStream:<init>(java.io.Reader,java.nio.charset.CharsetEncoder,int)" : [ "checkNotNull", "checkArgument", "flip" ],
  "com.google.common.collect.EnumMultiset:writeObject(java.io.ObjectOutputStream)" : [ "writeMultiset" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:<init>(java.util.NavigableSet,java.lang.Object)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractFuture$Failure:<init>(java.lang.Throwable)" : [ "checkNotNull" ],
  "com.google.common.io.LittleEndianDataInputStream:readChar()" : [ "readUnsignedShort" ],
  "com.google.common.collect.ForwardingSet:<init>()" : [ "<init>" ],
  "com.google.common.collect.Maps$NavigableAsMapView:tailMap(java.lang.Object,boolean)" : [ "asMap" ],
  "com.google.common.hash.Fingerprint2011:hashBytes(byte[],int,int)" : [ "checkPositionIndexes", "fromLong", "fingerprint" ],
  "com.google.common.collect.CompactHashMap$KeySetView:toArray(java.lang.Object[])" : [ "needsAllocArrays", "delegateOrNull", "toArrayImpl" ],
  "com.google.common.collect.RegularImmutableSortedSet:headIndex(java.lang.Object,boolean)" : [ "checkNotNull" ],
  "com.google.common.base.Splitter:<init>(com.google.common.base.Splitter$Strategy)" : [ "<init>", "none" ],
  "com.google.common.collect.HashMultiset:<init>(int)" : [ "<init>", "newHashMapWithExpectedSize" ],
  "com.google.common.collect.CompactHashMap:isEmpty()" : [ "size" ],
  "com.google.common.collect.ImmutableSortedMap:of(java.util.Comparator,java.lang.Object,java.lang.Object)" : [ "<init>", "of", "checkNotNull" ],
  "com.google.common.collect.Multimaps:filterKeys(com.google.common.collect.ListMultimap,com.google.common.base.Predicate)" : [ "<init>", "unfiltered", "and" ],
  "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:delegate()" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:addAll(java.util.Collection)" : [ "delegate" ],
  "com.google.common.util.concurrent.ForwardingListeningExecutorService:submit(java.util.concurrent.Callable)" : [ "submit", "delegate" ],
  "com.google.common.collect.RegularContiguousSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "subSetImpl" ],
  "com.google.common.net.HostAndPort:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.collect.ImmutableMap$Builder:buildKeepingLast()" : [ "build" ],
  "com.google.common.util.concurrent.WrappingExecutorService:wrapTasks(java.util.Collection)" : [ "builder", "add", "build" ],
  "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:getBestComparator()" : [ "lexicographicalComparatorJavaImpl" ],
  "com.google.common.io.ByteStreams:toByteArrayInternal(java.io.InputStream,java.util.Queue,int)" : [ "saturatedMultiply", "combineBuffers" ],
  "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture:<init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap:size()" : [ "saturatedCast" ],
  "com.google.common.collect.Tables:unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.AbstractGraph:incidentEdges(java.lang.Object)" : [ "incidentEdges" ],
  "com.google.common.reflect.MutableTypeToInstanceMap:putInstance(java.lang.Class,java.lang.Object)" : [ "trustedPut", "of" ],
  "com.google.common.collect.Collections2$OrderedPermutationCollection:calculateSize(java.util.List,java.util.Comparator)" : [ "saturatedMultiply", "binomial" ],
  "com.google.common.collect.HashMultiset:readObject(java.io.ObjectInputStream)" : [ "readCount", "populateMultiset", "newHashMap" ],
  "com.google.common.collect.CompactHashSet:contains(java.lang.Object)" : [ "needsAllocArrays", "delegateOrNull", "smearedHash", "hashTableMask", "tableGet", "requireTable", "getHashPrefix", "entry", "element", "getNext", "equal" ],
  "com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm:readResolve()" : [ "entrySet" ],
  "com.google.common.collect.ForwardingMap:standardHashCode()" : [ "hashCodeImpl", "entrySet" ],
  "com.google.common.graph.EdgesConnecting:iterator()" : [ "getConnectingEdge", "of", "singletonIterator" ],
  "com.google.common.math.LongMath:log2(long,java.math.RoundingMode)" : [ "checkPositive", "checkRoundingUnnecessary", "isPowerOfTwo", "lessThanBranchFree" ],
  "com.google.common.collect.TreeMultiset:pollFirstEntry()" : [ "pollFirstEntry" ],
  "com.google.common.collect.ImmutableEnumMap:keyIterator()" : [ "unmodifiableIterator" ],
  "com.google.common.collect.ImmutableSortedSet:higher(java.lang.Object)" : [ "getFirst", "tailSet" ],
  "com.google.common.hash.Hashing:hmacSha512(byte[])" : [ "hmacSha512", "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:subList(int,int)" : [ "wrapList", "getListDelegate" ],
  "com.google.common.io.ByteStreams:newDataOutput()" : [ "newDataOutput" ],
  "com.google.common.collect.RegularImmutableMultiset:create(java.util.Collection)" : [ "<init>", "create", "of", "closedTableSize", "checkNotNull", "smear", "hashFloodingDetected", "asImmutableList", "saturatedCast" ],
  "com.google.common.math.StatsAccumulator:add(double)" : [ "isFinite", "calculateNewMeanNonFinite" ],
  "com.google.common.util.concurrent.ServiceManager:awaitStopped()" : [ "awaitStopped" ],
  "com.google.common.collect.Iterators$PeekingImpl:peek()" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.collect.StandardTable$RowMap:containsKey(java.lang.Object)" : [ "containsRow" ],
  "com.google.common.hash.HashingInputStream:<init>(com.google.common.hash.HashFunction,java.io.InputStream)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache$Segment:removeLoadingValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference)" : [ "equivalent", "isActive", "getOldValue", "removeEntryFromChain", "postWriteCleanup" ],
  "com.google.common.collect.ImmutableSortedMultiset$Builder:add(java.lang.Object)" : [ "add" ],
  "com.google.common.graph.ImmutableGraph:isDirected()" : [ "isDirected" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:descendingSet()" : [ "navigableSet", "delegate" ],
  "com.google.common.math.Stats:max()" : [ "checkState" ],
  "com.google.common.collect.Iterators:getOnlyElement(java.util.Iterator,java.lang.Object)" : [ "getOnlyElement" ],
  "com.google.common.util.concurrent.Futures:immediateFuture(java.lang.Object)" : [ "<init>" ],
  "com.google.common.graph.Traverser:<init>(com.google.common.graph.SuccessorsFunction)" : [ "checkNotNull" ],
  "com.google.common.graph.StandardValueGraph:adjacentNodes(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:<init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap)" : [ "<init>" ],
  "com.google.common.collect.CompactLinkedHashMap:convertToHashFloodingResistantImplementation()" : [ "convertToHashFloodingResistantImplementation" ],
  "com.google.common.net.InternetDomainName:registrySuffixIndex()" : [ "findSuffixOfType", "of" ],
  "com.google.common.io.CharSource$CharSequenceCharSource:readLines()" : [ "copyOf", "linesIterator" ],
  "com.google.common.collect.ImmutableSortedMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "checkNotNull", "checkArgument", "comparator", "headMap", "tailMap" ],
  "com.google.common.collect.EnumMultiset:contains(java.lang.Object)" : [ "contains" ],
  "com.google.common.collect.TreeMultimap:writeObject(java.io.ObjectOutputStream)" : [ "keyComparator", "valueComparator", "writeMultimap" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:dispatchListenerEvents()" : [ "checkState", "isOccupiedByCurrentThread", "dispatch" ],
  "com.google.common.collect.IndexedImmutableSet:spliterator()" : [ "indexed" ],
  "com.google.common.primitives.ImmutableIntArray:readResolve()" : [ "isEmpty" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:isEmpty()" : [ "delegate" ],
  "com.google.common.collect.ArrayTable:putAll(com.google.common.collect.Table)" : [ "putAll" ],
  "com.google.common.collect.CompactLinkedHashSet:clear()" : [ "clear" ],
  "com.google.common.collect.ForwardingMap:size()" : [ "delegate" ],
  "com.google.common.collect.CompactHashMap:setHashTableMask(int)" : [ "maskCombine" ],
  "com.google.common.collect.HashMultiset:iterator()" : [ "iterator" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:indexOf(java.lang.Object)" : [ "contains", "saturatedCast", "create", "iterator" ],
  "com.google.common.collect.Multimaps$Keys:count(java.lang.Object)" : [ "safeGet" ],
  "com.google.common.collect.LinkedListMultimap:values()" : [ "values" ],
  "com.google.common.primitives.Ints:toArray(java.util.Collection)" : [ "toIntArray", "checkNotNull" ],
  "com.google.common.graph.StandardMutableNetwork:newConnections()" : [ "of" ],
  "com.google.common.collect.RowSortedTable:rowMap()" : [ "rowMap" ],
  "com.google.common.base.Splitter:trimResults(com.google.common.base.CharMatcher)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.MapMaker:getKeyEquivalence()" : [ "firstNonNull", "getKeyStrength" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:contains(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.math.StatsAccumulator:populationVariance()" : [ "checkState", "ensureNonNegative" ],
  "com.google.common.reflect.TypeToken$TypeCollector:collectTypes(java.lang.Iterable)" : [ "collectTypes", "sortKeysByValue", "natural", "reverse", "newHashMap" ],
  "com.google.common.base.Optional:fromNullable(java.lang.Object)" : [ "<init>", "absent" ],
  "com.google.common.collect.ImmutableMap$Builder:putAll(java.util.Map)" : [ "putAll" ],
  "com.google.common.net.HostSpecifier:fromValid(java.lang.String)" : [ "<init>", "fromString", "checkArgument", "hasPort", "getHost", "forString", "toUriString", "from", "hasPublicSuffix", "toString" ],
  "com.google.common.collect.Tables$UnmodifiableTable:row(java.lang.Object)" : [ "row" ],
  "com.google.common.cache.ForwardingCache:<init>()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:descendingIterator()" : [ "delegate" ],
  "com.google.common.collect.ArrayTable:at(int,int)" : [ "checkElementIndex" ],
  "com.google.common.cache.LocalCache:getLiveValue(com.google.common.cache.ReferenceEntry,long)" : [ "isExpired" ],
  "com.google.common.primitives.Longs:fromByteArray(byte[])" : [ "checkArgument", "fromBytes" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:replace(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:delegate()" : [ "delegate" ],
  "com.google.common.util.concurrent.JdkFutureAdapters:listenInPoolThread(java.util.concurrent.Future,java.util.concurrent.Executor)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:<init>(java.util.NavigableMap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.hash.AbstractStreamingHasher:putBytes(java.nio.ByteBuffer)" : [ "putBytesInternal" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)" : [ "newEntry" ],
  "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:equals(java.lang.Object)" : [ "toPlainArray" ],
  "com.google.common.collect.RegularImmutableSortedSet:createAsList()" : [ "<init>", "size" ],
  "com.google.common.collect.ImmutableList:builder()" : [ "<init>" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:<init>(com.google.common.collect.SortedMultiset)" : [ "<init>" ],
  "com.google.common.base.Throwables:getCausalChain(java.lang.Throwable)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:delegate()" : [ "delegate" ],
  "com.google.common.util.concurrent.ClosingFuture:derive(com.google.common.util.concurrent.FluentFuture)" : [ "<init>", "becomeSubsumedInto" ],
  "com.google.common.collect.MapMakerInternalMap:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedSet:orderedBy(java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.ForwardingMultimap:containsEntry(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Sets$UnmodifiableNavigableSet:descendingSet()" : [ "<init>" ],
  "com.google.common.cache.LocalCache$Strength$2:referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.util.concurrent.TimeoutFuture$Fire:<init>(com.google.common.util.concurrent.TimeoutFuture)" : [ "run" ],
  "com.google.common.collect.ImmutableSortedMap$Builder:put(java.util.Map$Entry)" : [ "put" ],
  "com.google.common.collect.Iterators$ConcatenatedIterator:<init>(java.util.Iterator)" : [ "emptyIterator", "checkNotNull" ],
  "com.google.common.collect.EnumBiMap:inverse()" : [ "inverse" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:removeAll(java.util.Collection)" : [ "size", "removeIfEmpty" ],
  "com.google.common.math.IntMath:binomial(int,int)" : [ "checkNonNegative", "checkArgument" ],
  "com.google.common.collect.CollectSpliterators:indexed(int,int,java.util.function.IntFunction,java.util.Comparator)" : [ "checkArgument" ],
  "com.google.common.primitives.ImmutableIntArray:toString()" : [ "isEmpty", "length" ],
  "com.google.common.hash.SipHashFunction$SipHasher:makeHash()" : [ "processM", "sipRound", "fromLong" ],
  "com.google.common.collect.Interners$InternerBuilder:<init>()" : [ "<init>" ],
  "com.google.common.collect.JdkBackedImmutableMultiset:elementSet()" : [ "<init>" ],
  "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:get(java.lang.Object)" : [ "of" ],
  "com.google.common.net.InternetDomainName:validatePart(java.lang.String,boolean)" : [ "ascii", "retainFrom", "matchesAllOf" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:values()" : [ "delegate" ],
  "com.google.common.base.JdkPattern:matcher(java.lang.CharSequence)" : [ "<init>" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:enumSetValues(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.Uninterruptibles:joinUninterruptibly(java.lang.Thread,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull" ],
  "com.google.common.io.CharStreams:readLines(java.lang.Readable,com.google.common.io.LineProcessor)" : [ "<init>", "checkNotNull", "readLine" ],
  "com.google.common.hash.AbstractByteHasher:update(java.nio.ByteBuffer)" : [ "update", "position" ],
  "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1:readMicros()" : [ "elapsed" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:<init>(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)" : [ "<init>" ],
  "com.google.common.collect.AbstractBiMap:put(java.lang.Object,java.lang.Object)" : [ "putInBothMaps" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapValues:iterator()" : [ "iterator" ],
  "com.google.common.util.concurrent.ClosingFuture:eventuallyClosing(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.Executor)" : [ "<init>", "checkNotNull", "nonCancellationPropagating", "addCallback", "directExecutor" ],
  "com.google.common.collect.Synchronized:navigableSet(java.util.NavigableSet,java.lang.Object)" : [ "<init>" ],
  "com.google.common.graph.NetworkBuilder:from(com.google.common.graph.Network)" : [ "<init>", "allowsParallelEdges", "allowsSelfLoops", "nodeOrder", "edgeOrder" ],
  "com.google.common.collect.ImmutableRangeSet:asRanges()" : [ "<init>", "of", "rangeLexOrdering" ],
  "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:hashCode()" : [ "toPlainArray" ],
  "com.google.common.collect.ForwardingSortedMap:headMap(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Maps$NavigableAsMapView:descendingMap()" : [ "asMap" ],
  "com.google.common.collect.AbstractListMultimap:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.util.concurrent.Striped:lock(int)" : [ "<init>", "custom" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:review()" : [ "<init>", "chooseTableSize", "rebuildHashTable", "maxRunBeforeFallback", "hashFloodingDetected" ],
  "com.google.common.collect.AbstractMultiset:toString()" : [ "entrySet" ],
  "com.google.common.cache.LocalCache:getAllPresent(java.lang.Iterable)" : [ "builder", "get", "put", "buildKeepingLast" ],
  "com.google.common.reflect.TypeToken$1:getGenericParameterTypes()" : [ "getGenericParameterTypes", "resolveTypesInPlace" ],
  "com.google.common.primitives.ImmutableIntArray:copyOf(java.util.stream.IntStream)" : [ "<init>" ],
  "com.google.common.util.concurrent.ClosingFuture$DeferredCloser:eventuallyClose(java.lang.Object,java.util.concurrent.Executor)" : [ "checkNotNull", "add" ],
  "com.google.common.collect.Tables:toTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)" : [ "toTable" ],
  "com.google.common.collect.AbstractMapBasedMultimap:setMap(java.util.Map)" : [ "checkArgument" ],
  "com.google.common.collect.Iterables:toArray(java.lang.Iterable,java.lang.Object[])" : [ "castOrCopyToCollection" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:entryIterator()" : [ "hasLowerBound", "lowerEndpoint" ],
  "com.google.common.cache.LocalCache$Segment:put(java.lang.Object,int,java.lang.Object,boolean)" : [ "preWriteCleanup", "expand", "equivalent", "enqueueNotification", "setValue", "evictEntries", "recordLockedRead", "newEntry", "postWriteCleanup" ],
  "com.google.common.eventbus.EventBus$LoggingHandler:logger(com.google.common.eventbus.SubscriberExceptionContext)" : [ "getEventBus", "identifier" ],
  "com.google.common.util.concurrent.AbstractScheduledService:toString()" : [ "serviceName", "state" ],
  "com.google.common.collect.MutableClassToInstanceMap:putAll(java.util.Map)" : [ "putAll", "cast" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:putAll(java.lang.Iterable)" : [ "putAll" ],
  "com.google.common.collect.EnumBiMap:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.primitives.UnsignedLongs:sortDescending(long[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.collect.AbstractMultimap$EntrySet:hashCode()" : [ "hashCodeImpl" ],
  "com.google.common.primitives.Bytes:ensureCapacity(byte[],int,int)" : [ "checkArgument" ],
  "com.google.common.reflect.Invokable:isPrivate()" : [ "getModifiers" ],
  "com.google.common.collect.Maps:newLinkedHashMapWithExpectedSize(int)" : [ "capacity" ],
  "com.google.common.io.Closer:<init>(com.google.common.io.Closer$Suppressor)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:headMap(java.lang.Object,boolean)" : [ "transformEntries", "fromMap" ],
  "com.google.common.collect.ImmutableSetMultimap:writeObject(java.io.ObjectOutputStream)" : [ "valueComparator", "writeMultimap" ],
  "com.google.common.util.concurrent.ForwardingBlockingQueue:poll(long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.ImmutableMultiset:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.SetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "replaceValues" ],
  "com.google.common.util.concurrent.ListeningScheduledExecutorService:scheduleAtFixedRate(java.lang.Runnable,java.time.Duration,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.collect.Multisets:setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int,int)" : [ "checkNonnegative" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:entryIterator()" : [ "belowAll", "hasLowerBound", "lowerEndpoint", "lowerBoundType", "peekingIterator", "contains", "emptyIterator" ],
  "com.google.common.collect.CompactLinkedHashSet:getPredecessor(int)" : [ "requirePredecessors" ],
  "com.google.common.collect.Tables$UnmodifiableRowSortedMap:rowMap()" : [ "transformValues", "delegate" ],
  "com.google.common.cache.CacheBuilderSpec$IntegerParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)" : [ "isNullOrEmpty" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.io.LittleEndianDataInputStream:readShort()" : [ "readUnsignedShort" ],
  "com.google.common.hash.Hashing:murmur3_32(int)" : [ "<init>" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addValue(double)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.Iterators:retainAll(java.util.Iterator,java.util.Collection)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:combine(com.google.common.collect.ImmutableMultimap$Builder)" : [ "combine" ],
  "com.google.common.collect.ArrayTable:rowKeySet()" : [ "keySet" ],
  "com.google.common.collect.AbstractMapBasedMultiset:count(java.lang.Object)" : [ "safeGet", "get" ],
  "com.google.common.eventbus.EventBus:register(java.lang.Object)" : [ "register" ],
  "com.google.common.collect.ImmutableSet:hashCode()" : [ "hashCodeImpl" ],
  "com.google.common.math.Quantiles:quartiles()" : [ "scale" ],
  "com.google.common.collect.MapMaker:initialCapacity(int)" : [ "checkState", "checkArgument" ],
  "com.google.common.collect.EnumBiMap:inferValueTypeOrObjectUnderJ2cl(java.util.Map)" : [ "checkArgument" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:newReentrantReadWriteLock(java.lang.String)" : [ "newReentrantReadWriteLock" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.cache.LocalCache$Segment:runLockedCleanup(long)" : [ "drainReferenceQueues", "expireEntries" ],
  "com.google.common.collect.ImmutableMultimap$Builder:<init>()" : [ "preservesInsertionOrderOnPutsMap" ],
  "com.google.common.util.concurrent.AbstractExecutionThreadService:toString()" : [ "serviceName", "state" ],
  "com.google.common.collect.Iterators:get(java.util.Iterator,int)" : [ "checkNonnegative", "advance" ],
  "com.google.common.collect.CompactHashSet:readObject(java.io.ObjectInputStream)" : [ "init", "add" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,char,long)" : [ "<init>" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:remainingCapacity()" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:setCount(java.lang.Object,int,int)" : [ "delegate" ],
  "com.google.common.collect.MapMakerInternalMap$EntrySet:contains(java.lang.Object)" : [ "get", "valueEquivalence", "equivalent" ],
  "com.google.common.graph.ImmutableNetwork$Builder:<init>(com.google.common.graph.NetworkBuilder)" : [ "build" ],
  "com.google.common.primitives.ImmutableLongArray:of(long,long,long,long,long)" : [ "<init>" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:tailMap(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.collect.Collections2$PermutationCollection:size()" : [ "factorial" ],
  "com.google.common.collect.ArrayTable:valuesSpliterator()" : [ "indexed", "size", "getValue" ],
  "com.google.common.cache.LocalCache:expires()" : [ "expiresAfterWrite", "expiresAfterAccess" ],
  "com.google.common.collect.JdkBackedImmutableMultiset:<init>(java.util.Map,com.google.common.collect.ImmutableList,long)" : [ "<init>" ],
  "com.google.common.collect.Lists$ReverseList:reversePosition(int)" : [ "size", "checkPositionIndex" ],
  "com.google.common.hash.AbstractHasher:putBytes(byte[],int,int)" : [ "checkPositionIndexes" ],
  "com.google.common.math.BigIntegerMath$BigIntegerToDoubleRounder:toX(double,java.math.RoundingMode)" : [ "roundToBigInteger" ],
  "com.google.common.collect.Synchronized$SynchronizedEntry:<init>(java.util.Map$Entry,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:treeSetValues(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.base.CaseFormat$2:convert(com.google.common.base.CaseFormat,java.lang.String)" : [ "convert", "toUpperCase" ],
  "com.google.common.collect.ImmutableMultiset:builder()" : [ "<init>" ],
  "com.google.common.cache.LocalCache$EntryFactory$2:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)" : [ "copyEntry" ],
  "com.google.common.escape.CharEscaperBuilder:addEscapes(char[],java.lang.String)" : [ "checkNotNull", "addEscape" ],
  "com.google.common.collect.JdkBackedImmutableMultiset:create(java.util.Collection)" : [ "<init>", "newHashMapWithExpectedSize", "checkNotNull", "immutableEntry", "asImmutableList" ],
  "com.google.common.cache.LocalCache$Segment:<init>(com.google.common.cache.LocalCache,int,long,com.google.common.cache.AbstractCache$StatsCounter)" : [ "checkNotNull", "initTable", "newEntryArray", "usesKeyReferences", "usesValueReferences", "usesAccessQueue", "discardingQueue", "usesWriteQueue" ],
  "com.google.common.graph.MapIteratorCache:remove(java.lang.Object)" : [ "checkNotNull", "clearCache" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:size()" : [ "delegate" ],
  "com.google.common.collect.ImmutableEnumMap:entryIterator()" : [ "unmodifiableEntryIterator" ],
  "com.google.common.collect.Sets$UnmodifiableNavigableSet:headSet(java.lang.Object,boolean)" : [ "unmodifiableNavigableSet" ],
  "com.google.common.primitives.Chars:ensureCapacity(char[],int,int)" : [ "checkArgument" ],
  "com.google.common.collect.Iterators$ConcatenatedIterator:hasNext()" : [ "checkNotNull", "getTopMetaIterator" ],
  "com.google.common.collect.ImmutableMap:builder()" : [ "<init>" ],
  "com.google.common.collect.Maps$FilteredEntryMap$KeySet:toArray(java.lang.Object[])" : [ "newArrayList" ],
  "com.google.common.collect.ForwardingNavigableSet:ceiling(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache:containsKey(java.lang.Object)" : [ "containsKey", "hash", "segmentFor" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:getEntry(java.lang.Object,int)" : [ "getFirst", "tryDrainReferenceQueues", "equivalent" ],
  "com.google.common.graph.AbstractBaseGraph:degree(java.lang.Object)" : [ "saturatedAdd" ],
  "com.google.common.collect.RegularImmutableBiMap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull" ],
  "com.google.common.primitives.UnsignedInteger:dividedBy(com.google.common.primitives.UnsignedInteger)" : [ "fromIntBits", "divide", "checkNotNull" ],
  "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:putAll(com.google.common.hash.BloomFilterStrategies$LockFreeBitArray)" : [ "checkArgument", "putData" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:<init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSet$Builder:addAll(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.graph.ImmutableGraph:outDegree(java.lang.Object)" : [ "outDegree" ],
  "com.google.common.io.ByteStreams$LimitedInputStream:<init>(java.io.InputStream,long)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.util.concurrent.AtomicLongMap:getAndAccumulate(java.lang.Object,long,java.util.function.LongBinaryOperator)" : [ "checkNotNull", "getAndUpdate" ],
  "com.google.common.collect.TopKSelector:offerAll(java.lang.Iterable)" : [ "offerAll" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:comparator()" : [ "natural" ],
  "com.google.common.io.Files:append(java.lang.CharSequence,java.io.File,java.nio.charset.Charset)" : [ "write" ],
  "com.google.common.collect.ForwardingList:remove(int)" : [ "delegate" ],
  "com.google.common.collect.Multisets:copyHighestCountFirst(com.google.common.collect.Multiset)" : [ "copyFromEntries" ],
  "com.google.common.primitives.UnsignedInts:checkedCast(long)" : [ "checkArgument" ],
  "com.google.common.graph.EndpointPairIterator$Directed:computeNext()" : [ "ordered" ],
  "com.google.common.collect.HashBasedTable:size()" : [ "size" ],
  "com.google.common.collect.AbstractMultiset:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.ForwardingNavigableMap:firstEntry()" : [ "delegate" ],
  "com.google.common.collect.ForwardingBlockingDeque:drainTo(java.util.Collection,int)" : [ "delegate" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addValue(java.lang.Object)" : [ "addHolder" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:previous()" : [ "getDelegateListIterator" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:headSet(java.lang.Object)" : [ "getSortedSetDelegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:comparator()" : [ "getSortedSetDelegate" ],
  "com.google.common.reflect.Types:newTypeVariableImpl(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[])" : [ "<init>", "newProxy" ],
  "com.google.common.collect.ImmutableSortedMultiset$Builder:addAll(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.collect.TreeMultiset$AvlNode:recompute()" : [ "recomputeMultiset", "recomputeHeight" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:removeAll(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$EntrySet:removeIf(java.util.function.Predicate)" : [ "removeIf", "checkNotNull" ],
  "com.google.common.collect.ForwardingMap:values()" : [ "delegate" ],
  "com.google.common.io.Files:toByteArray(java.io.File)" : [ "asByteSource", "read" ],
  "com.google.common.collect.CollectCollectors:toImmutableListMultimap(java.util.function.Function,java.util.function.Function)" : [ "checkNotNull", "build", "builder", "combine" ],
  "com.google.common.cache.LocalCache$Values:removeIf(java.util.function.Predicate)" : [ "removeIf", "checkNotNull" ],
  "com.google.common.math.PairedStats:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.collect.TreeMultiset:readObject(java.io.ObjectInputStream)" : [ "<init>", "getFieldSetter", "set", "all", "successor", "populateMultiset" ],
  "com.google.common.collect.TreeMultiset$AvlNode:getElement()" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.io.Files:map(java.io.File,java.nio.channels.FileChannel$MapMode,long)" : [ "checkArgument", "mapInternal" ],
  "com.google.common.collect.Maps$SortedKeySet:tailSet(java.lang.Object)" : [ "<init>", "map" ],
  "com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ:<init>(java.lang.Object)" : [ "<init>" ],
  "com.google.common.io.CharSink:writeLines(java.util.Iterator,java.lang.String)" : [ "checkNotNull", "openBufferedStream" ],
  "com.google.common.collect.ImmutableMultiset:writeReplace()" : [ "<init>" ],
  "com.google.common.primitives.SignedBytes:sortDescending(byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedMap:lastKey()" : [ "delegate" ],
  "com.google.common.collect.ForwardingCollection:standardToArray(java.lang.Object[])" : [ "toArrayImpl" ],
  "com.google.common.collect.ConcurrentHashMultiset:removeExactly(java.lang.Object,int)" : [ "checkPositive", "safeGet" ],
  "com.google.common.util.concurrent.ExecutionList:execute()" : [ "executeListener" ],
  "com.google.common.collect.ImmutableListMultimap:writeObject(java.io.ObjectOutputStream)" : [ "writeMultimap" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:subMap(java.lang.Object,java.lang.Object)" : [ "subMap" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:<init>(java.util.NavigableMap)" : [ "<init>", "all" ],
  "com.google.common.collect.EmptyContiguousSet:asList()" : [ "of" ],
  "com.google.common.collect.ImmutableSetMultimap:fromMapEntries(java.util.Collection,java.util.Comparator)" : [ "<init>", "of", "valueSet", "put", "buildOrThrow" ],
  "com.google.common.base.CharMatcher$None:indexIn(java.lang.CharSequence,int)" : [ "checkPositionIndex" ],
  "com.google.common.collect.CompactHashMap$MapEntry:getValue()" : [ "delegateOrNull", "uncheckedCastNullableTToT", "updateLastKnownIndex", "unsafeNull" ],
  "com.google.common.cache.LocalCache:getOrDefault(java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.cache.LocalCache$Strength$1:defaultEquivalence()" : [ "equals" ],
  "com.google.common.io.TempFileCreator$JavaNioCreator:createTempDir()" : [ "value" ],
  "com.google.common.base.Suppliers$MemoizingSupplier:get()" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.collect.StandardTable$Row:get(java.lang.Object)" : [ "updateBackingRowMapField", "safeGet" ],
  "com.google.common.collect.RegularContiguousSet:range(com.google.common.collect.BoundType,com.google.common.collect.BoundType)" : [ "create" ],
  "com.google.common.collect.ForwardingList:lastIndexOf(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.CacheBuilder:refreshAfterWrite(java.time.Duration)" : [ "refreshAfterWrite", "toNanosSaturated" ],
  "com.google.common.util.concurrent.FuturesGetChecked:getChecked(java.util.concurrent.Future,java.lang.Class,long,java.util.concurrent.TimeUnit)" : [ "bestGetCheckedTypeValidator", "newWithCause", "wrapAndThrowExceptionOrError" ],
  "com.google.common.collect.Lists:newArrayListWithExpectedSize(int)" : [ "computeArrayListCapacity" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "transformEntries", "fromMap" ],
  "com.google.common.net.InetAddresses:fromIPv4BigInteger(java.math.BigInteger)" : [ "fromBigInteger" ],
  "com.google.common.reflect.TypeResolver:resolveType(java.lang.reflect.Type)" : [ "checkNotNull", "resolveGenericArrayType" ],
  "com.google.common.collect.MultimapBuilder$SetMultimapBuilder:build(com.google.common.collect.Multimap)" : [ "build" ],
  "com.google.common.math.LinearTransformation:vertical(double)" : [ "<init>", "checkArgument", "isFinite" ],
  "com.google.common.util.concurrent.MoreExecutors:renamingDecorator(java.util.concurrent.Executor,com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.CollectCollectors:toMultiset(java.util.function.Function,java.util.function.ToIntFunction,java.util.function.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.HashBasedTable$Factory:get()" : [ "newLinkedHashMapWithExpectedSize" ],
  "com.google.common.util.concurrent.AtomicLongMap:decrementAndGet(java.lang.Object)" : [ "addAndGet" ],
  "com.google.common.primitives.ImmutableIntArray:of(int,int)" : [ "<init>" ],
  "com.google.common.collect.ForwardingConcurrentMap:replace(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.io.ByteStreams:newDataInput(byte[])" : [ "newDataInput" ],
  "com.google.common.cache.LocalCache$Segment:evictEntries(com.google.common.cache.ReferenceEntry)" : [ "evictsBySize", "drainRecencyQueue", "removeEntry", "getNextEvictable" ],
  "com.google.common.collect.StandardRowSortedTable:<init>(java.util.SortedMap,com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.collect.Iterables:concat(java.lang.Iterable)" : [ "concat" ],
  "com.google.common.base.Platform:compilePattern(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.MultimapBuilder:treeKeys()" : [ "treeKeys", "natural" ],
  "com.google.common.cache.CacheBuilder:refreshAfterWrite(long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "checkState", "checkArgument" ],
  "com.google.common.collect.ImmutableList:spliterator()" : [ "indexed" ],
  "com.google.common.collect.LinkedHashMultimap$ValueSet:remove(java.lang.Object)" : [ "smearedHash", "mask", "matchesValue" ],
  "com.google.common.collect.ImmutableTable:containsColumn(java.lang.Object)" : [ "containsColumn" ],
  "com.google.common.collect.Iterables:any(java.lang.Iterable,com.google.common.base.Predicate)" : [ "any" ],
  "com.google.common.primitives.ImmutableIntArray:forEach(java.util.function.IntConsumer)" : [ "checkNotNull" ],
  "com.google.common.collect.RegularImmutableSortedSet:lower(java.lang.Object)" : [ "headIndex" ],
  "com.google.common.collect.Maps$NavigableKeySet:tailSet(java.lang.Object,boolean)" : [ "map" ],
  "com.google.common.util.concurrent.ThreadFactoryBuilder:build()" : [ "doBuild" ],
  "com.google.common.collect.SingletonImmutableList:subList(int,int)" : [ "checkPositionIndexes", "of" ],
  "com.google.common.math.StatsAccumulator:min()" : [ "checkState" ],
  "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,int)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.ContiguousSet:toString()" : [ "toString" ],
  "com.google.common.collect.ImmutableSet$Builder:forceJdk()" : [ "<init>" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:edgeValueOrDefault(com.google.common.graph.EndpointPair,java.lang.Object)" : [ "delegate", "transpose" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:replaceAll(java.util.function.BiFunction)" : [ "delegate" ],
  "com.google.common.collect.Multimaps:filterValues(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)" : [ "filterEntries", "valuePredicateOnEntries" ],
  "com.google.common.graph.Graphs:transpose(com.google.common.graph.Network)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap:<init>(java.util.Map)" : [ "checkArgument" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:addOutEdge(java.lang.Object,java.lang.Object)" : [ "addOutEdge", "getReference", "checkState" ],
  "com.google.common.base.Functions$ForMapWithDefault:<init>(java.util.Map,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.Multisets$FilteredMultiset:iterator()" : [ "filter" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:linkedHashSetValues(int)" : [ "checkNonnegative" ],
  "com.google.common.collect.ImmutableMap$Builder:putAll(java.lang.Iterable)" : [ "ensureCapacity", "put" ],
  "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap:createValues()" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableTable:forCellsInternal(java.lang.Iterable,java.util.Comparator,java.util.Comparator)" : [ "copyOf", "sortedCopyOf", "forOrderedComponents" ],
  "com.google.common.collect.Sets$DescendingSet:comparator()" : [ "natural", "reverse" ],
  "com.google.common.graph.StandardMutableGraph:removeNode(java.lang.Object)" : [ "removeNode" ],
  "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder:<init>()" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset:count(java.lang.Object)" : [ "count", "get", "contains", "comparator" ],
  "com.google.common.collect.ImmutableMapValues:spliterator()" : [ "map", "entrySet" ],
  "com.google.common.collect.CompactHashMap:setKey(int,java.lang.Object)" : [ "requireKeys" ],
  "com.google.common.util.concurrent.ThreadFactoryBuilder:setPriority(int)" : [ "checkArgument" ],
  "com.google.common.collect.TreeTraverser$PreOrderIterator:next()" : [ "checkNotNull" ],
  "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,double)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.Maps:uniqueIndex(java.lang.Iterable,com.google.common.base.Function)" : [ "uniqueIndex", "builderWithExpectedSize" ],
  "com.google.common.base.Splitter:limit(int)" : [ "<init>", "checkArgument" ],
  "com.google.common.graph.AbstractNetwork:validateEndpoints(com.google.common.graph.EndpointPair)" : [ "checkNotNull", "checkArgument", "isOrderingCompatible" ],
  "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "of" ],
  "com.google.common.collect.Maps:transformValues(java.util.Map,com.google.common.base.Function)" : [ "transformEntries" ],
  "com.google.common.collect.HashMultiset:writeObject(java.io.ObjectOutputStream)" : [ "writeMultiset" ],
  "com.google.common.primitives.Doubles:toArray(java.util.Collection)" : [ "toDoubleArray", "checkNotNull" ],
  "com.google.common.collect.Lists:lastIndexOfImpl(java.util.List,java.lang.Object)" : [ "lastIndexOfRandomAccess", "equal" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)" : [ "<init>" ],
  "com.google.common.cache.CacheBuilder:valueEquivalence(com.google.common.base.Equivalence)" : [ "checkState", "checkNotNull" ],
  "com.google.common.graph.StandardMutableValueGraph:newConnections()" : [ "of" ],
  "com.google.common.io.MoreFiles:throwDeleteFailed(java.nio.file.Path,java.util.Collection)" : [ "pathNotFound" ],
  "com.google.common.collect.GeneralRange:<init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)" : [ "checkNotNull", "uncheckedCastNullableTToT", "checkArgument" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:lower(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.util.concurrent.FakeTimeLimiter:callUninterruptiblyWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)" : [ "callWithTimeout" ],
  "com.google.common.collect.Maps$FilteredKeyMap:createKeySet()" : [ "filter" ],
  "com.google.common.util.concurrent.Monitor:<init>()" : [ "<init>" ],
  "com.google.common.collect.MinMaxPriorityQueue:removeAt(int)" : [ "<init>", "checkPositionIndex", "elementData", "heapForIndex", "swapWithConceptuallyLastElement", "fillHole" ],
  "com.google.common.util.concurrent.ClosingFuture$Peeker:<init>(com.google.common.collect.ImmutableList)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractMultiset:retainAll(java.util.Collection)" : [ "retainAllImpl" ],
  "com.google.common.collect.ImmutableEnumMap:asImmutable(java.util.EnumMap)" : [ "<init>", "of", "getOnlyElement" ],
  "com.google.common.io.Resources:readLines(java.net.URL,java.nio.charset.Charset)" : [ "<init>", "readLines" ],
  "com.google.common.collect.ForwardingBlockingDeque:drainTo(java.util.Collection)" : [ "delegate" ],
  "com.google.common.reflect.Invokable:isPublic()" : [ "getModifiers" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:descendingMap()" : [ "<init>" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:hashSetValues(int)" : [ "checkNonnegative" ],
  "com.google.common.collect.CompactHashSet:writeObject(java.io.ObjectOutputStream)" : [ "size", "iterator" ],
  "com.google.common.collect.LinkedHashMultimap:create(int,int)" : [ "<init>", "capacity" ],
  "com.google.common.util.concurrent.ListenerCallQueue:dispatch()" : [ "dispatch" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:build()" : [ "from", "onKeys", "immutableSortedCopy", "fromMapEntries" ],
  "com.google.common.escape.Escapers:computeReplacement(com.google.common.escape.UnicodeEscaper,int)" : [ "stringOrNull" ],
  "com.google.common.util.concurrent.Monitor:enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)" : [ "enterIfInterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:isHashCodeFast()" : [ "isHashCodeFast" ],
  "com.google.common.reflect.TypeToken:isArray()" : [ "getComponentType" ],
  "com.google.common.net.InternetDomainName:registrySuffix()" : [ "hasRegistrySuffix", "ancestor", "registrySuffixIndex" ],
  "com.google.common.primitives.UnsignedInteger:valueOf(java.lang.String,int)" : [ "fromIntBits", "parseUnsignedInt" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:navigableKeySet()" : [ "fromMap" ],
  "com.google.common.graph.Traverser$Traversal:inTree(com.google.common.graph.SuccessorsFunction)" : [ "<init>" ],
  "com.google.common.collect.HashMultimap:<init>(com.google.common.collect.Multimap)" : [ "newHashMapWithExpectedSize" ],
  "com.google.common.collect.Sets$DescendingSet:<init>(java.util.NavigableSet)" : [ "<init>" ],
  "com.google.common.io.Files:copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable)" : [ "asCharSource", "copyTo" ],
  "com.google.common.primitives.ImmutableLongArray:equals(java.lang.Object)" : [ "length", "get" ],
  "com.google.common.collect.ImmutableRangeSet:union(com.google.common.collect.RangeSet)" : [ "unionOf", "concat", "asRanges" ],
  "com.google.common.collect.ConcurrentHashMultiset:toArray()" : [ "snapshot" ],
  "com.google.common.collect.CollectCollectors:flatteningToImmutableSetMultimap(java.util.function.Function,java.util.function.Function)" : [ "checkNotNull", "flatteningToMultimap", "linkedHashKeys", "linkedHashSetValues", "copyOf" ],
  "com.google.common.collect.ForwardingList:<init>()" : [ "<init>" ],
  "com.google.common.graph.Graphs$TransposedNetwork:edgeConnectingOrNull(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.CharMatcher:precomputedInternal()" : [ "setBits", "precomputedPositive", "toString" ],
  "com.google.common.collect.Ordering:lexicographical()" : [ "<init>" ],
  "com.google.common.util.concurrent.MoreExecutors:renamingDecorator(java.util.concurrent.ExecutorService,com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.graph.DirectedGraphConnections:ofImmutable(java.lang.Object,java.lang.Iterable,com.google.common.base.Function)" : [ "<init>", "checkNotNull", "builder", "nodeU", "nodeV", "add", "checkArgument", "build" ],
  "com.google.common.hash.Murmur3_128HashFunction:newHasher()" : [ "<init>" ],
  "com.google.common.primitives.ImmutableLongArray:copyOf(long[])" : [ "<init>" ],
  "com.google.common.collect.FilteredEntryMultimap$AsMap$1KeySetImpl:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:add(java.lang.Object)" : [ "checkNotNull", "ensureTableCapacity", "insertInHashTable" ],
  "com.google.common.collect.AbstractListMultimap:removeAll(java.lang.Object)" : [ "removeAll" ],
  "com.google.common.collect.ImmutableSortedMap:copyOfSorted(java.util.SortedMap)" : [ "isPartialView", "fromEntries" ],
  "com.google.common.collect.RegularImmutableTable:forCells(java.util.List,java.util.Comparator,java.util.Comparator)" : [ "checkNotNull", "forCellsInternal" ],
  "com.google.common.collect.JdkBackedImmutableBiMap:createKeySet()" : [ "<init>" ],
  "com.google.common.collect.Iterables:unmodifiableIterable(com.google.common.collect.ImmutableCollection)" : [ "checkNotNull" ],
  "com.google.common.escape.CharEscaper:escapeSlow(java.lang.String,int)" : [ "charBufferFromThreadLocal", "growBuffer" ],
  "com.google.common.cache.CacheBuilder:newBuilder()" : [ "<init>" ],
  "com.google.common.util.concurrent.SmoothRateLimiter:doSetRate(double,long)" : [ "resync" ],
  "com.google.common.collect.AbstractMultimap:hashCode()" : [ "asMap" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:removeOutEdge(java.lang.Object)" : [ "removeOutEdge", "getReference", "checkState" ],
  "com.google.common.graph.EndpointPair$Ordered:hashCode()" : [ "source", "target" ],
  "com.google.common.net.InetAddresses:fromBigInteger(java.math.BigInteger,boolean)" : [ "checkArgument" ],
  "com.google.common.util.concurrent.AbstractService$StateSnapshot:<init>(com.google.common.util.concurrent.Service$State)" : [ "<init>" ],
  "com.google.common.util.concurrent.ForwardingBlockingQueue:offer(java.lang.Object,long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.Tables$TransformedTable:createValues()" : [ "transform" ],
  "com.google.common.collect.Cut$AboveValue:canonical(com.google.common.collect.DiscreteDomain)" : [ "leastValueAbove", "aboveAll" ],
  "com.google.common.io.Files:createParentDirs(java.io.File)" : [ "checkNotNull" ],
  "com.google.common.graph.UndirectedNetworkConnections:<init>(java.util.Map)" : [ "<init>" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:successors()" : [ "successorsMultiset" ],
  "com.google.common.io.Resources:getResource(java.lang.String)" : [ "firstNonNull", "checkArgument" ],
  "com.google.common.collect.Maps$AsMapView:forEach(java.util.function.BiConsumer)" : [ "checkNotNull", "backingSet" ],
  "com.google.common.base.CaseFormat$StringConverter:doBackward(java.lang.String)" : [ "to" ],
  "com.google.common.graph.EndpointPair$Ordered:equals(java.lang.Object)" : [ "isOrdered", "source", "target" ],
  "com.google.common.collect.ExplicitOrdering:<init>(java.util.List)" : [ "<init>", "indexMap" ],
  "com.google.common.math.Stats:fromByteArray(byte[])" : [ "checkNotNull", "checkArgument", "readFrom" ],
  "com.google.common.collect.StandardTable:rowMap()" : [ "createRowMap" ],
  "com.google.common.collect.Maps$6:descendingSet()" : [ "descendingSet" ],
  "com.google.common.collect.Multimaps:unmodifiableSetMultimap(com.google.common.collect.SetMultimap)" : [ "<init>" ],
  "com.google.common.cache.LocalCache:usesWriteEntries()" : [ "usesWriteQueue", "recordsWrite" ],
  "com.google.common.base.Equivalence$Wrapper:hashCode()" : [ "hash" ],
  "com.google.common.collect.EnumHashBiMap:inverse()" : [ "inverse" ],
  "com.google.common.collect.Collections2$OrderedPermutationCollection:iterator()" : [ "<init>" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:wrapAndThrowExecutionExceptionOrError(java.lang.Throwable)" : [ "<init>" ],
  "com.google.common.collect.ImmutableMultimap:copyOf(java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.math.LinearTransformation$RegularLinearTransformation:createInverse()" : [ "<init>" ],
  "com.google.common.io.Closer:rethrow(java.lang.Throwable,java.lang.Class)" : [ "checkNotNull", "propagateIfPossible" ],
  "com.google.common.collect.ConcurrentHashMultiset:size()" : [ "saturatedCast" ],
  "com.google.common.collect.ImmutableList$Builder:combine(com.google.common.collect.ImmutableList$Builder)" : [ "checkNotNull", "add" ],
  "com.google.common.collect.SortedMapDifference:entriesOnlyOnLeft()" : [ "entriesOnlyOnLeft" ],
  "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:addAll(int,java.util.Collection)" : [ "checkNotNull", "checkPositionIndex" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:sortedMap()" : [ "sortedMap" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:tailSet(java.lang.Object)" : [ "tailSet" ],
  "com.google.common.collect.LinkedHashMultiset:add(java.lang.Object,int)" : [ "add" ],
  "com.google.common.reflect.TypeToken:isSupertypeOf(com.google.common.reflect.TypeToken)" : [ "isSubtypeOf", "getType" ],
  "com.google.common.math.PairedStats:sampleCovariance()" : [ "checkState", "count" ],
  "com.google.common.io.Files$FileByteSource:<init>(java.io.File)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ForwardingMap:put(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.math.Stats:sampleStandardDeviation()" : [ "sampleVariance" ],
  "com.google.common.collect.Synchronized$SynchronizedEntry:hashCode()" : [ "delegate" ],
  "com.google.common.io.MoreFiles:fileTreeChildren(java.nio.file.Path)" : [ "listFiles", "of" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:putCoalescing(com.google.common.collect.Range,java.lang.Object)" : [ "encloses", "put", "checkNotNull", "intersection" ],
  "com.google.common.collect.ImmutableList:copyOf(java.util.Collection)" : [ "asList", "asImmutableList" ],
  "com.google.common.graph.UndirectedNetworkConnections:edgesConnecting(java.lang.Object)" : [ "<init>" ],
  "com.google.common.util.concurrent.RateLimiter:tryAcquire(int)" : [ "tryAcquire" ],
  "com.google.common.hash.FarmHashFingerprint64:hashLength0to16(byte[],int,int)" : [ "load64", "hashLength16", "load32", "shiftMix" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:remove()" : [ "checkState" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSet:comparator()" : [ "delegate" ],
  "com.google.common.collect.Multimaps$MapMultimap:remove(java.lang.Object,java.lang.Object)" : [ "immutableEntry" ],
  "com.google.common.collect.ArrayTable:column(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.reflect.TypeToken:isSubtypeOfArrayType(java.lang.reflect.GenericArrayType)" : [ "of" ],
  "com.google.common.util.concurrent.CollectionFuture$ListFuture:<init>(com.google.common.collect.ImmutableCollection,boolean)" : [ "<init>" ],
  "com.google.common.graph.Graphs:copyOf(com.google.common.graph.ValueGraph)" : [ "from", "expectedNodeCount", "build", "nodeU", "nodeV" ],
  "com.google.common.collect.Sets:newConcurrentHashSet(java.lang.Iterable)" : [ "newConcurrentHashSet", "addAll" ],
  "com.google.common.collect.ImmutableSortedMap:higherKey(java.lang.Object)" : [ "keyOrNull", "higherEntry" ],
  "com.google.common.collect.Iterators:getLast(java.util.Iterator,java.lang.Object)" : [ "getLast" ],
  "com.google.common.collect.ForwardingSortedMap:standardContainsKey(java.lang.Object)" : [ "tailMap", "unsafeCompare", "comparator" ],
  "com.google.common.escape.CharEscaperBuilder$CharArrayDecorator:<init>(char[][])" : [ "<init>" ],
  "com.google.common.collect.SortedIterables:comparator(java.util.SortedSet)" : [ "natural" ],
  "com.google.common.math.PairedStats:populationCovariance()" : [ "checkState", "count" ],
  "com.google.common.collect.ImmutableSortedMap:emptyMap(java.util.Comparator)" : [ "<init>", "natural", "of", "emptySet" ],
  "com.google.common.reflect.TypeToken$TypeCollector:collectTypes(java.lang.Object)" : [ "collectTypes", "of" ],
  "com.google.common.collect.Maps$NavigableAsMapView:entrySpliterator()" : [ "map" ],
  "com.google.common.base.Stopwatch:createUnstarted()" : [ "<init>" ],
  "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:bmix64(long,long)" : [ "mixK1", "mixK2" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:maxEncodedSize(int)" : [ "divide" ],
  "com.google.common.io.Files$1:<init>()" : [ "newArrayList" ],
  "com.google.common.io.ByteSource$SlicedByteSource:sliceStream(java.io.InputStream)" : [ "skipUpTo", "create", "register", "rethrow", "close", "limit" ],
  "com.google.common.base.CharMatcher:precomputed()" : [ "precomputeCharMatcher" ],
  "com.google.common.collect.Synchronized$SynchronizedSetMultimap:removeAll(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.FluentIterable:transformAndConcat(com.google.common.base.Function)" : [ "concat", "transform" ],
  "com.google.common.collect.ImmutableCollection:toArray()" : [ "toArray" ],
  "com.google.common.collect.ForwardingCollection:standardRetainAll(java.util.Collection)" : [ "retainAll", "iterator" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,int,int)" : [ "<init>" ],
  "com.google.common.io.CharSequenceReader:<init>(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractSortedSetMultimap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder:getBestValidator()" : [ "weakSetValidator" ],
  "com.google.common.collect.ForwardingSortedSet:delegate()" : [ "delegate" ],
  "com.google.common.collect.Multimaps$MapMultimap:createKeys()" : [ "<init>" ],
  "com.google.common.io.Files:newReader(java.io.File,java.nio.charset.Charset)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.MoreExecutors:listeningDecorator(java.util.concurrent.ExecutorService)" : [ "<init>" ],
  "com.google.common.escape.Escapers$Builder:addEscape(char,java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMultimap$KeysSerializedForm:readResolve()" : [ "keys" ],
  "com.google.common.reflect.TypeToken:isSupertypeOfArray(java.lang.reflect.GenericArrayType)" : [ "of" ],
  "com.google.common.collect.AbstractNavigableMap:lastEntry()" : [ "getNext" ],
  "com.google.common.math.LinearTransformation$VerticalLinearTransformation:inverse()" : [ "createInverse" ],
  "com.google.common.primitives.Bytes$ByteArrayAsList:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.Multimaps:synchronizedSetMultimap(com.google.common.collect.SetMultimap)" : [ "setMultimap" ],
  "com.google.common.util.concurrent.ForwardingFuture:<init>()" : [ "<init>" ],
  "com.google.common.collect.Iterables:indexOf(java.lang.Iterable,com.google.common.base.Predicate)" : [ "indexOf" ],
  "com.google.common.collect.ImmutableMultiset$Builder:setCount(java.lang.Object,int)" : [ "checkNotNull" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,int,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.FluentIterable:toSortedSet(java.util.Comparator)" : [ "copyOf", "getDelegate" ],
  "com.google.common.io.Files:simplifyPath(java.lang.String)" : [ "checkNotNull", "on", "omitEmptyStrings", "split", "join" ],
  "com.google.common.collect.ImmutableSortedSet$SerializedForm:readResolve()" : [ "<init>", "build" ],
  "com.google.common.collect.TreeMultiset$AvlNode:rebalance()" : [ "balanceFactor", "rotateRight", "rotateLeft", "recomputeHeight" ],
  "com.google.common.util.concurrent.AtomicLongMap:create()" : [ "<init>" ],
  "com.google.common.collect.AbstractMultimap$Values:spliterator()" : [ "valueSpliterator" ],
  "com.google.common.collect.CartesianList$1:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.ForwardingMap:standardPutAll(java.util.Map)" : [ "putAllImpl" ],
  "com.google.common.math.IntMath:log10Floor(int)" : [ "lessThanBranchFree" ],
  "com.google.common.eventbus.SubscriberRegistry:<init>(com.google.common.eventbus.EventBus)" : [ "checkNotNull", "newConcurrentMap" ],
  "com.google.common.cache.LocalCache$Segment:expand()" : [ "newEntryArray", "copyEntry", "removeCollectedEntry" ],
  "com.google.common.collect.ForwardingMultimap:keys()" : [ "delegate" ],
  "com.google.common.collect.Iterators$ConcatenatedIterator:next()" : [ "hasNext" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap:<init>(java.util.SortedMap,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.primitives.ImmutableDoubleArray:get(int)" : [ "checkElementIndex", "length" ],
  "com.google.common.util.concurrent.AbstractIdleService:awaitTerminated(java.time.Duration)" : [ "awaitTerminated" ],
  "com.google.common.util.concurrent.ListeningScheduledExecutorService:scheduleWithFixedDelay(java.lang.Runnable,java.time.Duration,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.primitives.ImmutableIntArray$Builder:addAll(java.util.stream.IntStream)" : [ "ensureRoomFor", "saturatedCast", "add" ],
  "com.google.common.collect.ForwardingTable:<init>()" : [ "<init>" ],
  "com.google.common.collect.Lists$Partition:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.hash.Hasher:putChar(char)" : [ "putChar" ],
  "com.google.common.util.concurrent.ClosingFuture:closeQuietly(java.lang.AutoCloseable,java.util.concurrent.Executor)" : [ "directExecutor" ],
  "com.google.common.cache.LocalCache$Segment:drainValueReferenceQueue()" : [ "reclaimValue" ],
  "com.google.common.collect.ForwardingSortedSet:comparator()" : [ "delegate" ],
  "com.google.common.collect.Lists$AbstractListWrapper:<init>(java.util.List)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMap:toImmutableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" : [ "toImmutableMap" ],
  "com.google.common.collect.ImmutableList:contains(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.util.concurrent.InterruptibleTask$Blocker:<init>(com.google.common.util.concurrent.InterruptibleTask)" : [ "run" ],
  "com.google.common.cache.LocalCache:reclaimKey(com.google.common.cache.ReferenceEntry)" : [ "reclaimKey", "segmentFor" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedMap:subMap(java.lang.Object,java.lang.Object)" : [ "sortedMap", "delegate" ],
  "com.google.common.cache.ForwardingCache:cleanUp()" : [ "delegate" ],
  "com.google.common.collect.Tables$UnmodifiableTable:rowKeySet()" : [ "rowKeySet" ],
  "com.google.common.collect.Iterables:toString(java.lang.Iterable)" : [ "toString" ],
  "com.google.common.collect.TreeMultiset:setCount(java.lang.Object,int)" : [ "setCount", "checkNonnegative", "contains", "checkArgument", "get", "add", "comparator", "checkAndSet" ],
  "com.google.common.collect.ImmutableMultimap$Keys:elementSet()" : [ "keySet" ],
  "com.google.common.collect.CollectCollectors:flatteningToMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.Multimaps$MapMultimap:createAsMap()" : [ "<init>" ],
  "com.google.common.collect.DescendingImmutableSortedSet:floor(java.lang.Object)" : [ "ceiling" ],
  "com.google.common.io.Files:getNameWithoutExtension(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.io.MultiInputStream:advance()" : [ "close" ],
  "com.google.common.collect.ArrayListMultimap:<init>(int,int)" : [ "newHashMapWithExpectedSize", "checkNonnegative" ],
  "com.google.common.hash.Fingerprint2011:fingerprint(byte[],int,int)" : [ "murmurHash64WithSeed", "hashLength33To64", "fullFingerprint", "load64", "hash128to64" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:floorEntry(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractMultimap$Values:contains(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.collect.ImmutableSortedSet:tailSet(java.lang.Object,boolean)" : [ "checkNotNull" ],
  "com.google.common.collect.StandardTable:rowKeySet()" : [ "rowMap" ],
  "com.google.common.collect.ImmutableMultimap$Values:<init>(com.google.common.collect.ImmutableMultimap)" : [ "<init>" ],
  "com.google.common.cache.CacheLoader$SupplierToCacheLoader:<init>(com.google.common.base.Supplier)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Iterators:concat(java.util.Iterator,java.util.Iterator,java.util.Iterator)" : [ "concat", "checkNotNull" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:checkHealthy()" : [ "<init>", "filterKeys", "not", "equalTo" ],
  "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:<init>(com.google.common.collect.SortedSetMultimap)" : [ "<init>" ],
  "com.google.common.util.concurrent.Futures:inCompletionOrder(java.lang.Iterable)" : [ "gwtCompatibleToArray", "builderWithExpectedSize", "add", "build", "directExecutor" ],
  "com.google.common.collect.MapMakerInternalMap$Values:contains(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.collect.ImmutableRangeMap$Builder:putAll(com.google.common.collect.RangeMap)" : [ "put" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "wrap", "getSortedSetDelegate" ],
  "com.google.common.collect.Sets$PowerSet:contains(java.lang.Object)" : [ "keySet" ],
  "com.google.common.collect.RegularImmutableSortedSet:equals(java.lang.Object)" : [ "size", "hasSameComparator", "iterator", "containsAll" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:transformEntry(java.util.Map$Entry)" : [ "transformEntry" ],
  "com.google.common.collect.FluentIterable:stream()" : [ "stream", "getDelegate" ],
  "com.google.common.primitives.Booleans:reverse(boolean[])" : [ "reverse", "checkNotNull" ],
  "com.google.common.collect.MapMaker:keyEquivalence(com.google.common.base.Equivalence)" : [ "checkState", "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:subSet(com.google.common.collect.Range)" : [ "subRangeSet", "asSet" ],
  "com.google.common.collect.CompactLinkedHashSet:moveLastEntry(int,int)" : [ "moveLastEntry", "setSucceeds", "getPredecessor", "getSuccessor", "requirePredecessors", "requireSuccessors" ],
  "com.google.common.cache.LocalCache$WeakEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "unset" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:first()" : [ "sortedMap" ],
  "com.google.common.collect.ImmutableSortedSet:copyOfSorted(java.util.SortedSet)" : [ "<init>", "comparator", "copyOf", "emptySet" ],
  "com.google.common.base.Preconditions:checkElementIndex(int,int,java.lang.String)" : [ "badElementIndex" ],
  "com.google.common.util.concurrent.SettableFuture:create()" : [ "<init>" ],
  "com.google.common.collect.Maps$KeySet:contains(java.lang.Object)" : [ "map" ],
  "com.google.common.collect.ForwardingSortedMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "delegate" ],
  "com.google.common.collect.ArrayTable$ArrayMap:entryIterator()" : [ "size" ],
  "com.google.common.graph.GraphBuilder:undirected()" : [ "<init>" ],
  "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1:<init>()" : [ "<init>", "createStarted" ],
  "com.google.common.reflect.Reflection:newProxy(java.lang.Class,java.lang.reflect.InvocationHandler)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:equals(java.lang.Object)" : [ "equals", "size" ],
  "com.google.common.collect.Multimaps$TransformedEntriesMultimap:entryIterator()" : [ "transform", "asEntryToEntryFunction" ],
  "com.google.common.collect.RegularImmutableBiMap:checkNoConflictInValueBucket(java.lang.Object,java.util.Map$Entry,com.google.common.collect.ImmutableMapEntry)" : [ "getNextInValueBucket" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:newReentrantLock(java.lang.String)" : [ "newReentrantLock" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:removeInEdge(java.lang.Object,boolean)" : [ "removeOutEdge" ],
  "com.google.common.reflect.TypeToken:isSubtypeOfParameterizedType(java.lang.reflect.ParameterizedType)" : [ "of", "getRawType", "someRawTypeIsSubclassOf", "getCovariantTypeResolver", "resolveType" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:newReentrantLock(java.lang.String,boolean)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedMap:firstKey()" : [ "keySet", "first" ],
  "com.google.common.primitives.Longs:reverse(long[])" : [ "reverse", "checkNotNull" ],
  "com.google.common.collect.ImmutableSortedMap$Builder:combine(com.google.common.collect.ImmutableMap$Builder)" : [ "combine" ],
  "com.google.common.cache.LocalCache:nullifyWriteOrder(com.google.common.cache.ReferenceEntry)" : [ "nullEntry" ],
  "com.google.common.math.DoubleMath:mean(java.lang.Iterable)" : [ "mean" ],
  "com.google.common.collect.ForwardingNavigableSet:standardPollLast()" : [ "pollNext", "descendingIterator" ],
  "com.google.common.collect.AbstractNavigableMap:lowerKey(java.lang.Object)" : [ "keyOrNull", "lowerEntry" ],
  "com.google.common.collect.ImmutableList$Builder:<init>()" : [ "<init>" ],
  "com.google.common.io.ByteSource$EmptyByteSource:<init>()" : [ "<init>" ],
  "com.google.common.collect.CompactHashSet:spliterator()" : [ "needsAllocArrays", "delegateOrNull", "requireElements" ],
  "com.google.common.math.LinearTransformation:horizontal(double)" : [ "<init>", "checkArgument", "isFinite" ],
  "com.google.common.math.LongMath:ceilingPowerOfTwo(long)" : [ "checkPositive" ],
  "com.google.common.base.CharMatcher:indexIn(java.lang.CharSequence,int)" : [ "checkPositionIndex" ],
  "com.google.common.collect.RegularContiguousSet:tailSetImpl(java.lang.Object,boolean)" : [ "tailSetImpl" ],
  "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:copy()" : [ "<init>", "toPlainArray" ],
  "com.google.common.util.concurrent.ServiceManager:startAsync()" : [ "checkState", "tryStartTiming", "iterator" ],
  "com.google.common.eventbus.EventBus:unregister(java.lang.Object)" : [ "unregister" ],
  "com.google.common.primitives.Chars:rotate(char[],int)" : [ "rotate" ],
  "com.google.common.collect.ForwardingSortedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "replaceValues", "delegate" ],
  "com.google.common.math.LinearTransformation$VerticalLinearTransformation:<init>(double)" : [ "<init>" ],
  "com.google.common.primitives.UnsignedLong:valueOf(java.math.BigInteger)" : [ "checkNotNull", "checkArgument", "fromLongBits" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:findMinChild(int)" : [ "findMin", "getLeftChildIndex" ],
  "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1:schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable)" : [ "<init>" ],
  "com.google.common.collect.SortedMultisets$NavigableElementSet:descendingIterator()" : [ "descendingSet" ],
  "com.google.common.collect.ImmutableRangeSet:rangeContaining(java.lang.Comparable)" : [ "binarySearch", "belowValue", "natural", "contains" ],
  "com.google.common.collect.LinkedListMultimap:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.collect.Multimaps:index(java.util.Iterator,com.google.common.base.Function)" : [ "checkNotNull", "builder", "put", "build" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:remove(java.lang.Object)" : [ "contains" ],
  "com.google.common.collect.AbstractSortedKeySortedSetMultimap:<init>(java.util.SortedMap)" : [ "<init>" ],
  "com.google.common.collect.Tables$TransposeTable:<init>(com.google.common.collect.Table)" : [ "checkNotNull" ],
  "com.google.common.base.internal.Finalizer:startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)" : [ "<init>" ],
  "com.google.common.collect.Multimaps$TransformedEntriesListMultimap:transform(java.lang.Object,java.util.Collection)" : [ "transform" ],
  "com.google.common.hash.AbstractHashFunction:hashUnencodedChars(java.lang.CharSequence)" : [ "newHasher" ],
  "com.google.common.collect.ImmutableSet$SerializedForm:readResolve()" : [ "copyOf" ],
  "com.google.common.collect.CompactHashSet:setElement(int,java.lang.Object)" : [ "requireElements" ],
  "com.google.common.collect.ForwardingNavigableMap:floorKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.net.InternetDomainName:<init>(java.lang.String)" : [ "toLowerCase", "replaceFrom", "checkArgument", "copyOf", "split", "validateSyntax" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:tailMap(java.lang.Object,boolean)" : [ "unmodifiableNavigableMap" ],
  "com.google.common.collect.ImmutableMultiset$Builder:<init>()" : [ "<init>", "create" ],
  "com.google.common.collect.AbstractTable$Values:clear()" : [ "clear" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:linkedHashSetValues()" : [ "linkedHashSetValues" ],
  "com.google.common.collect.LinkedListMultimap:toString()" : [ "toString" ],
  "com.google.common.cache.LocalCache$Segment:tryDrainReferenceQueues()" : [ "drainReferenceQueues" ],
  "com.google.common.collect.AbstractNavigableMap:lastKey()" : [ "lastEntry" ],
  "com.google.common.cache.LocalCache$Segment:waitForLoadingValue(com.google.common.cache.ReferenceEntry,java.lang.Object,com.google.common.cache.LocalCache$ValueReference)" : [ "<init>", "checkState", "recordRead" ],
  "com.google.common.primitives.Chars:toArray(java.util.Collection)" : [ "toCharArray", "checkNotNull" ],
  "com.google.common.io.CharSequenceReader:read(java.nio.CharBuffer)" : [ "checkNotNull", "checkOpen", "hasRemaining", "remaining" ],
  "com.google.common.collect.RegularImmutableAsList:copyIntoArray(java.lang.Object[],int)" : [ "copyIntoArray" ],
  "com.google.common.graph.Graphs$TransposedNetwork:edgesConnecting(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AtomicLongMap:getAndAdd(java.lang.Object,long)" : [ "getAndAccumulate" ],
  "com.google.common.collect.HashBiMap:create(java.util.Map)" : [ "create" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSet:first()" : [ "delegate" ],
  "com.google.common.collect.ForwardingBlockingDeque:poll(long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.reflect.Invokable:getExceptionTypes()" : [ "builder", "of", "add", "build" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:subSet(java.lang.Object,java.lang.Object)" : [ "subMap" ],
  "com.google.common.graph.Traverser:depthFirstPreOrder(java.lang.Iterable)" : [ "validate" ],
  "com.google.common.collect.LinkedListMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "getCopy", "hasNext", "next", "set", "remove", "add" ],
  "com.google.common.graph.StandardMutableValueGraph:removeNode(java.lang.Object)" : [ "checkNotNull", "get", "getWithoutCaching", "checkState", "remove", "checkNonNegative" ],
  "com.google.common.util.concurrent.Futures:nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)" : [ "<init>", "directExecutor" ],
  "com.google.common.util.concurrent.Monitor:await(com.google.common.util.concurrent.Monitor$Guard,boolean)" : [ "signalNextWaiter", "beginWaitingFor", "endWaitingFor" ],
  "com.google.common.collect.Collections2$FilteredCollection:containsAll(java.util.Collection)" : [ "containsAllImpl" ],
  "com.google.common.collect.Multimaps:transformEntries(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer)" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableMultiset:elementSet()" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap:reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference)" : [ "reclaimValue", "segmentFor" ],
  "com.google.common.reflect.TypeToken$Bounds:isSubtypeOf(java.lang.reflect.Type)" : [ "of" ],
  "com.google.common.hash.Hasher:putBytes(byte[],int,int)" : [ "putBytes" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int)" : [ "<init>", "unsetWeakValueReference" ],
  "com.google.common.collect.Multimaps$Keys:iterator()" : [ "keyIterator" ],
  "com.google.common.base.Ascii:toUpperCase(char)" : [ "isLowerCase" ],
  "com.google.common.io.CharSource$StringCharSource:copyTo(com.google.common.io.CharSink)" : [ "checkNotNull", "create", "register", "rethrow", "close" ],
  "com.google.common.collect.ImmutableMultimap:of()" : [ "of" ],
  "com.google.common.primitives.Longs:indexOf(long[],long[])" : [ "checkNotNull" ],
  "com.google.common.net.MediaType:withParameters(com.google.common.collect.Multimap)" : [ "create" ],
  "com.google.common.hash.Hashing$Crc32cMethodHandles:crc32cConstructor()" : [ "newLinkageError" ],
  "com.google.common.collect.Maps$EntrySet:retainAll(java.util.Collection)" : [ "retainAll", "checkNotNull", "newHashSetWithExpectedSize", "contains" ],
  "com.google.common.collect.ForwardingBlockingDeque:<init>()" : [ "<init>" ],
  "com.google.common.net.MediaType:withCharset(java.nio.charset.Charset)" : [ "checkNotNull", "withParameter", "of" ],
  "com.google.common.collect.EmptyImmutableSetMultimap:<init>()" : [ "<init>", "of" ],
  "com.google.common.collect.ForwardingCollection:size()" : [ "delegate" ],
  "com.google.common.base.CharMatcher:forPredicate(com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.util.concurrent.AtomicDoubleArray:getAndAdd(int,double)" : [ "getAndAccumulate" ],
  "com.google.common.base.Joiner:join(java.lang.Object[])" : [ "join" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:getSubMultiset(int,int)" : [ "<init>", "checkPositionIndexes", "getSubSet" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:putAll(java.lang.Object,java.lang.Iterable)" : [ "putAll" ],
  "com.google.common.io.MoreFiles:deleteRecursivelySecure(java.nio.file.SecureDirectoryStream,java.nio.file.Path)" : [ "deleteDirectoryContentsSecure", "addException" ],
  "com.google.common.primitives.ImmutableDoubleArray:copyOf(java.util.stream.DoubleStream)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:hashCode()" : [ "delegate" ],
  "com.google.common.base.Ascii:truncate(java.lang.CharSequence,int,java.lang.String)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.ArrayTable:valuesIterator()" : [ "size" ],
  "com.google.common.collect.Iterators$PeekingImpl:<init>(java.util.Iterator)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache$Segment:containsKey(java.lang.Object,int)" : [ "getLiveEntry", "postReadCleanup" ],
  "com.google.common.collect.Multimaps:unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap)" : [ "<init>" ],
  "com.google.common.collect.JdkBackedImmutableMultiset:size()" : [ "saturatedCast" ],
  "com.google.common.collect.MinMaxPriorityQueue:growIfNeeded()" : [ "calculateNewCapacity" ],
  "com.google.common.util.concurrent.AtomicLongMap:put(java.lang.Object,long)" : [ "getAndUpdate" ],
  "com.google.common.collect.Tables$TransformedTable:cellIterator()" : [ "transform" ],
  "com.google.common.graph.DirectedNetworkConnections:edgesConnecting(java.lang.Object)" : [ "<init>" ],
  "com.google.common.cache.LocalCache$HashIterator:nextInChain()" : [ "advanceTo" ],
  "com.google.common.collect.MoreCollectors$ToOptionalState:combine(com.google.common.collect.MoreCollectors$ToOptionalState)" : [ "multiples" ],
  "com.google.common.collect.Tables$UnmodifiableTable:columnMap()" : [ "columnMap", "transformValues" ],
  "com.google.common.math.LongMath:mod(long,int)" : [ "mod" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:peekLast()" : [ "delegate" ],
  "com.google.common.collect.MapMaker:getValueStrength()" : [ "firstNonNull" ],
  "com.google.common.util.concurrent.FluentFuture:catching(java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor)" : [ "catching" ],
  "com.google.common.base.CaseFormat:convert(com.google.common.base.CaseFormat,java.lang.String)" : [ "indexIn", "normalizeFirstWord" ],
  "com.google.common.reflect.ClassPath:getClassPathFromManifest(java.io.File,java.util.jar.Manifest)" : [ "of", "builder", "split", "getClassPathEntry", "add", "toFile", "build" ],
  "com.google.common.reflect.Invokable:from(java.lang.reflect.Method)" : [ "<init>" ],
  "com.google.common.collect.EnumHashBiMap:entrySet()" : [ "entrySet" ],
  "com.google.common.collect.StandardRowSortedTable$RowSortedMap:createKeySet()" : [ "<init>" ],
  "com.google.common.cache.LocalCache$WeakValueReference:copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.collect.Maps$DescendingMap:entrySet()" : [ "createEntrySet" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:pollFirst()" : [ "pollNext" ],
  "com.google.common.primitives.ImmutableDoubleArray:toString()" : [ "isEmpty", "length" ],
  "com.google.common.primitives.ImmutableDoubleArray:equals(java.lang.Object)" : [ "length", "areEqual", "get" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:copy()" : [ "<init>" ],
  "com.google.common.collect.Maps$AsMapView:remove(java.lang.Object)" : [ "backingSet" ],
  "com.google.common.collect.GeneralRange:intersect(com.google.common.collect.GeneralRange)" : [ "<init>", "checkNotNull", "checkArgument", "getLowerEndpoint", "getLowerBoundType", "hasLowerBound", "getUpperEndpoint", "getUpperBoundType", "hasUpperBound" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:notifyNewValue(java.lang.Object)" : [ "set", "unset" ],
  "com.google.common.util.concurrent.Futures:submit(java.lang.Runnable,java.util.concurrent.Executor)" : [ "create" ],
  "com.google.common.util.concurrent.TrustedListenableFutureTask:create(java.lang.Runnable,java.lang.Object)" : [ "<init>" ],
  "com.google.common.eventbus.Subscriber:context(java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:size()" : [ "create", "saturatedCast", "iterator" ],
  "com.google.common.collect.Cut$BelowAll:<init>()" : [ "<init>" ],
  "com.google.common.graph.StandardMutableGraph:removeEdge(com.google.common.graph.EndpointPair)" : [ "removeEdge", "nodeU", "nodeV" ],
  "com.google.common.collect.ForwardingSet:standardHashCode()" : [ "hashCodeImpl" ],
  "com.google.common.cache.LocalCache$Strength$2:defaultEquivalence()" : [ "identity" ],
  "com.google.common.graph.AbstractBaseGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.primitives.Longs$LongArrayAsList:<init>(long[])" : [ "<init>" ],
  "com.google.common.primitives.Longs:ensureCapacity(long[],int,int)" : [ "checkArgument" ],
  "com.google.common.collect.AbstractSortedSetMultimap:removeAll(java.lang.Object)" : [ "removeAll" ],
  "com.google.common.collect.AbstractNavigableMap:keySet()" : [ "navigableKeySet" ],
  "com.google.common.primitives.ImmutableLongArray:builder()" : [ "<init>" ],
  "com.google.common.collect.LinkedListMultimap:entries()" : [ "entries" ],
  "com.google.common.util.concurrent.Monitor:waitFor(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)" : [ "waitFor", "toNanosSaturated" ],
  "com.google.common.net.InternetDomainName:hasPublicSuffix()" : [ "publicSuffixIndex" ],
  "com.google.common.graph.ImmutableValueGraph:connectionsOf(com.google.common.graph.ValueGraph,java.lang.Object)" : [ "ofImmutable", "asMap" ],
  "com.google.common.collect.ImmutableMultiset$Builder:addCopies(java.lang.Object,int)" : [ "checkNotNull" ],
  "com.google.common.graph.EndpointPair:of(com.google.common.graph.Network,java.lang.Object,java.lang.Object)" : [ "ordered", "unordered" ],
  "com.google.common.collect.ForwardingDeque:pollFirst()" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:nextNotInSkipMe(int)" : [ "size", "foundAndRemovedExactReference", "elementData" ],
  "com.google.common.collect.MutableClassToInstanceMap$2:delegate()" : [ "delegate" ],
  "com.google.common.collect.ImmutableSetMultimap:builder()" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedMultiset:toImmutableSortedMultiset(java.util.Comparator)" : [ "toImmutableSortedMultiset" ],
  "com.google.common.collect.ImmutableSortedMultiset$Builder:addCopies(java.lang.Object,int)" : [ "addCopies" ],
  "com.google.common.collect.CompactHashSet:element(int)" : [ "requireElements" ],
  "com.google.common.collect.SparseImmutableTable:rowMap()" : [ "copyOf" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:fromMap()" : [ "fromMap" ],
  "com.google.common.io.CharSource$CharSequenceCharSource:openStream()" : [ "<init>" ],
  "com.google.common.math.IntMath:divide(int,int,java.math.RoundingMode)" : [ "checkNotNull", "checkRoundingUnnecessary" ],
  "com.google.common.hash.MacHashFunction:<init>(java.lang.String,java.security.Key,java.lang.String)" : [ "getMac", "checkNotNull", "supportsClone" ],
  "com.google.common.primitives.Shorts$LexicographicalComparator:compare(short[],short[])" : [ "compare" ],
  "com.google.common.collect.CompactHashSet:isUsingHashFloodingResistance()" : [ "delegateOrNull" ],
  "com.google.common.math.Stats:populationStandardDeviation()" : [ "populationVariance" ],
  "com.google.common.collect.ForwardingMultimap:asMap()" : [ "delegate" ],
  "com.google.common.collect.CompactHashMap:get(java.lang.Object)" : [ "delegateOrNull", "indexOf", "accessEntry", "value" ],
  "com.google.common.reflect.TypeResolver$WildcardCapturer$1:captureAsTypeVariable(java.lang.reflect.Type[])" : [ "captureAsTypeVariable" ],
  "com.google.common.base.Splitter:on(char)" : [ "on", "is" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:headSet(java.lang.Object,boolean)" : [ "sortedMap" ],
  "com.google.common.collect.ForwardingCollection:standardToString()" : [ "toStringImpl" ],
  "com.google.common.collect.RegularImmutableMultiset:hashFloodingDetected(com.google.common.collect.Multisets$ImmutableEntry[])" : [ "nextInBucket" ],
  "com.google.common.collect.FilteredKeyListMultimap:removeAll(java.lang.Object)" : [ "removeAll" ],
  "com.google.common.collect.LinkedListMultimap:containsEntry(java.lang.Object,java.lang.Object)" : [ "containsEntry" ],
  "com.google.common.collect.ImmutableSortedAsList:<init>(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedMap:copyOf(java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.collect.CompactHashSet:firstEntryIndex()" : [ "isEmpty" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,char,int)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedList:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.math.BigIntegerMath:ceilingPowerOfTwo(java.math.BigInteger)" : [ "log2" ],
  "com.google.common.collect.TreeMultimap:<init>(java.util.Comparator,java.util.Comparator)" : [ "<init>" ],
  "com.google.common.util.concurrent.Uninterruptibles:tryAcquireUninterruptibly(java.util.concurrent.Semaphore,int,java.time.Duration)" : [ "tryAcquireUninterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.CompactHashMap:moveLastEntry(int,int)" : [ "requireTable", "requireEntries", "requireKeys", "requireValues", "size", "smearedHash", "tableGet", "tableSet", "getNext", "maskCombine" ],
  "com.google.common.collect.ForwardingList:standardAddAll(int,java.lang.Iterable)" : [ "addAllImpl" ],
  "com.google.common.collect.Multimaps:unmodifiableMultimap(com.google.common.collect.ImmutableMultimap)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ServiceManager:awaitStopped(java.time.Duration)" : [ "awaitStopped", "toNanosSaturated" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:decodeTo(byte[],java.lang.CharSequence)" : [ "<init>", "checkNotNull", "trimTrailingPadding", "isValidPaddingStartPosition", "decode" ],
  "com.google.common.collect.Multiset:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable:initializeOrUpdateCancellationDelegate(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule)" : [ "<init>", "submitToExecutor" ],
  "com.google.common.graph.ValueGraphBuilder:nodeOrder(com.google.common.graph.ElementOrder)" : [ "cast", "checkNotNull" ],
  "com.google.common.collect.Sets:newHashSet(java.util.Iterator)" : [ "newHashSet", "addAll" ],
  "com.google.common.cache.CacheBuilderSpec$MaximumWeightParser:parseLong(com.google.common.cache.CacheBuilderSpec,long)" : [ "checkArgument" ],
  "com.google.common.collect.ImmutableList:copyOf(java.util.Iterator)" : [ "<init>", "of", "add", "addAll", "build" ],
  "com.google.common.collect.ImmutableListMultimap:fromMapEntries(java.util.Collection,java.util.Comparator)" : [ "<init>", "of", "copyOf", "sortedCopyOf", "put", "buildOrThrow" ],
  "com.google.common.collect.ImmutableMap:copyOf(java.util.Map)" : [ "copyOf", "copyOfEnumMap" ],
  "com.google.common.cache.LocalCache$WriteQueue:iterator()" : [ "peek" ],
  "com.google.common.util.concurrent.ThreadFactoryBuilder:setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)" : [ "checkNotNull" ],
  "com.google.common.primitives.ImmutableDoubleArray:copyOf(java.util.Collection)" : [ "<init>", "toArray" ],
  "com.google.common.collect.Multisets:toMultiset(java.util.function.Function,java.util.function.ToIntFunction,java.util.function.Supplier)" : [ "toMultiset" ],
  "com.google.common.hash.SipHashFunction:newHasher()" : [ "<init>" ],
  "com.google.common.collect.SingletonImmutableList:get(int)" : [ "checkElementIndex" ],
  "com.google.common.collect.LinkedHashMultiset:iterator()" : [ "iterator" ],
  "com.google.common.collect.MapMaker:getKeyStrength()" : [ "firstNonNull" ],
  "com.google.common.collect.Iterables:find(java.lang.Iterable,com.google.common.base.Predicate)" : [ "find" ],
  "com.google.common.collect.Multisets:union(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeMultiset$AvlNode:rotateRight()" : [ "checkState", "recompute", "recomputeHeight" ],
  "com.google.common.collect.ForwardingMultimap:<init>()" : [ "<init>" ],
  "com.google.common.collect.Multimaps$AsMap$EntrySet:remove(java.lang.Object)" : [ "removeValuesForKey" ],
  "com.google.common.primitives.Floats$FloatArrayAsList:<init>(float[])" : [ "<init>" ],
  "com.google.common.collect.Tables:synchronizedTable(com.google.common.collect.Table)" : [ "table" ],
  "com.google.common.base.Throwables:throwIfUnchecked(java.lang.Throwable)" : [ "checkNotNull" ],
  "com.google.common.graph.ImmutableValueGraph:predecessors(java.lang.Object)" : [ "predecessors" ],
  "com.google.common.collect.RegularContiguousSet:headSetImpl(java.lang.Comparable,boolean)" : [ "intersectionInCurrentDomain", "forBoolean" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:delegate()" : [ "delegate" ],
  "com.google.common.collect.Queues:newArrayDeque(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.collect.EnumMultiset:isEmpty()" : [ "isEmpty" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:put(java.lang.Object,java.lang.Object)" : [ "put", "checkArgument", "rangeContains", "checkNotNull" ],
  "com.google.common.collect.Sets:filter(java.util.Set,com.google.common.base.Predicate)" : [ "<init>", "filter", "and", "checkNotNull" ],
  "com.google.common.primitives.Ints$IntArrayAsList:<init>(int[])" : [ "<init>" ],
  "com.google.common.math.BigIntegerMath:sqrtApproxWithDoubles(java.math.BigInteger)" : [ "roundToBigInteger", "bigToDouble" ],
  "com.google.common.graph.EndpointPairIterator:<init>(com.google.common.graph.BaseGraph)" : [ "<init>", "of" ],
  "com.google.common.collect.Lists$OnePlusArrayList:size()" : [ "saturatedAdd" ],
  "com.google.common.collect.HashBiMap:containsValue(java.lang.Object)" : [ "seekByValue", "smearedHash" ],
  "com.google.common.collect.RegularImmutableSortedSet:ceiling(java.lang.Object)" : [ "tailIndex", "size" ],
  "com.google.common.collect.TreeMultiset:clear()" : [ "clear", "hasLowerBound", "hasUpperBound", "successor", "entryIterator" ],
  "com.google.common.collect.ReverseOrdering:max(java.lang.Iterable)" : [ "min" ],
  "com.google.common.cache.LocalCache$EntrySet:contains(java.lang.Object)" : [ "get", "equivalent" ],
  "com.google.common.escape.ArrayBasedUnicodeEscaper:<init>(com.google.common.escape.ArrayBasedEscaperMap,int,int,java.lang.String)" : [ "<init>", "checkNotNull", "getReplacementArray" ],
  "com.google.common.base.Joiner$MapJoiner:useForNull(java.lang.String)" : [ "<init>", "useForNull" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:remove(com.google.common.collect.Range)" : [ "remove", "isConnected", "intersection" ],
  "com.google.common.collect.RegularImmutableSortedSet:floor(java.lang.Object)" : [ "headIndex" ],
  "com.google.common.primitives.UnsignedBytes:sortDescending(byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.base.Preconditions:checkPositionIndexes(int,int,int)" : [ "badPositionIndexes" ],
  "com.google.common.collect.ImmutableSortedMap$Builder:putAll(java.lang.Iterable)" : [ "putAll" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,long,int)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.collect.ConcurrentHashMultiset:create(java.util.concurrent.ConcurrentMap)" : [ "<init>" ],
  "com.google.common.primitives.Floats$FloatArrayAsList:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:toArray(java.lang.Object[])" : [ "delegate" ],
  "com.google.common.hash.MacHashFunction$MacHasher:update(byte)" : [ "checkNotDone" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:drainTo(java.util.Collection)" : [ "delegate" ],
  "com.google.common.collect.FilteredEntryMultimap$AsMap:clear()" : [ "clear" ],
  "com.google.common.collect.AbstractIterator:hasNext()" : [ "checkState", "tryToComputeNext" ],
  "com.google.common.collect.StandardTable$Row:size()" : [ "updateBackingRowMapField" ],
  "com.google.common.collect.HashBiMap:replaceAll(java.util.function.BiFunction)" : [ "checkNotNull", "clear", "put" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)" : [ "<init>" ],
  "com.google.common.collect.AbstractBiMap:putAll(java.util.Map)" : [ "put" ],
  "com.google.common.math.PairedStats:leastSquaresFit()" : [ "checkState", "count", "forNaN", "sumOfSquaresOfDeltas", "mapping", "mean", "withSlope", "horizontal", "vertical" ],
  "com.google.common.base.CharMatcher$Or:setBits(java.util.BitSet)" : [ "setBits" ],
  "com.google.common.cache.CacheBuilderSpec:disableCaching()" : [ "parse" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:putAll(java.lang.Iterable)" : [ "putAll" ],
  "com.google.common.collect.ImmutableSetMultimap:get(java.lang.Object)" : [ "firstNonNull" ],
  "com.google.common.collect.FilteredEntryMultimap$Keys$1:removeEntriesIf(com.google.common.base.Predicate)" : [ "removeEntriesIf" ],
  "com.google.common.net.InetAddresses:fromInteger(int)" : [ "getInet4Address", "toByteArray" ],
  "com.google.common.collect.ImmutableClassToInstanceMap:getInstance(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.graph.ImmutableNetwork:getEdgeToReferenceNode(com.google.common.graph.Network)" : [ "builder", "put", "nodeU", "buildOrThrow" ],
  "com.google.common.collect.Multimaps:synchronizedListMultimap(com.google.common.collect.ListMultimap)" : [ "listMultimap" ],
  "com.google.common.util.concurrent.FluentFuture:withTimeout(java.time.Duration,java.util.concurrent.ScheduledExecutorService)" : [ "withTimeout", "toNanosSaturated" ],
  "com.google.common.collect.Collections2$TransformedCollection:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:<init>(com.google.common.collect.ImmutableList)" : [ "<init>" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:size()" : [ "length" ],
  "com.google.common.hash.FarmHashFingerprint64:hashLength17to32(byte[],int,int)" : [ "load64", "hashLength16" ],
  "com.google.common.hash.FarmHashFingerprint64:fingerprint(byte[],int,int)" : [ "hashLength0to16", "hashLength17to32", "hashLength33To64", "hashLength65Plus" ],
  "com.google.common.primitives.Booleans$LexicographicalComparator:compare(boolean[],boolean[])" : [ "compare" ],
  "com.google.common.graph.Graphs$TransposedNetwork:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:put(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.RegularImmutableBiMap$Inverse:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.Multimaps:forMap(java.util.Map)" : [ "<init>" ],
  "com.google.common.reflect.MutableTypeToInstanceMap:entrySet()" : [ "entrySet", "transformEntries" ],
  "com.google.common.hash.Murmur3_32HashFunction:newHasher()" : [ "<init>" ],
  "com.google.common.base.FinalizableWeakReference:<init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue)" : [ "cleanUp" ],
  "com.google.common.collect.ForwardingSortedMap:tailMap(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractScheduledService:awaitRunning(java.time.Duration)" : [ "awaitRunning" ],
  "com.google.common.collect.FluentIterable:skip(int)" : [ "skip", "from", "getDelegate" ],
  "com.google.common.collect.FilteredKeyMultimap:createKeys()" : [ "filter" ],
  "com.google.common.collect.Iterables:unmodifiableIterable(java.lang.Iterable)" : [ "checkNotNull" ],
  "com.google.common.collect.Cut$AboveAll:greatestValueBelow(com.google.common.collect.DiscreteDomain)" : [ "maxValue" ],
  "com.google.common.escape.UnicodeEscaper:escape(java.lang.String)" : [ "checkNotNull", "nextEscapeIndex", "escapeSlow" ],
  "com.google.common.io.LittleEndianDataInputStream:readUnsignedShort()" : [ "readAndCheckByte", "fromBytes" ],
  "com.google.common.collect.Maps$NavigableKeySet:tailSet(java.lang.Object)" : [ "tailSet" ],
  "com.google.common.eventbus.SubscriberRegistry:getAnnotatedMethods(java.lang.Class)" : [ "throwIfUnchecked" ],
  "com.google.common.primitives.ImmutableIntArray:writeReplace()" : [ "trimmed" ],
  "com.google.common.reflect.TypeToken$Bounds:isSupertypeOf(java.lang.reflect.Type)" : [ "of" ],
  "com.google.common.primitives.Bytes:lastIndexOf(byte[],byte)" : [ "lastIndexOf" ],
  "com.google.common.collect.Collections2$FilteredCollection:add(java.lang.Object)" : [ "checkArgument" ],
  "com.google.common.collect.Maps:filterValues(java.util.NavigableMap,com.google.common.base.Predicate)" : [ "filterEntries", "valuePredicateOnEntries" ],
  "com.google.common.collect.Maps:filterEntries(com.google.common.collect.BiMap,com.google.common.base.Predicate)" : [ "<init>", "checkNotNull", "filterFiltered" ],
  "com.google.common.collect.SetMultimap:removeAll(java.lang.Object)" : [ "removeAll" ],
  "com.google.common.primitives.Floats:lastIndexOf(float[],float)" : [ "lastIndexOf" ],
  "com.google.common.math.Stats:meanOf(java.lang.Iterable)" : [ "meanOf" ],
  "com.google.common.collect.ImmutableMultiset:toImmutableMultiset()" : [ "toImmutableMultiset" ],
  "com.google.common.collect.SortedMultisets$ElementSet:iterator()" : [ "elementIterator", "multiset" ],
  "com.google.common.graph.UndirectedGraphConnections:<init>(java.util.Map)" : [ "checkNotNull" ],
  "com.google.common.io.Closer:create()" : [ "<init>" ],
  "com.google.common.reflect.TypeToken$ClassSet:delegate()" : [ "classesOnly", "collectTypes", "from", "filter", "toSet" ],
  "com.google.common.primitives.Booleans:indexOf(boolean[],boolean[])" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingCollection:standardAddAll(java.util.Collection)" : [ "addAll" ],
  "com.google.common.collect.NullsLastOrdering:<init>(com.google.common.collect.Ordering)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:floor(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.Synchronized$SynchronizedRandomAccessList:<init>(java.util.List,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:descendingSet()" : [ "sortedMap" ],
  "com.google.common.reflect.ClassPath:getTopLevelClasses()" : [ "from", "filter", "toSet", "isTopLevel" ],
  "com.google.common.hash.MacHashFunction$MacHasher:checkNotDone()" : [ "checkState" ],
  "com.google.common.collect.ImmutableEnumSet:<init>(java.util.EnumSet)" : [ "<init>" ],
  "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap:getKey(int)" : [ "keySet" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:hashCode()" : [ "delegate" ],
  "com.google.common.collect.CompactHashMap:firstEntryIndex()" : [ "isEmpty" ],
  "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,long,double)" : [ "create" ],
  "com.google.common.collect.ForwardingCollection:remove(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Splitter:withKeyValueSeparator(java.lang.String)" : [ "withKeyValueSeparator", "on" ],
  "com.google.common.reflect.TypeResolver$WildcardCapturer:capture(java.lang.reflect.Type)" : [ "checkNotNull", "newArrayType", "notForTypeVariable", "forTypeVariable", "captureNullable", "captureAsTypeVariable" ],
  "com.google.common.collect.HashBiMap:entrySet()" : [ "entrySet" ],
  "com.google.common.graph.ImmutableGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "hasEdgeConnecting" ],
  "com.google.common.util.concurrent.Uninterruptibles:tryAcquireUninterruptibly(java.util.concurrent.Semaphore,long,java.util.concurrent.TimeUnit)" : [ "tryAcquireUninterruptibly" ],
  "com.google.common.collect.ContiguousSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "subSet" ],
  "com.google.common.collect.StandardRowSortedTable$RowSortedMap:subMap(java.lang.Object,java.lang.Object)" : [ "<init>", "checkNotNull", "rowMap" ],
  "com.google.common.math.LongMath:log10(long,java.math.RoundingMode)" : [ "checkPositive", "log10Floor", "checkRoundingUnnecessary", "lessThanBranchFree" ],
  "com.google.common.primitives.Booleans:lastIndexOf(boolean[],boolean)" : [ "lastIndexOf" ],
  "com.google.common.collect.LinkedListMultimap:addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)" : [ "<init>" ],
  "com.google.common.hash.FarmHashFingerprint64:weakHashLength32WithSeeds(byte[],int,long,long,long[])" : [ "load64" ],
  "com.google.common.base.CharMatcher$AnyOf:negate()" : [ "negate" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap:comparator()" : [ "sortedMap" ],
  "com.google.common.collect.ForwardingDeque:addFirst(java.lang.Object)" : [ "delegate" ],
  "com.google.common.math.PairedStatsAccumulator:add(double,double)" : [ "add", "isFinite", "count", "mean" ],
  "com.google.common.util.concurrent.Monitor:enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard)" : [ "awaitUninterruptibly", "leave" ],
  "com.google.common.graph.Traverser:depthFirstPostOrder(java.lang.Iterable)" : [ "validate" ],
  "com.google.common.graph.ImmutableNetwork$Builder:build()" : [ "copyOf" ],
  "com.google.common.graph.NetworkBuilder:nodeOrder(com.google.common.graph.ElementOrder)" : [ "cast", "checkNotNull" ],
  "com.google.common.collect.Maps$SortedAsMapView:backingSet()" : [ "backingSet" ],
  "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1:setValue(java.lang.Object)" : [ "setValue", "checkArgument" ],
  "com.google.common.primitives.Longs:toArray(java.util.Collection)" : [ "toLongArray", "checkNotNull" ],
  "com.google.common.graph.StandardValueGraph:successors(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.collect.ImmutableSet$SetBuilderImpl:addDedupedElement(java.lang.Object)" : [ "ensureCapacity" ],
  "com.google.common.util.concurrent.ClosingFuture:toString()" : [ "toString", "toStringHelper", "add", "addValue" ],
  "com.google.common.io.FileBackedOutputStream:write(byte[],int,int)" : [ "update" ],
  "com.google.common.collect.HashBiMap:create()" : [ "create" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.collect.Lists$ReverseList:add(int,java.lang.Object)" : [ "reversePosition" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:rowKeySet()" : [ "set", "delegate" ],
  "com.google.common.collect.Multisets$FilteredMultiset:add(java.lang.Object,int)" : [ "checkArgument" ],
  "com.google.common.collect.ImmutableRangeSet$Builder:addAll(com.google.common.collect.RangeSet)" : [ "addAll" ],
  "com.google.common.cache.LocalCache$KeySet:contains(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.collect.Maps$DescendingMap:reverse(java.util.Comparator)" : [ "reverse", "from" ],
  "com.google.common.primitives.Shorts$ShortArrayAsList:<init>(short[])" : [ "<init>" ],
  "com.google.common.reflect.TypeToken:getInvariantTypeResolver()" : [ "invariantly" ],
  "com.google.common.collect.FilteredEntryMultimap:satisfies(java.lang.Object,java.lang.Object)" : [ "immutableEntry" ],
  "com.google.common.collect.Multimaps$TransformedEntriesMultimap:get(java.lang.Object)" : [ "transform" ],
  "com.google.common.collect.ImmutableMultiset$EntrySet:size()" : [ "elementSet" ],
  "com.google.common.hash.MacHashFunction:newHasher()" : [ "getMac" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:tailSet(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.io.CharSource$ConcatenatedCharSource:length()" : [ "length" ],
  "com.google.common.io.Resources:copy(java.net.URL,java.io.OutputStream)" : [ "asByteSource", "copyTo" ],
  "com.google.common.util.concurrent.ClosingFuture:catchingAsync(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor)" : [ "catchingAsyncMoreGeneric" ],
  "com.google.common.reflect.TypeResolver$TypeVariableKey:forLookup(java.lang.reflect.Type)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:compute(java.lang.Object,java.util.function.BiFunction)" : [ "delegate" ],
  "com.google.common.collect.Synchronized:navigableMap(java.util.NavigableMap)" : [ "navigableMap" ],
  "com.google.common.collect.CompactHashMap$ValuesView:spliterator()" : [ "needsAllocArrays", "delegateOrNull" ],
  "com.google.common.io.FileBackedOutputStream:openInputStream()" : [ "getBuffer", "getCount" ],
  "com.google.common.primitives.ImmutableDoubleArray:of(double,double,double,double,double,double)" : [ "<init>" ],
  "com.google.common.cache.CacheBuilder:build()" : [ "<init>", "checkWeightWithWeigher", "checkNonLoadingCache" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,long,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry:<init>(java.lang.Object,int,com.google.common.collect.Multisets$ImmutableEntry)" : [ "<init>" ],
  "com.google.common.collect.ForwardingList:standardLastIndexOf(java.lang.Object)" : [ "lastIndexOfImpl" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner:futureCombiner()" : [ "whenAllSucceed", "inputFutures", "whenAllComplete" ],
  "com.google.common.collect.ImmutableMap$Builder:combine(com.google.common.collect.ImmutableMap$Builder)" : [ "checkNotNull", "ensureCapacity" ],
  "com.google.common.util.concurrent.AtomicLongMap:accumulateAndGet(java.lang.Object,long,java.util.function.LongBinaryOperator)" : [ "checkNotNull", "updateAndGet" ],
  "com.google.common.collect.Synchronized$SynchronizedList:indexOf(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Predicates:equalTo(java.lang.Object)" : [ "isNull", "withNarrowedType" ],
  "com.google.common.collect.FluentIterable:toString()" : [ "toString", "getDelegate" ],
  "com.google.common.collect.ImmutableSortedMultiset:orderedBy(java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.Iterators:find(java.util.Iterator,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.net.HostAndPort:requireBracketsForIPv6()" : [ "checkArgument" ],
  "com.google.common.collect.ImmutableMap:asMultimap()" : [ "<init>", "isEmpty", "of" ],
  "com.google.common.reflect.TypeToken$2:getGenericParameterTypes()" : [ "getGenericParameterTypes", "resolveTypesInPlace" ],
  "com.google.common.cache.CacheBuilder:keyEquivalence(com.google.common.base.Equivalence)" : [ "checkState", "checkNotNull" ],
  "com.google.common.collect.ForwardingBlockingDeque:pollLast(long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.io.ReaderInputStream:startDraining(boolean)" : [ "flip" ],
  "com.google.common.primitives.Ints:reverse(int[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.util.concurrent.Monitor:enterWhen(com.google.common.util.concurrent.Monitor$Guard)" : [ "await", "leave" ],
  "com.google.common.primitives.Booleans$BooleanArrayAsList:hashCode()" : [ "hashCode" ],
  "com.google.common.io.LineReader:readLine()" : [ "clear" ],
  "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:update(byte[],int,int)" : [ "checkNotDone" ],
  "com.google.common.cache.LocalCache$Strength$1:referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.util.concurrent.ClosingFuture$Peeker:call(com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable,com.google.common.util.concurrent.ClosingFuture$CloseableList)" : [ "add", "directExecutor" ],
  "com.google.common.collect.MutableClassToInstanceMap:putInstance(java.lang.Class,java.lang.Object)" : [ "cast", "put" ],
  "com.google.common.io.CharStreams:asWriter(java.lang.Appendable)" : [ "<init>" ],
  "com.google.common.collect.FilteredKeyListMultimap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.math.LinearTransformation$LinearTransformationBuilder:withSlope(double)" : [ "<init>", "checkArgument", "isFinite" ],
  "com.google.common.collect.ContiguousSet:tailSet(java.lang.Object,boolean)" : [ "tailSet" ],
  "com.google.common.collect.ImmutableSet$Builder:copy()" : [ "copy" ],
  "com.google.common.collect.AbstractSortedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "replaceValues" ],
  "com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:readLock()" : [ "<init>" ],
  "com.google.common.eventbus.EventBus$LoggingHandler:handleException(java.lang.Throwable,com.google.common.eventbus.SubscriberExceptionContext)" : [ "logger", "message" ],
  "com.google.common.math.Quantiles:partition(double[],int,int)" : [ "movePivotToStartOfSlice", "swap" ],
  "com.google.common.io.LittleEndianDataOutputStream:writeFloat(float)" : [ "writeInt" ],
  "com.google.common.collect.ImmutableSortedMap$1EntrySet:spliterator()" : [ "spliterator" ],
  "com.google.common.primitives.Chars:checkedCast(long)" : [ "checkArgument" ],
  "com.google.common.collect.DescendingImmutableSortedSet:headSetImpl(java.lang.Object,boolean)" : [ "tailSet", "descendingSet" ],
  "com.google.common.base.Predicates:and(com.google.common.base.Predicate,com.google.common.base.Predicate)" : [ "asList", "checkNotNull" ],
  "com.google.common.primitives.ImmutableIntArray$Builder:ensureRoomFor(int)" : [ "expandedCapacity" ],
  "com.google.common.util.concurrent.MoreExecutors$Application:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit)" : [ "addDelayedShutdownHook" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:<init>(java.util.NavigableSet,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:ceiling(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Functions$PredicateFunction:<init>(com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.math.DoubleMath:isPowerOfTwo(double)" : [ "isFinite", "getSignificand" ],
  "com.google.common.escape.CharEscaper:<init>()" : [ "<init>" ],
  "com.google.common.io.ByteStreams:skipFully(java.io.InputStream,long)" : [ "skipUpTo" ],
  "com.google.common.collect.Collections2$PermutationIterator:computeNext()" : [ "copyOf", "calculateNextPermutation" ],
  "com.google.common.base.Joiner$MapJoiner:<init>(com.google.common.base.Joiner,java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.graph.DirectedGraphConnections:value(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$Segment:refresh(java.lang.Object,int,com.google.common.cache.CacheLoader,boolean)" : [ "insertLoadingValueReference", "loadAsync", "getUninterruptibly" ],
  "com.google.common.collect.Maps$AbstractFilteredMap:createValues()" : [ "<init>" ],
  "com.google.common.reflect.TypeResolver$WildcardCapturer:notForTypeVariable()" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableBiMap:createEntrySet()" : [ "<init>", "of" ],
  "com.google.common.collect.CompactLinkedHashMap:<init>(int,boolean)" : [ "<init>" ],
  "com.google.common.collect.Maps$UnmodifiableEntrySet:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.reflect.Invokable:getOwnerType()" : [ "of", "getDeclaringClass" ],
  "com.google.common.graph.AbstractBaseGraph$2:iterator()" : [ "iterator", "predecessors", "transform", "of", "successors", "difference", "concat", "unmodifiableIterator" ],
  "com.google.common.math.LongMath:multiplyFraction(long,long,long)" : [ "gcd" ],
  "com.google.common.collect.ForwardingBlockingDeque:remainingCapacity()" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue:getMaxElementIndex()" : [ "compareElements" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:swapWithConceptuallyLastElement(java.lang.Object)" : [ "getParentIndex", "getRightChildIndex", "getLeftChildIndex", "elementData" ],
  "com.google.common.collect.StandardTable$Column$KeySet:contains(java.lang.Object)" : [ "contains" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:adjacentNodesMultiset()" : [ "getReference", "create" ],
  "com.google.common.util.concurrent.MoreExecutors:invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "checkArgument", "newArrayListWithCapacity", "newLinkedBlockingQueue", "submitAndAddQueueListener" ],
  "com.google.common.math.Stats:toByteArray()" : [ "writeTo" ],
  "com.google.common.collect.ForwardingMultiset:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,long)" : [ "<init>" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:fullyFailedFuture(java.lang.Throwable)" : [ "immediateFailedFuture" ],
  "com.google.common.collect.Synchronized:sortedSetMultimap(com.google.common.collect.SortedSetMultimap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:findMinGrandChild(int)" : [ "getLeftChildIndex", "findMin" ],
  "com.google.common.collect.Cut:compareTo(com.google.common.collect.Cut)" : [ "belowAll", "aboveAll", "compareOrThrow", "compare" ],
  "com.google.common.base.CharMatcher$Any:matchesAllOf(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.RegularImmutableSortedSet:indexOf(java.lang.Object)" : [ "unsafeComparator" ],
  "com.google.common.collect.Range:hasLowerBound()" : [ "belowAll" ],
  "com.google.common.collect.AbstractTable:containsColumn(java.lang.Object)" : [ "safeContainsKey" ],
  "com.google.common.collect.NaturalOrdering:<init>()" : [ "<init>" ],
  "com.google.common.collect.CartesianList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.net.InetAddresses:textToNumericFormatV4(java.lang.String)" : [ "countIn", "parseOctet" ],
  "com.google.common.collect.Synchronized:sortedSet(java.util.SortedSet,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ForwardingDeque:<init>()" : [ "<init>" ],
  "com.google.common.reflect.Types$ParameterizedTypeImpl:<init>(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" : [ "checkNotNull", "checkArgument", "usedInGenericType" ],
  "com.google.common.util.concurrent.AbstractFuture:get()" : [ "getDoneValue" ],
  "com.google.common.collect.ImmutableSortedMap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull", "size" ],
  "com.google.common.base.Platform:emptyToNull(java.lang.String)" : [ "stringIsNullOrEmpty" ],
  "com.google.common.collect.CompactHashSet:remove(java.lang.Object)" : [ "remove", "needsAllocArrays", "delegateOrNull", "hashTableMask", "requireTable", "requireEntries", "requireElements", "moveLastEntry", "incrementModCount" ],
  "com.google.common.reflect.TypeToken:toString()" : [ "toString" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:getFirst()" : [ "delegate" ],
  "com.google.common.collect.EnumBiMap:create(java.lang.Class,java.lang.Class)" : [ "<init>" ],
  "com.google.common.cache.LocalCache$LocalManualCache:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.util.concurrent.Uninterruptibles:tryAcquireUninterruptibly(java.util.concurrent.Semaphore,java.time.Duration)" : [ "tryAcquireUninterruptibly", "toNanosSaturated" ],
  "com.google.common.util.concurrent.MoreExecutors:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,java.time.Duration)" : [ "getExitingScheduledExecutorService", "toNanosSaturated" ],
  "com.google.common.collect.FilteredMultimapValues:remove(java.lang.Object)" : [ "equal" ],
  "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask:runInterruptibly()" : [ "checkNotNull" ],
  "com.google.common.base.CharMatcher$Any:indexIn(java.lang.CharSequence,int)" : [ "checkPositionIndex" ],
  "com.google.common.collect.ImmutableMultimap$Builder:putAll(java.lang.Object,java.lang.Iterable)" : [ "toString", "checkEntryNotNull" ],
  "com.google.common.cache.LocalCache$Segment:remove(java.lang.Object,int)" : [ "preWriteCleanup", "equivalent", "removeValueFromChain", "postWriteCleanup" ],
  "com.google.common.reflect.TypeToken:unwrap()" : [ "unwrap", "isWrapper", "of" ],
  "com.google.common.collect.Maps:filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap,com.google.common.base.Predicate)" : [ "<init>", "and", "sortedMap" ],
  "com.google.common.cache.LocalCache$WeightedSoftValueReference:copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.util.concurrent.ForwardingListeningExecutorService:<init>()" : [ "<init>" ],
  "com.google.common.base.Suppliers$SupplierComposition:<init>(com.google.common.base.Function,com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.cache.CacheBuilder:checkNonLoadingCache()" : [ "checkState" ],
  "com.google.common.collect.Lists:equalsImpl(java.util.List,java.lang.Object)" : [ "checkNotNull", "elementsEqual", "equal" ],
  "com.google.common.collect.Iterables:tryFind(java.lang.Iterable,com.google.common.base.Predicate)" : [ "tryFind" ],
  "com.google.common.eventbus.DeadEvent:toString()" : [ "toString", "toStringHelper", "add" ],
  "com.google.common.collect.Maps$NavigableAsMapView:<init>(java.util.NavigableSet,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache$StrongWriteEntry:<init>(java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>", "nullEntry" ],
  "com.google.common.reflect.Invokable$MethodInvokable:<init>(java.lang.reflect.Method)" : [ "<init>" ],
  "com.google.common.collect.ImmutableList$SubList:listIterator(int)" : [ "listIterator" ],
  "com.google.common.collect.ImmutableSortedMap:lowerKey(java.lang.Object)" : [ "keyOrNull", "lowerEntry" ],
  "com.google.common.primitives.ImmutableLongArray:copyOf(java.lang.Iterable)" : [ "copyOf", "builder", "addAll", "build" ],
  "com.google.common.collect.HashMultiset:create(int)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedSet:headSet(java.lang.Object)" : [ "headSet" ],
  "com.google.common.collect.SetMultimap:entries()" : [ "entries" ],
  "com.google.common.collect.FilteredEntryMultimap:<init>(com.google.common.collect.Multimap,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingDeque:removeFirstOccurrence(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Absent:transform(com.google.common.base.Function)" : [ "checkNotNull", "absent" ],
  "com.google.common.util.concurrent.Futures:withTimeout(com.google.common.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)" : [ "create" ],
  "com.google.common.collect.LinkedHashMultiset:entrySet()" : [ "entrySet" ],
  "com.google.common.collect.ImmutableRangeMap:of(com.google.common.collect.Range,java.lang.Object)" : [ "<init>", "of" ],
  "com.google.common.collect.DescendingImmutableSortedMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "descendingMultiset" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:pollLastEntry()" : [ "transformEntry", "fromMap" ],
  "com.google.common.base.CharMatcher$RangesMatcher:<init>(java.lang.String,char[],char[])" : [ "<init>", "checkArgument" ],
  "com.google.common.collect.TopKSelector:least(int)" : [ "least", "natural" ],
  "com.google.common.hash.MacHashFunction$MacHasher:update(java.nio.ByteBuffer)" : [ "checkNotDone", "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:descendingIterator()" : [ "delegate" ],
  "com.google.common.collect.Queues:drainUninterruptibly(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull" ],
  "com.google.common.graph.Graphs:transitiveClosure(com.google.common.graph.Graph)" : [ "from", "allowsSelfLoops", "reachableNodes", "limit", "build" ],
  "com.google.common.collect.Synchronized$SynchronizedEntry:setValue(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AtomicLongMap:getAndDecrement(java.lang.Object)" : [ "getAndAdd" ],
  "com.google.common.collect.AbstractSetMultimap:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.collect.Comparators:lexicographical(java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.io.ByteSource:isEmpty()" : [ "sizeIfKnown", "create", "register", "rethrow", "close" ],
  "com.google.common.collect.ForwardingSortedMultiset:<init>()" : [ "<init>" ],
  "com.google.common.collect.ImmutableSet:copyOf(java.util.Collection)" : [ "copyOfEnumSet" ],
  "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache:<init>(com.google.common.cache.LoadingCache)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.MinMaxPriorityQueue:create(java.lang.Iterable)" : [ "create", "natural" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:indexOf(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.util.concurrent.Monitor:enterIf(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)" : [ "enterIf", "toNanosSaturated" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:lowerKey(java.lang.Object)" : [ "fromMap" ],
  "com.google.common.reflect.Types:newArrayType(java.lang.reflect.Type)" : [ "checkArgument", "supertypeOf", "subtypeOf" ],
  "com.google.common.base.CharMatcher$Or:<init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher)" : [ "<init>", "checkNotNull" ],
  "com.google.common.primitives.ImmutableIntArray:of(int,int,int,int,int,int)" : [ "<init>" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:checkPositiveTimeout(long)" : [ "checkArgument" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:first()" : [ "getSortedSetDelegate" ],
  "com.google.common.graph.AbstractBaseGraph:inDegree(java.lang.Object)" : [ "degree" ],
  "com.google.common.collect.ForwardingSortedSet:last()" : [ "delegate" ],
  "com.google.common.primitives.Booleans$BooleanArrayAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableBiMapEntry:<init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableMapEntry,com.google.common.collect.ImmutableMapEntry)" : [ "<init>" ],
  "com.google.common.collect.Maps:safeContainsKey(java.util.Map,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.Monitor:enter(long,java.util.concurrent.TimeUnit)" : [ "toSafeNanos", "remainingNanos" ],
  "com.google.common.cache.LocalCache$ManualSerializationProxy:<init>(com.google.common.cache.LocalCache$Strength,com.google.common.cache.LocalCache$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,long,long,long,com.google.common.cache.Weigher,int,com.google.common.cache.RemovalListener,com.google.common.base.Ticker,com.google.common.cache.CacheLoader)" : [ "<init>", "systemTicker" ],
  "com.google.common.base.Splitter$MapSplitter:<init>(com.google.common.base.Splitter,com.google.common.base.Splitter)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:delegate()" : [ "delegate" ],
  "com.google.common.collect.JdkBackedImmutableMap:createValues()" : [ "<init>" ],
  "com.google.common.graph.Traverser:forTree(com.google.common.graph.SuccessorsFunction)" : [ "checkArgument" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner:inputFutures()" : [ "from", "transform", "toList" ],
  "com.google.common.collect.FluentIterable:last()" : [ "getDelegate", "absent", "of" ],
  "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter:addListener(java.lang.Runnable,java.util.concurrent.Executor)" : [ "add", "execute" ],
  "com.google.common.collect.EnumMultiset:checkIsE(java.lang.Object)" : [ "checkNotNull", "isActuallyE" ],
  "com.google.common.graph.StandardMutableNetwork:addEdge(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "checkNotNull", "of", "checkArgument", "get", "addNodeInternal", "put" ],
  "com.google.common.util.concurrent.Service:awaitTerminated(java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.collect.GeneralRange:downTo(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedQueue:remove()" : [ "delegate" ],
  "com.google.common.eventbus.SubscriberRegistry:unregister(java.lang.Object)" : [ "findAllSubscribers" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.math.Stats:of(java.util.stream.LongStream)" : [ "<init>", "snapshot", "add", "addAll" ],
  "com.google.common.collect.Range:contains(java.lang.Comparable)" : [ "checkNotNull" ],
  "com.google.common.base.Converter$IdentityConverter:doAndThen(com.google.common.base.Converter)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedList:addAll(int,java.util.Collection)" : [ "delegate" ],
  "com.google.common.collect.TreeTraverser$PostOrderIterator:computeNext()" : [ "expand" ],
  "com.google.common.graph.DirectedGraphConnections:addSuccessor(java.lang.Object,java.lang.Object)" : [ "<init>", "checkPositive" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:orderKeysBy(java.util.Comparator)" : [ "orderKeysBy" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedMap:firstKey()" : [ "delegate" ],
  "com.google.common.collect.CompactHashMap$KeySetView:remove(java.lang.Object)" : [ "delegateOrNull" ],
  "com.google.common.primitives.Floats:sortDescending(float[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.util.concurrent.RateLimiter:reserve(int)" : [ "checkPermits", "mutex", "reserveAndGetWaitLength" ],
  "com.google.common.collect.Ordering:from(java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.Lists$OnePlusArrayList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.math.DoubleMath:mean(java.util.Iterator)" : [ "checkArgument", "checkFinite" ],
  "com.google.common.eventbus.EventBus$LoggingHandler:message(com.google.common.eventbus.SubscriberExceptionContext)" : [ "getSubscriberMethod", "getSubscriber", "getEvent" ],
  "com.google.common.io.LineReader:<init>(java.lang.Readable)" : [ "checkNotNull", "createBuffer" ],
  "com.google.common.hash.Hashing$Crc32cMethodHandles:newCrc32c()" : [ "newLinkageError", "throwIfUnchecked" ],
  "com.google.common.math.PairedStatsAccumulator:count()" : [ "count" ],
  "com.google.common.reflect.ImmutableTypeToInstanceMap:<init>(com.google.common.collect.ImmutableMap)" : [ "<init>" ],
  "com.google.common.collect.JdkBackedImmutableBiMap:create(int,java.util.Map$Entry[])" : [ "<init>", "newHashMapWithExpectedSize", "makeImmutable", "asImmutableList" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:tailMap(java.lang.Object)" : [ "checkArgument", "rangeContains", "checkNotNull" ],
  "com.google.common.util.concurrent.Monitor:awaitNanos(com.google.common.util.concurrent.Monitor$Guard,long,boolean)" : [ "signalNextWaiter", "beginWaitingFor", "endWaitingFor" ],
  "com.google.common.eventbus.EventBus:handleSubscriberException(java.lang.Throwable,com.google.common.eventbus.SubscriberExceptionContext)" : [ "checkNotNull" ],
  "com.google.common.collect.MinMaxPriorityQueue$Builder:create(java.lang.Iterable)" : [ "initialQueueSize", "offer" ],
  "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:next()" : [ "checkModCount", "nextNotInSkipMe", "size", "elementData" ],
  "com.google.common.collect.LinkedListMultimap:<init>(int)" : [ "newHashMapWithExpectedSize" ],
  "com.google.common.collect.StandardTable$Column$Values:remove(java.lang.Object)" : [ "removeFromColumnIf", "valuePredicateOnEntries", "equalTo" ],
  "com.google.common.collect.ForwardingNavigableMap:standardLastEntry()" : [ "getFirst", "descendingMap" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:contains(java.lang.Object)" : [ "refreshIfEmpty" ],
  "com.google.common.cache.LocalCache$HashIterator:advance()" : [ "nextInChain", "nextInTable" ],
  "com.google.common.collect.RegularImmutableSortedSet:copyIntoArray(java.lang.Object[],int)" : [ "copyIntoArray" ],
  "com.google.common.collect.FilteredEntryMultimap$Keys:remove(java.lang.Object,int)" : [ "checkNonnegative" ],
  "com.google.common.util.concurrent.ExecutionSequencer:submit(java.util.concurrent.Callable,java.util.concurrent.Executor)" : [ "checkNotNull", "submitAsync" ],
  "com.google.common.escape.ArrayBasedCharEscaper:escape(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.graph.AbstractNetwork:edgesConnecting(com.google.common.graph.EndpointPair)" : [ "edgesConnecting", "validateEndpoints", "nodeU", "nodeV" ],
  "com.google.common.graph.DirectedGraphConnections:removeSuccessor(java.lang.Object)" : [ "<init>", "checkNotNull", "checkNonNegative" ],
  "com.google.common.cache.LocalCache:loadAll(java.util.Set,com.google.common.cache.CacheLoader)" : [ "<init>", "loadAll", "checkNotNull", "createStarted", "elapsed", "stop", "put" ],
  "com.google.common.collect.ImmutableMap$Builder:put(java.lang.Object,java.lang.Object)" : [ "ensureCapacity", "entryOf" ],
  "com.google.common.util.concurrent.ListenerCallQueue:enqueue(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.String)" : [ "enqueueHelper" ],
  "com.google.common.collect.DescendingMultiset:entrySet()" : [ "createEntrySet" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "unmodifiableSortedMultiset", "delegate" ],
  "com.google.common.graph.StandardMutableGraph:addNode(java.lang.Object)" : [ "addNode" ],
  "com.google.common.collect.ForwardingMapEntry:hashCode()" : [ "delegate" ],
  "com.google.common.collect.Multimaps:filterFiltered(com.google.common.collect.FilteredSetMultimap,com.google.common.base.Predicate)" : [ "<init>", "and" ],
  "com.google.common.hash.Hashing:hmacMd5(byte[])" : [ "hmacMd5", "checkNotNull" ],
  "com.google.common.cache.LocalCache:hash(java.lang.Object)" : [ "hash", "rehash" ],
  "com.google.common.base.Preconditions:badPositionIndexes(int,int,int)" : [ "badPositionIndex" ],
  "com.google.common.primitives.ImmutableIntArray$Builder:addAll(java.lang.Iterable)" : [ "addAll", "add" ],
  "com.google.common.reflect.ClassPath$LocationInfo:scanResources()" : [ "scanResources" ],
  "com.google.common.collect.ImmutableMultiset$Builder:<init>(com.google.common.collect.Multiset)" : [ "<init>" ],
  "com.google.common.base.SmallCharMatcher:from(java.util.BitSet,java.lang.String)" : [ "<init>", "chooseTableSize", "smear" ],
  "com.google.common.collect.AbstractTable:containsRow(java.lang.Object)" : [ "safeContainsKey" ],
  "com.google.common.io.BaseEncoding$Alphabet:<init>(java.lang.String,char[],byte[],boolean)" : [ "checkNotNull", "log2", "divide" ],
  "com.google.common.collect.ForwardingMap:containsKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$LocalManualCache:stats()" : [ "<init>", "incrementBy", "snapshot" ],
  "com.google.common.reflect.Parameter:<init>(com.google.common.reflect.Invokable,int,com.google.common.reflect.TypeToken,java.lang.annotation.Annotation[],java.lang.Object)" : [ "copyOf" ],
  "com.google.common.collect.TopKSelector:greatest(int)" : [ "greatest", "natural" ],
  "com.google.common.collect.ImmutableSet:toImmutableSet()" : [ "toImmutableSet" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:headMap(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.EnumBiMap:values()" : [ "values" ],
  "com.google.common.collect.StandardRowSortedTable$RowSortedMap:headMap(java.lang.Object)" : [ "<init>", "checkNotNull", "rowMap" ],
  "com.google.common.collect.AbstractMapEntry:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.collect.Platform:newLinkedHashSetWithExpectedSize(int)" : [ "newLinkedHashSetWithExpectedSize" ],
  "com.google.common.collect.Iterators:concat(java.util.Iterator)" : [ "<init>" ],
  "com.google.common.collect.Maps$BiMapConverter:<init>(com.google.common.collect.BiMap)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.LinkedHashMultiset:count(java.lang.Object)" : [ "count" ],
  "com.google.common.util.concurrent.FuturesGetChecked:getChecked(java.util.concurrent.Future,java.lang.Class)" : [ "getChecked", "bestGetCheckedTypeValidator" ],
  "com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor:<init>(java.util.concurrent.Executor,com.google.common.util.concurrent.ExecutionSequencer)" : [ "run" ],
  "com.google.common.collect.Multimaps:filterValues(com.google.common.collect.Multimap,com.google.common.base.Predicate)" : [ "filterEntries", "valuePredicateOnEntries" ],
  "com.google.common.collect.TreeMultiset:writeObject(java.io.ObjectOutputStream)" : [ "writeMultiset" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:offerFirst(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:pollAsMapEntry(java.util.Iterator)" : [ "immutableEntry", "unmodifiableCollectionSubclass" ],
  "com.google.common.hash.Hashing:goodFastHash(int)" : [ "checkPositiveAndMakeMultipleOf32", "murmur3_128" ],
  "com.google.common.collect.Multimaps$AsMap:<init>(com.google.common.collect.Multimap)" : [ "checkNotNull" ],
  "com.google.common.collect.Collections2$PermutationCollection:iterator()" : [ "<init>" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:<init>(java.util.NavigableMap,com.google.common.base.Predicate)" : [ "<init>", "checkNotNull" ],
  "com.google.common.io.CharSequenceReader:read(char[],int,int)" : [ "checkPositionIndexes", "checkOpen", "hasRemaining", "remaining" ],
  "com.google.common.collect.ForwardingCollection:standardIsEmpty()" : [ "iterator" ],
  "com.google.common.collect.AbstractMapBasedMultimap:removeValuesForKey(java.lang.Object)" : [ "safeRemove" ],
  "com.google.common.graph.ImmutableNetwork:successors(java.lang.Object)" : [ "successors" ],
  "com.google.common.collect.FilteredKeyListMultimap:unfiltered()" : [ "unfiltered" ],
  "com.google.common.io.BaseEncoding$Alphabet:<init>(java.lang.String,char[])" : [ "<init>", "decodabetFor" ],
  "com.google.common.collect.ForwardingSortedMultiset:standardPollLastEntry()" : [ "descendingMultiset", "immutableEntry" ],
  "com.google.common.graph.NetworkBuilder:expectedEdgeCount(int)" : [ "of", "checkNonNegative" ],
  "com.google.common.collect.MapMakerInternalMap$EntrySet:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.base.Utf8:isWellFormed(byte[],int,int)" : [ "checkPositionIndexes", "isWellFormedSlowPath" ],
  "com.google.common.collect.Iterables:skip(java.lang.Iterable,int)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.util.concurrent.RateLimiter:create(double,long,java.util.concurrent.TimeUnit)" : [ "create", "checkArgument", "createFromSystemTimer" ],
  "com.google.common.util.concurrent.SmoothRateLimiter:<init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch)" : [ "<init>" ],
  "com.google.common.reflect.TypeParameter:<init>()" : [ "checkArgument" ],
  "com.google.common.collect.Collections2$OrderedPermutationIterator:calculateNextPermutation()" : [ "findNextJ", "findNextL" ],
  "com.google.common.base.Splitter:on(java.lang.String)" : [ "<init>", "on", "checkArgument" ],
  "com.google.common.collect.Synchronized:typePreservingCollection(java.util.Collection,java.lang.Object)" : [ "sortedSet", "set", "list", "collection" ],
  "com.google.common.collect.Iterables:toArray(java.lang.Iterable,java.lang.Class)" : [ "toArray", "newArray" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:indexOf(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.graph.Graphs:inducedSubgraph(com.google.common.graph.Network,java.lang.Iterable)" : [ "from", "expectedNodeCount", "build", "adjacentNode" ],
  "com.google.common.cache.LocalCache$KeyIterator:next()" : [ "getKey" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.reflect.TypeToken:getSupertype(java.lang.Class)" : [ "checkArgument", "someRawTypeIsSubclassOf", "getArraySupertype", "resolveSupertype", "toGenericType" ],
  "com.google.common.collect.RegularImmutableList:<init>(java.lang.Object[])" : [ "<init>" ],
  "com.google.common.io.BaseEncoding$Base16Encoding:<init>(com.google.common.io.BaseEncoding$Alphabet)" : [ "<init>", "checkArgument", "encode" ],
  "com.google.common.collect.ForwardingMultimap:putAll(java.lang.Object,java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:pollFirst()" : [ "pollNext" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:of()" : [ "<init>" ],
  "com.google.common.math.StatsAccumulator:mean()" : [ "checkState" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "getSubMultiset", "tailIndex", "checkNotNull" ],
  "com.google.common.collect.Multimaps:transformValues(com.google.common.collect.ListMultimap,com.google.common.base.Function)" : [ "checkNotNull", "transformEntries" ],
  "com.google.common.collect.ImmutableList:of(java.lang.Object)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractScheduledService:executor()" : [ "addListener", "directExecutor" ],
  "com.google.common.util.concurrent.FluentFuture:transformAsync(com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor)" : [ "transformAsync" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.collect.ContiguousSet:subSet(java.lang.Object,java.lang.Object)" : [ "subSet" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:firstEntry()" : [ "sortedMap" ],
  "com.google.common.collect.Maps$NavigableKeySet:descendingIterator()" : [ "descendingSet" ],
  "com.google.common.collect.ForwardingMap:standardClear()" : [ "clear", "entrySet" ],
  "com.google.common.graph.Graphs$TransposedGraph:outDegree(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:subMap(java.lang.Object,java.lang.Object)" : [ "subMap" ],
  "com.google.common.collect.EnumBiMap:inferKeyTypeOrObjectUnderJ2cl(java.util.Map)" : [ "checkArgument" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:next()" : [ "wrapEntry" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:headMap(java.lang.Object)" : [ "headMap" ],
  "com.google.common.collect.FilteredMultimapValues:removeAll(java.util.Collection)" : [ "removeIf", "and", "valuePredicateOnEntries", "in" ],
  "com.google.common.primitives.ImmutableIntArray:get(int)" : [ "checkElementIndex", "length" ],
  "com.google.common.collect.AbstractListMultimap:<init>(java.util.Map)" : [ "<init>" ],
  "com.google.common.graph.AbstractNetwork:equals(java.lang.Object)" : [ "edgeIncidentNodesMap" ],
  "com.google.common.util.concurrent.AtomicLongMap:create(java.util.Map)" : [ "create", "putAll" ],
  "com.google.common.collect.Multimaps$TransformedEntriesMultimap:remove(java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.base.Converter$ConverterComposition:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.collect.Multimaps$AsMap:remove(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.escape.UnicodeEscaper:codePointAt(java.lang.CharSequence,int,int)" : [ "checkNotNull" ],
  "com.google.common.collect.DiscreteDomain:offset(java.lang.Comparable,long)" : [ "checkNonnegative" ],
  "com.google.common.collect.RegularContiguousSet:descendingIterator()" : [ "last" ],
  "com.google.common.collect.Iterables:concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : [ "concat" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:ceilingKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:pollLast()" : [ "pollNext", "descendingIterator" ],
  "com.google.common.cache.LocalCache$LocalManualCache:size()" : [ "longSize" ],
  "com.google.common.collect.ImmutableList:asImmutableList(java.lang.Object[],int)" : [ "<init>", "of" ],
  "com.google.common.collect.ForwardingList:standardSubList(int,int)" : [ "subListImpl" ],
  "com.google.common.collect.ForwardingNavigableMap:tailMap(java.lang.Object,boolean)" : [ "delegate" ],
  "com.google.common.primitives.Ints:indexOf(int[],int[])" : [ "checkNotNull" ],
  "com.google.common.collect.Serialization:populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream)" : [ "populateMultimap" ],
  "com.google.common.graph.ElementOrder:insertion()" : [ "<init>" ],
  "com.google.common.graph.ImmutableGraph:inDegree(java.lang.Object)" : [ "inDegree" ],
  "com.google.common.collect.FluentIterable:filter(java.lang.Class)" : [ "filter", "from", "getDelegate" ],
  "com.google.common.base.Strings:padStart(java.lang.String,int,char)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.FuturesGetChecked:newWithCause(java.lang.Class,java.lang.Throwable)" : [ "newFromConstructor" ],
  "com.google.common.reflect.ImmutableTypeToInstanceMap:getInstance(com.google.common.reflect.TypeToken)" : [ "trustedGet", "rejectTypeVariables" ],
  "com.google.common.collect.FluentIterable:cycle()" : [ "cycle", "from", "getDelegate" ],
  "com.google.common.util.concurrent.ExecutionSequencer:<init>()" : [ "immediateVoidFuture" ],
  "com.google.common.eventbus.SubscriberRegistry:getAnnotatedMethodsNotCached(java.lang.Class)" : [ "<init>", "of", "getTypes", "rawTypes", "checkArgument", "wrap", "copyOf", "newHashMap" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner5:<init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture)" : [ "of" ],
  "com.google.common.collect.ListMultimap:removeAll(java.lang.Object)" : [ "removeAll" ],
  "com.google.common.collect.RegularImmutableMap:fromEntryArrayCheckingBucketOverflow(int,java.util.Map$Entry[],boolean)" : [ "<init>", "createEntryArray", "closedTableSize", "checkEntryNotNull", "smear", "checkNoConflictInKeyBucket", "makeImmutable", "removeDuplicates" ],
  "com.google.common.cache.LocalCache$Segment:get(java.lang.Object,int)" : [ "getLiveEntry", "recordRead", "scheduleRefresh", "tryDrainReferenceQueues", "postReadCleanup" ],
  "com.google.common.util.concurrent.AbstractFuture:get(long,java.util.concurrent.TimeUnit)" : [ "getDoneValue", "toString", "parkNanos", "isDone" ],
  "com.google.common.collect.RegularImmutableMap:makeImmutable(java.util.Map$Entry)" : [ "makeImmutable" ],
  "com.google.common.util.concurrent.Monitor:enterIf(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)" : [ "enter" ],
  "com.google.common.collect.ImmutableList$Builder:add(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.io.Files:mapInternal(java.io.File,java.nio.channels.FileChannel$MapMode,long)" : [ "checkNotNull", "create", "register", "rethrow", "close" ],
  "com.google.common.primitives.ImmutableDoubleArray:of(double,double,double,double,double)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeMap$RangeMapEntry:contains(java.lang.Comparable)" : [ "contains" ],
  "com.google.common.collect.IndexedImmutableSet:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.graph.Graphs:hasCycle(com.google.common.graph.Network)" : [ "hasCycle" ],
  "com.google.common.collect.ImmutableMultimap:keySet()" : [ "keySet" ],
  "com.google.common.reflect.ImmutableTypeToInstanceMap:of()" : [ "<init>", "of" ],
  "com.google.common.primitives.Booleans:rotate(boolean[],int,int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.reflect.TypeResolver$WildcardCapturer:<init>()" : [ "<init>" ],
  "com.google.common.collect.Collections2$FilteredCollection:toArray()" : [ "newArrayList", "iterator" ],
  "com.google.common.collect.ImmutableSortedMap:reverseOrder()" : [ "<init>", "natural", "reverse" ],
  "com.google.common.collect.AbstractMapBasedMultiset:setCount(java.lang.Object,int)" : [ "<init>", "checkNonnegative", "getAndSet" ],
  "com.google.common.graph.ImmutableGraph:nodeOrder()" : [ "nodeOrder" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:firstKey()" : [ "sortedMap" ],
  "com.google.common.collect.Lists$OnePlusArrayList:<init>(java.lang.Object,java.lang.Object[])" : [ "checkNotNull" ],
  "com.google.common.collect.StandardTable$Column:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.Maps$SortedAsMapView:comparator()" : [ "backingSet" ],
  "com.google.common.collect.Iterators:mergeSorted(java.lang.Iterable,java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.primitives.ImmutableDoubleArray:of(double)" : [ "<init>" ],
  "com.google.common.collect.ByFunctionOrdering:<init>(com.google.common.base.Function,com.google.common.collect.Ordering)" : [ "<init>", "checkNotNull" ],
  "com.google.common.util.concurrent.Monitor:waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)" : [ "toSafeNanos", "initNanoTime", "awaitNanos", "remainingNanos" ],
  "com.google.common.collect.TreeRangeMap:putCoalescing(com.google.common.collect.Range,java.lang.Object)" : [ "put", "coalescedRange", "checkNotNull" ],
  "com.google.common.base.CharMatcher:indexIn(java.lang.CharSequence)" : [ "indexIn" ],
  "com.google.common.collect.TreeRangeSet:subRangeSet(com.google.common.collect.Range)" : [ "equals", "all" ],
  "com.google.common.primitives.Longs$LongArrayAsList:equals(java.lang.Object)" : [ "size" ],
  "com.google.common.collect.CompactLinkedHashMap:<init>()" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap:values()" : [ "values" ],
  "com.google.common.collect.MinMaxPriorityQueue:isEvenLevel(int)" : [ "checkState" ],
  "com.google.common.base.Functions$FunctionForMapNoDefault:<init>(java.util.Map)" : [ "checkNotNull" ],
  "com.google.common.hash.AbstractStreamingHasher:putChar(char)" : [ "munchIfFull" ],
  "com.google.common.collect.EmptyContiguousSet$SerializedForm:readResolve()" : [ "<init>" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:descendingIterator()" : [ "filter", "unfiltered" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:<init>(com.google.common.collect.MapMakerInternalMap,int)" : [ "initTable", "newEntryArray" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:remove(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ForwardingCollection:iterator()" : [ "delegate" ],
  "com.google.common.collect.Collections2$FilteredCollection:addAll(java.util.Collection)" : [ "checkArgument" ],
  "com.google.common.primitives.UnsignedBytes:sort(byte[])" : [ "sort", "checkNotNull" ],
  "com.google.common.collect.Cut:equals(java.lang.Object)" : [ "compareTo" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:get(int)" : [ "getListDelegate" ],
  "com.google.common.graph.UndirectedGraphConnections:successors()" : [ "adjacentNodes" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:navigableKeySet()" : [ "navigableSet", "delegate" ],
  "com.google.common.collect.CompactHashMap:entrySet()" : [ "createEntrySet" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableRangeMap:subRangeMap(com.google.common.collect.Range)" : [ "checkNotNull", "isEmpty", "of", "encloses", "span", "subList" ],
  "com.google.common.primitives.UnsignedInts:sort(int[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "flip" ],
  "com.google.common.reflect.TypeToken$InterfaceSet:delegate()" : [ "from", "filter", "toSet" ],
  "com.google.common.primitives.ImmutableLongArray:copyOf(java.util.Collection)" : [ "<init>", "toArray" ],
  "com.google.common.base.Predicates:and(java.lang.Iterable)" : [ "defensiveCopy" ],
  "com.google.common.collect.ImmutableMultiset:hashCode()" : [ "hashCodeImpl", "entrySet" ],
  "com.google.common.collect.ImmutableMap$SerializedForm:makeBuilder(int)" : [ "<init>" ],
  "com.google.common.collect.Maps:toImmutableEnumMap(java.util.function.Function,java.util.function.Function)" : [ "toImmutableEnumMap" ],
  "com.google.common.cache.CacheStats:averageLoadPenalty()" : [ "saturatedAdd" ],
  "com.google.common.collect.ForwardingList:addAll(int,java.util.Collection)" : [ "delegate" ],
  "com.google.common.reflect.TypeToken:toGenericType(java.lang.Class)" : [ "newArrayType", "of" ],
  "com.google.common.collect.Maps$UnmodifiableEntrySet:<init>(java.util.Set)" : [ "<init>" ],
  "com.google.common.reflect.TypeToken:resolveTypeArgsForSubclass(java.lang.Class)" : [ "<init>", "getRawType", "getSupertype", "toGenericType", "where", "resolveType" ],
  "com.google.common.collect.ImmutableMultiset:copyFromEntries(java.util.Collection)" : [ "of", "create" ],
  "com.google.common.collect.AbstractNavigableMap:firstKey()" : [ "firstEntry" ],
  "com.google.common.reflect.MutableTypeToInstanceMap:getInstance(com.google.common.reflect.TypeToken)" : [ "trustedGet", "rejectTypeVariables" ],
  "com.google.common.collect.RegularContiguousSet:size()" : [ "first", "last" ],
  "com.google.common.math.LongMath:sqrt(long,java.math.RoundingMode)" : [ "sqrt", "checkNonNegative", "fitsInInt", "checkRoundingUnnecessary", "lessThanBranchFree" ],
  "com.google.common.collect.CompactHashSet:allocArrays()" : [ "checkState", "needsAllocArrays", "tableSize", "createTable", "setHashTableMask" ],
  "com.google.common.collect.ImmutableRangeMap$Builder:put(com.google.common.collect.Range,java.lang.Object)" : [ "checkNotNull", "checkArgument", "isEmpty", "immutableEntry" ],
  "com.google.common.io.ByteSink:writeFrom(java.io.InputStream)" : [ "checkNotNull", "copy", "rethrow", "create", "close", "register" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor)" : [ "addListener" ],
  "com.google.common.base.Joiner:appendTo(java.lang.Appendable,java.lang.Object[])" : [ "appendTo" ],
  "com.google.common.util.concurrent.ListenableFutureTask:addListener(java.lang.Runnable,java.util.concurrent.Executor)" : [ "add" ],
  "com.google.common.graph.AbstractUndirectedNetworkConnections:addInEdge(java.lang.Object,java.lang.Object,boolean)" : [ "addOutEdge" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:floorKey(java.lang.Object)" : [ "fromMap" ],
  "com.google.common.collect.ImmutableMap:keyIterator()" : [ "entrySet" ],
  "com.google.common.cache.LocalCache:replace(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "replace", "checkNotNull", "hash", "segmentFor" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:retainAll(java.util.Collection)" : [ "delegate" ],
  "com.google.common.graph.StandardNetwork:predecessors(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.io.Closeables:closeQuietly(java.io.Reader)" : [ "close" ],
  "com.google.common.base.PairwiseEquivalence:doEquivalent(java.lang.Iterable,java.lang.Iterable)" : [ "equivalent" ],
  "com.google.common.collect.RegularImmutableMap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.cache.LocalCache$Segment:removeCollectedEntry(com.google.common.cache.ReferenceEntry)" : [ "enqueueNotification", "remove" ],
  "com.google.common.graph.EndpointPairIterator$Undirected:<init>(com.google.common.graph.BaseGraph)" : [ "newHashSetWithExpectedSize" ],
  "com.google.common.collect.ObjectArrays:checkElementsNotNull(java.lang.Object[],int)" : [ "checkElementNotNull" ],
  "com.google.common.io.MultiInputStream:<init>(java.util.Iterator)" : [ "checkNotNull", "advance" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:remove(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.CharMatcher$Ascii:<init>()" : [ "<init>" ],
  "com.google.common.graph.GraphBuilder:copy()" : [ "<init>" ],
  "com.google.common.base.CaseFormat:to(com.google.common.base.CaseFormat,java.lang.String)" : [ "checkNotNull", "convert" ],
  "com.google.common.collect.ImmutableList:lastIndexOf(java.lang.Object)" : [ "lastIndexOfImpl" ],
  "com.google.common.util.concurrent.AtomicDouble:accumulateAndGet(double,java.util.function.DoubleBinaryOperator)" : [ "checkNotNull", "updateAndGet" ],
  "com.google.common.collect.RegularImmutableMultiset:count(java.lang.Object)" : [ "smearedHash", "nextInBucket", "getElement", "getCount", "equal" ],
  "com.google.common.io.CharSource:lengthIfKnown()" : [ "absent" ],
  "com.google.common.collect.ForwardingNavigableMap:ceilingEntry(java.lang.Object)" : [ "delegate" ],
  "com.google.common.reflect.ClassPath$ResourceInfo:<init>(java.io.File,java.lang.String,java.lang.ClassLoader)" : [ "checkNotNull" ],
  "com.google.common.collect.StandardTable:get(java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putString(java.lang.CharSequence,java.nio.charset.Charset)" : [ "putString", "update" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:firstEntry()" : [ "delegate" ],
  "com.google.common.collect.Maps$MapDifferenceImpl:hashCode()" : [ "entriesOnlyOnLeft", "entriesOnlyOnRight", "entriesInCommon", "entriesDiffering" ],
  "com.google.common.collect.Multisets:containsOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "checkNotNull" ],
  "com.google.common.graph.StandardValueGraph:edgeValueOrDefaultInternal(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.collect.FilteredEntryMultimap$AsMap:get(java.lang.Object)" : [ "filterCollection" ],
  "com.google.common.cache.LocalCache$LocalManualCache:getIfPresent(java.lang.Object)" : [ "getIfPresent" ],
  "com.google.common.collect.MapMakerInternalMap:containsValue(java.lang.Object)" : [ "valueEquivalence", "equivalent" ],
  "com.google.common.collect.Maps$FilteredEntryMap$KeySet:retainAll(java.util.Collection)" : [ "retainAllKeys" ],
  "com.google.common.graph.AbstractBaseGraph:incidentEdges(java.lang.Object)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.Maps$AsMapView:containsKey(java.lang.Object)" : [ "backingSet" ],
  "com.google.common.util.concurrent.WrappingExecutorService:execute(java.lang.Runnable)" : [ "wrapTask" ],
  "com.google.common.base.Splitter:on(com.google.common.base.CharMatcher)" : [ "<init>", "checkNotNull" ],
  "com.google.common.graph.StandardMutableGraph:removeEdge(java.lang.Object,java.lang.Object)" : [ "removeEdge" ],
  "com.google.common.util.concurrent.Callables:threadRenaming(java.lang.Runnable,com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingMultiset:entrySet()" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:contains(java.lang.Object)" : [ "safeContains" ],
  "com.google.common.collect.ForwardingNavigableSet:standardFloor(java.lang.Object)" : [ "getNext", "headSet" ],
  "com.google.common.graph.EndpointPair:of(com.google.common.graph.Graph,java.lang.Object,java.lang.Object)" : [ "ordered", "unordered" ],
  "com.google.common.collect.EnumHashBiMap:containsValue(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.graph.AbstractGraph:edges()" : [ "edges" ],
  "com.google.common.collect.Multimaps$AsMap:get(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.base.CharMatcher$Any:and(com.google.common.base.CharMatcher)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeRangeSet:add(com.google.common.collect.Range)" : [ "checkNotNull", "isEmpty", "compareTo", "replaceRangeWithSameLowerBound", "create" ],
  "com.google.common.collect.Iterables:find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)" : [ "find" ],
  "com.google.common.collect.HashBasedTable:isEmpty()" : [ "isEmpty" ],
  "com.google.common.collect.LinkedListMultimap:<init>(com.google.common.collect.Multimap)" : [ "<init>", "putAll" ],
  "com.google.common.base.Present:<init>(java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset:successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode)" : [ "successor" ],
  "com.google.common.collect.AbstractTable$Values:iterator()" : [ "valuesIterator" ],
  "com.google.common.math.PairedStatsAccumulator:pearsonsCorrelationCoefficient()" : [ "checkState", "count", "sumOfSquaresOfDeltas", "ensurePositive", "ensureInUnitRange" ],
  "com.google.common.base.Suppliers:memoize(com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.cache.ForwardingCache:get(java.lang.Object,java.util.concurrent.Callable)" : [ "delegate" ],
  "com.google.common.collect.LinkedHashMultimap:valueSpliterator()" : [ "map", "entrySpliterator" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:set(int,java.lang.Object)" : [ "getListDelegate" ],
  "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:next()" : [ "checkForConcurrentModification" ],
  "com.google.common.collect.ForwardingNavigableMap:standardLowerKey(java.lang.Object)" : [ "keyOrNull", "lowerEntry" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:lastIndexOf(java.lang.Object)" : [ "lastIndexOf" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.collect.Platform:preservesInsertionOrderOnPutsMap()" : [ "newLinkedHashMap" ],
  "com.google.common.util.concurrent.Monitor:waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)" : [ "waitForUninterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.TreeRangeSet$AsRanges:hashCode()" : [ "hashCodeImpl" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMap:containsValue(java.lang.Object)" : [ "values" ],
  "com.google.common.reflect.TypeToken:resolveSupertype(java.lang.reflect.Type)" : [ "of", "getCovariantTypeResolver", "resolveType" ],
  "com.google.common.collect.Tables$TransformedTable:row(java.lang.Object)" : [ "transformValues" ],
  "com.google.common.io.Flushables:flushQuietly(java.io.Flushable)" : [ "flush" ],
  "com.google.common.collect.ForwardingNavigableSet:standardHeadSet(java.lang.Object)" : [ "headSet" ],
  "com.google.common.collect.Collections2$FilteredCollection:retainAll(java.util.Collection)" : [ "removeIf" ],
  "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.io.ByteSource$AsCharSource:read()" : [ "read" ],
  "com.google.common.math.PairedStatsAccumulator:yStats()" : [ "snapshot" ],
  "com.google.common.util.concurrent.ForwardingFuture:get(long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.MapMakerInternalMap$CleanupMapTask:run()" : [ "runCleanup" ],
  "com.google.common.collect.Iterables:frequency(java.lang.Iterable,java.lang.Object)" : [ "frequency" ],
  "com.google.common.collect.ImmutableList:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache$ManualSerializationProxy:recreateCacheBuilder()" : [ "newBuilder", "setKeyStrength", "setValueStrength", "keyEquivalence", "valueEquivalence", "concurrencyLevel", "removalListener", "expireAfterWrite", "expireAfterAccess", "weigher", "maximumWeight", "maximumSize", "ticker" ],
  "com.google.common.collect.Maps$NavigableKeySet:higher(java.lang.Object)" : [ "map" ],
  "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Collection)" : [ "copyOf", "natural" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:headSet(java.lang.Object,boolean)" : [ "filter", "unfiltered" ],
  "com.google.common.collect.HashBiMap:init(int)" : [ "checkNonnegative", "closedTableSize", "createTable" ],
  "com.google.common.collect.Maps$ViewCachingAbstractMap:values()" : [ "createValues" ],
  "com.google.common.util.concurrent.Futures:getChecked(java.util.concurrent.Future,java.lang.Class,long,java.util.concurrent.TimeUnit)" : [ "getChecked" ],
  "com.google.common.collect.ArrayTable:hashCode()" : [ "hashCode" ],
  "com.google.common.hash.AbstractByteHasher:putBytes(java.nio.ByteBuffer)" : [ "update" ],
  "com.google.common.reflect.TypeResolver$TypeTable:where(java.util.Map)" : [ "<init>", "builder", "putAll", "checkArgument", "equalsType", "put", "buildOrThrow" ],
  "com.google.common.base.Stopwatch:elapsed(java.util.concurrent.TimeUnit)" : [ "elapsedNanos" ],
  "com.google.common.util.concurrent.Monitor:enterInterruptibly(java.time.Duration)" : [ "enterInterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.Streams:findLast(java.util.stream.LongStream)" : [ "findLast" ],
  "com.google.common.collect.Maps:filterKeys(java.util.SortedMap,com.google.common.base.Predicate)" : [ "filterEntries", "keyPredicateOnEntries" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap:containsKey(java.lang.Object)" : [ "safeContainsKey" ],
  "com.google.common.collect.TreeMultiset:setCount(java.lang.Object,int,int)" : [ "setCount", "checkNonnegative", "checkArgument", "contains", "get", "add", "comparator", "checkAndSet" ],
  "com.google.common.hash.HashCode$BytesHashCode:asLong()" : [ "checkState", "padToLong" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:pollLastEntry()" : [ "delegate" ],
  "com.google.common.collect.ForwardingNavigableMap:pollFirstEntry()" : [ "delegate" ],
  "com.google.common.collect.TreeBasedTable:create()" : [ "<init>", "natural" ],
  "com.google.common.base.Splitter:trimResults()" : [ "trimResults", "whitespace" ],
  "com.google.common.collect.ForwardingMap:clear()" : [ "delegate" ],
  "com.google.common.collect.ForwardingListMultimap:removeAll(java.lang.Object)" : [ "removeAll", "delegate" ],
  "com.google.common.primitives.UnsignedLongs:parseUnsignedLong(java.lang.String,int)" : [ "checkNotNull", "overflowInParse" ],
  "com.google.common.collect.ImmutableList$SubList:get(int)" : [ "checkElementIndex" ],
  "com.google.common.collect.Interners$InternerImpl:<init>(com.google.common.collect.MapMaker)" : [ "createWithDummyValues", "keyEquivalence", "equals" ],
  "com.google.common.collect.Iterables:cycle(java.lang.Iterable)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:containsKey(java.lang.Object)" : [ "get" ],
  "com.google.common.collect.Ordering:nullsFirst()" : [ "<init>" ],
  "com.google.common.collect.DescendingImmutableSortedSet:higher(java.lang.Object)" : [ "lower" ],
  "com.google.common.util.concurrent.ServiceManager:startupTimes()" : [ "startupTimes" ],
  "com.google.common.io.BaseEncoding$Alphabet:hasUpperCase()" : [ "isUpperCase" ],
  "com.google.common.collect.ImmutableTable:builder()" : [ "<init>" ],
  "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,long,double,com.google.common.hash.BloomFilter$Strategy)" : [ "<init>", "checkNotNull", "checkArgument", "optimalNumOfBits" ],
  "com.google.common.collect.ImmutableRangeSet$SerializedForm:readResolve()" : [ "<init>", "of", "equals", "all" ],
  "com.google.common.collect.Multimaps$Keys:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.collect.Iterables$UnmodifiableIterable:<init>(java.lang.Iterable)" : [ "<init>" ],
  "com.google.common.collect.Maps$TransformedEntriesSortedMap:lastKey()" : [ "fromMap" ],
  "com.google.common.io.CharSource:readLines(com.google.common.io.LineProcessor)" : [ "readLines", "checkNotNull", "create", "register", "rethrow", "close" ],
  "com.google.common.collect.ImmutableSetMultimap$EntrySet:<init>(com.google.common.collect.ImmutableSetMultimap)" : [ "<init>" ],
  "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putInt(int)" : [ "update" ],
  "com.google.common.collect.AbstractMapBasedMultimap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps$TransformedEntriesSortedMap:firstKey()" : [ "fromMap" ],
  "com.google.common.collect.Maps$SortedKeySet:map()" : [ "map" ],
  "com.google.common.collect.CompactHashMap:create()" : [ "<init>" ],
  "com.google.common.collect.StandardTable$Column$EntrySet:clear()" : [ "removeFromColumnIf", "alwaysTrue" ],
  "com.google.common.collect.EmptyImmutableListMultimap:<init>()" : [ "<init>", "of" ],
  "com.google.common.collect.TreeRangeMap$1:merge(com.google.common.collect.Range,java.lang.Object,java.util.function.BiFunction)" : [ "checkNotNull" ],
  "com.google.common.collect.Sets:filter(java.util.SortedSet,com.google.common.base.Predicate)" : [ "<init>", "and", "checkNotNull" ],
  "com.google.common.graph.Graphs:transpose(com.google.common.graph.ValueGraph)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:tailSet(java.lang.Object)" : [ "tailSet" ],
  "com.google.common.hash.Fingerprint2011:fullFingerprint(byte[],int,int)" : [ "load64", "weakHashLength32WithSeeds", "shiftMix", "hash128to64" ],
  "com.google.common.util.concurrent.Monitor$Guard:<init>(com.google.common.util.concurrent.Monitor)" : [ "checkNotNull" ],
  "com.google.common.io.MoreFiles:listFiles(java.nio.file.Path)" : [ "copyOf" ],
  "com.google.common.collect.FilteredEntryMultimap:removeEntriesIf(com.google.common.base.Predicate)" : [ "filterCollection", "immutableEntry" ],
  "com.google.common.collect.AbstractSortedSetMultimap:createUnmodifiableEmptyCollection()" : [ "unmodifiableCollectionSubclass" ],
  "com.google.common.base.Strings:emptyToNull(java.lang.String)" : [ "emptyToNull" ],
  "com.google.common.base.CharMatcher$Negated:matchesAllOf(java.lang.CharSequence)" : [ "matchesNoneOf" ],
  "com.google.common.collect.Maps$DescendingMap:tailMap(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.collect.ImmutableTable:column(java.lang.Object)" : [ "checkNotNull", "firstNonNull", "of" ],
  "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl:build()" : [ "of" ],
  "com.google.common.collect.ImmutableSortedMultiset:reverseOrder()" : [ "<init>", "natural", "reverse" ],
  "com.google.common.collect.DescendingImmutableSortedSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "subSet", "descendingSet" ],
  "com.google.common.io.ByteSource$SlicedByteSource:slice(long,long)" : [ "slice", "checkArgument", "empty" ],
  "com.google.common.collect.ImmutableClassToInstanceMap$Builder:build()" : [ "buildOrThrow", "isEmpty", "of" ],
  "com.google.common.collect.AbstractMultiset:removeAll(java.util.Collection)" : [ "removeAllImpl" ],
  "com.google.common.primitives.UnsignedInteger:mod(com.google.common.primitives.UnsignedInteger)" : [ "fromIntBits", "remainder", "checkNotNull" ],
  "com.google.common.math.LongMath:roundToDouble(long,java.math.RoundingMode)" : [ "compare", "checkRoundingUnnecessary", "nextDown", "getSignificand" ],
  "com.google.common.collect.ImmutableList:listIterator()" : [ "listIterator" ],
  "com.google.common.graph.Traverser$Traversal:preOrder(java.util.Iterator)" : [ "topDown" ],
  "com.google.common.collect.Interners:newStrongInterner()" : [ "newBuilder", "strong", "build" ],
  "com.google.common.io.LittleEndianDataInputStream:readLong()" : [ "readAndCheckByte", "fromBytes" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,char)" : [ "<init>" ],
  "com.google.common.primitives.Floats:sortDescending(float[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.collect.Maps$SortedAsMapView:tailMap(java.lang.Object)" : [ "asMap", "backingSet" ],
  "com.google.common.collect.ForwardingSet:standardRemoveAll(java.util.Collection)" : [ "removeAllImpl", "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeSet:encloses(com.google.common.collect.Range)" : [ "encloses", "binarySearch", "natural" ],
  "com.google.common.cache.LocalCache$Segment:getAndRecordStats(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.util.concurrent.ListenableFuture)" : [ "<init>", "getUninterruptibly", "elapsedNanos", "storeLoadedValue", "removeLoadingValue" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:tailSet(java.lang.Object,boolean)" : [ "filter", "unfiltered" ],
  "com.google.common.base.Joiner:iterable(java.lang.Object,java.lang.Object,java.lang.Object[])" : [ "checkNotNull" ],
  "com.google.common.collect.CompactHashMap:valuesIterator()" : [ "delegateOrNull" ],
  "com.google.common.hash.ChecksumHashFunction:<init>(com.google.common.hash.ImmutableSupplier,int,java.lang.String)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.primitives.UnsignedBytes:compare(byte,byte)" : [ "toInt" ],
  "com.google.common.collect.AbstractListMultimap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:createNodes(java.lang.Class)" : [ "<init>", "newEnumMap", "newArrayListWithCapacity", "getLockName", "checkAcquiredLocks" ],
  "com.google.common.reflect.TypeToken:isWrapper()" : [ "allWrapperTypes" ],
  "com.google.common.collect.CompactHashMap:clear()" : [ "needsAllocArrays", "incrementModCount", "delegateOrNull", "constrainToRange", "size", "requireKeys", "requireValues", "tableClear", "requireTable", "requireEntries" ],
  "com.google.common.collect.Multisets:sum(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingMapEntry:standardEquals(java.lang.Object)" : [ "getKey", "getValue", "equal" ],
  "com.google.common.collect.ImmutableList$Builder:<init>(int)" : [ "<init>" ],
  "com.google.common.collect.ForwardingBlockingDeque:offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.StandardTable:values()" : [ "values" ],
  "com.google.common.io.ByteSource$ByteArrayByteSource:slice(long,long)" : [ "<init>", "checkArgument" ],
  "com.google.common.io.ByteStreams:newDataOutput(int)" : [ "newDataOutput" ],
  "com.google.common.collect.ImmutableSortedSet$Builder:combine(com.google.common.collect.ImmutableSet$Builder)" : [ "add" ],
  "com.google.common.base.CharMatcher$Any:or(com.google.common.base.CharMatcher)" : [ "checkNotNull" ],
  "com.google.common.graph.ImmutableNetwork:edgesConnecting(java.lang.Object,java.lang.Object)" : [ "edgesConnecting" ],
  "com.google.common.collect.LinkedHashMultimap:clear()" : [ "succeedsInMultimap" ],
  "com.google.common.util.concurrent.TrustedListenableFutureTask:create(java.util.concurrent.Callable)" : [ "<init>" ],
  "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:build()" : [ "buildOrThrow" ],
  "com.google.common.collect.Multimaps:filterFiltered(com.google.common.collect.FilteredMultimap,com.google.common.base.Predicate)" : [ "<init>", "and" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:newWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)" : [ "castForTesting" ],
  "com.google.common.collect.CollectSpliterators:filter(java.util.Spliterator,java.util.function.Predicate)" : [ "checkNotNull" ],
  "com.google.common.primitives.Longs$LongArrayAsList:toString()" : [ "size" ],
  "com.google.common.collect.ForwardingNavigableMap:headMap(java.lang.Object,boolean)" : [ "delegate" ],
  "com.google.common.collect.ImmutableSortedMap:comparator()" : [ "comparator", "keySet" ],
  "com.google.common.io.CharSource$CharSequenceCharSource:lines()" : [ "stream", "linesIterator" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:successors(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:higherKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,int,long)" : [ "<init>" ],
  "com.google.common.collect.ForwardingNavigableSet:standardPollFirst()" : [ "pollNext" ],
  "com.google.common.collect.CompactLinkedHashSet:<init>(int)" : [ "<init>" ],
  "com.google.common.collect.EnumBiMap:entrySet()" : [ "entrySet" ],
  "com.google.common.collect.TreeMultiset:firstNode()" : [ "get", "hasLowerBound", "uncheckedCastNullableTToT", "getLowerEndpoint", "comparator", "getLowerBoundType", "getElement", "contains" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:<init>(com.google.common.collect.SortedSetMultimap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.FluentIterable:allMatch(com.google.common.base.Predicate)" : [ "all", "getDelegate" ],
  "com.google.common.net.InetAddresses$TeredoInfo:<init>(java.net.Inet4Address,java.net.Inet4Address,int,int)" : [ "checkArgument", "firstNonNull" ],
  "com.google.common.collect.Sets$CartesianSet:hashCode()" : [ "iterator" ],
  "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addValue(long)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:comparator()" : [ "sortedMap" ],
  "com.google.common.collect.CompactHashSet:<init>(int)" : [ "init" ],
  "com.google.common.util.concurrent.TrustedListenableFutureTask:afterDone()" : [ "interruptTask" ],
  "com.google.common.io.ByteSource$AsCharSource:asByteSource(java.nio.charset.Charset)" : [ "asByteSource" ],
  "com.google.common.collect.AllEqualOrdering:sortedCopy(java.lang.Iterable)" : [ "newArrayList" ],
  "com.google.common.collect.ImmutableRangeMap:equals(java.lang.Object)" : [ "equals", "asMapOfRanges" ],
  "com.google.common.cache.CacheStats:<init>(long,long,long,long,long,long)" : [ "checkArgument" ],
  "com.google.common.io.Files:write(byte[],java.io.File)" : [ "write" ],
  "com.google.common.collect.CompactHashMap:insertEntry(int,java.lang.Object,java.lang.Object,int,int)" : [ "setEntry", "maskCombine", "setKey", "setValue" ],
  "com.google.common.cache.LocalCache$Segment:lockedGetOrLoad(java.lang.Object,int,com.google.common.cache.CacheLoader)" : [ "<init>", "preWriteCleanup", "equivalent", "enqueueNotification", "isExpired", "recordLockedRead", "remove", "newEntry", "postWriteCleanup", "loadSync", "waitForLoadingValue" ],
  "com.google.common.util.concurrent.MoreExecutors:platformThreadFactory()" : [ "isAppEngineWithApiClasses", "propagate" ],
  "com.google.common.primitives.Doubles$DoubleArrayAsList:equals(java.lang.Object)" : [ "size" ],
  "com.google.common.io.ByteStreams:copy(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel)" : [ "checkNotNull", "createBuffer", "flip", "clear" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:tailMap(com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.reflect.ClassPath:getTopLevelClasses(java.lang.String)" : [ "getTopLevelClasses", "checkNotNull", "builder", "getPackageName", "add", "build" ],
  "com.google.common.base.AbstractIterator:next()" : [ "hasNext", "uncheckedCastNullableTToT" ],
  "com.google.common.primitives.Doubles$DoubleArrayAsList:set(int,java.lang.Double)" : [ "checkElementIndex", "size", "checkNotNull" ],
  "com.google.common.collect.RegularImmutableMap:createKeySet()" : [ "<init>" ],
  "com.google.common.collect.ForwardingBlockingDeque:offer(java.lang.Object,long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.ImmutableCollection:toArray(java.lang.Object[])" : [ "checkNotNull", "internalArray", "copy", "internalArrayStart", "internalArrayEnd", "newArray", "copyIntoArray" ],
  "com.google.common.collect.ForwardingQueue:offer(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$Values:isEmpty()" : [ "isEmpty" ],
  "com.google.common.reflect.ClassPath$LocationInfo:scanJarFile(java.util.jar.JarFile,com.google.common.collect.ImmutableSet$Builder)" : [ "add", "of" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:<init>(java.util.NavigableMap,com.google.common.collect.Maps$UnmodifiableNavigableMap)" : [ "<init>" ],
  "com.google.common.collect.Tables$TransformedTable:column(java.lang.Object)" : [ "transformValues" ],
  "com.google.common.collect.StandardTable:put(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "checkNotNull", "getOrCreate" ],
  "com.google.common.collect.TreeRangeMap:putRangeMapEntry(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ForwardingMapEntry:<init>()" : [ "<init>" ],
  "com.google.common.math.Stats:populationVariance()" : [ "checkState", "ensureNonNegative", "count" ],
  "com.google.common.collect.AbstractMapBasedMultimap:createUnmodifiableEmptyCollection()" : [ "unmodifiableCollectionSubclass" ],
  "com.google.common.collect.ForwardingSortedMultiset:pollLastEntry()" : [ "delegate" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:headSet(java.lang.Object)" : [ "headMap" ],
  "com.google.common.collect.JdkBackedImmutableMap:forEach(java.util.function.BiConsumer)" : [ "forEach", "checkNotNull" ],
  "com.google.common.collect.ImmutableSet:of(java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Maps$FilteredEntryBiMap:<init>(com.google.common.collect.BiMap,com.google.common.base.Predicate,com.google.common.collect.BiMap)" : [ "<init>" ],
  "com.google.common.util.concurrent.ClosingFuture:finishToValueAndCloser(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer,java.util.concurrent.Executor)" : [ "checkNotNull", "compareAndUpdateState" ],
  "com.google.common.collect.Cut$BelowValue:withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)" : [ "<init>", "belowAll" ],
  "com.google.common.primitives.Chars$CharArrayAsList:<init>(char[])" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:cancel(boolean)" : [ "cancel" ],
  "com.google.common.collect.AbstractNavigableMap:higherKey(java.lang.Object)" : [ "keyOrNull", "higherEntry" ],
  "com.google.common.collect.Multimaps:flatteningToMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)" : [ "flatteningToMultimap" ],
  "com.google.common.collect.Ordering:max(java.lang.Iterable)" : [ "max" ],
  "com.google.common.cache.LocalCache$WeightedWeakValueReference:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry,int)" : [ "<init>" ],
  "com.google.common.collect.AbstractTable:remove(java.lang.Object,java.lang.Object)" : [ "safeGet", "safeRemove" ],
  "com.google.common.collect.Maps:orNaturalOrder(java.util.Comparator)" : [ "natural" ],
  "com.google.common.primitives.Ints:rotate(int[],int)" : [ "rotate" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:indexOf(java.lang.Object)" : [ "lastIndexOf", "reverseIndex" ],
  "com.google.common.collect.MapMakerInternalMap:create(com.google.common.collect.MapMaker)" : [ "<init>", "getKeyStrength", "getValueStrength", "instance" ],
  "com.google.common.reflect.TypeResolver:resolveTypesInPlace(java.lang.reflect.Type[])" : [ "resolveType" ],
  "com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture:<init>(com.google.common.util.concurrent.ListenableFuture)" : [ "<init>", "checkNotNull" ],
  "com.google.common.net.MediaType:createConstant(java.lang.String,java.lang.String)" : [ "<init>", "addKnownType", "of", "absent" ],
  "com.google.common.collect.FilteredEntryMultimap$AsMap:remove(java.lang.Object)" : [ "newArrayList", "newLinkedHashSet" ],
  "com.google.common.collect.AbstractBiMap:<init>(java.util.Map,com.google.common.collect.AbstractBiMap)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:comparator()" : [ "sortedMap" ],
  "com.google.common.util.concurrent.AbstractIdleService$DelegateService:toString()" : [ "toString" ],
  "com.google.common.io.LittleEndianDataInputStream:readBoolean()" : [ "readUnsignedByte" ],
  "com.google.common.collect.ArrayTable:cellSet()" : [ "cellSet" ],
  "com.google.common.math.LongMath:floorPowerOfTwo(long)" : [ "checkPositive" ],
  "com.google.common.math.IntMath:checkedSubtract(int,int)" : [ "checkNoOverflow" ],
  "com.google.common.primitives.UnsignedLongs:toString(long,int)" : [ "checkArgument", "divide" ],
  "com.google.common.util.concurrent.ImmediateFuture:get(long,java.util.concurrent.TimeUnit)" : [ "get", "checkNotNull" ],
  "com.google.common.collect.Maps:uniqueIndex(java.util.Iterator,com.google.common.base.Function,com.google.common.collect.ImmutableMap$Builder)" : [ "checkNotNull", "put", "buildOrThrow" ],
  "com.google.common.collect.Multisets:addAllImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "forEachEntry" ],
  "com.google.common.collect.MapMakerInternalMap$EntrySet:clear()" : [ "clear" ],
  "com.google.common.primitives.ImmutableLongArray$Builder:add(long)" : [ "ensureRoomFor" ],
  "com.google.common.collect.ImmutableRangeMap:toImmutableRangeMap(java.util.function.Function,java.util.function.Function)" : [ "toImmutableRangeMap" ],
  "com.google.common.collect.HashMultiset:create()" : [ "<init>" ],
  "com.google.common.net.PercentEscaper:escape(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.math.StatsAccumulator:merge(long,double,double,double,double)" : [ "isFinite", "calculateNewMeanNonFinite" ],
  "com.google.common.collect.AbstractMultiset:isEmpty()" : [ "entrySet" ],
  "com.google.common.collect.Tables:immutableCell(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1:sleepMicrosUninterruptibly(long)" : [ "sleepUninterruptibly" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:comparator()" : [ "columnComparator" ],
  "com.google.common.graph.ValueGraphBuilder:build()" : [ "<init>" ],
  "com.google.common.collect.Maps$NavigableKeySet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "map" ],
  "com.google.common.collect.ForwardingNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "delegate" ],
  "com.google.common.collect.Iterables:getOnlyElement(java.lang.Iterable,java.lang.Object)" : [ "getOnlyElement" ],
  "com.google.common.collect.Range:create(com.google.common.collect.Cut,com.google.common.collect.Cut)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset$AvlNode:deleteMe()" : [ "pred", "succ", "removeMax", "rebalance", "removeMin" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:navigableKeySet()" : [ "unmodifiableNavigableSet" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.Iterators:advance(java.util.Iterator,int)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.io.ReaderInputStream:read()" : [ "toInt" ],
  "com.google.common.collect.SortedMultisets$NavigableElementSet:tailSet(java.lang.Object,boolean)" : [ "<init>", "forBoolean" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:lastEntry()" : [ "sortedMap" ],
  "com.google.common.cache.CacheBuilderSpec:hashCode()" : [ "durationInNanos" ],
  "com.google.common.cache.CacheBuilder:weakValues()" : [ "setValueStrength" ],
  "com.google.common.collect.FilteredKeyMultimap:createAsMap()" : [ "filterKeys" ],
  "com.google.common.math.BigIntegerMath:log10(java.math.BigInteger,java.math.RoundingMode)" : [ "log10", "checkPositive", "fitsInLong", "log2", "checkRoundingUnnecessary" ],
  "com.google.common.graph.Graphs:checkNonNegative(long)" : [ "checkArgument" ],
  "com.google.common.collect.Multisets$ViewMultiset:size()" : [ "linearTimeSizeImpl" ],
  "com.google.common.collect.CompactHashMap$ValuesView:toArray(java.lang.Object[])" : [ "needsAllocArrays", "delegateOrNull", "toArrayImpl" ],
  "com.google.common.graph.Traverser:depthFirstPreOrder(java.lang.Object)" : [ "depthFirstPreOrder", "of" ],
  "com.google.common.reflect.Parameter:isAnnotationPresent(java.lang.Class)" : [ "getAnnotation" ],
  "com.google.common.util.concurrent.Futures:whenAllSucceed(java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.collect.CompactHashSet:insertEntry(int,java.lang.Object,int,int)" : [ "setEntry", "maskCombine", "setElement" ],
  "com.google.common.collect.ForwardingCollection:toArray(java.lang.Object[])" : [ "delegate" ],
  "com.google.common.collect.ImmutableSortedMap:<init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedList:replaceAll(java.util.function.UnaryOperator)" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue:pollLast()" : [ "removeAndGet", "getMaxElementIndex" ],
  "com.google.common.collect.Maps$IteratorBasedAbstractMap:clear()" : [ "clear" ],
  "com.google.common.graph.StandardValueGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "checkNotNull", "hasEdgeConnectingInternal", "nodeU", "nodeV" ],
  "com.google.common.collect.CompactLinkedHashMap:clear()" : [ "clear" ],
  "com.google.common.cache.LocalCache$ManualSerializationProxy:readObject(java.io.ObjectInputStream)" : [ "recreateCacheBuilder", "build" ],
  "com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher:dispatch(java.lang.Object,java.util.Iterator)" : [ "checkNotNull", "dispatchEvent" ],
  "com.google.common.util.concurrent.ClosingFuture:checkAndUpdateState(com.google.common.util.concurrent.ClosingFuture$State,com.google.common.util.concurrent.ClosingFuture$State)" : [ "checkState", "compareAndUpdateState" ],
  "com.google.common.math.LinearTransformation$LinearTransformationBuilder:and(double,double)" : [ "<init>", "checkArgument", "isFinite", "withSlope" ],
  "com.google.common.reflect.Types:subtypeOfComponentType(java.lang.reflect.Type[])" : [ "getComponentType", "subtypeOf" ],
  "com.google.common.collect.MinMaxPriorityQueue:pollFirst()" : [ "poll" ],
  "com.google.common.reflect.TypeToken:canonicalizeTypeArg(java.lang.reflect.TypeVariable,java.lang.reflect.Type)" : [ "canonicalizeWildcardType", "canonicalizeWildcardsInType" ],
  "com.google.common.primitives.UnsignedLongs:remainder(long,long)" : [ "compare" ],
  "com.google.common.collect.CompactHashMap:put(java.lang.Object,java.lang.Object)" : [ "needsAllocArrays", "allocArrays", "delegateOrNull", "requireEntries", "requireKeys", "requireValues", "smearedHash", "hashTableMask", "tableGet", "requireTable", "resizeTable", "newCapacity", "tableSet", "getHashPrefix", "accessEntry", "getNext", "convertToHashFloodingResistantImplementation", "maskCombine", "resizeMeMaybe", "insertEntry", "incrementModCount", "equal" ],
  "com.google.common.collect.Comparators:least(int,java.util.Comparator)" : [ "checkNonnegative", "checkNotNull", "offer", "topK", "combine" ],
  "com.google.common.util.concurrent.RateLimiter:<init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:delegate()" : [ "delegate" ],
  "com.google.common.base.CharMatcher$Or:negate()" : [ "negate" ],
  "com.google.common.base.Stopwatch:createStarted(com.google.common.base.Ticker)" : [ "<init>", "start" ],
  "com.google.common.cache.CacheBuilder:concurrencyLevel(int)" : [ "checkState", "checkArgument" ],
  "com.google.common.graph.StandardNetwork:containsEdge(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.collect.ImmutableSetMultimap:invert()" : [ "builder", "entries", "put", "build" ],
  "com.google.common.collect.Sets$CartesianSet:<init>(com.google.common.collect.ImmutableList,com.google.common.collect.CartesianList)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule:<init>(long,java.util.concurrent.TimeUnit)" : [ "checkNotNull" ],
  "com.google.common.primitives.Longs$LexicographicalComparator:compare(long[],long[])" : [ "compare" ],
  "com.google.common.collect.AbstractMultimap:remove(java.lang.Object,java.lang.Object)" : [ "asMap" ],
  "com.google.common.primitives.Booleans:toArray(java.util.Collection)" : [ "toBooleanArray", "checkNotNull" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,long,char)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedMap:get(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.io.BaseEncoding$Alphabet:upperCase()" : [ "<init>", "hasLowerCase", "checkState", "hasUpperCase", "toUpperCase", "ignoreCase" ],
  "com.google.common.collect.ConcurrentHashMultiset$3:next()" : [ "next" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "filterEntries" ],
  "com.google.common.cache.LocalCache:computeIfAbsent(java.lang.Object,java.util.function.Function)" : [ "checkNotNull", "compute" ],
  "com.google.common.collect.TreeMultiset:<init>(java.util.Comparator)" : [ "<init>", "all", "successor" ],
  "com.google.common.collect.TransformedListIterator:<init>(java.util.ListIterator)" : [ "<init>" ],
  "com.google.common.util.concurrent.FluentFuture:withTimeout(long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)" : [ "withTimeout" ],
  "com.google.common.collect.Hashing:smearedHash(java.lang.Object)" : [ "smear" ],
  "com.google.common.collect.Sets$UnmodifiableNavigableSet:descendingIterator()" : [ "unmodifiableIterator" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.collect.ForwardingNavigableSet:<init>()" : [ "<init>" ],
  "com.google.common.hash.AbstractNonStreamingHashFunction:newHasher(int)" : [ "checkArgument" ],
  "com.google.common.collect.DenseImmutableTable:columnMap()" : [ "copyOf" ],
  "com.google.common.util.concurrent.ClosingFuture$CloseableList:whenClosedCountDown()" : [ "checkState" ],
  "com.google.common.collect.Range:encloseAll(java.lang.Iterable)" : [ "checkNotNull", "natural", "min", "max" ],
  "com.google.common.collect.Multimaps$UnmodifiableMultimap:keys()" : [ "unmodifiableMultiset" ],
  "com.google.common.cache.CacheStats:missRate()" : [ "requestCount" ],
  "com.google.common.graph.NetworkBuilder:immutable()" : [ "<init>", "cast" ],
  "com.google.common.collect.SortedMultisets$NavigableElementSet:headSet(java.lang.Object,boolean)" : [ "<init>", "forBoolean" ],
  "com.google.common.cache.CacheStats:loadExceptionRate()" : [ "saturatedAdd" ],
  "com.google.common.collect.TransformedIterator:<init>(java.util.Iterator)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.base.AbstractIterator:hasNext()" : [ "checkState", "tryToComputeNext" ],
  "com.google.common.graph.ValueGraphBuilder:incidentEdgeOrder(com.google.common.graph.ElementOrder)" : [ "checkArgument", "type", "cast", "checkNotNull" ],
  "com.google.common.graph.StandardMutableGraph:putEdge(java.lang.Object,java.lang.Object)" : [ "putEdgeValue" ],
  "com.google.common.util.concurrent.ClosingFuture$CloseableList:add(java.lang.AutoCloseable,java.util.concurrent.Executor)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeTraverser:breadthFirstTraversal(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache$Values:size()" : [ "size" ],
  "com.google.common.collect.ImmutableTable$Builder:put(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "cellOf" ],
  "com.google.common.cache.CacheLoader$1:loadAll(java.lang.Iterable)" : [ "loadAll" ],
  "com.google.common.collect.HashBiMap:put(java.lang.Object,java.lang.Object,boolean)" : [ "<init>", "smearedHash", "seekByKey", "seekByValue", "delete", "insert", "rehashIfNecessary", "equal" ],
  "com.google.common.collect.ForwardingNavigableMap:standardCeilingEntry(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.io.CharSource$ConcatenatedCharSource:lengthIfKnown()" : [ "lengthIfKnown", "absent", "of" ],
  "com.google.common.primitives.Bytes:rotate(byte[],int,int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.graph.ImmutableValueGraph:asGraph()" : [ "<init>" ],
  "com.google.common.base.MoreObjects$ToStringHelper:<init>(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap:entries()" : [ "entries" ],
  "com.google.common.base.CaseFormat:converterTo(com.google.common.base.CaseFormat)" : [ "<init>" ],
  "com.google.common.collect.CompactHashMap:readObject(java.io.ObjectInputStream)" : [ "init", "put" ],
  "com.google.common.base.Defaults:defaultValue(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.collect.Tables$TransformedTable:remove(java.lang.Object,java.lang.Object)" : [ "contains", "uncheckedCastNullableTToT" ],
  "com.google.common.cache.LocalCache$LocalManualCache:getAllPresent(java.lang.Iterable)" : [ "getAllPresent" ],
  "com.google.common.collect.Iterables:get(java.lang.Iterable,int)" : [ "get", "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeSet:intersectRanges(com.google.common.collect.Range)" : [ "isEmpty", "of", "encloses", "span", "hasLowerBound", "hasUpperBound" ],
  "com.google.common.cache.LocalCache$LoadingSerializationProxy:<init>(com.google.common.cache.LocalCache)" : [ "<init>" ],
  "com.google.common.hash.MacHashFunction$MacHasher:hash()" : [ "checkNotDone", "fromBytesNoCopy" ],
  "com.google.common.collect.CompactHashMap$EntrySetView:contains(java.lang.Object)" : [ "delegateOrNull", "equal" ],
  "com.google.common.base.Predicates$InstanceOfPredicate:<init>(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingList:delegate()" : [ "delegate" ],
  "com.google.common.io.CharSink:writeLines(java.util.stream.Stream,java.lang.String)" : [ "writeLines" ],
  "com.google.common.collect.MultimapBuilder$ListMultimapBuilder:build(com.google.common.collect.Multimap)" : [ "build" ],
  "com.google.common.collect.ObjectArrays:copyAsObjectArray(java.lang.Object[],int,int)" : [ "checkPositionIndexes" ],
  "com.google.common.hash.HashCode:fromLong(long)" : [ "<init>" ],
  "com.google.common.collect.Maps:filterEntries(java.util.NavigableMap,com.google.common.base.Predicate)" : [ "<init>", "checkNotNull", "filterFiltered" ],
  "com.google.common.collect.RegularImmutableSortedSet:createDescendingSet()" : [ "<init>", "reverse" ],
  "com.google.common.collect.Queues:drainUninterruptibly(java.util.concurrent.BlockingQueue,java.util.Collection,int,java.time.Duration)" : [ "drainUninterruptibly" ],
  "com.google.common.util.concurrent.ExecutionSequencer:create()" : [ "<init>" ],
  "com.google.common.collect.Range:intersection(com.google.common.collect.Range)" : [ "compareTo", "create", "checkArgument" ],
  "com.google.common.collect.AbstractNavigableMap:pollFirstEntry()" : [ "pollNext" ],
  "com.google.common.collect.DescendingImmutableSortedSet:lower(java.lang.Object)" : [ "higher" ],
  "com.google.common.reflect.TypeToken$TypeCollector$3:getInterfaces(java.lang.Object)" : [ "of" ],
  "com.google.common.reflect.Parameter:getAnnotations()" : [ "getDeclaredAnnotations" ],
  "com.google.common.graph.IncidentEdgeSet:contains(java.lang.Object)" : [ "successors", "predecessors", "nodeU", "nodeV" ],
  "com.google.common.collect.DescendingImmutableSortedMultiset:elementSet()" : [ "descendingSet" ],
  "com.google.common.eventbus.SubscriberRegistry:register(java.lang.Object)" : [ "findAllSubscribers", "firstNonNull" ],
  "com.google.common.util.concurrent.Uninterruptibles:sleepUninterruptibly(java.time.Duration)" : [ "sleepUninterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMap:values()" : [ "<init>" ],
  "com.google.common.collect.Maps:filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap,com.google.common.base.Predicate)" : [ "<init>", "and" ],
  "com.google.common.collect.AbstractMultiset:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.cache.CacheBuilder:expireAfterAccess(java.time.Duration)" : [ "expireAfterAccess", "toNanosSaturated" ],
  "com.google.common.collect.TreeMultiset$AvlNode:setCount(java.util.Comparator,java.lang.Object,int,int[])" : [ "getElement", "addLeftChild", "rebalance", "addRightChild", "deleteMe" ],
  "com.google.common.collect.Maps$BiMapConverter:doForward(java.lang.Object)" : [ "convert" ],
  "com.google.common.collect.ExplicitOrdering:compare(java.lang.Object,java.lang.Object)" : [ "rank" ],
  "com.google.common.net.InetAddresses:getCompatIPv4Address(java.net.Inet6Address)" : [ "checkArgument", "isCompatIPv4Address", "toAddrString", "getInet4Address" ],
  "com.google.common.util.concurrent.MoreExecutors:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit)" : [ "getExitingExecutorService" ],
  "com.google.common.reflect.Types$WildcardTypeImpl:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.collect.ImmutableAsList$SerializedForm:readResolve()" : [ "asList" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:addAll(java.util.Collection)" : [ "size", "addToMap" ],
  "com.google.common.base.CharMatcher:trimAndCollapseFrom(java.lang.CharSequence,char)" : [ "collapseFrom", "finishCollapseFrom" ],
  "com.google.common.hash.Crc32cHashFunction$Crc32cHasher:process(java.nio.ByteBuffer)" : [ "computeForWord" ],
  "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry:<init>(java.util.Map$Entry)" : [ "<init>", "checkNotNull" ],
  "com.google.common.io.Files:touch(java.io.File)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSortedSet:lower(java.lang.Object)" : [ "getNext", "headSet", "descendingIterator" ],
  "com.google.common.base.FinalizableSoftReference:<init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue)" : [ "cleanUp" ],
  "com.google.common.collect.Iterables:filter(java.lang.Iterable,java.lang.Class)" : [ "filter", "checkNotNull", "instanceOf" ],
  "com.google.common.collect.Iterables:size(java.lang.Iterable)" : [ "size" ],
  "com.google.common.base.CaseFormat$5:convert(com.google.common.base.CaseFormat,java.lang.String)" : [ "convert", "toLowerCase" ],
  "com.google.common.reflect.ClassPath$ResourceInfo:of(java.io.File,java.lang.String,java.lang.ClassLoader)" : [ "<init>" ],
  "com.google.common.collect.CompactLinkedHashMap:getPredecessor(int)" : [ "link" ],
  "com.google.common.collect.Iterables:get(java.lang.Iterable,int,java.lang.Object)" : [ "checkNotNull", "checkNonnegative", "advance", "getNext" ],
  "com.google.common.base.Throwables:propagateIfPossible(java.lang.Throwable,java.lang.Class)" : [ "propagateIfPossible", "propagateIfInstanceOf" ],
  "com.google.common.reflect.TypeToken:<init>(java.lang.Class)" : [ "capture", "covariantly", "resolveType" ],
  "com.google.common.collect.IndexedImmutableSet:copyIntoArray(java.lang.Object[],int)" : [ "copyIntoArray" ],
  "com.google.common.escape.ArrayBasedCharEscaper:<init>(com.google.common.escape.ArrayBasedEscaperMap,char,char)" : [ "<init>", "checkNotNull", "getReplacementArray" ],
  "com.google.common.cache.LocalCache$EntryFactory$3:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)" : [ "copyEntry" ],
  "com.google.common.collect.CompactHashMap$EntrySetView:iterator()" : [ "entrySetIterator" ],
  "com.google.common.collect.ForwardingCollection:standardRemove(java.lang.Object)" : [ "iterator", "equal" ],
  "com.google.common.util.concurrent.ListenableFutureTask:done()" : [ "execute" ],
  "com.google.common.primitives.Shorts:fromByteArray(byte[])" : [ "checkArgument", "fromBytes" ],
  "com.google.common.collect.Comparators:isInStrictOrder(java.lang.Iterable,java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.collect.CompactHashMap$MapEntry:setValue(java.lang.Object)" : [ "delegateOrNull", "uncheckedCastNullableTToT", "put", "updateLastKnownIndex", "unsafeNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:put(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractFuture:setException(java.lang.Throwable)" : [ "<init>", "checkNotNull", "complete" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:headMap(java.lang.Object,boolean)" : [ "filterEntries" ],
  "com.google.common.collect.JdkBackedImmutableMap:create(int,java.util.Map$Entry[],boolean)" : [ "<init>", "newHashMapWithExpectedSize", "makeImmutable", "asImmutableList" ],
  "com.google.common.base.Converter$ReverseConverter:correctedDoBackward(java.lang.Object)" : [ "correctedDoForward" ],
  "com.google.common.util.concurrent.ClosingFuture:transform(com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor)" : [ "checkNotNull", "derive" ],
  "com.google.common.collect.CollectSpliterators:flatMapToDouble(java.util.Spliterator,java.util.function.Function,int,long)" : [ "<init>", "checkArgument", "checkNotNull" ],
  "com.google.common.math.Stats:sampleVariance()" : [ "checkState", "ensureNonNegative" ],
  "com.google.common.collect.FluentIterable:get(int)" : [ "get", "getDelegate" ],
  "com.google.common.util.concurrent.AbstractService:isRunning()" : [ "state" ],
  "com.google.common.base.Functions$FunctionComposition:<init>(com.google.common.base.Function,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.io.LittleEndianDataInputStream:readFully(byte[],int,int)" : [ "readFully" ],
  "com.google.common.collect.LexicographicalOrdering:<init>(java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.ForwardingQueue:<init>()" : [ "<init>" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.primitives.ImmutableLongArray$Builder:addAll(java.util.Collection)" : [ "ensureRoomFor" ],
  "com.google.common.primitives.Shorts:reverse(short[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.cache.AbstractLoadingCache:<init>()" : [ "<init>" ],
  "com.google.common.collect.MutableClassToInstanceMap$SerializedForm:readResolve()" : [ "create" ],
  "com.google.common.collect.ForwardingDeque:offerFirst(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Ordering:compound(java.lang.Iterable)" : [ "<init>" ],
  "com.google.common.primitives.Chars$LexicographicalComparator:compare(char[],char[])" : [ "compare" ],
  "com.google.common.graph.ImmutableNetwork:edgeOrder()" : [ "edgeOrder" ],
  "com.google.common.collect.MutableClassToInstanceMap:writeReplace()" : [ "<init>", "delegate" ],
  "com.google.common.math.DoubleMath:roundToInt(double,java.math.RoundingMode)" : [ "roundIntermediate", "checkInRangeForRoundingInputs" ],
  "com.google.common.collect.StandardTable:containsValue(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.collect.StandardTable$RowMap:get(java.lang.Object)" : [ "containsRow", "row" ],
  "com.google.common.collect.MapMakerInternalMap:<init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper)" : [ "getConcurrencyLevel", "getKeyEquivalence", "getInitialCapacity", "newSegmentArray", "createSegment" ],
  "com.google.common.collect.EvictingQueue:<init>(int)" : [ "<init>", "checkArgument" ],
  "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(com.google.common.primitives.ImmutableDoubleArray)" : [ "ensureRoomFor", "length" ],
  "com.google.common.net.InternetDomainName:isPublicSuffix()" : [ "publicSuffixIndex" ],
  "com.google.common.collect.AbstractMapBasedMultiset:clear()" : [ "set" ],
  "com.google.common.collect.ContiguousSet:createDescendingSet()" : [ "<init>" ],
  "com.google.common.io.MoreFiles:pathNotFound(java.nio.file.Path,java.util.Collection)" : [ "getOnlyElement", "getParentPath" ],
  "com.google.common.collect.ImmutableSortedSet:tailSet(java.lang.Object)" : [ "tailSet" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:descendingMap()" : [ "navigableMap", "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedSetMultimap:delegate()" : [ "delegate" ],
  "com.google.common.collect.FilteredEntryMultimap:filterCollection(java.util.Collection,com.google.common.base.Predicate)" : [ "filter" ],
  "com.google.common.collect.ImmutableBiMap:writeReplace()" : [ "<init>" ],
  "com.google.common.graph.MapIteratorCache:<init>(java.util.Map)" : [ "checkNotNull" ],
  "com.google.common.io.ByteStreams:read(java.io.InputStream,byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.hash.AbstractStreamingHasher:putBytes(byte[],int,int)" : [ "putBytesInternal" ],
  "com.google.common.collect.ImmutableTable$Builder:put(com.google.common.collect.Table$Cell)" : [ "put", "checkNotNull" ],
  "com.google.common.collect.Maps:transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:remove(java.lang.Object,int)" : [ "preWriteCleanup", "equivalent" ],
  "com.google.common.collect.Synchronized$SynchronizedQueue:peek()" : [ "delegate" ],
  "com.google.common.collect.Maps:newHashMapWithExpectedSize(int)" : [ "capacity" ],
  "com.google.common.math.LongMath:binomial(int,int)" : [ "checkNonNegative", "checkArgument", "log2", "multiplyFraction" ],
  "com.google.common.collect.AbstractMapBasedMultiset:getAndSet(com.google.common.collect.Count,int)" : [ "getAndSet" ],
  "com.google.common.graph.ImmutableValueGraph:getNodeConnections(com.google.common.graph.ValueGraph)" : [ "builder", "put", "connectionsOf", "buildOrThrow" ],
  "com.google.common.primitives.UnsignedLongs$LexicographicalComparator:compare(long[],long[])" : [ "compare" ],
  "com.google.common.collect.MutableClassToInstanceMap:put(java.lang.Class,java.lang.Object)" : [ "put", "cast" ],
  "com.google.common.base.CharMatcher$And:setBits(java.util.BitSet)" : [ "setBits" ],
  "com.google.common.primitives.ParseRequest:fromString(java.lang.String)" : [ "<init>" ],
  "com.google.common.collect.Collections2:transform(java.util.Collection,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:higherEntry(java.lang.Object)" : [ "transformEntry", "fromMap" ],
  "com.google.common.hash.AbstractStreamingHasher:putByte(byte)" : [ "munchIfFull" ],
  "com.google.common.collect.ImmutableSortedMultiset:descendingMultiset()" : [ "<init>", "emptyMultiset", "from", "comparator", "reverse" ],
  "com.google.common.collect.TransformedListIterator:previous()" : [ "backingIterator" ],
  "com.google.common.collect.ForwardingDeque:pollLast()" : [ "delegate" ],
  "com.google.common.base.Joiner:useForNull(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.RegularImmutableSortedSet:contains(java.lang.Object)" : [ "unsafeBinarySearch" ],
  "com.google.common.graph.ImmutableGraph:allowsSelfLoops()" : [ "allowsSelfLoops" ],
  "com.google.common.io.BaseEncoding$Base16Encoding:encodeTo(java.lang.Appendable,byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.collect.Lists:charactersOf(java.lang.String)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ImmutableSortedMap:toImmutableSortedMap(java.util.Comparator,java.util.function.Function,java.util.function.Function)" : [ "toImmutableSortedMap" ],
  "com.google.common.primitives.Ints$IntArrayAsList:equals(java.lang.Object)" : [ "size" ],
  "com.google.common.collect.NullsLastOrdering:nullsFirst()" : [ "nullsFirst" ],
  "com.google.common.graph.ForwardingGraph:predecessors(java.lang.Object)" : [ "predecessors" ],
  "com.google.common.collect.Sets:complementOf(java.util.Collection)" : [ "checkArgument", "makeComplementByHand" ],
  "com.google.common.collect.Sets$UnmodifiableNavigableSet:<init>(java.util.NavigableSet)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ImmutableSortedSet:unsafeCompare(java.lang.Object,java.lang.Object)" : [ "unsafeCompare" ],
  "com.google.common.math.IntMath:gcd(int,int)" : [ "checkNonNegative" ],
  "com.google.common.graph.DirectedNetworkConnections:of()" : [ "<init>", "create" ],
  "com.google.common.base.Throwables:propagateIfPossible(java.lang.Throwable)" : [ "throwIfUnchecked" ],
  "com.google.common.util.concurrent.AbstractCatchingFuture:<init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry:<init>(java.lang.Object,int)" : [ "<init>", "unsetWeakValueReference" ],
  "com.google.common.cache.LocalCache$HashIterator:remove()" : [ "remove", "checkState", "getKey" ],
  "com.google.common.collect.Maps$NavigableKeySet:headSet(java.lang.Object)" : [ "headSet" ],
  "com.google.common.util.concurrent.ListenableFutureTask:create(java.lang.Runnable,java.lang.Object)" : [ "<init>" ],
  "com.google.common.base.internal.Finalizer:run()" : [ "cleanUp" ],
  "com.google.common.collect.Iterators$MergingIterator:<init>(java.lang.Iterable,java.util.Comparator)" : [ "<init>", "peekingIterator" ],
  "com.google.common.collect.Maps$FilteredEntryBiMap:forcePut(java.lang.Object,java.lang.Object)" : [ "checkArgument", "unfiltered" ],
  "com.google.common.collect.ImmutableSortedMultiset$SerializedForm:readResolve()" : [ "<init>", "addCopies", "build" ],
  "com.google.common.cache.LocalCache:merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)" : [ "checkNotNull", "compute" ],
  "com.google.common.hash.AbstractHasher:putBytes(java.nio.ByteBuffer)" : [ "putBytes", "position" ],
  "com.google.common.collect.ConcurrentHashMultiset:<init>(java.util.concurrent.ConcurrentMap)" : [ "checkArgument" ],
  "com.google.common.collect.ImmutableMapValues:asList()" : [ "entrySet" ],
  "com.google.common.primitives.Doubles:rotate(double[],int,int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.io.MoreFiles:checkAllowsInsecure(java.nio.file.Path,com.google.common.io.RecursiveDeleteOption[])" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedSet$Builder:addAll(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.cache.ForwardingCache:stats()" : [ "delegate" ],
  "com.google.common.base.Absent:or(com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.io.FileBackedOutputStream:write(int)" : [ "update" ],
  "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putByte(byte)" : [ "update" ],
  "com.google.common.collect.StandardTable$Row:entrySpliterator()" : [ "updateBackingRowMapField", "map", "wrapEntry" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:equals(java.lang.Object)" : [ "refreshIfEmpty" ],
  "com.google.common.cache.LocalCache$EntryFactory$3:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.hash.AbstractHasher:putDouble(double)" : [ "putLong" ],
  "com.google.common.util.concurrent.Futures:scheduleAsync(com.google.common.util.concurrent.AsyncCallable,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)" : [ "create", "directExecutor" ],
  "com.google.common.util.concurrent.AbstractFuture:addDoneString(java.lang.StringBuilder)" : [ "getUninterruptibly", "appendResultObject" ],
  "com.google.common.collect.Maps$MapDifferenceImpl:toString()" : [ "areEqual" ],
  "com.google.common.collect.ImmutableMap$Builder:buildJdkBacked()" : [ "checkState", "of", "create" ],
  "com.google.common.collect.TreeTraverser$PostOrderNode:<init>(java.lang.Object,java.util.Iterator)" : [ "checkNotNull" ],
  "com.google.common.cache.CacheLoader:from(com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.primitives.Chars$CharArrayAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.LinkedHashMultiset:create(int)" : [ "<init>" ],
  "com.google.common.collect.Range:upperEndpoint()" : [ "endpoint" ],
  "com.google.common.collect.Ordering:explicit(java.util.List)" : [ "<init>" ],
  "com.google.common.io.Closer:rethrow(java.lang.Throwable)" : [ "checkNotNull", "propagateIfPossible" ],
  "com.google.common.primitives.ImmutableLongArray:of(long)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:subRangeMap(com.google.common.collect.Range)" : [ "subRangeMap", "isConnected", "intersection" ],
  "com.google.common.collect.ImmutableClassToInstanceMap$Builder:putAll(java.util.Map)" : [ "put", "cast" ],
  "com.google.common.collect.ImmutableRangeSet$ComplementRanges:get(int)" : [ "checkElementIndex", "belowAll", "aboveAll", "create" ],
  "com.google.common.cache.ForwardingCache$SimpleForwardingCache:<init>(com.google.common.cache.Cache)" : [ "<init>", "checkNotNull" ],
  "com.google.common.io.BaseEncoding$Base16Encoding:<init>(java.lang.String,java.lang.String)" : [ "<init>" ],
  "com.google.common.collect.Maps$NavigableKeySet:floor(java.lang.Object)" : [ "map" ],
  "com.google.common.collect.StandardTable$Column$EntrySet:retainAll(java.util.Collection)" : [ "removeFromColumnIf", "not", "in" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeSet:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.collect.ForwardingCollection:standardToArray()" : [ "size", "toArray" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:successorsMultiset()" : [ "getReference", "create" ],
  "com.google.common.util.concurrent.Monitor:awaitUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,boolean)" : [ "signalNextWaiter", "beginWaitingFor", "endWaitingFor" ],
  "com.google.common.collect.ImmutableMapKeySet:get(int)" : [ "entrySet" ],
  "com.google.common.collect.LinkedListMultimap$NodeIterator:next()" : [ "checkForConcurrentModification" ],
  "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher:hash()" : [ "byteArray", "length" ],
  "com.google.common.reflect.TypeResolver:resolveGenericArrayType(java.lang.reflect.GenericArrayType)" : [ "newArrayType" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:removeLastOccurrence(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractTable:hashCode()" : [ "cellSet" ],
  "com.google.common.reflect.TypeToken:getSubtypeFromLowerBounds(java.lang.Class,java.lang.reflect.Type[])" : [ "of" ],
  "com.google.common.hash.MessageDigestHashFunction:<init>(java.lang.String,int,java.lang.String)" : [ "checkNotNull", "getMessageDigest", "checkArgument", "supportsClone" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:runLockedCleanup()" : [ "maybeDrainReferenceQueues" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSet:<init>(java.util.SortedSet,java.lang.Object)" : [ "<init>" ],
  "com.google.common.cache.LocalCache:usesWriteQueue()" : [ "expiresAfterWrite" ],
  "com.google.common.collect.MapMaker:makeMap()" : [ "getInitialCapacity", "getConcurrencyLevel", "create" ],
  "com.google.common.primitives.ImmutableLongArray$Builder:addAll(long[])" : [ "ensureRoomFor" ],
  "com.google.common.collect.Maps$ValueDifferenceImpl:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.collect.FilteredKeySetMultimap:removeAll(java.lang.Object)" : [ "removeAll" ],
  "com.google.common.graph.StandardValueGraph:predecessors(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSet:subSet(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.primitives.Shorts:indexOf(short[],short[])" : [ "checkNotNull" ],
  "com.google.common.base.Joiner:<init>(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractMultimap:putAll(com.google.common.collect.Multimap)" : [ "put" ],
  "com.google.common.util.concurrent.Striped$CompactStriped:<init>(int,com.google.common.base.Supplier)" : [ "<init>", "checkArgument" ],
  "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:set(long)" : [ "get" ],
  "com.google.common.collect.ImmutableSet$Indexed:iterator()" : [ "iterator" ],
  "com.google.common.cache.CacheBuilderSpec$KeyStrengthParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)" : [ "checkArgument" ],
  "com.google.common.collect.TreeMultiset$AvlNode:setCount(java.util.Comparator,java.lang.Object,int,int,int[])" : [ "getElement", "addLeftChild", "rebalance", "addRightChild", "deleteMe" ],
  "com.google.common.graph.Graphs:checkPositive(long)" : [ "checkArgument" ],
  "com.google.common.io.LittleEndianDataOutputStream:writeDouble(double)" : [ "writeLong" ],
  "com.google.common.collect.ImmutableClassToInstanceMap$Builder:<init>()" : [ "builder" ],
  "com.google.common.util.concurrent.Futures:getChecked(java.util.concurrent.Future,java.lang.Class,java.time.Duration)" : [ "getChecked", "toNanosSaturated" ],
  "com.google.common.collect.Maps:asMap(java.util.Set,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.cache.CacheBuilder:getTicker(boolean)" : [ "systemTicker" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:<init>(java.util.NavigableMap)" : [ "<init>" ],
  "com.google.common.cache.LocalCache:getOrLoad(java.lang.Object)" : [ "get" ],
  "com.google.common.util.concurrent.ListenableFutureTask:<init>(java.util.concurrent.Callable)" : [ "<init>" ],
  "com.google.common.io.CharSource$CharSequenceCharSource:readLines(com.google.common.io.LineProcessor)" : [ "linesIterator" ],
  "com.google.common.collect.Sets$FilteredSet:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.reflect.TypeToken:getComponentType()" : [ "getComponentType", "of" ],
  "com.google.common.collect.ImmutableBiMap$Builder:putAll(java.lang.Iterable)" : [ "putAll" ],
  "com.google.common.hash.Murmur3_32HashFunction:hashUnencodedChars(java.lang.CharSequence)" : [ "mixK1", "mixH1", "fmix" ],
  "com.google.common.collect.ImmutableEnumMap:writeReplace()" : [ "<init>" ],
  "com.google.common.math.Quantiles:selectInPlace(int,double[],int,int)" : [ "swap", "partition" ],
  "com.google.common.collect.ForwardingNavigableMap:lowerEntry(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.StandardRowSortedTable$RowSortedMap:tailMap(java.lang.Object)" : [ "<init>", "checkNotNull", "rowMap" ],
  "com.google.common.base.JdkPattern$JdkMatcher:<init>(java.util.regex.Matcher)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object)" : [ "of" ],
  "com.google.common.primitives.Bytes$ByteArrayAsList:equals(java.lang.Object)" : [ "size" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:<init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)" : [ "<init>", "checkNotNull", "checkArgument", "matches" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:tryDrainReferenceQueues()" : [ "maybeDrainReferenceQueues" ],
  "com.google.common.base.Functions$ForMapWithDefault:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.collect.Multimaps:unmodifiableListMultimap(com.google.common.collect.ListMultimap)" : [ "<init>" ],
  "com.google.common.cache.CacheBuilder:from(java.lang.String)" : [ "from", "parse" ],
  "com.google.common.primitives.ImmutableLongArray:forEach(java.util.function.LongConsumer)" : [ "checkNotNull" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.CompactHashMap:values()" : [ "createValues" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:get(java.lang.Object)" : [ "contains", "compareTo", "equals", "valueOrNull", "intersection" ],
  "com.google.common.cache.LocalCache$LocalManualCache:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:tailSetImpl(java.lang.Object,boolean)" : [ "tailSetImpl" ],
  "com.google.common.collect.DiscreteDomain$LongDomain:offset(java.lang.Long,long)" : [ "checkNonnegative", "checkArgument" ],
  "com.google.common.collect.RegularImmutableMap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull" ],
  "com.google.common.net.MediaType:computeToString()" : [ "transformValues", "appendTo" ],
  "com.google.common.hash.Murmur3_32HashFunction:hashInt(int)" : [ "mixK1", "mixH1", "fmix" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:subList(int,int)" : [ "subArray", "asList" ],
  "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putChar(char)" : [ "update" ],
  "com.google.common.util.concurrent.FluentFuture:transform(com.google.common.base.Function,java.util.concurrent.Executor)" : [ "transform" ],
  "com.google.common.util.concurrent.ClosingFuture$Peeker:callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner$AsyncCombiningCallable,com.google.common.util.concurrent.ClosingFuture$CloseableList)" : [ "add", "directExecutor" ],
  "com.google.common.base.Suppliers$SupplierOfInstance:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.primitives.UnsignedInteger:floatValue()" : [ "longValue" ],
  "com.google.common.graph.StandardNetwork:<init>(com.google.common.graph.NetworkBuilder)" : [ "<init>", "createMap" ],
  "com.google.common.collect.AbstractSortedMultiset:elementSet()" : [ "elementSet" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean)" : [ "compareOrThrow", "of", "subSet", "forBoolean" ],
  "com.google.common.collect.Lists$ReverseList:removeRange(int,int)" : [ "subList" ],
  "com.google.common.base.Stopwatch:<init>()" : [ "systemTicker" ],
  "com.google.common.collect.RegularImmutableMap$KeySet$SerializedForm:readResolve()" : [ "keySet" ],
  "com.google.common.graph.ImmutableNetwork:outEdges(java.lang.Object)" : [ "outEdges" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:descendingKeySet()" : [ "unmodifiableNavigableSet" ],
  "com.google.common.util.concurrent.AtomicDouble:readObject(java.io.ObjectInputStream)" : [ "set" ],
  "com.google.common.collect.CompactLinkedHashSet:convertToHashFloodingResistantImplementation()" : [ "convertToHashFloodingResistantImplementation" ],
  "com.google.common.util.concurrent.CombinedFuture:<init>(com.google.common.collect.ImmutableCollection,boolean,java.util.concurrent.Executor,java.util.concurrent.Callable)" : [ "<init>" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:tailMap(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.collect.ArrayTable:create(java.lang.Iterable,java.lang.Iterable)" : [ "<init>" ],
  "com.google.common.collect.Iterables:concat(java.lang.Iterable,java.lang.Iterable)" : [ "concat" ],
  "com.google.common.collect.ImmutableRangeSet:enclosesAll(com.google.common.collect.RangeSet)" : [ "enclosesAll" ],
  "com.google.common.hash.HashCode:fromInt(int)" : [ "<init>" ],
  "com.google.common.collect.FilteredKeyMultimap:createValues()" : [ "<init>" ],
  "com.google.common.collect.AbstractBiMap$Inverse:checkKey(java.lang.Object)" : [ "checkValue" ],
  "com.google.common.collect.AbstractMultiset:entrySet()" : [ "createEntrySet" ],
  "com.google.common.collect.Maps$ValueDifferenceImpl:create(java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.collect.Maps$SortedKeySet:comparator()" : [ "map" ],
  "com.google.common.collect.ImmutableMultimap$Builder:putAll(java.lang.Iterable)" : [ "put" ],
  "com.google.common.collect.EnumHashBiMap:create(java.lang.Class)" : [ "<init>" ],
  "com.google.common.base.CharMatcher$JavaIsoControl:<init>()" : [ "<init>" ],
  "com.google.common.collect.ImmutableRangeMap$2:asDescendingMapOfRanges()" : [ "asDescendingMapOfRanges" ],
  "com.google.common.math.LongMath:checkedSubtract(long,long)" : [ "checkNoOverflow" ],
  "com.google.common.collect.CompactLinkedHashMap:resizeEntries(int)" : [ "resizeEntries", "requireLinks" ],
  "com.google.common.collect.Range:encloses(com.google.common.collect.Range)" : [ "compareTo" ],
  "com.google.common.base.Optional:fromJavaUtil(java.util.Optional)" : [ "fromNullable" ],
  "com.google.common.collect.ImmutableSortedMap:getSubMap(int,int)" : [ "<init>", "size", "emptyMap", "comparator", "getSubSet", "subList" ],
  "com.google.common.collect.RegularContiguousSet:equalsOrThrow(java.lang.Comparable,java.lang.Comparable)" : [ "compareOrThrow" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:retainAll(java.util.Collection)" : [ "checkNotNull", "size", "removeIfEmpty" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner3:<init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture)" : [ "of" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:tailMap(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.Sets:unmodifiableNavigableSet(java.util.NavigableSet)" : [ "<init>" ],
  "com.google.common.net.MediaType$Tokenizer:consumeTokenIfPresent(com.google.common.base.CharMatcher)" : [ "checkState", "hasMore", "negate", "indexIn" ],
  "com.google.common.collect.ImmutableSortedMultiset:toImmutableSortedMultiset(java.util.Comparator,java.util.function.Function,java.util.function.ToIntFunction)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableCollection:writeReplace()" : [ "<init>", "toArray" ],
  "com.google.common.graph.StandardValueGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "hasEdgeConnectingInternal", "checkNotNull" ],
  "com.google.common.collect.LinkedHashMultimap:entrySpliterator()" : [ "entries" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:forEach(java.util.function.Consumer)" : [ "delegate" ],
  "com.google.common.io.PatternFilenameFilter:<init>(java.lang.String)" : [ "<init>" ],
  "com.google.common.cache.CacheBuilder:getRemovalListener()" : [ "firstNonNull" ],
  "com.google.common.collect.ReverseOrdering:max(java.util.Iterator)" : [ "min" ],
  "com.google.common.collect.Ordering:immutableSortedCopy(java.lang.Iterable)" : [ "sortedCopyOf" ],
  "com.google.common.collect.StandardTable$ColumnMap:remove(java.lang.Object)" : [ "containsColumn" ],
  "com.google.common.collect.FilteredMultimapValues:<init>(com.google.common.collect.FilteredMultimap)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps$SortedMapDifferenceImpl:entriesInCommon()" : [ "entriesInCommon" ],
  "com.google.common.collect.Maps$ViewCachingAbstractMap:createValues()" : [ "<init>" ],
  "com.google.common.collect.Synchronized:nullableSynchronizedEntry(java.util.Map$Entry,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:tailMap(java.lang.Object,boolean)" : [ "filterEntries" ],
  "com.google.common.collect.Maps$SortedKeySet:subSet(java.lang.Object,java.lang.Object)" : [ "<init>", "map" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:runCleanup()" : [ "runLockedCleanup" ],
  "com.google.common.io.PatternFilenameFilter:<init>(java.util.regex.Pattern)" : [ "checkNotNull" ],
  "com.google.common.cache.ForwardingLoadingCache:getAll(java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.cache.CacheBuilder:initialCapacity(int)" : [ "checkState", "checkArgument" ],
  "com.google.common.io.BaseEncoding:decodeChecked(java.lang.CharSequence)" : [ "trimTrailingPadding", "extract" ],
  "com.google.common.primitives.UnsignedLong:valueOf(java.lang.String,int)" : [ "fromLongBits", "parseUnsignedLong" ],
  "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,boolean)" : [ "addUnconditionalHolder" ],
  "com.google.common.graph.UndirectedGraphConnections:of(com.google.common.graph.ElementOrder)" : [ "<init>", "type" ],
  "com.google.common.collect.StandardTable:removeMapping(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "containsMapping", "remove" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:subMap(java.lang.Object,java.lang.Object)" : [ "subMap" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:<init>()" : [ "<init>" ],
  "com.google.common.collect.CompactLinkedHashSet:setSucceeds(int,int)" : [ "setSuccessor", "setPredecessor" ],
  "com.google.common.primitives.ImmutableIntArray$Builder:add(int)" : [ "ensureRoomFor" ],
  "com.google.common.graph.ImmutableGraph:nodes()" : [ "nodes" ],
  "com.google.common.collect.Iterators:addAll(java.util.Collection,java.util.Iterator)" : [ "checkNotNull" ],
  "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(java.lang.Iterable)" : [ "addAll", "add" ],
  "com.google.common.collect.ImmutableRangeSet:complement()" : [ "<init>", "all", "equals", "of" ],
  "com.google.common.reflect.Types$TypeVariableImpl:equals(java.lang.Object)" : [ "equals", "getName", "getGenericDeclaration" ],
  "com.google.common.math.StatsAccumulator:addAll(java.util.stream.LongStream)" : [ "<init>", "addAll", "add" ],
  "com.google.common.collect.Maps:containsValueImpl(java.util.Map,java.lang.Object)" : [ "contains", "valueIterator" ],
  "com.google.common.cache.LocalCache$WriteThroughEntry:setValue(java.lang.Object)" : [ "put" ],
  "com.google.common.primitives.ImmutableLongArray:contains(long)" : [ "indexOf" ],
  "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:<init>(int)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:subMap(com.google.common.collect.Range)" : [ "<init>", "isConnected", "of", "intersection" ],
  "com.google.common.io.ReaderInputStream:read(byte[],int,int)" : [ "checkPositionIndexes", "drain", "clear", "startDraining", "readMoreChars" ],
  "com.google.common.net.HostAndPort:toString()" : [ "hasPort" ],
  "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)" : [ "<init>", "create" ],
  "com.google.common.collect.AbstractIndexedListIterator:<init>(int)" : [ "<init>" ],
  "com.google.common.util.concurrent.RateLimiter:create(double)" : [ "create", "createFromSystemTimer" ],
  "com.google.common.collect.ImmutableMap:toString()" : [ "toStringImpl" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:remove(java.lang.Object)" : [ "remove", "get" ],
  "com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:setValue(java.lang.Object)" : [ "put" ],
  "com.google.common.primitives.Floats$FloatArrayAsList:set(int,java.lang.Float)" : [ "checkElementIndex", "size", "checkNotNull" ],
  "com.google.common.base.CharMatcher$SingleWidth:<init>()" : [ "<init>" ],
  "com.google.common.reflect.TypeToken$2:getGenericReturnType()" : [ "getGenericReturnType", "resolveType" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:get(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.StandardMutableValueGraph:<init>(com.google.common.graph.AbstractGraphBuilder)" : [ "<init>", "cast" ],
  "com.google.common.primitives.UnsignedInteger:plus(com.google.common.primitives.UnsignedInteger)" : [ "fromIntBits", "checkNotNull" ],
  "com.google.common.collect.ContiguousSet:subSet(java.lang.Comparable,java.lang.Comparable)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.RegularImmutableMap$Values:<init>(com.google.common.collect.RegularImmutableMap)" : [ "<init>" ],
  "com.google.common.collect.Multisets:removeOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "checkNotNull" ],
  "com.google.common.collect.HashMultiset:<init>()" : [ "<init>" ],
  "com.google.common.primitives.UnsignedInteger:compareTo(com.google.common.primitives.UnsignedInteger)" : [ "checkNotNull", "compare" ],
  "com.google.common.util.concurrent.Futures$InCompletionOrderState:recordInputCompletion(com.google.common.collect.ImmutableList,int)" : [ "setFuture", "recordCompletion" ],
  "com.google.common.collect.MinMaxPriorityQueue:poll()" : [ "removeAndGet" ],
  "com.google.common.collect.HashBasedTable:create(int,int)" : [ "<init>", "checkNonnegative", "newLinkedHashMapWithExpectedSize" ],
  "com.google.common.collect.Iterables:castOrCopyToCollection(java.lang.Iterable)" : [ "newArrayList" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:columnKeySet()" : [ "set", "delegate" ],
  "com.google.common.collect.Iterables:partition(java.lang.Iterable,int)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:replace(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableRangeSet:contains(java.lang.Comparable)" : [ "contains" ],
  "com.google.common.collect.ImmutableSortedMap:isPartialView()" : [ "isPartialView" ],
  "com.google.common.collect.ImmutableSortedSet:first()" : [ "iterator" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap:clear()" : [ "clear" ],
  "com.google.common.collect.ImmutableMultimap$EntryCollection:size()" : [ "size" ],
  "com.google.common.graph.ValueGraphBuilder:undirected()" : [ "<init>" ],
  "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,char)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.Sets:subSet(java.util.NavigableSet,com.google.common.collect.Range)" : [ "natural", "hasLowerBound", "hasUpperBound", "checkArgument", "lowerEndpoint", "upperEndpoint", "lowerBoundType", "upperBoundType", "checkNotNull" ],
  "com.google.common.collect.Iterables$UnmodifiableIterable:iterator()" : [ "unmodifiableIterator" ],
  "com.google.common.net.InternetDomainName:validateSyntax(java.util.List)" : [ "validatePart" ],
  "com.google.common.collect.Maps:transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)" : [ "<init>" ],
  "com.google.common.collect.ImmutableCollection:asList()" : [ "<init>", "of", "toArray" ],
  "com.google.common.collect.Maps$AbstractFilteredMap:putAll(java.util.Map)" : [ "checkArgument", "apply" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:contains(java.lang.Object)" : [ "contains" ],
  "com.google.common.primitives.ImmutableIntArray:copyOf(int[])" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.ImmutableRangeMap:copyOf(com.google.common.collect.RangeMap)" : [ "<init>", "add", "build" ],
  "com.google.common.util.concurrent.CombinedFuture:<init>(com.google.common.collect.ImmutableCollection,boolean,java.util.concurrent.Executor,com.google.common.util.concurrent.AsyncCallable)" : [ "<init>" ],
  "com.google.common.collect.ImmutableRangeSet:<init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableRangeSet)" : [ "<init>" ],
  "com.google.common.io.LineBuffer:add(char[],int,int)" : [ "finishLine" ],
  "com.google.common.collect.ForwardingQueue:peek()" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractService:awaitRunning(long,java.util.concurrent.TimeUnit)" : [ "enterWhenUninterruptibly", "checkCurrentState", "leave" ],
  "com.google.common.base.Verify:verify(boolean)" : [ "<init>" ],
  "com.google.common.collect.Maps$AsMapView:get(java.lang.Object)" : [ "getOrDefault" ],
  "com.google.common.collect.Ordering$ArbitraryOrdering:compare(java.lang.Object,java.lang.Object)" : [ "identityHashCode", "getUid" ],
  "com.google.common.graph.GraphBuilder:<init>(boolean)" : [ "<init>" ],
  "com.google.common.collect.Ordering:leastOf(java.util.Iterator,int)" : [ "checkNotNull", "checkNonnegative", "newArrayList", "least", "offerAll", "topK" ],
  "com.google.common.collect.MapMakerInternalMap$HashIterator:nextEntry()" : [ "advance" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$LinkedWeakKeyWeakValueEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)" : [ "<init>" ],
  "com.google.common.collect.ForwardingList:set(int,java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$Segment:recordRead(com.google.common.cache.ReferenceEntry,long)" : [ "recordsAccess" ],
  "com.google.common.util.concurrent.Striped$PowerOfTwoStriped:get(java.lang.Object)" : [ "indexFor" ],
  "com.google.common.graph.Traverser$Traversal:breadthFirst(java.util.Iterator)" : [ "topDown" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:newReentrantReadWriteLock(java.lang.String,boolean)" : [ "<init>" ],
  "com.google.common.reflect.ClassPath:getClassPathEntries(java.lang.ClassLoader)" : [ "getClassLoaderUrls", "toFile", "copyOf", "iterator", "newLinkedHashMap" ],
  "com.google.common.collect.FluentIterable:of()" : [ "from" ],
  "com.google.common.collect.AbstractBiMap$ValueSet:iterator()" : [ "valueIterator", "entrySet" ],
  "com.google.common.collect.Maps$AsMapView:createValues()" : [ "transform" ],
  "com.google.common.graph.UndirectedGraphConnections:addPredecessor(java.lang.Object,java.lang.Object)" : [ "addSuccessor" ],
  "com.google.common.collect.StandardTable$Column$KeySet:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.Maps$AsMapView:<init>(java.util.Set,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeMap:writeReplace()" : [ "<init>", "asMapOfRanges" ],
  "com.google.common.cache.LocalCache$Segment:tryExpireEntries(long)" : [ "expireEntries" ],
  "com.google.common.collect.ImmutableMultimap$Builder:orderValuesBy(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.collect.CompactHashMap:keySet()" : [ "createKeySet" ],
  "com.google.common.util.concurrent.AbstractScheduledService$Scheduler:newFixedDelaySchedule(java.time.Duration,java.time.Duration)" : [ "newFixedDelaySchedule", "toNanosSaturated" ],
  "com.google.common.primitives.Doubles:indexOf(double[],double)" : [ "indexOf" ],
  "com.google.common.base.Joiner:appendTo(java.lang.StringBuilder,java.util.Iterator)" : [ "appendTo" ],
  "com.google.common.collect.ForwardingQueue:standardPeek()" : [ "element" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:subMap(java.lang.Object,java.lang.Object)" : [ "checkArgument", "rangeContains", "checkNotNull" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:putLast(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:put(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableList:iterator()" : [ "listIterator" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:<init>(com.google.common.collect.Multimap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ForwardingNavigableSet:lower(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.DescendingImmutableSortedMultiset:getEntry(int)" : [ "reverse" ],
  "com.google.common.collect.FluentIterable:<init>(java.lang.Iterable)" : [ "of" ],
  "com.google.common.reflect.Parameter:getDeclaredAnnotationsByType(java.lang.Class)" : [ "from", "filter", "toArray" ],
  "com.google.common.collect.EnumMultiset:iterator()" : [ "iteratorImpl" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:poll(long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.collect.SingletonImmutableBiMap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingConcurrentMap:<init>()" : [ "<init>" ],
  "com.google.common.primitives.Ints$IntArrayAsList:subList(int,int)" : [ "<init>", "size", "checkPositionIndexes" ],
  "com.google.common.collect.ImmutableSortedMap:lastEntry()" : [ "entrySet", "size" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:descendingMap()" : [ "transformEntries", "fromMap" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSet:tailSet(java.lang.Object)" : [ "delegate" ],
  "com.google.common.reflect.ClassPath:from(java.lang.ClassLoader)" : [ "<init>", "locationsFrom", "file", "builder", "addAll", "scanResources", "build" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:putAll(com.google.common.collect.RangeMap)" : [ "putAll", "checkArgument", "encloses" ],
  "com.google.common.util.concurrent.FakeTimeLimiter:callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)" : [ "<init>", "checkNotNull", "restoreInterruptIfIsInterruptedException" ],
  "com.google.common.collect.FluentIterable:isEmpty()" : [ "getDelegate" ],
  "com.google.common.util.concurrent.CollectionFuture$ListFuture:combine(java.util.List)" : [ "newArrayListWithCapacity" ],
  "com.google.common.collect.Collections2$FilteredCollection:toArray(java.lang.Object[])" : [ "newArrayList", "iterator" ],
  "com.google.common.primitives.UnsignedInteger:longValue()" : [ "toLong" ],
  "com.google.common.collect.CompactHashMap:allocArrays()" : [ "checkState", "needsAllocArrays", "tableSize", "createTable", "setHashTableMask" ],
  "com.google.common.collect.ReverseOrdering:min(java.lang.Object,java.lang.Object)" : [ "max" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "sortedMap" ],
  "com.google.common.net.InternetDomainName:from(java.lang.String)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.TreeMultiset$AvlNode:add(java.util.Comparator,java.lang.Object,int,int[])" : [ "getElement", "addLeftChild", "rebalance", "addRightChild", "checkArgument" ],
  "com.google.common.util.concurrent.Striped$PowerOfTwoStriped:<init>(int)" : [ "checkArgument" ],
  "com.google.common.collect.Synchronized$SynchronizedBiMap:values()" : [ "set", "delegate" ],
  "com.google.common.collect.DescendingImmutableSortedSet:ceiling(java.lang.Object)" : [ "floor" ],
  "com.google.common.primitives.Doubles$DoubleArrayAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.cache.LocalCache$Segment:remove(java.lang.Object,int,java.lang.Object)" : [ "preWriteCleanup", "equivalent", "removeValueFromChain", "postWriteCleanup" ],
  "com.google.common.base.Joiner$MapJoiner:appendTo(java.lang.StringBuilder,java.lang.Iterable)" : [ "appendTo" ],
  "com.google.common.collect.ForwardingSortedSet:subSet(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:descendingIterator()" : [ "getSortedSetDelegate" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:keySet()" : [ "navigableKeySet" ],
  "com.google.common.collect.AbstractBiMap:forcePut(java.lang.Object,java.lang.Object)" : [ "putInBothMaps" ],
  "com.google.common.collect.AbstractTable:valuesSpliterator()" : [ "map" ],
  "com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm:readResolve()" : [ "stringFunnel" ],
  "com.google.common.collect.Lists:indexOfImpl(java.util.List,java.lang.Object)" : [ "indexOfRandomAccess", "equal" ],
  "com.google.common.collect.ImmutableMultimap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull", "asMap" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:<init>(com.google.common.collect.Table,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:toArray(java.lang.Object[])" : [ "toArrayImpl" ],
  "com.google.common.util.concurrent.CombinedFuture:releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason)" : [ "releaseResources" ],
  "com.google.common.cache.CacheLoader:asyncReloading(com.google.common.cache.CacheLoader,java.util.concurrent.Executor)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.Uninterruptibles:awaitTerminationUninterruptibly(java.util.concurrent.ExecutorService,java.time.Duration)" : [ "awaitTerminationUninterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.Streams:mapWithIndex(java.util.stream.DoubleStream,com.google.common.collect.Streams$DoubleFunctionWithIndex)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.Monitor:waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard)" : [ "awaitUninterruptibly" ],
  "com.google.common.cache.LocalCache$Segment:loadSync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader)" : [ "loadFuture", "getAndRecordStats" ],
  "com.google.common.collect.Lists:partition(java.util.List,int)" : [ "<init>", "checkNotNull", "checkArgument" ],
  "com.google.common.collect.AbstractBiMap:<init>(java.util.Map,java.util.Map)" : [ "<init>", "setDelegates" ],
  "com.google.common.collect.Interners$InternerBuilder:concurrencyLevel(int)" : [ "concurrencyLevel" ],
  "com.google.common.collect.Maps$FilteredEntryBiMap:<init>(com.google.common.collect.BiMap,com.google.common.base.Predicate)" : [ "<init>", "inversePredicate" ],
  "com.google.common.primitives.ImmutableDoubleArray:forEach(java.util.function.DoubleConsumer)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ClosingFuture$ValueAndCloser:get()" : [ "getDone" ],
  "com.google.common.collect.Multisets:removeOccurrences(com.google.common.collect.Multiset,java.lang.Iterable)" : [ "removeOccurrences", "checkNotNull" ],
  "com.google.common.collect.ImmutableSortedMap:floorEntry(java.lang.Object)" : [ "headMap", "lastEntry" ],
  "com.google.common.collect.Maps:filterValues(java.util.Map,com.google.common.base.Predicate)" : [ "filterEntries", "valuePredicateOnEntries" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)" : [ "<init>" ],
  "com.google.common.util.concurrent.TrustedListenableFutureTask:create(com.google.common.util.concurrent.AsyncCallable)" : [ "<init>" ],
  "com.google.common.cache.CacheBuilder:expireAfterAccess(long,java.util.concurrent.TimeUnit)" : [ "checkState", "checkArgument" ],
  "com.google.common.net.HostAndPort:withDefaultPort(int)" : [ "<init>", "checkArgument", "isValidPort", "hasPort" ],
  "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:createKeySet()" : [ "keySet" ],
  "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:isCancelled()" : [ "isCancelled" ],
  "com.google.common.collect.Multimaps$Keys:remove(java.lang.Object,int)" : [ "checkNonnegative", "count", "safeGet" ],
  "com.google.common.collect.EnumBiMap:putAll(java.util.Map)" : [ "putAll" ],
  "com.google.common.collect.DescendingImmutableSortedSet:indexOf(java.lang.Object)" : [ "size" ],
  "com.google.common.math.PairedStatsAccumulator:leastSquaresFit()" : [ "checkState", "count", "forNaN", "sumOfSquaresOfDeltas", "mapping", "mean", "withSlope", "horizontal", "vertical" ],
  "com.google.common.util.concurrent.RateLimiter:acquire()" : [ "acquire" ],
  "com.google.common.hash.Hashing:combineOrdered(java.lang.Iterable)" : [ "checkArgument", "fromBytesNoCopy" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:size()" : [ "length" ],
  "com.google.common.graph.ImmutableNetwork:isDirected()" : [ "isDirected" ],
  "com.google.common.collect.TreeMultiset:distinctElements()" : [ "saturatedCast", "aggregateForEntries" ],
  "com.google.common.cache.LocalCache$Segment:setValue(com.google.common.cache.ReferenceEntry,java.lang.Object,java.lang.Object,long)" : [ "checkState", "recordWrite" ],
  "com.google.common.collect.Maps$BiMapConverter:convert(com.google.common.collect.BiMap,java.lang.Object)" : [ "checkArgument" ],
  "com.google.common.collect.EnumHashBiMap:putAll(java.util.Map)" : [ "putAll" ],
  "com.google.common.graph.MultiEdgesConnecting:<init>(java.util.Map,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.net.MediaType$Tokenizer:consumeCharacter(com.google.common.base.CharMatcher)" : [ "checkState", "hasMore", "previewChar" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:clear()" : [ "delegate" ],
  "com.google.common.util.concurrent.Callables:threadRenaming(java.util.concurrent.Callable,com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeMultiset:lastEntry()" : [ "lastEntry" ],
  "com.google.common.reflect.TypeToken:of(java.lang.Class)" : [ "<init>" ],
  "com.google.common.cache.LocalCache:putIfAbsent(java.lang.Object,java.lang.Object)" : [ "checkNotNull", "hash", "segmentFor", "put" ],
  "com.google.common.collect.ImmutableMultimap:containsKey(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.math.BigIntegerMath:sqrt(java.math.BigInteger,java.math.RoundingMode)" : [ "sqrt", "checkNonNegative", "fitsInLong", "sqrtFloor", "checkRoundingUnnecessary" ],
  "com.google.common.base.Throwables:propagateIfInstanceOf(java.lang.Throwable,java.lang.Class)" : [ "throwIfInstanceOf" ],
  "com.google.common.net.InetAddresses:fromIPv6BigInteger(java.math.BigInteger)" : [ "fromBigInteger" ],
  "com.google.common.collect.CompactHashSet:toArray()" : [ "needsAllocArrays", "delegateOrNull", "requireElements" ],
  "com.google.common.util.concurrent.AggregateFuture:init()" : [ "directExecutor" ],
  "com.google.common.io.AppendableWriter:flush()" : [ "checkNotClosed" ],
  "com.google.common.collect.EnumMultiset:setCount(java.lang.Object,int,int)" : [ "setCount" ],
  "com.google.common.collect.Collections2$FilteredCollection:removeAll(java.util.Collection)" : [ "removeIf" ],
  "com.google.common.graph.Graphs:canTraverseWithoutReusingEdge(com.google.common.graph.Graph,java.lang.Object,java.lang.Object)" : [ "equal" ],
  "com.google.common.util.concurrent.AbstractService:enqueueStoppingEvent(com.google.common.util.concurrent.Service$State)" : [ "enqueue" ],
  "com.google.common.collect.Cut:aboveValue(java.lang.Comparable)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture:doTransform(com.google.common.util.concurrent.AsyncFunction,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.hash.AbstractStreamingHasher:processRemaining(java.nio.ByteBuffer)" : [ "position", "limit", "flip" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:headMap(java.lang.Object)" : [ "checkArgument", "rangeContains", "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:descendingMap()" : [ "sortedMap" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:encodingStream(java.io.Writer)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableBiMap$Builder:<init>()" : [ "<init>" ],
  "com.google.common.collect.FilteredEntryMultimap:createEntries()" : [ "filterCollection" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.collect.Multimaps$UnmodifiableListMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractTable:valuesIterator()" : [ "cellSet" ],
  "com.google.common.collect.Maps:fromProperties(java.util.Properties)" : [ "builder", "put", "buildOrThrow" ],
  "com.google.common.collect.Maps$TransformedEntriesSortedMap:<init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)" : [ "<init>" ],
  "com.google.common.graph.DirectedGraphConnections:<init>(java.util.Map,java.util.List,int,int)" : [ "checkNotNull", "checkNonNegative", "checkState" ],
  "com.google.common.hash.AbstractByteHasher:putBytes(byte[])" : [ "checkNotNull", "update" ],
  "com.google.common.primitives.Shorts:rotate(short[],int)" : [ "rotate" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:push(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:elapsedNanos()" : [ "elapsed" ],
  "com.google.common.graph.AbstractNetwork:degree(java.lang.Object)" : [ "saturatedAdd", "edgesConnecting" ],
  "com.google.common.graph.ImmutableNetwork:nodes()" : [ "nodes" ],
  "com.google.common.collect.FilteredKeyMultimap:get(java.lang.Object)" : [ "<init>" ],
  "com.google.common.reflect.TypeToken:someRawTypeIsSubclassOf(java.lang.Class)" : [ "getRawTypes" ],
  "com.google.common.graph.AbstractUndirectedNetworkConnections:inEdges()" : [ "incidentEdges" ],
  "com.google.common.collect.TreeRangeMap:create()" : [ "<init>" ],
  "com.google.common.collect.AbstractIterator:next()" : [ "hasNext", "uncheckedCastNullableTToT" ],
  "com.google.common.collect.ImmutableList:copyOf(java.lang.Iterable)" : [ "copyOf", "checkNotNull" ],
  "com.google.common.util.concurrent.ClosingFuture:<init>(com.google.common.util.concurrent.ListenableFuture)" : [ "from" ],
  "com.google.common.cache.LocalCache:replace(java.lang.Object,java.lang.Object)" : [ "replace", "checkNotNull", "hash", "segmentFor" ],
  "com.google.common.collect.Maps$NavigableKeySet:descendingSet()" : [ "map" ],
  "com.google.common.collect.ForwardingMultimap:isEmpty()" : [ "delegate" ],
  "com.google.common.collect.Iterators:size(java.util.Iterator)" : [ "saturatedCast" ],
  "com.google.common.collect.Maps$DescendingMap:headMap(java.lang.Object)" : [ "headMap" ],
  "com.google.common.collect.ImmutableSortedMap$1EntrySet:iterator()" : [ "iterator" ],
  "com.google.common.base.Joiner:appendTo(java.lang.StringBuilder,java.lang.Iterable)" : [ "appendTo" ],
  "com.google.common.reflect.Types:supertypeOf(java.lang.reflect.Type)" : [ "<init>" ],
  "com.google.common.collect.TreeBasedTable:rowMap()" : [ "rowMap" ],
  "com.google.common.net.MediaType:toString()" : [ "computeToString" ],
  "com.google.common.collect.Multisets:setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int)" : [ "checkNonnegative" ],
  "com.google.common.collect.ArrayTable$ArrayMap:keySet()" : [ "keySet" ],
  "com.google.common.collect.Synchronized$SynchronizedList:subList(int,int)" : [ "delegate" ],
  "com.google.common.collect.LinkedHashMultimap$ValueSet:forEach(java.util.function.Consumer)" : [ "checkNotNull", "getSuccessorInValueSet" ],
  "com.google.common.base.Predicates:containsPattern(java.lang.String)" : [ "<init>" ],
  "com.google.common.collect.ForwardingCollection:clear()" : [ "delegate" ],
  "com.google.common.collect.FilteredEntrySetMultimap:<init>(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:descendingEntryIterator()" : [ "filter" ],
  "com.google.common.util.concurrent.Uninterruptibles:tryLockUninterruptibly(java.util.concurrent.locks.Lock,java.time.Duration)" : [ "tryLockUninterruptibly", "toNanosSaturated" ],
  "com.google.common.base.Predicates:notNull()" : [ "withNarrowedType" ],
  "com.google.common.util.concurrent.AbstractService:awaitTerminated()" : [ "enterWhenUninterruptibly", "checkCurrentState", "leave" ],
  "com.google.common.graph.AbstractBaseGraph:edgeCount()" : [ "degree", "checkState" ],
  "com.google.common.collect.Maps:unmodifiableBiMap(com.google.common.collect.BiMap)" : [ "<init>" ],
  "com.google.common.collect.CompactHashSet:toArray(java.lang.Object[])" : [ "needsAllocArrays", "delegateOrNull", "toArrayImpl", "requireElements" ],
  "com.google.common.collect.ForwardingMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Converter:doAndThen(com.google.common.base.Converter)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:hashCode()" : [ "hashCode" ],
  "com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser:parseInteger(com.google.common.cache.CacheBuilderSpec,int)" : [ "checkArgument" ],
  "com.google.common.io.CharSource:copyTo(com.google.common.io.CharSink)" : [ "checkNotNull", "create", "register", "copy", "rethrow", "close" ],
  "com.google.common.collect.SingletonImmutableSet:iterator()" : [ "singletonIterator" ],
  "com.google.common.util.concurrent.Futures$InCompletionOrderFuture:<init>(com.google.common.util.concurrent.Futures$InCompletionOrderState)" : [ "<init>" ],
  "com.google.common.collect.AbstractSortedMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)" : [ "checkNotNull" ],
  "com.google.common.collect.CompactLinkedHashMap:setSuccessor(int,int)" : [ "setLink", "link" ],
  "com.google.common.collect.Comparators:greatest(int,java.util.Comparator)" : [ "least" ],
  "com.google.common.collect.EmptyContiguousSet:descendingIterator()" : [ "emptyIterator" ],
  "com.google.common.net.InternetDomainName:isUnderPublicSuffix()" : [ "publicSuffixIndex" ],
  "com.google.common.graph.AbstractGraph:degree(java.lang.Object)" : [ "degree" ],
  "com.google.common.util.concurrent.AtomicLongMap:updateAndGet(java.lang.Object,java.util.function.LongUnaryOperator)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AbstractService:notifyStopped()" : [ "<init>", "enter", "state", "enqueueTerminatedEvent", "leave", "dispatchListenerEvents" ],
  "com.google.common.collect.ForwardingNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "delegate" ],
  "com.google.common.primitives.UnsignedInteger:valueOf(java.math.BigInteger)" : [ "checkNotNull", "checkArgument", "fromIntBits" ],
  "com.google.common.collect.FluentIterable:from(java.lang.Object[])" : [ "from" ],
  "com.google.common.collect.StandardTable$Row:updateBackingRowMapField()" : [ "computeBackingRowMap" ],
  "com.google.common.collect.ForwardingNavigableMap:higherKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.escape.ArrayBasedUnicodeEscaper:escape(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.collect.MinMaxPriorityQueue:add(java.lang.Object)" : [ "offer" ],
  "com.google.common.collect.LinkedHashMultimap:succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)" : [ "setSuccessorInMultimap", "setPredecessorInMultimap" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:containsKey(java.lang.Object)" : [ "get" ],
  "com.google.common.primitives.UnsignedLongs:sortDescending(long[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.collect.Sets:filter(java.util.NavigableSet,com.google.common.base.Predicate)" : [ "<init>", "and", "checkNotNull" ],
  "com.google.common.util.concurrent.ForwardingFuture:get()" : [ "delegate" ],
  "com.google.common.io.FileBackedOutputStream:reset()" : [ "close" ],
  "com.google.common.collect.MapMakerInternalMap$EntrySet:isEmpty()" : [ "isEmpty" ],
  "com.google.common.math.LongMath:log10Floor(long)" : [ "lessThanBranchFree" ],
  "com.google.common.util.concurrent.AbstractCatchingFuture:create(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor)" : [ "<init>", "rejectionPropagatingExecutor" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:preWriteCleanup()" : [ "runLockedCleanup" ],
  "com.google.common.util.concurrent.SmoothRateLimiter:reserveEarliestAvailable(int,long)" : [ "resync", "saturatedAdd" ],
  "com.google.common.collect.ImmutableClassToInstanceMap$Builder:put(java.lang.Class,java.lang.Object)" : [ "put" ],
  "com.google.common.cache.LocalCache$EntryFactory$7:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.collect.ForwardingNavigableMap:standardFloorKey(java.lang.Object)" : [ "keyOrNull", "floorEntry" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:hashCode()" : [ "asMapOfRanges" ],
  "com.google.common.collect.Maps:asMap(java.util.SortedSet,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.hash.BloomFilter:<init>(com.google.common.hash.BloomFilterStrategies$LockFreeBitArray,int,com.google.common.hash.Funnel,com.google.common.hash.BloomFilter$Strategy)" : [ "checkArgument", "checkNotNull" ],
  "com.google.common.collect.FluentIterable:contains(java.lang.Object)" : [ "contains", "getDelegate" ],
  "com.google.common.primitives.ImmutableIntArray:builder(int)" : [ "<init>", "checkArgument" ],
  "com.google.common.collect.HashMultimap:<init>(int,int)" : [ "newHashMapWithExpectedSize", "checkArgument" ],
  "com.google.common.collect.Iterables:consumingIterable(java.lang.Iterable)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Predicates$SubtypeOfPredicate:<init>(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.primitives.Ints:ensureCapacity(int[],int,int)" : [ "checkArgument" ],
  "com.google.common.base.Predicates:isNull()" : [ "withNarrowedType" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:<init>(java.util.Map)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeMap$1:putCoalescing(com.google.common.collect.Range,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.DescendingImmutableSortedSet:iterator()" : [ "descendingIterator" ],
  "com.google.common.collect.ForwardingDeque:getFirst()" : [ "delegate" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:<init>(java.lang.String)" : [ "<init>", "checkNotNull", "weakKeys", "makeMap" ],
  "com.google.common.graph.GraphBuilder:immutable()" : [ "<init>", "cast" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:pollLastEntry()" : [ "removeFirstMatching" ],
  "com.google.common.collect.ForwardingMultimap:entries()" : [ "delegate" ],
  "com.google.common.graph.MapIteratorCache:getWithoutCaching(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.math.StatsAccumulator:addAll(java.util.stream.DoubleStream)" : [ "<init>", "addAll", "add" ],
  "com.google.common.collect.LinkedHashMultimap:create(com.google.common.collect.Multimap)" : [ "create" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:servicesByState()" : [ "builder", "enter", "entries", "put", "leave", "build" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:size()" : [ "saturatedCast" ],
  "com.google.common.cache.LocalCache$AbstractCacheSet:clear()" : [ "clear" ],
  "com.google.common.collect.TreeRangeMap:coalesce(com.google.common.collect.Range,java.lang.Object,java.util.Map$Entry)" : [ "isConnected", "span" ],
  "com.google.common.reflect.Invokable:returning(java.lang.Class)" : [ "returning", "of" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:subMap(java.lang.Object,java.lang.Object)" : [ "subMap" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:row(java.lang.Object)" : [ "map", "delegate" ],
  "com.google.common.collect.JdkBackedImmutableMap:<init>(java.util.Map,com.google.common.collect.ImmutableList)" : [ "<init>" ],
  "com.google.common.base.CharMatcher$ForPredicate:<init>(com.google.common.base.Predicate)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.CollectCollectors$EnumMapAccumulator:toImmutableMap()" : [ "of", "asImmutable" ],
  "com.google.common.primitives.UnsignedInteger:bigIntegerValue()" : [ "longValue" ],
  "com.google.common.collect.Tables$TransformedTable:cellSpliterator()" : [ "map" ],
  "com.google.common.collect.LinkedHashMultiset:setCount(java.lang.Object,int)" : [ "setCount" ],
  "com.google.common.net.HostAndPort:fromParts(java.lang.String,int)" : [ "<init>", "checkArgument", "isValidPort", "fromString", "hasPort" ],
  "com.google.common.collect.AbstractBiMap:putInBothMaps(java.lang.Object,java.lang.Object,boolean)" : [ "checkKey", "checkValue", "inverse", "checkArgument", "containsValue", "updateInverseMap", "equal" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:peekFirst()" : [ "delegate" ],
  "com.google.common.collect.TopKSelector:combine(com.google.common.collect.TopKSelector)" : [ "offer", "uncheckedCastNullableTToT" ],
  "com.google.common.net.PercentEscaper:nextEscapeIndex(java.lang.CharSequence,int,int)" : [ "checkNotNull" ],
  "com.google.common.collect.Lists:cartesianProduct(java.util.List)" : [ "create" ],
  "com.google.common.math.PairedStatsAccumulator:addAll(com.google.common.math.PairedStats)" : [ "addAll", "count", "xStats", "sumOfProductsOfDeltas", "mean", "yStats" ],
  "com.google.common.collect.ForwardingNavigableMap:descendingMap()" : [ "delegate" ],
  "com.google.common.collect.Maps$Values:isEmpty()" : [ "map" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:wrapAndThrowRuntimeExecutionExceptionOrError(java.lang.Throwable)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset$AvlNode:remove(java.util.Comparator,java.lang.Object,int,int[])" : [ "getElement", "rebalance", "deleteMe" ],
  "com.google.common.collect.Maps:filterKeys(java.util.Map,com.google.common.base.Predicate)" : [ "<init>", "checkNotNull", "keyPredicateOnEntries", "filterFiltered" ],
  "com.google.common.collect.ImmutableSetMultimap:flatteningToImmutableSetMultimap(java.util.function.Function,java.util.function.Function)" : [ "flatteningToImmutableSetMultimap" ],
  "com.google.common.collect.LinkedListMultimap$NodeIterator:previous()" : [ "checkForConcurrentModification" ],
  "com.google.common.collect.Multimaps$TransformedEntriesListMultimap:<init>(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset$AvlNode:floor(java.util.Comparator,java.lang.Object)" : [ "getElement", "firstNonNull" ],
  "com.google.common.collect.ImmutableSetMultimap:valueSet(java.util.Comparator,java.util.Collection)" : [ "copyOf" ],
  "com.google.common.net.PercentEscaper:<init>(java.lang.String,boolean)" : [ "<init>", "checkNotNull", "createSafeOctets" ],
  "com.google.common.collect.Sets:intersection(java.util.Set,java.util.Set)" : [ "checkNotNull" ],
  "com.google.common.reflect.Types$JavaVersion$2:newArrayType(java.lang.reflect.Type)" : [ "<init>", "getArrayClass" ],
  "com.google.common.collect.ConsumingQueueIterator:<init>(java.util.Queue)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Queues:newLinkedBlockingDeque(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.primitives.Longs:indexOf(long[],long)" : [ "indexOf" ],
  "com.google.common.collect.HashBasedTable:columnKeySet()" : [ "columnKeySet" ],
  "com.google.common.collect.FilteredKeySetMultimap$EntrySet:hashCode()" : [ "hashCodeImpl" ],
  "com.google.common.collect.FilteredEntrySetMultimap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.collect.ContiguousSet:headSet(java.lang.Comparable,boolean)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate:toString()" : [ "toString" ],
  "com.google.common.collect.CollectCollectors:toImmutableBiMap(java.util.function.Function,java.util.function.Function)" : [ "<init>", "checkNotNull", "build", "combine" ],
  "com.google.common.util.concurrent.FluentFuture:addCallback(com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)" : [ "addCallback" ],
  "com.google.common.hash.Funnels:stringFunnel(java.nio.charset.Charset)" : [ "<init>" ],
  "com.google.common.graph.AbstractNetwork:edgesConnecting(java.lang.Object,java.lang.Object)" : [ "filter", "connectedPredicate" ],
  "com.google.common.collect.ImmutableSet:equals(java.lang.Object)" : [ "isHashCodeFast", "hashCode", "equalsImpl" ],
  "com.google.common.collect.SortedLists:binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)" : [ "binarySearch", "transform" ],
  "com.google.common.io.BaseEncoding:encodingSink(com.google.common.io.CharSink)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AbstractIdleService$DelegateService:doStart()" : [ "renamingDecorator", "executor" ],
  "com.google.common.collect.StandardTable:contains(java.lang.Object,java.lang.Object)" : [ "contains" ],
  "com.google.common.util.concurrent.JdkFutureAdapters:listenInPoolThread(java.util.concurrent.Future)" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableMap$KeySet:size()" : [ "size" ],
  "com.google.common.primitives.Ints:lastIndexOf(int[],int)" : [ "lastIndexOf" ],
  "com.google.common.io.CharSource$AsByteSource:openStream()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:size()" : [ "delegate" ],
  "com.google.common.collect.ImmutableClassToInstanceMap:copyOf(java.util.Map)" : [ "<init>", "putAll", "build" ],
  "com.google.common.collect.SortedMultisets$ElementSet:comparator()" : [ "multiset" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:pollFirst()" : [ "delegate" ],
  "com.google.common.collect.ForwardingCollection:standardRemoveAll(java.util.Collection)" : [ "removeAll", "iterator" ],
  "com.google.common.collect.ForwardingMultiset:remove(java.lang.Object,int)" : [ "delegate" ],
  "com.google.common.collect.ImmutableTable:rowKeySet()" : [ "rowMap", "keySet" ],
  "com.google.common.hash.HashCode$BytesHashCode:asInt()" : [ "checkState" ],
  "com.google.common.collect.ImmutableRangeSet:<init>(com.google.common.collect.ImmutableList)" : [ "<init>" ],
  "com.google.common.collect.StandardRowSortedTable:rowKeySet()" : [ "rowMap" ],
  "com.google.common.collect.ForwardingMultiset:setCount(java.lang.Object,int)" : [ "delegate" ],
  "com.google.common.util.concurrent.WrappingExecutorService:submit(java.lang.Runnable)" : [ "wrapTask" ],
  "com.google.common.collect.AbstractBiMap:removeFromBothMaps(java.lang.Object)" : [ "uncheckedCastNullableTToT", "removeFromInverseMap" ],
  "com.google.common.cache.ForwardingLoadingCache:delegate()" : [ "delegate" ],
  "com.google.common.hash.SipHashFunction:<init>(int,int,long,long)" : [ "checkArgument" ],
  "com.google.common.collect.Range:span(com.google.common.collect.Range)" : [ "compareTo", "create" ],
  "com.google.common.cache.LocalCache:newEntry(java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "newEntry", "segmentFor" ],
  "com.google.common.reflect.Types$WildcardTypeImpl:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.Collections2:permutations(java.util.Collection)" : [ "<init>", "copyOf" ],
  "com.google.common.io.ByteSource$ByteArrayByteSource:toString()" : [ "truncate", "base16", "encode" ],
  "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher:dispatch(java.lang.Object,java.util.Iterator)" : [ "checkNotNull", "dispatchEvent" ],
  "com.google.common.graph.ImmutableValueGraph:edgeValueOrDefault(com.google.common.graph.EndpointPair,java.lang.Object)" : [ "edgeValueOrDefault" ],
  "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:update(java.nio.ByteBuffer)" : [ "checkNotDone" ],
  "com.google.common.collect.TreeMultiset:aggregateForEntries(com.google.common.collect.TreeMultiset$Aggregate)" : [ "get", "hasLowerBound", "aggregateBelowRange", "hasUpperBound", "aggregateAboveRange" ],
  "com.google.common.util.concurrent.ForwardingFuture:cancel(boolean)" : [ "delegate" ],
  "com.google.common.math.IntMath:checkedMultiply(int,int)" : [ "checkNoOverflow" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:tailSetImpl(java.lang.Comparable,boolean)" : [ "subSet", "forBoolean" ],
  "com.google.common.collect.Ordering:leastOf(java.lang.Iterable,int)" : [ "leastOf" ],
  "com.google.common.collect.MapMakerInternalMap$Values:clear()" : [ "clear" ],
  "com.google.common.collect.CollectCollectors:toImmutableRangeMap(java.util.function.Function,java.util.function.Function)" : [ "checkNotNull", "build", "builder", "combine" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:tailMap(com.google.common.collect.Cut,boolean)" : [ "subMap", "forBoolean" ],
  "com.google.common.math.Quantiles$ScaleAndIndex:compute(java.util.Collection)" : [ "toArray" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:hashCode()" : [ "hashCode" ],
  "com.google.common.cache.LocalCache$AbstractCacheSet:isEmpty()" : [ "isEmpty" ],
  "com.google.common.cache.LocalCache$LocalLoadingCache:refresh(java.lang.Object)" : [ "refresh" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:build()" : [ "build" ],
  "com.google.common.base.Present:or(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.Platform:newLinkedHashMapWithExpectedSize(int)" : [ "newLinkedHashMapWithExpectedSize" ],
  "com.google.common.base.Stopwatch:<init>(com.google.common.base.Ticker)" : [ "checkNotNull" ],
  "com.google.common.reflect.ClassPath:parseJavaClassPath()" : [ "builder", "on", "value", "split", "add", "build" ],
  "com.google.common.collect.CompactLinkedHashSet:toArray(java.lang.Object[])" : [ "toArrayImpl" ],
  "com.google.common.util.concurrent.ForwardingFluentFuture:<init>(com.google.common.util.concurrent.ListenableFuture)" : [ "<init>", "checkNotNull" ],
  "com.google.common.io.ByteSource$SlicedByteSource:openBufferedStream()" : [ "openBufferedStream", "sliceStream" ],
  "com.google.common.collect.Multisets:linearTimeSizeImpl(com.google.common.collect.Multiset)" : [ "saturatedCast" ],
  "com.google.common.io.ByteSource:hash(com.google.common.hash.HashFunction)" : [ "copyTo", "asOutputStream" ],
  "com.google.common.io.AppendableWriter:append(java.lang.CharSequence)" : [ "checkNotClosed" ],
  "com.google.common.util.concurrent.SequentialExecutor$QueueWorker:run()" : [ "workOnQueue" ],
  "com.google.common.collect.ImmutableSortedMap:headMap(java.lang.Object,boolean)" : [ "getSubMap", "headIndex", "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:lowerEntry(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractFuture:complete(com.google.common.util.concurrent.AbstractFuture,boolean)" : [ "interruptTask", "afterDone", "clearListeners", "getFutureValue", "executeListener" ],
  "com.google.common.graph.NetworkBuilder:edgeOrder(com.google.common.graph.ElementOrder)" : [ "cast", "checkNotNull" ],
  "com.google.common.primitives.Doubles:sortDescending(double[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.cache.LocalCache$Segment:containsValue(java.lang.Object)" : [ "getLiveValue", "equivalent", "postReadCleanup" ],
  "com.google.common.collect.FluentIterable:concat(java.lang.Iterable)" : [ "<init>", "checkNotNull" ],
  "com.google.common.graph.ImmutableGraph:copyOf(com.google.common.graph.ImmutableGraph)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ListenableFutureTask:create(java.util.concurrent.Callable)" : [ "<init>" ],
  "com.google.common.math.PairedStatsAccumulator:<init>()" : [ "<init>" ],
  "com.google.common.collect.AbstractRangeSet:clear()" : [ "remove", "all" ],
  "com.google.common.collect.Sets:newConcurrentHashSet()" : [ "newConcurrentHashSet" ],
  "com.google.common.collect.ForwardingMultimap:size()" : [ "delegate" ],
  "com.google.common.collect.Collections2$FilteredCollection:isEmpty()" : [ "any" ],
  "com.google.common.collect.ForwardingSortedMultiset:standardLastEntry()" : [ "descendingMultiset", "immutableEntry" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedMap:delegate()" : [ "delegate" ],
  "com.google.common.collect.RegularImmutableTable:createValues()" : [ "of" ],
  "com.google.common.collect.ForwardingSortedMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedMap:headMap(java.lang.Object)" : [ "sortedMap", "delegate" ],
  "com.google.common.collect.Maps:toImmutableEnumMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" : [ "toImmutableEnumMap" ],
  "com.google.common.collect.MapMakerInternalMap$KeySet:clear()" : [ "clear" ],
  "com.google.common.util.concurrent.AggregateFutureState:getOrInitSeenExceptions()" : [ "newConcurrentHashSet" ],
  "com.google.common.collect.Maps$AbstractFilteredMap:get(java.lang.Object)" : [ "apply" ],
  "com.google.common.collect.HashBasedTable:row(java.lang.Object)" : [ "row" ],
  "com.google.common.collect.MinMaxPriorityQueue:initialQueueSize(int,int,java.lang.Iterable)" : [ "capAtMaximumSize" ],
  "com.google.common.util.concurrent.ListeningScheduledExecutorService:schedule(java.util.concurrent.Callable,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.cache.AbstractCache$SimpleStatsCounter:snapshot()" : [ "<init>", "negativeToMaxValue" ],
  "com.google.common.util.concurrent.AbstractScheduledService$Scheduler:newFixedRateSchedule(long,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.net.MediaType:parse(java.lang.String)" : [ "<init>", "checkNotNull", "consumeToken", "builder", "hasMore", "previewChar", "consumeCharacter", "ascii", "put", "create", "build", "consumeTokenIfPresent" ],
  "com.google.common.collect.Tables:transpose(com.google.common.collect.Table)" : [ "<init>" ],
  "com.google.common.collect.DenseImmutableTable:rowMap()" : [ "copyOf" ],
  "com.google.common.collect.ImmutableClassToInstanceMap:readResolve()" : [ "of" ],
  "com.google.common.base.Converter:<init>()" : [ "<init>" ],
  "com.google.common.collect.Multisets$UnmodifiableMultiset:<init>(com.google.common.collect.Multiset)" : [ "<init>" ],
  "com.google.common.collect.ForwardingSortedMap:firstKey()" : [ "delegate" ],
  "com.google.common.collect.ImmutableBiMap$Builder:putAll(java.util.Map)" : [ "putAll" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:headSet(java.lang.Object)" : [ "headSet" ],
  "com.google.common.collect.AbstractTable:cellSet()" : [ "createCellSet" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:createKeySet()" : [ "sortedMap" ],
  "com.google.common.graph.StandardMutableGraph:putEdge(com.google.common.graph.EndpointPair)" : [ "putEdge", "nodeU", "nodeV" ],
  "com.google.common.graph.AbstractGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "hasEdgeConnecting" ],
  "com.google.common.collect.ImmutableMap$Builder:buildOrThrow()" : [ "build" ],
  "com.google.common.collect.Maps$NavigableKeySet:pollLast()" : [ "keyOrNull", "map" ],
  "com.google.common.collect.EnumHashBiMap:replaceAll(java.util.function.BiFunction)" : [ "replaceAll" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:delegate()" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractService$IsStoppableGuard:isSatisfied()" : [ "state" ],
  "com.google.common.util.concurrent.AggregateFuture:collectValueFromNonCancelledFuture(int,java.util.concurrent.Future)" : [ "handleException", "getDone" ],
  "com.google.common.collect.Iterables:addAll(java.util.Collection,java.lang.Iterable)" : [ "addAll", "checkNotNull" ],
  "com.google.common.collect.SortedMultisets$NavigableElementSet:<init>(com.google.common.collect.SortedMultiset)" : [ "<init>" ],
  "com.google.common.hash.BloomFilter:copy()" : [ "<init>", "copy" ],
  "com.google.common.hash.AbstractStreamingHasher:putBytesInternal(java.nio.ByteBuffer)" : [ "munchIfFull", "munch" ],
  "com.google.common.collect.AbstractSortedSetMultimap:<init>(java.util.Map)" : [ "<init>" ],
  "com.google.common.hash.Funnels$StringCharsetFunnel:<init>(java.nio.charset.Charset)" : [ "checkNotNull" ],
  "com.google.common.collect.Tables$UnmodifiableRowSortedMap:rowKeySet()" : [ "delegate" ],
  "com.google.common.collect.CompactLinkedHashMap:accessEntry(int)" : [ "setSucceeds", "getPredecessor", "getSuccessor" ],
  "com.google.common.collect.ForwardingMultimap:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.ElementOrder:stable()" : [ "<init>" ],
  "com.google.common.collect.Maps$NavigableAsMapView:getOrDefault(java.lang.Object,java.lang.Object)" : [ "safeContains" ],
  "com.google.common.cache.LocalCache$SoftValueReference:copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.cache.LocalCache$Segment:getEntry(java.lang.Object,int)" : [ "getFirst", "tryDrainReferenceQueues", "equivalent" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:navigableKeySet()" : [ "keySet" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:clear()" : [ "size", "removeIfEmpty" ],
  "com.google.common.base.Functions$ForMapWithDefault:apply(java.lang.Object)" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.graph.ForwardingGraph:successors(java.lang.Object)" : [ "successors" ],
  "com.google.common.cache.CacheBuilderSpec:toString()" : [ "toString", "toStringHelper", "addValue", "toParsableString" ],
  "com.google.common.collect.Iterators:peekingIterator(java.util.Iterator)" : [ "<init>" ],
  "com.google.common.util.concurrent.ForwardingListeningExecutorService:submit(java.lang.Runnable,java.lang.Object)" : [ "delegate" ],
  "com.google.common.net.InetAddresses:getCoercedIPv4Address(java.net.InetAddress)" : [ "hasEmbeddedIPv4ClientAddress", "getEmbeddedIPv4ClientAddress", "murmur3_32_fixed", "getInet4Address", "toByteArray" ],
  "com.google.common.collect.ForwardingSortedSet:standardRemove(java.lang.Object)" : [ "tailSet", "unsafeCompare", "comparator" ],
  "com.google.common.util.concurrent.ClosingFuture:provideValueAndCloser(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer,com.google.common.util.concurrent.ClosingFuture)" : [ "<init>" ],
  "com.google.common.collect.ForwardingSortedMap:lastKey()" : [ "delegate" ],
  "com.google.common.cache.LocalCache:recordsWrite()" : [ "expiresAfterWrite", "refreshes" ],
  "com.google.common.collect.ForwardingNavigableMap:standardPollLastEntry()" : [ "pollNext", "descendingMap" ],
  "com.google.common.base.Equivalence$EquivalentToPredicate:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.collect.HashBasedTable:get(java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.base.PairwiseEquivalence:<init>(com.google.common.base.Equivalence)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.FilteredEntryMultimap$AsMap:containsKey(java.lang.Object)" : [ "get" ],
  "com.google.common.graph.MapIteratorCache:get(java.lang.Object)" : [ "checkNotNull", "getIfCached", "getWithoutCaching" ],
  "com.google.common.collect.JdkBackedImmutableBiMap$InverseEntries:get(int)" : [ "immutableEntry" ],
  "com.google.common.collect.RegularImmutableAsList:listIterator(int)" : [ "listIterator" ],
  "com.google.common.collect.ImmutableRangeSet:copyOf(com.google.common.collect.RangeSet)" : [ "<init>", "copyOf", "checkNotNull", "of", "all", "isPartialView" ],
  "com.google.common.collect.RegularContiguousSet:iterator()" : [ "first" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:remove(java.lang.Object)" : [ "removeEntryImpl" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:getLast()" : [ "delegate" ],
  "com.google.common.util.concurrent.RateLimiter:checkPermits(int)" : [ "checkArgument" ],
  "com.google.common.collect.MultimapBuilder:enumKeys(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.collect.UsingToStringOrdering:<init>()" : [ "<init>" ],
  "com.google.common.eventbus.EventBus:<init>()" : [ "<init>" ],
  "com.google.common.util.concurrent.MoreExecutors:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,java.time.Duration)" : [ "getExitingExecutorService", "toNanosSaturated" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:subSet(java.lang.Object,java.lang.Object)" : [ "getSortedSetDelegate" ],
  "com.google.common.math.DoubleMath:roundToBigInteger(double,java.math.RoundingMode)" : [ "roundIntermediate", "getSignificand" ],
  "com.google.common.collect.ImmutableSet$Builder:addAll(java.util.Iterator)" : [ "addAll" ],
  "com.google.common.util.concurrent.AbstractIdleService:toString()" : [ "serviceName", "state" ],
  "com.google.common.cache.LocalCache:invalidateAll(java.lang.Iterable)" : [ "remove" ],
  "com.google.common.util.concurrent.AbstractService:awaitTerminated(java.time.Duration)" : [ "awaitTerminated" ],
  "com.google.common.util.concurrent.Futures$FutureCombiner:run(java.lang.Runnable,java.util.concurrent.Executor)" : [ "call" ],
  "com.google.common.collect.TreeMultiset:create(java.lang.Iterable)" : [ "create", "addAll" ],
  "com.google.common.collect.ImmutableSortedAsList:delegateCollection()" : [ "delegateCollection" ],
  "com.google.common.collect.RegularImmutableAsList:forEach(java.util.function.Consumer)" : [ "forEach" ],
  "com.google.common.cache.LocalCache$Segment:clear()" : [ "clear", "preWriteCleanup", "enqueueNotification", "clearReferenceQueues", "postWriteCleanup" ],
  "com.google.common.collect.AbstractBiMap$EntrySet:iterator()" : [ "entrySetIterator" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addValue(int)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.MapMakerInternalMap$Strength$1:defaultEquivalence()" : [ "equals" ],
  "com.google.common.graph.MapIteratorCache:containsKey(java.lang.Object)" : [ "getIfCached" ],
  "com.google.common.collect.Maps$SortedKeySet:first()" : [ "map" ],
  "com.google.common.collect.ForwardingNavigableMap:navigableKeySet()" : [ "delegate" ],
  "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Comparator,java.util.Iterator)" : [ "<init>", "addAll", "build" ],
  "com.google.common.collect.FluentIterable$2:<init>(java.lang.Iterable)" : [ "<init>" ],
  "com.google.common.collect.ObjectArrays:concat(java.lang.Object,java.lang.Object[])" : [ "newArray" ],
  "com.google.common.graph.StandardValueGraph:incidentEdges(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.collect.SortedMultisets$ElementSet:headSet(java.lang.Object)" : [ "multiset" ],
  "com.google.common.util.concurrent.CollectionFuture:<init>(com.google.common.collect.ImmutableCollection,boolean)" : [ "<init>", "newArrayListWithCapacity" ],
  "com.google.common.util.concurrent.WrappingExecutorService:invokeAny(java.util.Collection)" : [ "wrapTasks" ],
  "com.google.common.collect.HashBiMap:get(java.lang.Object)" : [ "valueOrNull", "seekByKey", "smearedHash" ],
  "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:<init>(java.util.concurrent.ScheduledExecutorService)" : [ "<init>", "checkNotNull" ],
  "com.google.common.primitives.Bytes$ByteArrayAsList:<init>(byte[])" : [ "<init>" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,char)" : [ "<init>" ],
  "com.google.common.cache.CacheBuilder:setKeyStrength(com.google.common.cache.LocalCache$Strength)" : [ "checkState", "checkNotNull" ],
  "com.google.common.util.concurrent.AbstractFuture:getDoneValue(java.lang.Object)" : [ "cancellationExceptionWithCause", "uncheckedNull" ],
  "com.google.common.collect.ForwardingSortedMultiset:descendingMultiset()" : [ "delegate" ],
  "com.google.common.collect.ImmutableSet$CachingAsList:createAsList()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:asMap()" : [ "<init>", "delegate" ],
  "com.google.common.graph.AbstractValueGraph:incidentEdgeOrder()" : [ "incidentEdgeOrder" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:offerLast(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AggregateFuture:handleException(java.lang.Throwable)" : [ "checkNotNull", "addCausalChain", "log" ],
  "com.google.common.escape.UnicodeEscaper:nextEscapeIndex(java.lang.CharSequence,int,int)" : [ "codePointAt" ],
  "com.google.common.collect.RegularImmutableSortedSet:getSubSet(int,int)" : [ "<init>", "size", "subList" ],
  "com.google.common.collect.Maps$SortedMapDifferenceImpl:entriesOnlyOnRight()" : [ "entriesOnlyOnRight" ],
  "com.google.common.collect.ImmutableSet$Indexed:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:keySet()" : [ "navigableKeySet" ],
  "com.google.common.collect.ImmutableRangeSet:of(com.google.common.collect.Range)" : [ "<init>", "of", "checkNotNull", "isEmpty", "equals", "all" ],
  "com.google.common.graph.StandardNetwork:inEdges(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.reflect.TypeToken:is(java.lang.reflect.Type,java.lang.reflect.TypeVariable)" : [ "canonicalizeWildcardType", "every", "isSubtypeOf", "canonicalizeWildcardsInType" ],
  "com.google.common.collect.CartesianList:create(java.util.List)" : [ "<init>", "copyOf", "of", "add", "build" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceListener:<init>(com.google.common.util.concurrent.Service,java.lang.ref.WeakReference)" : [ "<init>" ],
  "com.google.common.primitives.SignedBytes$LexicographicalComparator:compare(byte[],byte[])" : [ "compare" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:pollLast()" : [ "pollNext", "descendingIterator" ],
  "com.google.common.collect.CompactLinkedHashMap:create()" : [ "<init>" ],
  "com.google.common.util.concurrent.Futures:getDone(java.util.concurrent.Future)" : [ "checkState", "getUninterruptibly" ],
  "com.google.common.collect.Multimaps$TransformedEntriesMultimap:removeAll(java.lang.Object)" : [ "transform" ],
  "com.google.common.cache.CacheBuilder:from(com.google.common.cache.CacheBuilderSpec)" : [ "toCacheBuilder", "lenientParsing" ],
  "com.google.common.reflect.Types$JavaVersion$1:newArrayType(java.lang.reflect.Type)" : [ "<init>" ],
  "com.google.common.base.Present:transform(com.google.common.base.Function)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.StandardTable$Column:containsKey(java.lang.Object)" : [ "contains" ],
  "com.google.common.collect.ImmutableRangeSet:clear()" : [ "clear" ],
  "com.google.common.collect.ImmutableMultimap$Builder:build()" : [ "from", "onKeys", "immutableSortedCopy", "fromMapEntries" ],
  "com.google.common.collect.Synchronized:sortedMap(java.util.SortedMap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl:<init>()" : [ "<init>" ],
  "com.google.common.io.Files:readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor)" : [ "asCharSource", "readLines" ],
  "com.google.common.cache.LocalCache$EntryFactory:copyAccessEntry(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)" : [ "connectAccessOrder", "nullifyAccessOrder" ],
  "com.google.common.io.Resources:toString(java.net.URL,java.nio.charset.Charset)" : [ "asCharSource", "read" ],
  "com.google.common.collect.SingletonImmutableTable:createValues()" : [ "of" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:pollFirst(long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.base.Stopwatch:stop()" : [ "checkState" ],
  "com.google.common.collect.Lists$StringAsImmutableList:subList(int,int)" : [ "checkPositionIndexes", "size", "charactersOf" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:createElementSet()" : [ "unmodifiableNavigableSet", "delegate" ],
  "com.google.common.collect.LinkedListMultimap:readObject(java.io.ObjectInputStream)" : [ "put", "newLinkedHashMap" ],
  "com.google.common.collect.AbstractMultimap:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.reflect.ClassPath:getTopLevelClassesRecursive(java.lang.String)" : [ "checkNotNull", "builder", "getTopLevelClasses", "getName", "add", "build" ],
  "com.google.common.collect.MapMaker:weakKeys()" : [ "setKeyStrength" ],
  "com.google.common.collect.Lists:listIteratorImpl(java.util.List,int)" : [ "<init>" ],
  "com.google.common.collect.Iterables:getLast(java.lang.Iterable,java.lang.Object)" : [ "getLast", "getLastInNonemptyList" ],
  "com.google.common.primitives.UnsignedInteger:toString(int)" : [ "toString" ],
  "com.google.common.util.concurrent.AtomicLongMap:<init>(java.util.concurrent.ConcurrentHashMap)" : [ "checkNotNull" ],
  "com.google.common.reflect.TypeResolver:<init>()" : [ "<init>" ],
  "com.google.common.collect.ForwardingCollection:add(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractService$StateSnapshot:<init>(com.google.common.util.concurrent.Service$State,boolean,java.lang.Throwable)" : [ "checkArgument" ],
  "com.google.common.collect.CompactHashMap$KeySetView:forEach(java.util.function.Consumer)" : [ "checkNotNull", "delegateOrNull", "firstEntryIndex", "getSuccessor" ],
  "com.google.common.collect.TreeMultiset:aggregateBelowRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode)" : [ "comparator", "uncheckedCastNullableTToT", "getLowerEndpoint", "getElement", "getLowerBoundType" ],
  "com.google.common.collect.ArrayTable:put(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "checkNotNull", "checkArgument", "set" ],
  "com.google.common.util.concurrent.MoreExecutors:invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,java.time.Duration)" : [ "invokeAnyImpl", "toNanosSaturated" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:subList(int,int)" : [ "subArray", "asList" ],
  "com.google.common.collect.ArrayTable:columnKeySet()" : [ "keySet" ],
  "com.google.common.collect.TreeMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "<init>", "intersect", "downTo", "comparator" ],
  "com.google.common.cache.ForwardingCache:getIfPresent(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.FinalizablePhantomReference:<init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue)" : [ "cleanUp" ],
  "com.google.common.primitives.Floats:indexOf(float[],float)" : [ "indexOf" ],
  "com.google.common.collect.StandardTable$ColumnKeySet:removeAll(java.util.Collection)" : [ "removeAll", "checkNotNull" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.cache.LocalCache:containsValue(java.lang.Object)" : [ "getLiveValue", "equivalent" ],
  "com.google.common.primitives.UnsignedInteger:fromIntBits(int)" : [ "<init>" ],
  "com.google.common.util.concurrent.ServiceManager:addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor)" : [ "addListener" ],
  "com.google.common.collect.CompactHashMap$ValuesView:forEach(java.util.function.Consumer)" : [ "checkNotNull", "delegateOrNull", "firstEntryIndex", "getSuccessor" ],
  "com.google.common.collect.Maps$AsMapView:clear()" : [ "backingSet" ],
  "com.google.common.util.concurrent.AtomicLongMap:getAndUpdate(java.lang.Object,java.util.function.LongUnaryOperator)" : [ "checkNotNull" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:postReadCleanup()" : [ "runCleanup" ],
  "com.google.common.collect.Iterables:getOnlyElement(java.lang.Iterable)" : [ "getOnlyElement" ],
  "com.google.common.collect.ImmutableEnumSet:iterator()" : [ "unmodifiableIterator" ],
  "com.google.common.net.InternetDomainName:child(java.lang.String)" : [ "from", "checkNotNull" ],
  "com.google.common.collect.Collections2:filter(java.util.Collection,com.google.common.base.Predicate)" : [ "<init>", "createCombined", "checkNotNull" ],
  "com.google.common.reflect.Invokable:equals(java.lang.Object)" : [ "equals", "getOwnerType" ],
  "com.google.common.collect.FilteredKeyMultimap:removeAll(java.lang.Object)" : [ "containsKey", "unmodifiableEmptyCollection" ],
  "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap:createKeySet()" : [ "createKeySet", "isFull", "keySet" ],
  "com.google.common.util.concurrent.ListenableFutureTask:<init>(java.lang.Runnable,java.lang.Object)" : [ "<init>" ],
  "com.google.common.util.concurrent.ClosingFuture:statusFuture()" : [ "nonCancellationPropagating", "constant", "directExecutor" ],
  "com.google.common.collect.ImmutableSortedMultiset:copyOf(java.util.Comparator,java.util.Iterator)" : [ "<init>", "checkNotNull", "addAll", "build" ],
  "com.google.common.reflect.Types$WildcardTypeImpl:<init>(java.lang.reflect.Type[],java.lang.reflect.Type[])" : [ "usedInGenericType" ],
  "com.google.common.primitives.UnsignedInts:decode(java.lang.String)" : [ "fromString", "parseUnsignedInt" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:spliterator()" : [ "delegate" ],
  "com.google.common.collect.ImmutableSortedSet:naturalOrder()" : [ "<init>", "natural" ],
  "com.google.common.math.BigIntegerMath:binomial(int,int)" : [ "binomial", "checkNonNegative", "checkArgument", "log2" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:lower(java.lang.Object)" : [ "find", "unfiltered" ],
  "com.google.common.collect.Maps:filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap,com.google.common.base.Predicate)" : [ "<init>", "and" ],
  "com.google.common.primitives.Shorts:ensureCapacity(short[],int,int)" : [ "checkArgument" ],
  "com.google.common.primitives.Booleans:indexOf(boolean[],boolean)" : [ "indexOf" ],
  "com.google.common.collect.UnmodifiableListIterator:<init>()" : [ "<init>" ],
  "com.google.common.collect.TableCollectors:mergeTables(com.google.common.collect.Table,java.lang.Object,java.lang.Object,java.lang.Object,java.util.function.BinaryOperator)" : [ "checkNotNull" ],
  "com.google.common.collect.LinkedListMultimap:put(java.lang.Object,java.lang.Object)" : [ "addNode" ],
  "com.google.common.collect.Ordering:min(java.util.Iterator)" : [ "min" ],
  "com.google.common.collect.ImmutableClassToInstanceMap:<init>(com.google.common.collect.ImmutableMap)" : [ "<init>" ],
  "com.google.common.collect.Collections2$FilteredCollection:removeIf(java.util.function.Predicate)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMapKeySet:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingSortedMap:<init>()" : [ "<init>" ],
  "com.google.common.collect.FilteredKeySetMultimap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.math.PairedStatsAccumulator:xStats()" : [ "snapshot" ],
  "com.google.common.collect.HashBasedTable:rowKeySet()" : [ "rowKeySet" ],
  "com.google.common.util.concurrent.AbstractFuture:set(java.lang.Object)" : [ "complete" ],
  "com.google.common.base.Converter:convertAll(java.lang.Iterable)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:get(int)" : [ "checkElementIndex", "size", "reverseIndex" ],
  "com.google.common.cache.CacheBuilder:checkWeightWithWeigher()" : [ "checkState" ],
  "com.google.common.collect.ForwardingSortedMultiset:standardFirstEntry()" : [ "immutableEntry" ],
  "com.google.common.util.concurrent.ServiceManager:servicesByState()" : [ "servicesByState" ],
  "com.google.common.collect.Maps$DescendingMap:subMap(java.lang.Object,java.lang.Object)" : [ "subMap" ],
  "com.google.common.reflect.TypeResolver$TypeTable:<init>()" : [ "of" ],
  "com.google.common.util.concurrent.Futures:getUnchecked(java.util.concurrent.Future)" : [ "checkNotNull", "getUninterruptibly" ],
  "com.google.common.collect.ForwardingNavigableMap:standardHigherKey(java.lang.Object)" : [ "keyOrNull", "higherEntry" ],
  "com.google.common.util.concurrent.ClosingFuture:close()" : [ "close" ],
  "com.google.common.util.concurrent.AtomicDoubleArray:toString()" : [ "length" ],
  "com.google.common.collect.LinkedHashMultimap$ValueSet:rehashIfNecessary()" : [ "needsResizing", "getSuccessorInValueSet" ],
  "com.google.common.primitives.ImmutableDoubleArray:builder()" : [ "<init>" ],
  "com.google.common.graph.EndpointPairIterator$Undirected:computeNext()" : [ "unordered" ],
  "com.google.common.math.ToDoubleRounder:roundToDouble(java.lang.Number,java.math.RoundingMode)" : [ "checkNotNull", "checkRoundingUnnecessary", "nextDown" ],
  "com.google.common.io.BaseEncoding:encode(byte[])" : [ "encode" ],
  "com.google.common.util.concurrent.AbstractService:awaitRunning()" : [ "enterWhenUninterruptibly", "checkCurrentState", "leave" ],
  "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:<init>(com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.reflect.MutableTypeToInstanceMap:putInstance(com.google.common.reflect.TypeToken,java.lang.Object)" : [ "trustedPut", "rejectTypeVariables" ],
  "com.google.common.graph.DirectedNetworkConnections:<init>(java.util.Map,java.util.Map,int)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:removeLast()" : [ "delegate" ],
  "com.google.common.collect.HashBasedTable:contains(java.lang.Object,java.lang.Object)" : [ "contains" ],
  "com.google.common.util.concurrent.AbstractService:enqueueFailedEvent(com.google.common.util.concurrent.Service$State,java.lang.Throwable)" : [ "enqueue" ],
  "com.google.common.collect.ImmutableList:indexOf(java.lang.Object)" : [ "indexOfImpl" ],
  "com.google.common.collect.CompactHashMap$ValuesView:toArray()" : [ "needsAllocArrays", "delegateOrNull", "copyAsObjectArray" ],
  "com.google.common.util.concurrent.Futures:gwtCompatibleToArray(java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.collect.FilteredEntrySetMultimap:removeAll(java.lang.Object)" : [ "removeAll" ],
  "com.google.common.collect.MinMaxPriorityQueue:fillHole(int,java.lang.Object)" : [ "<init>", "heapForIndex", "elementData", "fillHoleAt", "bubbleUpAlternatingLevels", "tryCrossOverAndBubbleUp" ],
  "com.google.common.collect.Maps$SortedAsMapView:headMap(java.lang.Object)" : [ "asMap", "backingSet" ],
  "com.google.common.math.IntMath:pow(int,int)" : [ "checkNonNegative" ],
  "com.google.common.collect.Multimaps:transformEntries(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer)" : [ "<init>" ],
  "com.google.common.math.LongMath:divide(long,long,java.math.RoundingMode)" : [ "checkNotNull", "checkRoundingUnnecessary" ],
  "com.google.common.collect.ForwardingBlockingDeque:takeFirst()" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:spliterator()" : [ "map", "wrapEntry" ],
  "com.google.common.net.MediaType:createConstantUtf8(java.lang.String,java.lang.String)" : [ "<init>", "addKnownType", "of" ],
  "com.google.common.cache.LocalCache$Segment:drainKeyReferenceQueue()" : [ "reclaimKey" ],
  "com.google.common.collect.ImmutableSet:copyOf(java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.collect.ConcurrentHashMultiset:readObject(java.io.ObjectInputStream)" : [ "set" ],
  "com.google.common.graph.AbstractGraph:outDegree(java.lang.Object)" : [ "outDegree" ],
  "com.google.common.graph.ImmutableValueGraph:isDirected()" : [ "isDirected" ],
  "com.google.common.hash.BloomFilter$SerialForm:<init>(com.google.common.hash.BloomFilter)" : [ "toPlainArray" ],
  "com.google.common.cache.ForwardingCache:invalidateAll()" : [ "delegate" ],
  "com.google.common.primitives.ImmutableIntArray:trimmed()" : [ "<init>", "isPartialView", "toArray" ],
  "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator:validateClass(java.lang.Class)" : [ "checkExceptionClassValidity" ],
  "com.google.common.collect.Maps:transformValues(java.util.SortedMap,com.google.common.base.Function)" : [ "transformEntries" ],
  "com.google.common.collect.ImmutableMap$Builder:build(boolean)" : [ "of", "lastEntryForEachKey", "from", "onResultOf", "valueFunction", "fromEntryArray" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:put(java.util.Map$Entry)" : [ "put" ],
  "com.google.common.collect.CollectCollectors:toMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper:newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry)" : [ "<init>" ],
  "com.google.common.util.concurrent.Monitor:hasWaiters(com.google.common.util.concurrent.Monitor$Guard)" : [ "getWaitQueueLength" ],
  "com.google.common.collect.MapMakerInternalMap:remove(java.lang.Object)" : [ "remove", "hash", "segmentFor" ],
  "com.google.common.util.concurrent.FluentFuture:catchingAsync(java.lang.Class,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor)" : [ "catchingAsync" ],
  "com.google.common.reflect.Invokable:<init>(java.lang.reflect.AccessibleObject)" : [ "checkNotNull" ],
  "com.google.common.primitives.Doubles:reverse(double[])" : [ "reverse", "checkNotNull" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry:<init>(java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:newInstanceWithExplicitOrdering(java.lang.Class,com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)" : [ "<init>", "checkNotNull", "getOrCreateNodes" ],
  "com.google.common.util.concurrent.ServiceManager:stopAsync()" : [ "iterator" ],
  "com.google.common.collect.ForwardingConcurrentMap:replace(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.Traverser:validate(java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.collect.ArrayTable:<init>(java.lang.Iterable,java.lang.Iterable)" : [ "copyOf", "checkArgument", "indexMap", "eraseAll" ],
  "com.google.common.cache.LocalCache$Segment:loadAsync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader)" : [ "loadFuture", "directExecutor" ],
  "com.google.common.util.concurrent.ForwardingListenableFuture:addListener(java.lang.Runnable,java.util.concurrent.Executor)" : [ "delegate" ],
  "com.google.common.collect.CompactHashMap:init(int)" : [ "checkArgument", "constrainToRange" ],
  "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:entryIterator()" : [ "entrySet" ],
  "com.google.common.collect.ImmutableSortedMap:tailMap(java.lang.Object,boolean)" : [ "getSubMap", "tailIndex", "checkNotNull", "size" ],
  "com.google.common.graph.ImmutableValueGraph:edgeValueOrDefault(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "edgeValueOrDefault" ],
  "com.google.common.collect.ImmutableRangeSet:asSet(com.google.common.collect.DiscreteDomain)" : [ "checkNotNull", "isEmpty", "of", "span", "canonical", "hasLowerBound", "hasUpperBound", "maxValue" ],
  "com.google.common.base.Equivalence$EquivalentToPredicate:apply(java.lang.Object)" : [ "equivalent" ],
  "com.google.common.collect.TreeRangeMap:<init>()" : [ "newTreeMap" ],
  "com.google.common.collect.Synchronized$SynchronizedSetMultimap:<init>(com.google.common.collect.SetMultimap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Sets$FilteredSortedSet:headSet(java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Maps$DescendingMap:keySet()" : [ "navigableKeySet" ],
  "com.google.common.math.IntMath:saturatedAdd(int,int)" : [ "saturatedCast" ],
  "com.google.common.collect.GeneralRange:contains(java.lang.Object)" : [ "tooLow", "tooHigh" ],
  "com.google.common.cache.LocalCache:get(java.lang.Object,com.google.common.cache.CacheLoader)" : [ "get", "hash", "checkNotNull", "segmentFor" ],
  "com.google.common.collect.TreeRangeMap:put(com.google.common.collect.Range,java.lang.Object)" : [ "<init>", "isEmpty", "checkNotNull", "remove" ],
  "com.google.common.collect.CompactLinkedHashSet:resizeEntries(int)" : [ "resizeEntries", "requirePredecessors", "requireSuccessors" ],
  "com.google.common.collect.ForwardingMap:standardIsEmpty()" : [ "entrySet" ],
  "com.google.common.collect.FluentIterable:anyMatch(com.google.common.base.Predicate)" : [ "any", "getDelegate" ],
  "com.google.common.graph.Graphs$TransposedGraph:inDegree(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.TopKSelector:trim()" : [ "log2", "partition", "uncheckedCastNullableTToT" ],
  "com.google.common.collect.StandardTable$Row:clear()" : [ "updateBackingRowMapField", "maintainEmptyInvariant" ],
  "com.google.common.collect.ImmutableRangeSet:unionOf(java.lang.Iterable)" : [ "copyOf", "create" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:putAll(java.lang.Object,java.lang.Iterable)" : [ "putAll" ],
  "com.google.common.collect.SparseImmutableTable:columnMap()" : [ "copyOf" ],
  "com.google.common.cache.LocalCache$Segment:insertLoadingValueReference(java.lang.Object,int,boolean)" : [ "<init>", "preWriteCleanup", "equivalent", "newEntry", "postWriteCleanup" ],
  "com.google.common.math.IntMath:log10(int,java.math.RoundingMode)" : [ "checkPositive", "log10Floor", "checkRoundingUnnecessary", "lessThanBranchFree" ],
  "com.google.common.collect.Sets$PowerSet:equals(java.lang.Object)" : [ "equals", "keySet" ],
  "com.google.common.collect.ImmutableBiMap:copyOf(java.lang.Iterable)" : [ "toArray", "of" ],
  "com.google.common.collect.ForwardingNavigableSet:higher(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.MoreExecutors$Application:addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "addShutdownHook", "newThread" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.Maps:filterFiltered(com.google.common.collect.Maps$FilteredEntryBiMap,com.google.common.base.Predicate)" : [ "<init>", "and", "unfiltered" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:removeAll(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:reversePosition(int)" : [ "size" ],
  "com.google.common.collect.CompactLinkedHashSet:toArray()" : [ "toArrayImpl" ],
  "com.google.common.collect.DescendingImmutableSortedMultiset:<init>(com.google.common.collect.ImmutableSortedMultiset)" : [ "<init>" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:decodingStream(java.io.Reader)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMultiset$Builder:addAll(java.util.Iterator)" : [ "addAll" ],
  "com.google.common.util.concurrent.MoreExecutors$Application:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)" : [ "getExitingExecutorService" ],
  "com.google.common.collect.RegularImmutableSortedSet:tailSetImpl(java.lang.Object,boolean)" : [ "getSubSet", "tailIndex", "size" ],
  "com.google.common.collect.Multisets:intersection(com.google.common.collect.Multiset,com.google.common.collect.Multiset)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMultiset:toImmutableMultiset(java.util.function.Function,java.util.function.ToIntFunction)" : [ "toImmutableMultiset" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:get(java.lang.Object)" : [ "tailMap", "equals" ],
  "com.google.common.util.concurrent.AbstractScheduledService:awaitTerminated(java.time.Duration)" : [ "awaitTerminated" ],
  "com.google.common.collect.Maps$SortedAsMapView:<init>(java.util.SortedSet,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:runWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "checkPositiveTimeout", "wrapAndThrowRuntimeExecutionExceptionOrError" ],
  "com.google.common.collect.TreeRangeSet:create(com.google.common.collect.RangeSet)" : [ "create", "addAll" ],
  "com.google.common.collect.ForwardingCollection:removeAll(java.util.Collection)" : [ "delegate" ],
  "com.google.common.collect.Maps$NavigableAsMapView:headMap(java.lang.Object,boolean)" : [ "asMap" ],
  "com.google.common.io.BaseEncoding$Base64Encoding:<init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)" : [ "<init>", "checkArgument" ],
  "com.google.common.collect.Queues:drain(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingSortedMap:delegate()" : [ "delegate" ],
  "com.google.common.collect.ImmutableSortedMultiset:comparator()" : [ "comparator" ],
  "com.google.common.math.Stats:toStats()" : [ "<init>", "snapshot" ],
  "com.google.common.hash.SipHashFunction$SipHasher:processM(long)" : [ "sipRound" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:first()" : [ "firstKey" ],
  "com.google.common.io.BaseEncoding$Base64Encoding:<init>(java.lang.String,java.lang.String,java.lang.Character)" : [ "<init>" ],
  "com.google.common.util.concurrent.Futures$InCompletionOrderFuture:cancel(boolean)" : [ "cancel" ],
  "com.google.common.cache.LocalCache$Segment:getNextEvictable()" : [ "iterator" ],
  "com.google.common.graph.Graphs$TransposedGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "delegate", "transpose" ],
  "com.google.common.reflect.Types$JavaVersion$4:typeName(java.lang.reflect.Type)" : [ "typeName" ],
  "com.google.common.collect.ImmutableSortedMap$SerializedForm:makeBuilder(int)" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:getWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry)" : [ "castForTesting", "getValueReference" ],
  "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Iterator)" : [ "copyOf", "natural" ],
  "com.google.common.base.CharMatcher:retainFrom(java.lang.CharSequence)" : [ "negate", "removeFrom" ],
  "com.google.common.collect.MultimapBuilder$HashSetSupplier:get()" : [ "newHashSetWithExpectedSize" ],
  "com.google.common.util.concurrent.FluentFuture:from(com.google.common.util.concurrent.ListenableFuture)" : [ "<init>" ],
  "com.google.common.graph.AbstractBaseGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "checkNotNull", "isOrderingCompatible", "nodeU", "nodeV" ],
  "com.google.common.collect.MapMaker:weakValues()" : [ "setValueStrength" ],
  "com.google.common.net.InternetDomainName:ancestor(int)" : [ "subList", "from", "join" ],
  "com.google.common.graph.AbstractGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "hasEdgeConnecting" ],
  "com.google.common.collect.GeneralRange:from(com.google.common.collect.Range)" : [ "<init>", "hasLowerBound", "lowerEndpoint", "lowerBoundType", "hasUpperBound", "upperEndpoint", "upperBoundType", "natural" ],
  "com.google.common.cache.LocalCache$Segment:postWriteCleanup()" : [ "runUnlockedCleanup" ],
  "com.google.common.util.concurrent.WrappingExecutorService:invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)" : [ "wrapTasks" ],
  "com.google.common.util.concurrent.FuturesGetChecked:hasConstructorUsableByGetChecked(java.lang.Class)" : [ "newWithCause" ],
  "com.google.common.graph.ImmutableValueGraph:allowsSelfLoops()" : [ "allowsSelfLoops" ],
  "com.google.common.base.CharMatcher:inRange(char,char)" : [ "<init>" ],
  "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:<init>(com.google.common.collect.ImmutableMap,java.util.Map$Entry[])" : [ "<init>", "asImmutableList" ],
  "com.google.common.io.BaseEncoding$Alphabet:hasLowerCase()" : [ "isLowerCase" ],
  "com.google.common.collect.ImmutableTable$Builder:build()" : [ "buildOrThrow" ],
  "com.google.common.collect.Tables$AbstractCell:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.hash.Funnels$SinkAsStream:<init>(com.google.common.hash.PrimitiveSink)" : [ "checkNotNull" ],
  "com.google.common.graph.ImmutableNetwork:allowsSelfLoops()" : [ "allowsSelfLoops" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:entries()" : [ "delegate" ],
  "com.google.common.util.concurrent.Futures:immediateCancelledFuture()" : [ "<init>" ],
  "com.google.common.collect.Queues:synchronizedDeque(java.util.Deque)" : [ "deque" ],
  "com.google.common.collect.ImmutableMapValues:contains(java.lang.Object)" : [ "contains", "iterator" ],
  "com.google.common.reflect.Types:filterUpperBounds(java.lang.Iterable)" : [ "filter", "not", "equalTo" ],
  "com.google.common.primitives.UnsignedBytes:sortDescending(byte[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.collect.RegularImmutableSortedSet:iterator()" : [ "iterator" ],
  "com.google.common.graph.ValueGraphBuilder:copy()" : [ "<init>" ],
  "com.google.common.collect.Iterators:get(java.util.Iterator,int,java.lang.Object)" : [ "checkNonnegative", "advance", "getNext" ],
  "com.google.common.collect.AllEqualOrdering:immutableSortedCopy(java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:headSet(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.cache.LocalCache$Segment:removeValueFromChain(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object,int,java.lang.Object,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)" : [ "enqueueNotification", "remove", "removeEntryFromChain" ],
  "com.google.common.cache.LocalCache:reclaimValue(com.google.common.cache.LocalCache$ValueReference)" : [ "reclaimValue", "segmentFor" ],
  "com.google.common.collect.Maps$FilteredEntryBiMap:replaceAll(java.util.function.BiFunction)" : [ "unfiltered" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:<init>()" : [ "<init>" ],
  "com.google.common.collect.FluentIterable:toSortedList(java.util.Comparator)" : [ "from", "immutableSortedCopy", "getDelegate" ],
  "com.google.common.collect.HashBiMap$Inverse$InverseKeySet:remove(java.lang.Object)" : [ "smearedHash" ],
  "com.google.common.collect.Maps$TransformedEntriesMap:get(java.lang.Object)" : [ "getOrDefault" ],
  "com.google.common.base.Ticker$1:<init>()" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2:schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable)" : [ "<init>" ],
  "com.google.common.collect.LinkedListMultimap:removeAllNodes(java.lang.Object)" : [ "clear" ],
  "com.google.common.collect.AbstractMultimap:putAll(java.lang.Object,java.lang.Iterable)" : [ "checkNotNull", "addAll" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:removeAll(java.util.Collection)" : [ "delegate" ],
  "com.google.common.collect.LinkedHashMultimap:deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry)" : [ "succeedsInMultimap", "getPredecessorInMultimap", "getSuccessorInMultimap" ],
  "com.google.common.collect.RegularImmutableSortedSet:higher(java.lang.Object)" : [ "tailIndex", "size" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "getSubMultiset", "headIndex", "checkNotNull" ],
  "com.google.common.math.StatsAccumulator:addAll(com.google.common.math.StatsAccumulator)" : [ "count", "merge", "mean", "sumOfSquaresOfDeltas", "min", "max" ],
  "com.google.common.collect.AbstractMultiset:addAll(java.util.Collection)" : [ "addAllImpl" ],
  "com.google.common.util.concurrent.MoreExecutors:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor)" : [ "getExitingScheduledExecutorService" ],
  "com.google.common.io.Files$FileByteSource:sizeIfKnown()" : [ "of", "absent" ],
  "com.google.common.collect.Multimaps$CustomMultimap:unmodifiableCollectionSubclass(java.util.Collection)" : [ "unmodifiableNavigableSet" ],
  "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.graph.ImmutableNetwork:getNodeConnections(com.google.common.graph.Network)" : [ "builder", "put", "connectionsOf", "buildOrThrow" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap:headMap(java.lang.Object)" : [ "<init>", "sortedMap" ],
  "com.google.common.collect.Iterables:removeFirstMatching(java.lang.Iterable,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.base.Present:or(com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.MapMakerInternalMap:getEntry(java.lang.Object)" : [ "getEntry", "hash", "segmentFor" ],
  "com.google.common.io.CharSource:read()" : [ "create", "register", "toString", "rethrow", "close" ],
  "com.google.common.cache.LocalCache:nullifyAccessOrder(com.google.common.cache.ReferenceEntry)" : [ "nullEntry" ],
  "com.google.common.cache.LocalCache:getAll(java.lang.Iterable)" : [ "<init>", "get", "loadAll", "copyOf", "newLinkedHashMap", "newLinkedHashSet" ],
  "com.google.common.collect.HashBiMap$Inverse:values()" : [ "forward" ],
  "com.google.common.collect.ImmutableMap$SerializedForm:<init>(com.google.common.collect.ImmutableMap)" : [ "entrySet" ],
  "com.google.common.collect.Cut$AboveAll:<init>()" : [ "<init>" ],
  "com.google.common.cache.LocalCache$WeakWriteEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>", "nullEntry" ],
  "com.google.common.collect.CompoundOrdering:<init>(java.util.Comparator,java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset$AvlNode:removeMin(com.google.common.collect.TreeMultiset$AvlNode)" : [ "rebalance" ],
  "com.google.common.graph.AbstractBaseGraph:validateEndpoints(com.google.common.graph.EndpointPair)" : [ "checkNotNull", "checkArgument", "isOrderingCompatible" ],
  "com.google.common.math.LongMath:checkedMultiply(long,long)" : [ "checkNoOverflow" ],
  "com.google.common.io.CharStreams$NullWriter:write(char[])" : [ "checkNotNull" ],
  "com.google.common.io.BaseEncoding$SeparatedBaseEncoding:maxEncodedSize(int)" : [ "divide" ],
  "com.google.common.collect.EmptyContiguousSet:createDescendingSet()" : [ "emptySet", "natural", "reverse" ],
  "com.google.common.primitives.Chars$CharArrayAsList:set(int,java.lang.Character)" : [ "checkElementIndex", "size", "checkNotNull" ],
  "com.google.common.graph.ImmutableValueGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "hasEdgeConnecting" ],
  "com.google.common.collect.DescendingImmutableSortedSet:descendingIterator()" : [ "iterator" ],
  "com.google.common.graph.Graphs$TransposedNetwork:inDegree(java.lang.Object)" : [ "delegate" ],
  "com.google.common.base.Functions:constant(java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ImmutableList:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.Maps$Values:removeAll(java.util.Collection)" : [ "checkNotNull", "map", "newHashSet" ],
  "com.google.common.util.concurrent.AbstractService:checkCurrentState(com.google.common.util.concurrent.Service$State)" : [ "state", "failureCause" ],
  "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,long)" : [ "create" ],
  "com.google.common.util.concurrent.Futures:successfulAsList(java.lang.Iterable)" : [ "<init>", "copyOf" ],
  "com.google.common.collect.Maps$SortedAsMapView:keySet()" : [ "backingSet" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "navigableSet", "delegate" ],
  "com.google.common.collect.RegularImmutableBiMap$Inverse:forEach(java.util.function.BiConsumer)" : [ "forEach", "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "subSetImpl" ],
  "com.google.common.collect.Iterators:asEnumeration(java.util.Iterator)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSortedMap$Builder:build()" : [ "buildOrThrow" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:containsEntry(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableMultimap:copyOf(com.google.common.collect.Multimap)" : [ "copyOf", "isPartialView" ],
  "com.google.common.hash.AbstractHasher:putBytes(byte[])" : [ "putBytes" ],
  "com.google.common.net.InetAddresses:get6to4IPv4Address(java.net.Inet6Address)" : [ "checkArgument", "is6to4Address", "toAddrString", "getInet4Address" ],
  "com.google.common.collect.ConcurrentHashMultiset:iterator()" : [ "iteratorImpl" ],
  "com.google.common.base.Equivalence:pairwise()" : [ "<init>" ],
  "com.google.common.collect.ImmutableMapEntry:<init>(java.lang.Object,java.lang.Object)" : [ "checkEntryNotNull" ],
  "com.google.common.primitives.ImmutableDoubleArray:subArray(int,int)" : [ "<init>", "checkPositionIndexes", "length" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.base.Strings:padEnd(java.lang.String,int,char)" : [ "checkNotNull" ],
  "com.google.common.graph.StandardValueGraph:<init>(com.google.common.graph.AbstractGraphBuilder)" : [ "<init>", "createMap" ],
  "com.google.common.collect.CollectCollectors:toImmutableMap(java.util.function.Function,java.util.function.Function)" : [ "<init>", "checkNotNull", "build", "combine" ],
  "com.google.common.collect.ForwardingConcurrentMap:delegate()" : [ "delegate" ],
  "com.google.common.base.Predicates:alwaysFalse()" : [ "withNarrowedType" ],
  "com.google.common.collect.ArrayListMultimap:create()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableSet:pollLast()" : [ "delegate" ],
  "com.google.common.primitives.ImmutableDoubleArray:builder(int)" : [ "<init>", "checkArgument" ],
  "com.google.common.collect.ConcurrentHashMultiset$EntrySet:snapshot()" : [ "newArrayListWithExpectedSize", "addAll" ],
  "com.google.common.collect.ForwardingDeque:peekLast()" : [ "delegate" ],
  "com.google.common.collect.ReverseOrdering:min(java.util.Iterator)" : [ "max" ],
  "com.google.common.collect.Maps$ViewCachingAbstractMap:keySet()" : [ "createKeySet" ],
  "com.google.common.collect.StandardTable$Column$KeySet:retainAll(java.util.Collection)" : [ "removeFromColumnIf", "keyPredicateOnEntries", "not", "in" ],
  "com.google.common.collect.ForwardingNavigableSet:descendingIterator()" : [ "delegate" ],
  "com.google.common.collect.RegularImmutableMap:fromEntryArray(int,java.util.Map$Entry[],boolean)" : [ "checkPositionIndex", "fromEntryArrayCheckingBucketOverflow", "create" ],
  "com.google.common.math.LongMath$MillerRabinTester$2:mulMod(long,long,long)" : [ "remainder" ],
  "com.google.common.collect.Platform:newHashMapWithExpectedSize(int)" : [ "newHashMapWithExpectedSize" ],
  "com.google.common.collect.Sets$SetView:immutableCopy()" : [ "copyOf" ],
  "com.google.common.util.concurrent.AbstractService$StateSnapshot:failureCause()" : [ "checkState" ],
  "com.google.common.reflect.Parameter:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.base.CommonPattern:isPcreLike()" : [ "patternCompilerIsPcreLike" ],
  "com.google.common.collect.ImmutableRangeMap$Builder:build()" : [ "<init>", "build", "rangeLexOrdering", "onKeys", "isConnected", "intersection", "isEmpty", "add" ],
  "com.google.common.collect.ForwardingDeque:descendingIterator()" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$KeySet:clear()" : [ "clear", "iterator" ],
  "com.google.common.collect.CompactHashSet:resizeMeMaybe(int)" : [ "requireEntries", "resizeEntries" ],
  "com.google.common.collect.ImmutableListMultimap:readObject(java.io.ObjectInputStream)" : [ "builder", "add", "put", "build", "buildOrThrow", "set" ],
  "com.google.common.collect.ImmutableEnumSet:asImmutable(java.util.EnumSet)" : [ "<init>", "of", "getOnlyElement" ],
  "com.google.common.collect.ImmutableMultimap$Values:contains(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.collect.Sets:union(java.util.Set,java.util.Set)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMap:copyOf(java.lang.Iterable)" : [ "toArray", "of" ],
  "com.google.common.collect.HashBiMap$Inverse:forEach(java.util.function.BiConsumer)" : [ "forEach", "checkNotNull" ],
  "com.google.common.collect.ImmutableSortedSet$Builder:<init>(java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.ImmutableTable$Builder:orderColumnsBy(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:arrayListValues()" : [ "arrayListValues" ],
  "com.google.common.collect.ForwardingMultimap:clear()" : [ "delegate" ],
  "com.google.common.collect.Multimaps:unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache:isExpired(com.google.common.cache.ReferenceEntry,long)" : [ "checkNotNull", "expiresAfterAccess", "expiresAfterWrite" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,int)" : [ "<init>" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:get(java.lang.Object,int)" : [ "getLiveEntry", "tryDrainReferenceQueues", "postReadCleanup" ],
  "com.google.common.primitives.Ints$IntArrayAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:tailMap(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:get(int)" : [ "get" ],
  "com.google.common.hash.Crc32cHashFunction$Crc32cHasher:processRemaining(java.nio.ByteBuffer)" : [ "combine" ],
  "com.google.common.io.ByteStreams:readFully(java.io.InputStream,byte[],int,int)" : [ "read" ],
  "com.google.common.primitives.ImmutableLongArray$AsList:lastIndexOf(java.lang.Object)" : [ "lastIndexOf" ],
  "com.google.common.collect.ImmutableSortedSet:floor(java.lang.Object)" : [ "getNext", "headSet", "descendingIterator" ],
  "com.google.common.collect.Collections2$TransformedCollection:removeIf(java.util.function.Predicate)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache:putAll(java.util.Map)" : [ "put" ],
  "com.google.common.collect.HashBiMap:remove(java.lang.Object)" : [ "seekByKey", "smearedHash", "delete" ],
  "com.google.common.collect.Multimaps$UnmodifiableSetMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.MultimapBuilder$HashSetSupplier:<init>(int)" : [ "checkNonnegative" ],
  "com.google.common.collect.Iterables:mergeSorted(java.lang.Iterable,java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.collect.Multisets$UnmodifiableMultiset:elementSet()" : [ "createElementSet" ],
  "com.google.common.base.Functions:forMap(java.util.Map,java.lang.Object)" : [ "<init>" ],
  "com.google.common.cache.ForwardingCache:size()" : [ "delegate" ],
  "com.google.common.collect.ImmutableMapKeySet:spliterator()" : [ "keySpliterator" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addHolder(java.lang.String,java.lang.Object)" : [ "addHolder", "checkNotNull" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:lastIndexOf(java.lang.Object)" : [ "lastIndexOf" ],
  "com.google.common.collect.TreeRangeMap$RangeMapEntry:<init>(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object)" : [ "<init>", "create" ],
  "com.google.common.collect.CompactHashMap:entry(int)" : [ "requireEntries" ],
  "com.google.common.util.concurrent.TimeLimiter:runWithTimeout(java.lang.Runnable,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.io.ByteStreams:toByteArray(java.io.InputStream,long)" : [ "checkArgument", "toByteArrayInternal" ],
  "com.google.common.collect.ArrayTable:values()" : [ "values" ],
  "com.google.common.reflect.TypeCapture:capture()" : [ "checkArgument" ],
  "com.google.common.util.concurrent.AbstractScheduledService$Scheduler:newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.math.DoubleMath:fuzzyEquals(double,double,double)" : [ "checkNonNegative" ],
  "com.google.common.collect.FilteredKeyListMultimap:<init>(com.google.common.collect.ListMultimap,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.collect.CompactHashMap$EntrySetView:spliterator()" : [ "delegateOrNull", "indexed" ],
  "com.google.common.collect.AbstractListMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "replaceValues" ],
  "com.google.common.base.Stopwatch:elapsed()" : [ "elapsedNanos" ],
  "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:iterator()" : [ "iterator" ],
  "com.google.common.base.CharMatcher:replaceFrom(java.lang.CharSequence,java.lang.CharSequence)" : [ "replaceFrom", "removeFrom", "indexIn" ],
  "com.google.common.collect.EnumMultiset:create(java.lang.Iterable)" : [ "<init>", "checkArgument", "addAll" ],
  "com.google.common.collect.ImmutableBiMap$Builder:build()" : [ "buildOrThrow" ],
  "com.google.common.collect.TreeMultiset$AvlNode:addRightChild(java.lang.Object,int)" : [ "<init>", "succ" ],
  "com.google.common.collect.ForwardingMultiset:add(java.lang.Object,int)" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:forEach(java.util.function.BiConsumer)" : [ "forEach", "delegate" ],
  "com.google.common.collect.TreeRangeSet$Complement:contains(java.lang.Comparable)" : [ "contains" ],
  "com.google.common.collect.Sets:newLinkedHashSet(java.lang.Iterable)" : [ "newLinkedHashSet", "addAll" ],
  "com.google.common.base.CharMatcher:is(char)" : [ "<init>" ],
  "com.google.common.math.IntMath:factorial(int)" : [ "checkNonNegative" ],
  "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:size()" : [ "columnKeySet" ],
  "com.google.common.collect.LinkedListMultimap:keys()" : [ "keys" ],
  "com.google.common.primitives.ImmutableLongArray:of(long,long,long)" : [ "<init>" ],
  "com.google.common.util.concurrent.Futures:getChecked(java.util.concurrent.Future,java.lang.Class)" : [ "getChecked" ],
  "com.google.common.collect.TreeMultimap:create()" : [ "<init>", "natural" ],
  "com.google.common.collect.AbstractIndexedListIterator:<init>(int,int)" : [ "<init>", "checkPositionIndex" ],
  "com.google.common.util.concurrent.WrappingScheduledExecutorService:<init>(java.util.concurrent.ScheduledExecutorService)" : [ "<init>" ],
  "com.google.common.collect.Tables$UnmodifiableRowSortedMap:<init>(com.google.common.collect.RowSortedTable)" : [ "<init>" ],
  "com.google.common.collect.Queues:drain(java.util.concurrent.BlockingQueue,java.util.Collection,int,java.time.Duration)" : [ "drain" ],
  "com.google.common.collect.ImmutableTable:toString()" : [ "toString" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:containsRow(java.lang.Object)" : [ "delegate" ],
  "com.google.common.net.HostAndPort:getHostAndPortFromBracketedHost(java.lang.String)" : [ "checkArgument" ],
  "com.google.common.cache.LocalCache$LocalManualCache:invalidateAll()" : [ "clear" ],
  "com.google.common.util.concurrent.AtomicDouble:floatValue()" : [ "get" ],
  "com.google.common.collect.Comparators:emptiesLast(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:contains(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry:transformEntries(java.util.Iterator)" : [ "<init>", "transform" ],
  "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(java.util.Collection)" : [ "ensureRoomFor" ],
  "com.google.common.collect.Tables$TransformedTable:columnMap()" : [ "transformValues" ],
  "com.google.common.collect.Streams:forEachPair(java.util.stream.Stream,java.util.stream.Stream,java.util.function.BiConsumer)" : [ "<init>", "checkNotNull", "zip" ],
  "com.google.common.collect.HashBiMap$Inverse:remove(java.lang.Object)" : [ "smearedHash" ],
  "com.google.common.io.LittleEndianDataInputStream:readDouble()" : [ "readLong" ],
  "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry:<init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableMapEntry)" : [ "<init>" ],
  "com.google.common.util.concurrent.ForwardingBlockingQueue:drainTo(java.util.Collection)" : [ "delegate" ],
  "com.google.common.primitives.Ints$IntArrayAsList:set(int,java.lang.Integer)" : [ "checkElementIndex", "size", "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedQueue:offer(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Queues:newPriorityBlockingQueue(java.lang.Iterable)" : [ "addAll" ],
  "com.google.common.collect.Maps$TransformedEntriesMap:entrySpliterator()" : [ "map", "asEntryToEntryFunction" ],
  "com.google.common.collect.Synchronized$SynchronizedEntry:getKey()" : [ "delegate" ],
  "com.google.common.collect.TreeRangeSet$AsRanges:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:higherEntry(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:subSet(java.lang.Object,java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.cache.CacheBuilder:weigher(com.google.common.cache.Weigher)" : [ "checkState", "checkNotNull" ],
  "com.google.common.collect.Maps$FilteredEntryMap$KeySet:removeAll(java.util.Collection)" : [ "removeAllKeys" ],
  "com.google.common.collect.Collections2$FilteredCollection:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ForwardingBlockingQueue:take()" : [ "delegate" ],
  "com.google.common.collect.CompactHashSet:moveLastEntry(int,int)" : [ "requireTable", "requireEntries", "requireElements", "size", "smearedHash", "tableGet", "tableSet", "getNext", "maskCombine" ],
  "com.google.common.collect.HashBiMap$KeySet:remove(java.lang.Object)" : [ "smearedHash" ],
  "com.google.common.net.InetAddresses:convertDottedQuadToHex(java.lang.String)" : [ "textToNumericFormatV4" ],
  "com.google.common.collect.HashBiMap:forEach(java.util.function.BiConsumer)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableListMultimap:copyOf(java.lang.Iterable)" : [ "<init>", "putAll", "build" ],
  "com.google.common.collect.LinkedHashMultiset:remove(java.lang.Object,int)" : [ "remove" ],
  "com.google.common.collect.TreeRangeSet:replaceRangeWithSameLowerBound(com.google.common.collect.Range)" : [ "isEmpty" ],
  "com.google.common.util.concurrent.AbstractService:addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor)" : [ "addListener" ],
  "com.google.common.collect.ImmutableMultimap:entrySpliterator()" : [ "flatMap", "asMap", "entrySet", "size" ],
  "com.google.common.graph.AbstractNetwork:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.MinMaxPriorityQueue:heapForIndex(int)" : [ "isEvenLevel" ],
  "com.google.common.collect.ImmutableSortedMap:fromEntries(java.util.Comparator,boolean,java.util.Map$Entry[],int)" : [ "<init>", "emptyMap", "of", "checkEntryNotNull" ],
  "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture:<init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction)" : [ "<init>" ],
  "com.google.common.graph.ImmutableGraph:incidentEdges(java.lang.Object)" : [ "incidentEdges" ],
  "com.google.common.graph.ImmutableNetwork:inEdges(java.lang.Object)" : [ "inEdges" ],
  "com.google.common.collect.EnumHashBiMap:<init>(java.lang.Class)" : [ "<init>" ],
  "com.google.common.collect.Sets$CartesianSet:create(java.util.List)" : [ "<init>", "copyOf", "of", "add", "build" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:clear()" : [ "remove" ],
  "com.google.common.collect.CompactHashMap$Itr:remove()" : [ "remove", "checkForConcurrentModification", "checkRemove", "incrementExpectedModCount", "adjustAfterRemove" ],
  "com.google.common.collect.Maps$Values:<init>(java.util.Map)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingSet:standardEquals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.base.Equivalence:test(java.lang.Object,java.lang.Object)" : [ "equivalent" ],
  "com.google.common.collect.Maps$AbstractFilteredMap:remove(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.collect.FluentIterable:limit(int)" : [ "limit", "from", "getDelegate" ],
  "com.google.common.eventbus.SubscriberRegistry:findAllSubscribers(java.lang.Object)" : [ "create", "getAnnotatedMethods", "iterator" ],
  "com.google.common.collect.Cut$BelowAll:canonical(com.google.common.collect.DiscreteDomain)" : [ "belowValue", "minValue" ],
  "com.google.common.io.Files:map(java.io.File)" : [ "map", "checkNotNull" ],
  "com.google.common.graph.MapRetrievalCache:clearCache()" : [ "clearCache" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:get(java.lang.Comparable)" : [ "get", "contains" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSet:clear()" : [ "remove" ],
  "com.google.common.collect.ForwardingSortedSetMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.TreeMultiset:create()" : [ "<init>", "natural" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:containsAll(java.util.Collection)" : [ "refreshIfEmpty" ],
  "com.google.common.collect.RegularImmutableAsList:<init>(com.google.common.collect.ImmutableCollection,java.lang.Object[])" : [ "<init>", "asImmutableList" ],
  "com.google.common.collect.ImmutableRangeSet:writeReplace()" : [ "<init>" ],
  "com.google.common.math.PairedStatsAccumulator:snapshot()" : [ "<init>", "snapshot" ],
  "com.google.common.collect.AbstractTable$CellSet:clear()" : [ "clear" ],
  "com.google.common.util.concurrent.ForwardingBlockingQueue:drainTo(java.util.Collection,int)" : [ "delegate" ],
  "com.google.common.primitives.Shorts:rotate(short[],int,int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.collect.ForwardingNavigableMap:standardDescendingKeySet()" : [ "descendingMap" ],
  "com.google.common.io.CountingOutputStream:<init>(java.io.OutputStream)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMultimap$Keys:size()" : [ "size" ],
  "com.google.common.eventbus.SubscriberExceptionContext:<init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.Object,java.lang.reflect.Method)" : [ "checkNotNull" ],
  "com.google.common.reflect.TypeResolver:resolveWildcardType(java.lang.reflect.WildcardType)" : [ "<init>", "resolveTypes" ],
  "com.google.common.io.MoreFiles$PathByteSource:sizeIfKnown()" : [ "readAttributes", "absent", "of" ],
  "com.google.common.io.CharSource$CharSequenceCharSource:lengthIfKnown()" : [ "of" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addUnconditionalHolder(java.lang.String,java.lang.Object)" : [ "addUnconditionalHolder", "checkNotNull" ],
  "com.google.common.graph.ImmutableValueGraph:incidentEdgeOrder()" : [ "stable" ],
  "com.google.common.graph.ElementOrder:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.collect.Maps$TransformedEntriesMap:remove(java.lang.Object)" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.base.CharMatcher$None:<init>()" : [ "<init>" ],
  "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,float)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.CompactLinkedHashSet:createWithExpectedSize(int)" : [ "<init>" ],
  "com.google.common.base.Splitter:onPattern(java.lang.String)" : [ "compilePattern" ],
  "com.google.common.collect.Ordering:max(java.util.Iterator)" : [ "max" ],
  "com.google.common.collect.HashMultiset:remove(java.lang.Object,int)" : [ "remove" ],
  "com.google.common.cache.ForwardingCache:invalidateAll(java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.collect.LinkedHashMultimap:create()" : [ "<init>" ],
  "com.google.common.cache.CacheBuilderSpec$ValueStrengthParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)" : [ "checkArgument" ],
  "com.google.common.collect.ForwardingNavigableMap:standardLastKey()" : [ "lastEntry" ],
  "com.google.common.collect.Maps:uniqueIndex(java.util.Iterator,com.google.common.base.Function)" : [ "uniqueIndex", "builder" ],
  "com.google.common.collect.Maps$5:headSet(java.lang.Object)" : [ "headSet" ],
  "com.google.common.collect.ImmutableSortedMultiset:copyOfSorted(com.google.common.collect.SortedMultiset)" : [ "copyOfSortedEntries", "newArrayList" ],
  "com.google.common.base.CharMatcher$InRange:<init>(char,char)" : [ "checkArgument" ],
  "com.google.common.collect.TreeMultiset:elementIterator()" : [ "elementIterator", "entryIterator" ],
  "com.google.common.collect.ArrayTable:cellIterator()" : [ "size" ],
  "com.google.common.collect.ConcurrentHashMultiset:setCount(java.lang.Object,int)" : [ "checkNotNull", "checkNonnegative", "safeGet" ],
  "com.google.common.io.CharSink:writeLines(java.lang.Iterable,java.lang.String)" : [ "writeLines" ],
  "com.google.common.primitives.ImmutableLongArray:of(long,long)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedSet$Builder:build()" : [ "<init>", "sortAndDedup", "emptySet", "asImmutableList" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:awaitHealthy()" : [ "enterWhenUninterruptibly", "checkHealthy", "leave" ],
  "com.google.common.collect.RegularImmutableSortedSet:tailIndex(java.lang.Object,boolean)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractSortedMultiset:pollFirstEntry()" : [ "immutableEntry" ],
  "com.google.common.collect.AbstractNavigableMap:pollLastEntry()" : [ "pollNext" ],
  "com.google.common.net.MediaType$Tokenizer:consumeCharacter(char)" : [ "checkState", "hasMore", "previewChar" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.collect.ImmutableSet:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:containsKey(java.lang.Object)" : [ "containsKey", "rangeContains" ],
  "com.google.common.primitives.ImmutableLongArray:of(long,long,long,long)" : [ "<init>" ],
  "com.google.common.graph.AbstractValueGraph:edgeValueMap(com.google.common.graph.ValueGraph)" : [ "asMap" ],
  "com.google.common.cache.LocalCache:recordsTime()" : [ "recordsWrite", "recordsAccess" ],
  "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:<init>(long)" : [ "checkArgument", "checkedCast", "divide" ],
  "com.google.common.collect.ImmutableSet$SetBuilderImpl:ensureCapacity(int)" : [ "expandedCapacity" ],
  "com.google.common.util.concurrent.MoreExecutors:shutdownAndAwaitTermination(java.util.concurrent.ExecutorService,java.time.Duration)" : [ "shutdownAndAwaitTermination", "toNanosSaturated" ],
  "com.google.common.primitives.ImmutableLongArray$Builder:addAll(java.util.stream.LongStream)" : [ "ensureRoomFor", "saturatedCast", "add" ],
  "com.google.common.collect.EnumMultiset:create(java.lang.Iterable,java.lang.Class)" : [ "create", "addAll" ],
  "com.google.common.cache.LocalCache:usesAccessEntries()" : [ "usesAccessQueue", "recordsAccess" ],
  "com.google.common.collect.HashMultimap:create(com.google.common.collect.Multimap)" : [ "<init>" ],
  "com.google.common.collect.StandardTable:containsColumn(java.lang.Object)" : [ "safeContainsKey" ],
  "com.google.common.collect.ForwardingMap:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$Segment:replace(java.lang.Object,int,java.lang.Object,java.lang.Object)" : [ "preWriteCleanup", "equivalent", "removeValueFromChain", "enqueueNotification", "setValue", "evictEntries", "recordLockedRead", "postWriteCleanup" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:create(java.util.concurrent.ExecutorService)" : [ "<init>" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:removeInEdge(java.lang.Object,boolean)" : [ "removeInEdge", "getReference", "checkState" ],
  "com.google.common.collect.Synchronized$SynchronizedListMultimap:<init>(com.google.common.collect.ListMultimap,java.lang.Object)" : [ "<init>" ],
  "com.google.common.base.Converter:apply(java.lang.Object)" : [ "convert" ],
  "com.google.common.util.concurrent.AbstractFuture:maybePropagateCancellationTo(java.util.concurrent.Future)" : [ "isCancelled", "wasInterrupted" ],
  "com.google.common.reflect.Parameter:getAnnotationsByType(java.lang.Class)" : [ "getDeclaredAnnotationsByType" ],
  "com.google.common.base.Strings:commonSuffix(java.lang.CharSequence,java.lang.CharSequence)" : [ "checkNotNull", "validSurrogatePairAt" ],
  "com.google.common.cache.ForwardingLoadingCache:getUnchecked(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:remove(java.lang.Object)" : [ "contains" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,long,long)" : [ "<init>" ],
  "com.google.common.graph.StandardValueGraph:edgeValueOrDefault(com.google.common.graph.EndpointPair,java.lang.Object)" : [ "edgeValueOrDefaultInternal", "nodeU", "nodeV" ],
  "com.google.common.collect.ImmutableRangeSet$Builder:build()" : [ "<init>", "build", "rangeLexOrdering", "peekingIterator", "isConnected", "checkArgument", "intersection", "isEmpty", "span", "add", "of", "getOnlyElement", "equals", "all" ],
  "com.google.common.cache.LocalCache$LocalLoadingCache:writeReplace()" : [ "<init>" ],
  "com.google.common.primitives.UnsignedLongs:sort(long[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "flip" ],
  "com.google.common.collect.StandardTable$ColumnKeySet:contains(java.lang.Object)" : [ "containsColumn" ],
  "com.google.common.collect.Maps$AbstractFilteredMap:apply(java.lang.Object,java.lang.Object)" : [ "immutableEntry" ],
  "com.google.common.collect.TreeMultiset:iterator()" : [ "iteratorImpl" ],
  "com.google.common.collect.ForwardingMap:putAll(java.util.Map)" : [ "delegate" ],
  "com.google.common.cache.LocalCache$WeakAccessWriteEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>", "nullEntry" ],
  "com.google.common.reflect.TypeToken$TypeSet:rawTypes()" : [ "collectTypes", "copyOf" ],
  "com.google.common.graph.AbstractNetwork:edgeConnecting(com.google.common.graph.EndpointPair)" : [ "edgeConnecting", "validateEndpoints", "nodeU", "nodeV" ],
  "com.google.common.collect.Maps$UnmodifiableNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "unmodifiableNavigableMap" ],
  "com.google.common.collect.Maps$FilteredMapValues:<init>(java.util.Map,java.util.Map,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.base.CharMatcher:anyOf(java.lang.CharSequence)" : [ "<init>", "none", "is", "isEither" ],
  "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)" : [ "<init>" ],
  "com.google.common.collect.ForwardingMapEntry:getKey()" : [ "delegate" ],
  "com.google.common.reflect.TypeToken:every(java.lang.reflect.Type[])" : [ "<init>" ],
  "com.google.common.collect.Maps:unmodifiableEntry(java.util.Map$Entry)" : [ "checkNotNull" ],
  "com.google.common.base.Converter:correctedDoBackward(java.lang.Object)" : [ "checkNotNull", "unsafeDoBackward" ],
  "com.google.common.collect.AbstractBiMap:updateInverseMap(java.lang.Object,boolean,java.lang.Object,java.lang.Object)" : [ "removeFromInverseMap", "uncheckedCastNullableTToT" ],
  "com.google.common.net.InternetDomainName:isUnderRegistrySuffix()" : [ "registrySuffixIndex" ],
  "com.google.common.collect.AbstractIndexedListIterator:next()" : [ "hasNext" ],
  "com.google.common.collect.AbstractSortedSetMultimap:unmodifiableCollectionSubclass(java.util.Collection)" : [ "unmodifiableNavigableSet" ],
  "com.google.common.primitives.Doubles:indexOf(double[],double[])" : [ "checkNotNull" ],
  "com.google.common.collect.ContiguousSet:closed(long,long)" : [ "create", "longs" ],
  "com.google.common.collect.TreeMultiset:create(java.util.Comparator)" : [ "<init>", "natural" ],
  "com.google.common.collect.ImmutableRangeSet:difference(com.google.common.collect.RangeSet)" : [ "create", "removeAll", "copyOf" ],
  "com.google.common.base.Optional:of(java.lang.Object)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:entrySet()" : [ "delegate" ],
  "com.google.common.collect.Range:<init>(com.google.common.collect.Cut,com.google.common.collect.Cut)" : [ "checkNotNull", "compareTo", "aboveAll", "belowAll", "toString" ],
  "com.google.common.collect.TreeMultiset$1:getCount()" : [ "getCount", "getElement", "count" ],
  "com.google.common.collect.Multimaps$UnmodifiableListMultimap:delegate()" : [ "delegate" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:removeFirstOccurrence(java.lang.Object)" : [ "delegate" ],
  "com.google.common.io.Files:copy(java.io.File,java.io.OutputStream)" : [ "asByteSource", "copyTo" ],
  "com.google.common.util.concurrent.WrappingExecutorService:invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)" : [ "wrapTasks" ],
  "com.google.common.io.CharSink:writeLines(java.util.stream.Stream)" : [ "writeLines" ],
  "com.google.common.collect.ExplicitOrdering:<init>(com.google.common.collect.ImmutableMap)" : [ "<init>" ],
  "com.google.common.util.concurrent.MoreExecutors:newSequentialExecutor(java.util.concurrent.Executor)" : [ "<init>" ],
  "com.google.common.reflect.ClassPath:getAllClasses()" : [ "from", "filter", "toSet" ],
  "com.google.common.math.PairedStats:fromByteArray(byte[])" : [ "<init>", "checkNotNull", "checkArgument", "readFrom" ],
  "com.google.common.util.concurrent.AbstractListeningExecutorService:newTaskFor(java.util.concurrent.Callable)" : [ "create" ],
  "com.google.common.reflect.TypeResolver$TypeMappingIntrospector:visitParameterizedType(java.lang.reflect.ParameterizedType)" : [ "<init>", "checkState", "map" ],
  "com.google.common.collect.Maps$FilteredKeyMap:createEntrySet()" : [ "filter" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:contains(java.lang.Object)" : [ "containsEntryImpl" ],
  "com.google.common.collect.Multimaps:newListMultimap(java.util.Map,com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:<init>()" : [ "<init>" ],
  "com.google.common.io.Files:readBytes(java.io.File,com.google.common.io.ByteProcessor)" : [ "asByteSource", "read" ],
  "com.google.common.graph.NetworkBuilder:expectedNodeCount(int)" : [ "of", "checkNonNegative" ],
  "com.google.common.collect.Multisets$ImmutableEntry:<init>(java.lang.Object,int)" : [ "checkNonnegative" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:lastEntry()" : [ "delegate" ],
  "com.google.common.collect.Collections2:safeRemove(java.util.Collection,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)" : [ "delegate" ],
  "com.google.common.collect.ForwardingMap:hashCode()" : [ "delegate" ],
  "com.google.common.collect.ForwardingBlockingDeque:put(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableSortedMap:firstEntry()" : [ "entrySet" ],
  "com.google.common.util.concurrent.Futures:allAsList(java.lang.Iterable)" : [ "<init>", "copyOf" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:rangeContains(java.lang.Object)" : [ "compare" ],
  "com.google.common.cache.LocalCache$LocalLoadingCache:<init>(com.google.common.cache.CacheBuilder,com.google.common.cache.CacheLoader)" : [ "<init>", "checkNotNull" ],
  "com.google.common.reflect.Invokable:isFinal()" : [ "getModifiers" ],
  "com.google.common.io.AppendableWriter:append(char)" : [ "checkNotClosed" ],
  "com.google.common.collect.Multisets$AbstractEntry:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.cache.ForwardingCache:asMap()" : [ "delegate" ],
  "com.google.common.base.Throwables:propagate(java.lang.Throwable)" : [ "throwIfUnchecked" ],
  "com.google.common.collect.Sets$PowerSet:<init>(java.util.Set)" : [ "checkArgument", "indexMap" ],
  "com.google.common.collect.Tables$UnmodifiableTable:values()" : [ "values" ],
  "com.google.common.io.ByteSource:read(com.google.common.io.ByteProcessor)" : [ "checkNotNull", "create", "register", "readBytes", "rethrow", "close" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:tailMap(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.primitives.Longs:rotate(long[],int,int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.primitives.UnsignedLong:toString(int)" : [ "toString" ],
  "com.google.common.collect.HashBiMap:writeObject(java.io.ObjectOutputStream)" : [ "writeMap" ],
  "com.google.common.collect.MinMaxPriorityQueue:expectedSize(int)" : [ "expectedSize", "natural" ],
  "com.google.common.collect.LinkedHashMultiset:create()" : [ "<init>" ],
  "com.google.common.net.HostSpecifier:isValid(java.lang.String)" : [ "fromValid" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:comparator()" : [ "natural" ],
  "com.google.common.base.CharMatcher$None:replaceFrom(java.lang.CharSequence,java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedSet:delegate()" : [ "delegate" ],
  "com.google.common.net.HostSpecifier:from(java.lang.String)" : [ "fromValid" ],
  "com.google.common.io.Resources:getResource(java.lang.Class,java.lang.String)" : [ "checkArgument" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:treeSetValues()" : [ "treeSetValues", "natural" ],
  "com.google.common.collect.TableCollectors$ImmutableTableCollectorState:put(java.lang.Object,java.lang.Object,java.lang.Object,java.util.function.BinaryOperator)" : [ "<init>", "put", "get", "merge" ],
  "com.google.common.collect.TreeRangeSet$RangesByUpperBound:containsKey(java.lang.Object)" : [ "get" ],
  "com.google.common.util.concurrent.SequentialExecutor:<init>(java.util.concurrent.Executor)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:putAll(java.util.Map)" : [ "delegate" ],
  "com.google.common.collect.Sets:difference(java.util.Set,java.util.Set)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableSet$Builder:copyIfNecessary()" : [ "copy" ],
  "com.google.common.collect.Platform:newHashSetWithExpectedSize(int)" : [ "newHashSetWithExpectedSize" ],
  "com.google.common.net.InetAddresses:isIsatapAddress(java.net.Inet6Address)" : [ "isTeredoAddress" ],
  "com.google.common.collect.CompactHashSet:size()" : [ "delegateOrNull" ],
  "com.google.common.collect.ForwardingMap:delegate()" : [ "delegate" ],
  "com.google.common.cache.LocalCache$AccessQueue:clear()" : [ "nullifyAccessOrder" ],
  "com.google.common.collect.Sets:newEnumSet(java.lang.Iterable,java.lang.Class)" : [ "addAll" ],
  "com.google.common.math.StatsAccumulator:addAll(java.lang.Iterable)" : [ "add" ],
  "com.google.common.math.LinearTransformation$RegularLinearTransformation:<init>(double,double)" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableBiMap:inverse()" : [ "of" ],
  "com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor:execute(java.lang.Runnable)" : [ "checkState" ],
  "com.google.common.util.concurrent.AtomicLongMap:incrementAndGet(java.lang.Object)" : [ "addAndGet" ],
  "com.google.common.graph.AbstractNetwork$1:edges()" : [ "edges" ],
  "com.google.common.collect.LinkedHashMultimap$ValueSet:clear()" : [ "getSuccessorInValueSet" ],
  "com.google.common.collect.Maps:safeRemove(java.util.Map,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:containsAll(java.util.Collection)" : [ "containsAllImpl" ],
  "com.google.common.collect.Lists:asList(java.lang.Object,java.lang.Object,java.lang.Object[])" : [ "<init>" ],
  "com.google.common.util.concurrent.InterruptibleTask:run()" : [ "restoreInterruptIfIsInterruptedException", "waitForInterrupt", "uncheckedCastNullableTToT" ],
  "com.google.common.collect.MultimapBuilder:treeKeys(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.graph.StandardMutableValueGraph:putEdgeValue(com.google.common.graph.EndpointPair,java.lang.Object)" : [ "putEdgeValue", "nodeU", "nodeV" ],
  "com.google.common.collect.Multimaps$UnmodifiableListMultimap:<init>(com.google.common.collect.ListMultimap)" : [ "<init>" ],
  "com.google.common.collect.FluentIterable:uniqueIndex(com.google.common.base.Function)" : [ "uniqueIndex", "getDelegate" ],
  "com.google.common.primitives.ImmutableLongArray:hashCode()" : [ "hashCode" ],
  "com.google.common.cache.LocalCache:computeIfPresent(java.lang.Object,java.util.function.BiFunction)" : [ "checkNotNull", "compute" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:headSetImpl(java.lang.Object,boolean)" : [ "headSetImpl" ],
  "com.google.common.collect.SingletonImmutableTable:column(java.lang.Object)" : [ "checkNotNull", "of" ],
  "com.google.common.collect.Maps$AsMapView:createKeySet()" : [ "backingSet" ],
  "com.google.common.collect.ImmutableRangeMap$SerializedForm:createRangeMap()" : [ "<init>", "entrySet", "put", "build" ],
  "com.google.common.collect.ImmutableMultimap$Builder:putAll(com.google.common.collect.Multimap)" : [ "putAll" ],
  "com.google.common.reflect.AbstractInvocationHandler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" : [ "equals", "hashCode", "isProxyOfSameInterfaces", "toString" ],
  "com.google.common.util.concurrent.AbstractService:failureCause()" : [ "failureCause" ],
  "com.google.common.collect.Multiset:spliterator()" : [ "spliteratorImpl" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:floorKey(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.util.concurrent.Futures:submit(java.util.concurrent.Callable,java.util.concurrent.Executor)" : [ "create" ],
  "com.google.common.graph.ImmutableGraph:getNodeConnections(com.google.common.graph.Graph)" : [ "builder", "put", "connectionsOf", "buildOrThrow" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:forEachEntry(java.util.function.ObjIntConsumer)" : [ "checkNotNull", "getCount" ],
  "com.google.common.base.Utf8:isWellFormed(byte[])" : [ "isWellFormed" ],
  "com.google.common.collect.ImmutableClassToInstanceMap:builder()" : [ "<init>" ],
  "com.google.common.collect.RegularContiguousSet:range()" : [ "range" ],
  "com.google.common.collect.ImmutableTable:containsValue(java.lang.Object)" : [ "values" ],
  "com.google.common.cache.CacheBuilderSpec$RefreshDurationParser:parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit)" : [ "checkArgument" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:addLast(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableMultiset$EntrySet:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.CompactHashSet:forEach(java.util.function.Consumer)" : [ "checkNotNull", "delegateOrNull", "firstEntryIndex", "getSuccessor", "element" ],
  "com.google.common.reflect.TypeResolver$TypeMappingIntrospector:map(com.google.common.reflect.TypeResolver$TypeVariableKey,java.lang.reflect.Type)" : [ "forLookup", "equalsType" ],
  "com.google.common.reflect.Types:disallowPrimitiveType(java.lang.reflect.Type[],java.lang.String)" : [ "checkArgument" ],
  "com.google.common.primitives.Bytes:toArray(java.util.Collection)" : [ "toByteArray", "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:ceiling(java.lang.Object)" : [ "getSortedSetDelegate" ],
  "com.google.common.collect.Sets$FilteredSet:hashCode()" : [ "hashCodeImpl" ],
  "com.google.common.collect.LinkedHashMultimap:readObject(java.io.ObjectInputStream)" : [ "newHeader", "succeedsInMultimap", "newLinkedHashMapWithExpectedSize", "createCollection" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.base.Ascii:toLowerCase(java.lang.String)" : [ "isUpperCase" ],
  "com.google.common.hash.HashCode:writeBytesTo(byte[],int,int)" : [ "checkPositionIndexes" ],
  "com.google.common.collect.ForwardingSortedSetMultimap:<init>()" : [ "<init>" ],
  "com.google.common.primitives.Shorts:toArray(java.util.Collection)" : [ "toShortArray", "checkNotNull" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:comparator()" : [ "delegate" ],
  "com.google.common.reflect.Parameter:getAnnotation(java.lang.Class)" : [ "checkNotNull", "iterator" ],
  "com.google.common.collect.Iterators:forEnumeration(java.util.Enumeration)" : [ "checkNotNull" ],
  "com.google.common.collect.CompactLinkedHashSet:allocArrays()" : [ "allocArrays" ],
  "com.google.common.base.Throwables:throwIfInstanceOf(java.lang.Throwable,java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.Futures$FutureCombiner:callAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor)" : [ "<init>" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:lowerCase()" : [ "lowerCase", "newInstance" ],
  "com.google.common.net.InternetDomainName:topDomainUnderRegistrySuffix()" : [ "isTopDomainUnderRegistrySuffix", "checkState", "isUnderRegistrySuffix", "ancestor", "registrySuffixIndex" ],
  "com.google.common.collect.Lists$ReverseList:remove(int)" : [ "reverseIndex" ],
  "com.google.common.io.ByteStreams:skipUpTo(java.io.InputStream,long)" : [ "skipSafely" ],
  "com.google.common.collect.AbstractMultimap:containsEntry(java.lang.Object,java.lang.Object)" : [ "asMap" ],
  "com.google.common.base.CharMatcher$Negated:countIn(java.lang.CharSequence)" : [ "countIn" ],
  "com.google.common.primitives.Bytes:rotate(byte[],int)" : [ "rotate" ],
  "com.google.common.primitives.ImmutableIntArray:contains(int)" : [ "indexOf" ],
  "com.google.common.collect.EnumHashBiMap:writeObject(java.io.ObjectOutputStream)" : [ "writeMap" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:size()" : [ "delegate" ],
  "com.google.common.collect.Sets$UnmodifiableNavigableSet:tailSet(java.lang.Object,boolean)" : [ "unmodifiableNavigableSet" ],
  "com.google.common.collect.ContiguousSet:headSet(java.lang.Object)" : [ "headSet" ],
  "com.google.common.collect.ImmutableMultimap$Builder:put(java.lang.Object,java.lang.Object)" : [ "checkEntryNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "of" ],
  "com.google.common.graph.StandardNetwork:<init>(com.google.common.graph.NetworkBuilder,java.util.Map,java.util.Map)" : [ "<init>", "cast" ],
  "com.google.common.collect.MapMakerInternalMap$KeySet:size()" : [ "size" ],
  "com.google.common.collect.ImmutableEnumMap:<init>(java.util.EnumMap)" : [ "checkArgument" ],
  "com.google.common.hash.AbstractHashFunction:hashInt(int)" : [ "newHasher" ],
  "com.google.common.collect.ImmutableMultiset:createEntrySet()" : [ "of" ],
  "com.google.common.io.CharStreams:exhaust(java.lang.Readable)" : [ "createBuffer", "clear" ],
  "com.google.common.util.concurrent.RateLimiter:tryAcquire(int,long,java.util.concurrent.TimeUnit)" : [ "checkPermits", "mutex", "canAcquire", "reserveAndGetWaitLength" ],
  "com.google.common.collect.MapMakerInternalMap:hash(java.lang.Object)" : [ "hash", "rehash" ],
  "com.google.common.util.concurrent.MoreExecutors:listeningDecorator(java.util.concurrent.ScheduledExecutorService)" : [ "<init>" ],
  "com.google.common.primitives.ImmutableLongArray:writeReplace()" : [ "trimmed" ],
  "com.google.common.collect.Range:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.graph.MapRetrievalCache:get(java.lang.Object)" : [ "checkNotNull", "getIfCached", "addToCache" ],
  "com.google.common.util.concurrent.AbstractFuture:cancel(boolean)" : [ "<init>", "complete" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.Maps$TransformedEntriesSortedMap:comparator()" : [ "fromMap" ],
  "com.google.common.collect.JdkBackedImmutableBiMap:createEntrySet()" : [ "<init>" ],
  "com.google.common.collect.Ordering:min(java.lang.Iterable)" : [ "min" ],
  "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:descendingEntryIterator()" : [ "hasUpperBound", "upperEndpoint", "aboveAll", "upperBoundType", "peekingIterator", "contains", "belowAll", "emptyIterator", "firstNonNull" ],
  "com.google.common.collect.MapMakerInternalMap:replace(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "replace", "checkNotNull", "hash", "segmentFor" ],
  "com.google.common.collect.ImmutableMultimap$Keys:contains(java.lang.Object)" : [ "containsKey" ],
  "com.google.common.base.Functions$SupplierFunction:<init>(com.google.common.base.Supplier)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps:removeEntryImpl(java.util.Collection,java.lang.Object)" : [ "unmodifiableEntry" ],
  "com.google.common.util.concurrent.MoreExecutors:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit)" : [ "getExitingScheduledExecutorService" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:checkAcquiredLock(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)" : [ "<init>", "checkState", "getLockName", "getConflictingStackTrace", "newIdentityHashSet", "findPathTo" ],
  "com.google.common.math.PairedStats:toString()" : [ "toString", "count", "toStringHelper", "add", "populationCovariance" ],
  "com.google.common.hash.Crc32cHashFunction$Crc32cHasher:<init>()" : [ "<init>" ],
  "com.google.common.collect.ImmutableSet:<init>()" : [ "<init>" ],
  "com.google.common.collect.ImmutableSortedMap:tailMap(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.net.InetAddresses:coerceToInteger(java.net.InetAddress)" : [ "newDataInput", "getCoercedIPv4Address" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:<init>(java.util.Collection,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.CollectCollectors:toImmutableSortedSet(java.util.Comparator)" : [ "checkNotNull", "add", "build", "combine" ],
  "com.google.common.collect.HashBasedTable:<init>(java.util.Map,com.google.common.collect.HashBasedTable$Factory)" : [ "<init>" ],
  "com.google.common.collect.SingletonImmutableSet:<init>(java.lang.Object)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:sortedMap()" : [ "sortedMap" ],
  "com.google.common.primitives.Doubles$DoubleArrayAsList:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:getLiveEntry(java.lang.Object,int)" : [ "getEntry" ],
  "com.google.common.cache.CacheBuilder:getWeigher()" : [ "firstNonNull" ],
  "com.google.common.reflect.Invokable:isSynchronized()" : [ "getModifiers" ],
  "com.google.common.collect.DiscreteDomain:<init>()" : [ "<init>" ],
  "com.google.common.collect.ForwardingCollection:isEmpty()" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue:calculateNewCapacity()" : [ "checkedMultiply", "capAtMaximumSize" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:toString()" : [ "toString" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:containsAll(java.util.Collection)" : [ "delegate" ],
  "com.google.common.graph.ImmutableNetwork:adjacentNodes(java.lang.Object)" : [ "adjacentNodes" ],
  "com.google.common.collect.LinkedHashMultimap:<init>(int,int)" : [ "newLinkedHashMapWithExpectedSize", "checkNonnegative", "newHeader", "succeedsInMultimap" ],
  "com.google.common.collect.ForwardingDeque:push(java.lang.Object)" : [ "delegate" ],
  "com.google.common.eventbus.Subscriber:<init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method)" : [ "checkNotNull", "executor" ],
  "com.google.common.collect.MapMakerInternalMap$SerializationProxy:<init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap)" : [ "<init>" ],
  "com.google.common.collect.HashMultiset:count(java.lang.Object)" : [ "count" ],
  "com.google.common.collect.Multisets$MultisetIteratorImpl:next()" : [ "hasNext" ],
  "com.google.common.collect.Lists:transform(java.util.List,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSet:copyOf(java.lang.Object[])" : [ "of" ],
  "com.google.common.util.concurrent.AtomicDoubleArray:getAndAccumulate(int,double,java.util.function.DoubleBinaryOperator)" : [ "checkNotNull", "getAndUpdate" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:<init>()" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableSortedSet:last()" : [ "size" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:hashCode()" : [ "refreshIfEmpty" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:firstEntry()" : [ "delegate" ],
  "com.google.common.collect.Sets:synchronizedNavigableSet(java.util.NavigableSet)" : [ "navigableSet" ],
  "com.google.common.collect.FluentIterable:size()" : [ "size", "getDelegate" ],
  "com.google.common.io.LittleEndianDataOutputStream:writeChars(java.lang.String)" : [ "writeChar" ],
  "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:build()" : [ "<init>", "of" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:lowerKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:tailMap(java.lang.Object,boolean)" : [ "transformEntries", "fromMap" ],
  "com.google.common.graph.AbstractValueGraph:edges()" : [ "edges" ],
  "com.google.common.collect.ImmutableMap$SerializedForm:legacyReadResolve()" : [ "makeBuilder", "put", "buildOrThrow" ],
  "com.google.common.collect.LinkedHashMultimap:writeObject(java.io.ObjectOutputStream)" : [ "keySet", "entries" ],
  "com.google.common.collect.Maps$SortedKeySet:<init>(java.util.SortedMap)" : [ "<init>" ],
  "com.google.common.util.concurrent.ThreadFactoryBuilder:setThreadFactory(java.util.concurrent.ThreadFactory)" : [ "checkNotNull" ],
  "com.google.common.collect.Iterators:all(java.util.Iterator,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.io.MoreFiles$PathByteSource:asCharSource(java.nio.charset.Charset)" : [ "asCharSource" ],
  "com.google.common.util.concurrent.Monitor:leave()" : [ "signalNextWaiter" ],
  "com.google.common.collect.ForwardingNavigableMap:standardHeadMap(java.lang.Object)" : [ "headMap" ],
  "com.google.common.io.CharSource$CharSequenceCharSource:toString()" : [ "truncate" ],
  "com.google.common.collect.ImmutableListMultimap:builder()" : [ "<init>" ],
  "com.google.common.collect.ImmutableRangeSet:span()" : [ "create" ],
  "com.google.common.collect.Multimaps$TransformedEntriesListMultimap:get(java.lang.Object)" : [ "transform" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:takeLast()" : [ "delegate" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:pollLast()" : [ "removeFirstMatching", "unfiltered" ],
  "com.google.common.escape.ArrayBasedEscaperMap:createReplacementArray(java.util.Map)" : [ "checkNotNull" ],
  "com.google.common.reflect.TypeToken:where(com.google.common.reflect.TypeParameter,java.lang.Class)" : [ "where", "of" ],
  "com.google.common.primitives.Chars:sortDescending(char[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.io.Resources$1:<init>()" : [ "newArrayList" ],
  "com.google.common.collect.Multisets$UnmodifiableMultiset:iterator()" : [ "unmodifiableIterator" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:edgeValue(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.AbstractValueGraph$1:incidentEdgeOrder()" : [ "incidentEdgeOrder" ],
  "com.google.common.collect.Maps:filterKeys(com.google.common.collect.BiMap,com.google.common.base.Predicate)" : [ "checkNotNull", "filterEntries", "keyPredicateOnEntries" ],
  "com.google.common.primitives.Shorts:lastIndexOf(short[],short)" : [ "lastIndexOf" ],
  "com.google.common.cache.CacheBuilder:ticker(com.google.common.base.Ticker)" : [ "checkState", "checkNotNull" ],
  "com.google.common.cache.LocalCache:removeIf(java.util.function.BiPredicate)" : [ "checkNotNull", "keySet", "get", "remove" ],
  "com.google.common.collect.TreeBasedTable:createColumnKeyIterator()" : [ "columnComparator", "mergeSorted", "transform" ],
  "com.google.common.graph.GraphBuilder:expectedNodeCount(int)" : [ "of", "checkNonNegative" ],
  "com.google.common.escape.ArrayBasedCharEscaper:<init>(java.util.Map,char,char)" : [ "<init>", "create" ],
  "com.google.common.collect.ImmutableSortedMap$1EntrySet:forEach(java.util.function.Consumer)" : [ "forEach" ],
  "com.google.common.hash.Funnels:sequentialFunnel(com.google.common.hash.Funnel)" : [ "<init>" ],
  "com.google.common.primitives.Floats:rotate(float[],int)" : [ "rotate" ],
  "com.google.common.collect.Lists$TransformingSequentialList:<init>(java.util.List,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.io.BaseEncoding$Base64Encoding:decodeTo(byte[],java.lang.CharSequence)" : [ "<init>", "checkNotNull", "isValidPaddingStartPosition", "decode" ],
  "com.google.common.collect.EmptyContiguousSet:tailSetImpl(java.lang.Object,boolean)" : [ "tailSetImpl" ],
  "com.google.common.collect.CompactHashSet:<init>()" : [ "init" ],
  "com.google.common.cache.LocalCache$Segment:getLiveValue(com.google.common.cache.ReferenceEntry,long)" : [ "tryDrainReferenceQueues", "isExpired", "tryExpireEntries" ],
  "com.google.common.collect.Synchronized$SynchronizedQueue:element()" : [ "delegate" ],
  "com.google.common.collect.ForwardingBlockingDeque:take()" : [ "delegate" ],
  "com.google.common.cache.RemovalListeners:asynchronous(com.google.common.cache.RemovalListener,java.util.concurrent.Executor)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.Callables:asAsyncCallable(java.util.concurrent.Callable,com.google.common.util.concurrent.ListeningExecutorService)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingMapEntry:equals(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableSortedMap$SerializedForm:<init>(com.google.common.collect.ImmutableSortedMap)" : [ "<init>", "comparator" ],
  "com.google.common.base.CaseFormat:firstCharOnlyToUpper(java.lang.String)" : [ "toUpperCase", "toLowerCase" ],
  "com.google.common.collect.ExplicitOrdering:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.cache.ForwardingCache:putAll(java.util.Map)" : [ "delegate" ],
  "com.google.common.primitives.ImmutableDoubleArray:lastIndexOf(double)" : [ "areEqual" ],
  "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:hash()" : [ "checkNotDone", "fromBytesNoCopy" ],
  "com.google.common.collect.CompactHashMap:key(int)" : [ "requireKeys" ],
  "com.google.common.reflect.TypeToken:getGenericSuperclass()" : [ "boundAsSuperclass", "getRawType", "resolveSupertype" ],
  "com.google.common.primitives.Longs:lastIndexOf(long[],long)" : [ "lastIndexOf" ],
  "com.google.common.math.IntMath:log2(int,java.math.RoundingMode)" : [ "checkPositive", "checkRoundingUnnecessary", "isPowerOfTwo", "lessThanBranchFree" ],
  "com.google.common.cache.LocalCache$Segment:getLiveEntry(java.lang.Object,int,long)" : [ "getEntry", "isExpired", "tryExpireEntries" ],
  "com.google.common.base.Converter:unsafeDoBackward(java.lang.Object)" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.collect.RegularImmutableBiMap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.primitives.UnsignedLongs:toString(long)" : [ "toString" ],
  "com.google.common.collect.StandardTable$ColumnMap:containsKey(java.lang.Object)" : [ "containsColumn" ],
  "com.google.common.collect.GeneralRange:isEmpty()" : [ "hasUpperBound", "tooLow", "uncheckedCastNullableTToT", "getUpperEndpoint", "hasLowerBound", "tooHigh", "getLowerEndpoint" ],
  "com.google.common.collect.ImmutableSortedMultiset:copyOf(java.util.Iterator)" : [ "copyOf", "natural" ],
  "com.google.common.eventbus.EventBus:<init>(com.google.common.eventbus.SubscriberExceptionHandler)" : [ "<init>", "directExecutor", "perThreadDispatchQueue" ],
  "com.google.common.collect.ImmutableSortedMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)" : [ "checkArgument", "comparator" ],
  "com.google.common.collect.Range:hasUpperBound()" : [ "aboveAll" ],
  "com.google.common.collect.TopKSelector:<init>(java.util.Comparator,int)" : [ "checkNotNull", "checkArgument", "checkedMultiply" ],
  "com.google.common.collect.ImmutableSet:builder()" : [ "<init>" ],
  "com.google.common.collect.RegularImmutableSortedSet:<init>(com.google.common.collect.ImmutableList,java.util.Comparator)" : [ "<init>" ],
  "com.google.common.collect.ImmutableMultiset$SerializedForm:readResolve()" : [ "create", "add", "copyOf" ],
  "com.google.common.collect.CompactHashSet:clear()" : [ "needsAllocArrays", "incrementModCount", "delegateOrNull", "constrainToRange", "size", "requireElements", "tableClear", "requireTable", "requireEntries" ],
  "com.google.common.collect.ImmutableSortedMultiset:copyOfSortedEntries(java.util.Comparator,java.util.Collection)" : [ "<init>", "emptyMultiset", "add", "build" ],
  "com.google.common.reflect.TypeToken$2:getGenericExceptionTypes()" : [ "getGenericExceptionTypes", "resolveTypesInPlace" ],
  "com.google.common.collect.Multisets:filter(com.google.common.collect.Multiset,com.google.common.base.Predicate)" : [ "<init>", "and" ],
  "com.google.common.collect.ImmutableSortedMultiset$Builder:build()" : [ "copyOfSorted" ],
  "com.google.common.collect.RegularContiguousSet:containsAll(java.util.Collection)" : [ "containsAllImpl" ],
  "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:copyIntoArray(java.lang.Object[],int)" : [ "copyIntoArray" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.cache.CacheBuilderSpec:equals(java.lang.Object)" : [ "durationInNanos", "equal" ],
  "com.google.common.collect.ImmutableSortedMultiset:emptyMultiset(java.util.Comparator)" : [ "<init>", "natural" ],
  "com.google.common.base.Preconditions:checkElementIndex(int,int)" : [ "checkElementIndex" ],
  "com.google.common.io.BaseEncoding$Alphabet:decode(char)" : [ "<init>" ],
  "com.google.common.collect.Multimaps:filterEntries(com.google.common.collect.Multimap,com.google.common.base.Predicate)" : [ "<init>", "filterEntries", "checkNotNull", "filterFiltered" ],
  "com.google.common.collect.Maps$NavigableAsMapView:get(java.lang.Object)" : [ "getOrDefault" ],
  "com.google.common.collect.AbstractMapBasedMultimap:createKeys()" : [ "<init>" ],
  "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:update(byte)" : [ "checkNotDone" ],
  "com.google.common.base.Enums$StringConverter:<init>(java.lang.Class)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.HashBiMap:containsKey(java.lang.Object)" : [ "seekByKey", "smearedHash" ],
  "com.google.common.graph.UndirectedNetworkConnections:ofImmutable(java.util.Map)" : [ "<init>", "copyOf" ],
  "com.google.common.collect.ImmutableSetMultimap:<init>(com.google.common.collect.ImmutableMap,int,java.util.Comparator)" : [ "<init>", "emptySet" ],
  "com.google.common.base.CharMatcher$JavaUpperCase:negate()" : [ "negate" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:span()" : [ "getUpperBound", "compareTo", "create" ],
  "com.google.common.collect.ForwardingMap:standardToString()" : [ "toStringImpl" ],
  "com.google.common.collect.TreeMultiset:add(java.lang.Object,int)" : [ "<init>", "add", "checkNonnegative", "count", "checkArgument", "contains", "get", "comparator", "successor", "checkAndSet" ],
  "com.google.common.collect.Range:readResolve()" : [ "equals", "all" ],
  "com.google.common.collect.SingletonImmutableTable:<init>(com.google.common.collect.Table$Cell)" : [ "<init>" ],
  "com.google.common.cache.LocalCache$Segment:clearReferenceQueues()" : [ "usesKeyReferences", "clearKeyReferenceQueue", "usesValueReferences", "clearValueReferenceQueue" ],
  "com.google.common.collect.MapMakerInternalMap$HashIterator:remove()" : [ "remove", "checkRemove" ],
  "com.google.common.io.MultiInputStream:read(byte[],int,int)" : [ "checkNotNull", "advance" ],
  "com.google.common.collect.ForwardingList:indexOf(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:subSet(java.lang.Object,java.lang.Object)" : [ "subSet" ],
  "com.google.common.collect.TreeRangeSet:encloses(com.google.common.collect.Range)" : [ "encloses", "checkNotNull" ],
  "com.google.common.collect.HashMultiset:setCount(java.lang.Object,int)" : [ "setCount" ],
  "com.google.common.collect.ImmutableSortedMap:ceilingEntry(java.lang.Object)" : [ "tailMap", "firstEntry" ],
  "com.google.common.base.CharMatcher:precomputedPositive(int,java.util.BitSet,java.lang.String)" : [ "none", "is", "isEither", "isSmall", "from" ],
  "com.google.common.collect.RegularContiguousSet:intersection(com.google.common.collect.ContiguousSet)" : [ "<init>", "checkNotNull", "checkArgument", "natural", "max", "first", "min", "last", "create" ],
  "com.google.common.util.concurrent.AbstractService:stopAsync()" : [ "<init>", "enterIf", "state", "enqueueTerminatedEvent", "enqueueStoppingEvent", "doCancelStart", "restoreInterruptIfIsInterruptedException", "notifyFailed", "leave", "dispatchListenerEvents" ],
  "com.google.common.graph.ImmutableValueGraph:nodeOrder()" : [ "nodeOrder" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:lastEntry()" : [ "delegate" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,int,char)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedList:listIterator()" : [ "delegate" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:contains(java.lang.Object)" : [ "contains" ],
  "com.google.common.base.Converter:unsafeDoForward(java.lang.Object)" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.hash.BloomFilter$SerialForm:readResolve()" : [ "<init>" ],
  "com.google.common.collect.LinkedListMultimap:create(int)" : [ "<init>" ],
  "com.google.common.util.concurrent.AbstractTransformFuture:create(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)" : [ "<init>", "rejectionPropagatingExecutor", "checkNotNull" ],
  "com.google.common.io.Closeables:closeQuietly(java.io.InputStream)" : [ "close" ],
  "com.google.common.collect.LinkedListMultimap$NodeIterator:setValue(java.lang.Object)" : [ "checkState" ],
  "com.google.common.collect.DescendingMultiset:elementSet()" : [ "<init>" ],
  "com.google.common.graph.AbstractValueGraph$1:inDegree(java.lang.Object)" : [ "inDegree" ],
  "com.google.common.cache.LocalCache$Segment:get(java.lang.Object,int,com.google.common.cache.CacheLoader)" : [ "<init>", "checkNotNull", "getEntry", "getLiveValue", "recordRead", "scheduleRefresh", "waitForLoadingValue", "lockedGetOrLoad", "postReadCleanup" ],
  "com.google.common.collect.HashBasedTable:values()" : [ "values" ],
  "com.google.common.collect.CollectCollectors$EnumSetAccumulator:toImmutableSet()" : [ "of", "asImmutable" ],
  "com.google.common.io.MultiInputStream:read()" : [ "advance" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:pollFirstEntry()" : [ "transformEntry", "fromMap" ],
  "com.google.common.collect.RegularImmutableBiMap:<init>(com.google.common.collect.ImmutableMapEntry[],com.google.common.collect.ImmutableMapEntry[],java.util.Map$Entry[],int,int)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:entrySet()" : [ "set", "delegate" ],
  "com.google.common.collect.AbstractTable:get(java.lang.Object,java.lang.Object)" : [ "safeGet" ],
  "com.google.common.reflect.Types$JavaVersion:usedInGenericType(java.lang.reflect.Type[])" : [ "builder", "add", "build" ],
  "com.google.common.graph.ImmutableNetwork:connectionsOf(com.google.common.graph.Network,java.lang.Object)" : [ "asMap", "sourceNodeFn", "targetNodeFn", "ofImmutable", "adjacentNodeFn" ],
  "com.google.common.io.BaseEncoding$Alphabet:lowerCase()" : [ "<init>", "hasUpperCase", "checkState", "hasLowerCase", "toLowerCase", "ignoreCase" ],
  "com.google.common.collect.Tables$TransposeTable:putAll(com.google.common.collect.Table)" : [ "transpose" ],
  "com.google.common.collect.ForwardingNavigableSet:standardCeiling(java.lang.Object)" : [ "getNext", "tailSet" ],
  "com.google.common.collect.LinkedHashMultimap$ValueSet:contains(java.lang.Object)" : [ "smearedHash", "mask", "matchesValue" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addValue(char)" : [ "addUnconditionalHolder" ],
  "com.google.common.hash.AbstractCompositeHashFunction:newHasher(int)" : [ "checkArgument", "fromHashers" ],
  "com.google.common.util.concurrent.MoreExecutors:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)" : [ "getExitingExecutorService" ],
  "com.google.common.util.concurrent.AtomicLongMap:addAndGet(java.lang.Object,long)" : [ "accumulateAndGet" ],
  "com.google.common.collect.Sets$UnmodifiableNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "unmodifiableNavigableSet" ],
  "com.google.common.collect.TreeRangeMap$AsMapOfRanges:containsKey(java.lang.Object)" : [ "get" ],
  "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:createAsList()" : [ "<init>" ],
  "com.google.common.collect.Lists:newArrayList(java.util.Iterator)" : [ "newArrayList", "addAll" ],
  "com.google.common.io.CharStreams$NullWriter:write(java.lang.String)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:addListener(java.lang.Runnable,java.util.concurrent.Executor)" : [ "addListener" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSet:subRangeSet(com.google.common.collect.Range)" : [ "encloses", "isConnected", "intersection", "of" ],
  "com.google.common.collect.DenseImmutableTable:<init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet)" : [ "<init>", "indexMap" ],
  "com.google.common.math.Stats:toString()" : [ "toString", "count", "toStringHelper", "add", "populationStandardDeviation" ],
  "com.google.common.graph.AbstractNetwork:toString()" : [ "edgeIncidentNodesMap" ],
  "com.google.common.base.Predicates$ContainsPatternPredicate:toString()" : [ "toString", "toStringHelper", "add" ],
  "com.google.common.collect.FluentIterable:first()" : [ "getDelegate", "of", "absent" ],
  "com.google.common.io.CharSink:write(java.lang.CharSequence)" : [ "checkNotNull", "rethrow", "create", "close", "register" ],
  "com.google.common.reflect.ClassPath$LocationInfo:scanResources(java.util.Set)" : [ "builder", "scan", "build" ],
  "com.google.common.collect.ForwardingSortedSet:headSet(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.DiscreteDomain$IntegerDomain:offset(java.lang.Integer,long)" : [ "checkNonnegative", "checkedCast" ],
  "com.google.common.cache.LocalCache$EntryFactory$8:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.collect.CompactLinkedHashSet:create(java.util.Collection)" : [ "createWithExpectedSize" ],
  "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:isDone()" : [ "isDone" ],
  "com.google.common.primitives.Doubles$DoubleArrayAsList:subList(int,int)" : [ "<init>", "size", "checkPositionIndexes" ],
  "com.google.common.collect.ImmutableRangeSet$Builder:addAll(java.lang.Iterable)" : [ "add" ],
  "com.google.common.util.concurrent.Striped$LargeLazyStriped:getAt(int)" : [ "checkElementIndex", "size", "firstNonNull" ],
  "com.google.common.collect.RegularImmutableSortedMultiset:getEntry(int)" : [ "immutableEntry", "getCount" ],
  "com.google.common.collect.AbstractMapBasedMultimap:valueSpliterator()" : [ "flatMap", "size" ],
  "com.google.common.collect.Iterators:filter(java.util.Iterator,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AtomicDouble:toString()" : [ "get" ],
  "com.google.common.collect.Sets$FilteredSortedSet:tailSet(java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.TreeMultimap:create(java.util.Comparator,java.util.Comparator)" : [ "<init>", "checkNotNull" ],
  "com.google.common.net.HostAndPort:fromHost(java.lang.String)" : [ "fromString", "checkArgument", "hasPort" ],
  "com.google.common.util.concurrent.AbstractService:toString()" : [ "state" ],
  "com.google.common.graph.ImmutableGraph:copyOf(com.google.common.graph.Graph)" : [ "<init>", "from", "getNodeConnections" ],
  "com.google.common.primitives.Chars:sortDescending(char[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.collect.Maps$FilteredMapValues:toArray(java.lang.Object[])" : [ "newArrayList" ],
  "com.google.common.primitives.Ints:indexOf(int[],int)" : [ "indexOf" ],
  "com.google.common.collect.ForwardingNavigableMap:lastEntry()" : [ "delegate" ],
  "com.google.common.primitives.ImmutableLongArray:readResolve()" : [ "isEmpty" ],
  "com.google.common.graph.ImmutableGraph:successors(java.lang.Object)" : [ "successors" ],
  "com.google.common.collect.MinMaxPriorityQueue$Builder:expectedSize(int)" : [ "checkArgument" ],
  "com.google.common.base.Equivalence:onResultOf(com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.collect.AbstractMultimap:valueIterator()" : [ "valueIterator", "entries" ],
  "com.google.common.cache.CacheStats:hitRate()" : [ "requestCount" ],
  "com.google.common.math.LongMath:saturatedPow(long,int)" : [ "checkNonNegative", "saturatedMultiply" ],
  "com.google.common.collect.FilteredEntryMultimap:createValues()" : [ "<init>" ],
  "com.google.common.cache.LocalCache$Segment:newEntry(java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.RateLimiter:create(double,long,java.util.concurrent.TimeUnit,double,com.google.common.util.concurrent.RateLimiter$SleepingStopwatch)" : [ "<init>" ],
  "com.google.common.graph.MapIteratorCache:clear()" : [ "clearCache" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:descendingSet()" : [ "wrap", "getSortedSetDelegate" ],
  "com.google.common.collect.Lists$Partition:size()" : [ "divide" ],
  "com.google.common.collect.MultimapBuilder:linkedHashKeys(int)" : [ "checkNonnegative" ],
  "com.google.common.hash.MessageDigestHashFunction:newHasher()" : [ "getMessageDigest" ],
  "com.google.common.escape.ArrayBasedUnicodeEscaper:<init>(java.util.Map,int,int,java.lang.String)" : [ "<init>", "create" ],
  "com.google.common.reflect.TypeToken$1:getGenericReturnType()" : [ "getGenericReturnType", "resolveType" ],
  "com.google.common.graph.ImmutableGraph:predecessors(java.lang.Object)" : [ "predecessors" ],
  "com.google.common.collect.ImmutableList:sortedCopyOf(java.util.Comparator,java.lang.Iterable)" : [ "checkNotNull", "toArray", "asImmutableList" ],
  "com.google.common.collect.Lists:newArrayListWithCapacity(int)" : [ "checkNonnegative" ],
  "com.google.common.collect.AbstractTable$Values:spliterator()" : [ "valuesSpliterator" ],
  "com.google.common.collect.Streams:findLast(java.util.stream.DoubleStream)" : [ "findLast" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:size()" : [ "size", "entryIterator" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:ofImmutable(java.util.Map,java.util.Map,int)" : [ "<init>", "copyOf" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:computeIfPresent(java.lang.Object,java.util.function.BiFunction)" : [ "delegate" ],
  "com.google.common.base.Enums:getEnumConstants(java.lang.Class)" : [ "populateCache" ],
  "com.google.common.hash.Hashing:consistentHash(com.google.common.hash.HashCode,int)" : [ "consistentHash" ],
  "com.google.common.collect.Maps:newEnumMap(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.collect.CollectCollectors:toImmutableEnumMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" : [ "checkNotNull", "toImmutableMap", "combine" ],
  "com.google.common.util.concurrent.AtomicDouble:writeObject(java.io.ObjectOutputStream)" : [ "get" ],
  "com.google.common.collect.ReverseOrdering:<init>(com.google.common.collect.Ordering)" : [ "<init>", "checkNotNull" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,long)" : [ "<init>" ],
  "com.google.common.collect.ArrayTable:toString()" : [ "toString" ],
  "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter:<init>(java.util.concurrent.Future,java.util.concurrent.Executor)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:pollFirst()" : [ "removeFirstMatching", "unfiltered" ],
  "com.google.common.collect.ComparisonChain$1:compare(long,long)" : [ "compare" ],
  "com.google.common.collect.LinkedHashMultiset:<init>(int)" : [ "<init>", "newLinkedHashMapWithExpectedSize" ],
  "com.google.common.primitives.Longs$LongArrayAsList:hashCode()" : [ "hashCode" ],
  "com.google.common.collect.Multimaps:newMultimap(java.util.Map,com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.collect.TreeMultiset$1:getElement()" : [ "getElement" ],
  "com.google.common.collect.TreeRangeSet:remove(com.google.common.collect.Range)" : [ "checkNotNull", "isEmpty", "compareTo", "hasUpperBound", "replaceRangeWithSameLowerBound", "create" ],
  "com.google.common.primitives.UnsignedInteger:toString()" : [ "toString" ],
  "com.google.common.collect.ImmutableSortedMap:lastKey()" : [ "keySet", "last" ],
  "com.google.common.collect.ForwardingSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "replaceValues", "delegate" ],
  "com.google.common.primitives.UnsignedInts:parseUnsignedInt(java.lang.String,int)" : [ "checkNotNull" ],
  "com.google.common.graph.StandardMutableValueGraph:addNode(java.lang.Object)" : [ "checkNotNull", "addNodeInternal" ],
  "com.google.common.cache.LocalCache$Segment:recordWrite(com.google.common.cache.ReferenceEntry,int,long)" : [ "drainRecencyQueue", "recordsAccess", "recordsWrite" ],
  "com.google.common.primitives.ImmutableLongArray$Builder:ensureRoomFor(int)" : [ "expandedCapacity" ],
  "com.google.common.collect.ImmutableSet$Builder:<init>(int)" : [ "<init>", "instance" ],
  "com.google.common.collect.ForwardingMap:standardEquals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.StandardTable$Column:removeFromColumnIf(com.google.common.base.Predicate)" : [ "immutableEntry" ],
  "com.google.common.collect.Maps$FilteredMapValues:toArray()" : [ "newArrayList" ],
  "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:readMapMaker(java.io.ObjectInputStream)" : [ "<init>", "initialCapacity", "setKeyStrength", "setValueStrength", "keyEquivalence", "concurrencyLevel" ],
  "com.google.common.collect.CompactHashSet:iterator()" : [ "delegateOrNull" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:addOutEdge(java.lang.Object,java.lang.Object)" : [ "addOutEdge", "getReference", "checkState" ],
  "com.google.common.primitives.ImmutableIntArray:copyOf(java.lang.Iterable)" : [ "copyOf", "builder", "addAll", "build" ],
  "com.google.common.collect.Maps$TransformedEntriesMap:entryIterator()" : [ "transform", "asEntryToEntryFunction" ],
  "com.google.common.base.Functions:forMap(java.util.Map)" : [ "<init>" ],
  "com.google.common.collect.Iterables:limit(java.lang.Iterable,int)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.Sets$FilteredSortedSet:subSet(java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ReverseNaturalOrdering:compare(java.lang.Comparable,java.lang.Comparable)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingNavigableMap:standardFloorEntry(java.lang.Object)" : [ "headMap" ],
  "com.google.common.math.LinearTransformation$RegularLinearTransformation:inverse()" : [ "createInverse" ],
  "com.google.common.io.BaseEncoding$Base64Encoding:newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)" : [ "<init>" ],
  "com.google.common.base.CaseFormat$3:normalizeFirstWord(java.lang.String)" : [ "toLowerCase" ],
  "com.google.common.graph.ImmutableNetwork:copyOf(com.google.common.graph.Network)" : [ "<init>" ],
  "com.google.common.collect.Lists$CharSequenceAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:tryCrossOverAndBubbleUp(int,int,java.lang.Object)" : [ "<init>", "crossOver", "elementData", "getParentIndex", "bubbleUpAlternatingLevels" ],
  "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:<init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList)" : [ "<init>" ],
  "com.google.common.collect.Iterators:unmodifiableIterator(java.util.Iterator)" : [ "checkNotNull" ],
  "com.google.common.collect.GeneralRange:hashCode()" : [ "getLowerEndpoint", "getLowerBoundType", "getUpperEndpoint", "getUpperBoundType" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:containsKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.HashBiMap:seekByKey(java.lang.Object,int)" : [ "equal" ],
  "com.google.common.util.concurrent.ServiceManager:<init>(java.lang.Iterable)" : [ "<init>", "copyOf", "of", "directExecutor", "checkArgument", "markReady", "iterator" ],
  "com.google.common.collect.TreeRangeMap$1:remove(com.google.common.collect.Range)" : [ "checkNotNull" ],
  "com.google.common.primitives.Shorts:sortDescending(short[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.collect.ArrayTable$Column:setValue(int,java.lang.Object)" : [ "set" ],
  "com.google.common.eventbus.SubscriberRegistry:flattenHierarchy(java.lang.Class)" : [ "propagate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:pollLastEntry()" : [ "pollAsMapEntry", "descendingMap" ],
  "com.google.common.collect.Synchronized$SynchronizedList:add(int,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.NaturalOrdering:nullsFirst()" : [ "nullsFirst" ],
  "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder:build(com.google.common.collect.Multimap)" : [ "build" ],
  "com.google.common.base.CharMatcher$JavaLetter:negate()" : [ "negate" ],
  "com.google.common.base.Absent:or(com.google.common.base.Optional)" : [ "checkNotNull" ],
  "com.google.common.collect.LinkedListMultimap$NodeIterator:hasNext()" : [ "checkForConcurrentModification" ],
  "com.google.common.primitives.UnsignedLong:toString()" : [ "toString" ],
  "com.google.common.collect.ImmutableMapValues:forEach(java.util.function.Consumer)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedList:lastIndexOf(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.AbstractNavigableMap:ceilingKey(java.lang.Object)" : [ "keyOrNull", "ceilingEntry" ],
  "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:get()" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.StandardTable$ColumnKeySet:retainAll(java.util.Collection)" : [ "checkNotNull" ],
  "com.google.common.math.Stats:writeTo(java.nio.ByteBuffer)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.StandardTable:cellSpliterator()" : [ "flatMap", "size" ],
  "com.google.common.collect.Tables$UnmodifiableTable:<init>(com.google.common.collect.Table)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.SortedMultisets$ElementSet:tailSet(java.lang.Object)" : [ "multiset" ],
  "com.google.common.collect.Multimaps:synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap)" : [ "sortedSetMultimap" ],
  "com.google.common.util.concurrent.AggregateFuture:<init>(com.google.common.collect.ImmutableCollection,boolean,boolean)" : [ "<init>", "checkNotNull" ],
  "com.google.common.reflect.TypeToken:resolveType(java.lang.reflect.Type)" : [ "resolveType", "checkNotNull", "of", "getInvariantTypeResolver" ],
  "com.google.common.graph.ImmutableGraph:degree(java.lang.Object)" : [ "degree" ],
  "com.google.common.hash.AbstractByteHasher:update(int)" : [ "update", "clear" ],
  "com.google.common.collect.ContiguousSet:headSet(java.lang.Object,boolean)" : [ "headSet" ],
  "com.google.common.collect.ImmutableRangeMap$SerializedForm:readResolve()" : [ "isEmpty", "of", "createRangeMap" ],
  "com.google.common.collect.CompactLinkedHashMap:setPredecessor(int,int)" : [ "setLink", "link" ],
  "com.google.common.collect.EvictingQueue:add(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableBiMap$Builder:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.util.concurrent.AbstractFuture:toString()" : [ "isCancelled", "isDone", "addDoneString", "addPendingString" ],
  "com.google.common.collect.ImmutableRangeMap:asDescendingMapOfRanges()" : [ "<init>", "of", "reverse", "rangeLexOrdering" ],
  "com.google.common.util.concurrent.ForwardingFuture:isDone()" : [ "delegate" ],
  "com.google.common.reflect.TypeResolver$TypeTable:resolveInternal(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable)" : [ "<init>", "resolveType" ],
  "com.google.common.collect.Maps$UnmodifiableBiMap:inverse()" : [ "<init>" ],
  "com.google.common.util.concurrent.Uninterruptibles:awaitUninterruptibly(java.util.concurrent.CountDownLatch,java.time.Duration)" : [ "awaitUninterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.ForwardingMultimap:keySet()" : [ "delegate" ],
  "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:removeAll(java.util.Collection)" : [ "removeAllImpl", "checkNotNull" ],
  "com.google.common.math.PairedStats:count()" : [ "count" ],
  "com.google.common.graph.Graphs:transpose(com.google.common.graph.EndpointPair)" : [ "ordered" ],
  "com.google.common.util.concurrent.ClosingFuture$ValueAndCloser:<init>(com.google.common.util.concurrent.ClosingFuture)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingList:standardHashCode()" : [ "hashCodeImpl" ],
  "com.google.common.graph.Traverser$2:newTraversal()" : [ "inTree" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.graph.AbstractNetwork:edgeConnectingOrNull(java.lang.Object,java.lang.Object)" : [ "edgesConnecting" ],
  "com.google.common.base.Splitter:omitEmptyStrings()" : [ "<init>" ],
  "com.google.common.io.Resources$UrlByteSource:<init>(java.net.URL)" : [ "<init>", "checkNotNull" ],
  "com.google.common.util.concurrent.TimeLimiter:callUninterruptiblyWithTimeout(java.util.concurrent.Callable,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.collect.ForwardingNavigableMap:standardPollFirstEntry()" : [ "pollNext" ],
  "com.google.common.collect.ImmutableListMultimap:get(java.lang.Object)" : [ "of" ],
  "com.google.common.util.concurrent.ForwardingFuture:delegate()" : [ "delegate" ],
  "com.google.common.collect.EnumBiMap:forcePut(java.lang.Object,java.lang.Object)" : [ "forcePut" ],
  "com.google.common.collect.ForwardingNavigableMap:floorEntry(java.lang.Object)" : [ "delegate" ],
  "com.google.common.io.BaseEncoding$SeparatedBaseEncoding:trimTrailingPadding(java.lang.CharSequence)" : [ "trimTrailingPadding" ],
  "com.google.common.collect.Multimaps$TransformedEntriesMultimap:transform(java.lang.Object,java.util.Collection)" : [ "transform" ],
  "com.google.common.cache.CacheLoader:from(com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.cache.LocalCache:size()" : [ "saturatedCast", "longSize" ],
  "com.google.common.base.CharMatcher$Negated:setBits(java.util.BitSet)" : [ "setBits" ],
  "com.google.common.graph.StandardNetwork:edgesConnecting(java.lang.Object,java.lang.Object)" : [ "checkedConnections", "of", "checkArgument", "containsNode" ],
  "com.google.common.collect.MultimapBuilder:hashKeys(int)" : [ "checkNonnegative" ],
  "com.google.common.collect.ForwardingList:get(int)" : [ "delegate" ],
  "com.google.common.collect.Sets:powerSet(java.util.Set)" : [ "<init>" ],
  "com.google.common.collect.CompactHashMap:resizeEntries(int)" : [ "requireEntries", "requireKeys", "requireValues" ],
  "com.google.common.cache.CacheStats:plus(com.google.common.cache.CacheStats)" : [ "<init>", "saturatedAdd" ],
  "com.google.common.collect.ImmutableSet$Builder:<init>()" : [ "<init>" ],
  "com.google.common.collect.CompactHashSet:trimToSize()" : [ "needsAllocArrays", "delegateOrNull", "createHashFloodingResistantDelegate", "size", "requireEntries", "resizeEntries", "tableSize", "hashTableMask", "resizeTable" ],
  "com.google.common.graph.Traverser:breadthFirst(java.lang.Iterable)" : [ "validate" ],
  "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:contains(java.lang.Object)" : [ "containsColumn", "get" ],
  "com.google.common.collect.ImmutableMultimap$Builder:combine(com.google.common.collect.ImmutableMultimap$Builder)" : [ "putAll" ],
  "com.google.common.collect.ImmutableSortedSet:subSet(java.lang.Object,java.lang.Object)" : [ "subSet" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:cellSet()" : [ "set", "delegate" ],
  "com.google.common.collect.LinkedHashMultiset:forEachEntry(java.util.function.ObjIntConsumer)" : [ "forEachEntry" ],
  "com.google.common.util.concurrent.Futures:addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)" : [ "<init>", "checkNotNull" ],
  "com.google.common.cache.LocalCache$Segment:drainRecencyQueue()" : [ "contains" ],
  "com.google.common.collect.RegularImmutableBiMap:fromEntryArray(int,java.util.Map$Entry[])" : [ "<init>", "checkPositionIndex", "closedTableSize", "createEntryArray", "checkEntryNotNull", "smear", "checkNoConflictInKeyBucket", "checkNoConflictInValueBucket", "create", "makeImmutable" ],
  "com.google.common.collect.Tables$TransformedTable:<init>(com.google.common.collect.Table,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.collect.CompactHashMap:<init>()" : [ "init" ],
  "com.google.common.primitives.Longs:rotate(long[],int)" : [ "rotate" ],
  "com.google.common.collect.RegularContiguousSet:headSetImpl(java.lang.Object,boolean)" : [ "headSetImpl" ],
  "com.google.common.cache.LocalCache$LocalManualCache:putAll(java.util.Map)" : [ "putAll" ],
  "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask:<init>(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.ScheduledFuture)" : [ "<init>" ],
  "com.google.common.collect.AbstractSortedMultiset:pollLastEntry()" : [ "immutableEntry" ],
  "com.google.common.collect.RegularImmutableMap$Values:size()" : [ "size" ],
  "com.google.common.collect.ObjectArrays:toArrayImpl(java.util.Collection)" : [ "fillArray" ],
  "com.google.common.base.Platform:precomputeCharMatcher(com.google.common.base.CharMatcher)" : [ "precomputedInternal" ],
  "com.google.common.primitives.Primitives:unwrap(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.eventbus.AsyncEventBus:<init>(java.lang.String,java.util.concurrent.Executor)" : [ "<init>", "legacyAsync" ],
  "com.google.common.base.CharMatcher$Any:trimFrom(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.RegularImmutableMap:<init>(java.util.Map$Entry[],com.google.common.collect.ImmutableMapEntry[],int)" : [ "<init>" ],
  "com.google.common.base.Joiner:on(char)" : [ "<init>" ],
  "com.google.common.collect.CollectSpliterators$FlatMapSpliteratorOfPrimitive:trySplit()" : [ "trySplit" ],
  "com.google.common.collect.ImmutableBiMap$Builder:buildJdkBacked()" : [ "checkState", "of", "fromEntryArray" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:findMin(int,int)" : [ "checkState", "compareElements" ],
  "com.google.common.collect.ForwardingList:listIterator()" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:tailSet(java.lang.Object,boolean)" : [ "sortedMap" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.StandardTable$Column$Values:retainAll(java.util.Collection)" : [ "removeFromColumnIf", "valuePredicateOnEntries", "not", "in" ],
  "com.google.common.collect.CompactHashSet:init(int)" : [ "checkArgument", "constrainToRange" ],
  "com.google.common.collect.ForwardingListMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.collect.ForwardingMapEntry:delegate()" : [ "delegate" ],
  "com.google.common.base.Joiner$MapJoiner:join(java.util.Iterator)" : [ "appendTo" ],
  "com.google.common.collect.CompactLinkedHashMap:getSuccessor(int)" : [ "link" ],
  "com.google.common.primitives.Longs:constrainToRange(long,long,long)" : [ "checkArgument" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:lastKey()" : [ "sortedMap" ],
  "com.google.common.base.CharMatcher$FastMatcher:negate()" : [ "<init>" ],
  "com.google.common.base.Converter:reverse()" : [ "<init>" ],
  "com.google.common.reflect.TypeToken$2:toString()" : [ "getGenericParameterTypes", "join", "on" ],
  "com.google.common.collect.ContiguousSet:closedOpen(long,long)" : [ "create", "longs" ],
  "com.google.common.graph.AbstractValueGraph:hashCode()" : [ "edgeValueMap" ],
  "com.google.common.collect.TransformedListIterator:previousIndex()" : [ "backingIterator" ],
  "com.google.common.primitives.Bytes:reverse(byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes" ],
  "com.google.common.graph.AbstractGraph:hashCode()" : [ "edges" ],
  "com.google.common.collect.Iterables:paddedPartition(java.lang.Iterable,int)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.hash.Crc32cHashFunction:newHasher()" : [ "<init>" ],
  "com.google.common.hash.HashCode$BytesHashCode:equalsSameBits(com.google.common.hash.HashCode)" : [ "getBytesInternal" ],
  "com.google.common.collect.LinkedListMultimap:putAll(java.lang.Object,java.lang.Iterable)" : [ "putAll" ],
  "com.google.common.collect.ForwardingMultiset:standardEquals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.Lists:newLinkedList(java.lang.Iterable)" : [ "newLinkedList", "addAll" ],
  "com.google.common.collect.ImmutableMap$Builder:<init>()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedListMultimap:removeAll(java.lang.Object)" : [ "removeAll", "delegate" ],
  "com.google.common.hash.SipHashFunction$SipHasher:process(java.nio.ByteBuffer)" : [ "processM" ],
  "com.google.common.base.Ascii:toLowerCase(char)" : [ "isUpperCase" ],
  "com.google.common.collect.ForwardingSortedMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)" : [ "delegate" ],
  "com.google.common.collect.MultimapBuilder:linkedHashKeys()" : [ "linkedHashKeys" ],
  "com.google.common.collect.TreeMultiset:<init>(com.google.common.collect.TreeMultiset$Reference,com.google.common.collect.GeneralRange,com.google.common.collect.TreeMultiset$AvlNode)" : [ "<init>", "comparator" ],
  "com.google.common.net.InternetDomainName:isRegistrySuffix()" : [ "registrySuffixIndex" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry)" : [ "newEntry" ],
  "com.google.common.collect.HashMultimap:createCollection()" : [ "newHashSetWithExpectedSize" ],
  "com.google.common.cache.LocalCache:put(java.lang.Object,java.lang.Object)" : [ "put", "checkNotNull", "hash", "segmentFor" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:contains(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.graph.Graphs$TransposedNetwork:outEdges(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.CompactLinkedHashSet:getSuccessor(int)" : [ "requireSuccessors" ],
  "com.google.common.collect.ImmutableSortedMap$Builder:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.cache.ForwardingCache:delegate()" : [ "delegate" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:set(java.lang.Object)" : [ "set" ],
  "com.google.common.graph.Graphs:copyOf(com.google.common.graph.Graph)" : [ "from", "expectedNodeCount", "build", "nodeU", "nodeV" ],
  "com.google.common.graph.UndirectedMultiNetworkConnections:ofImmutable(java.util.Map)" : [ "<init>", "copyOf" ],
  "com.google.common.collect.ImmutableList$Builder:addAll(java.lang.Iterable)" : [ "addAll", "checkNotNull", "copyIntoArray" ],
  "com.google.common.collect.Synchronized:navigableSet(java.util.NavigableSet)" : [ "navigableSet" ],
  "com.google.common.collect.Range:containsAll(java.lang.Iterable)" : [ "isEmpty", "natural", "contains" ],
  "com.google.common.hash.Hashing:hmacMd5(java.security.Key)" : [ "<init>", "hmacToString" ],
  "com.google.common.collect.CompactHashMap:removeHelper(java.lang.Object)" : [ "needsAllocArrays", "hashTableMask", "remove", "requireTable", "requireEntries", "requireKeys", "value", "moveLastEntry", "incrementModCount" ],
  "com.google.common.collect.Range:apply(java.lang.Object)" : [ "apply" ],
  "com.google.common.collect.Maps$UnmodifiableEntries:<init>(java.util.Collection)" : [ "<init>" ],
  "com.google.common.util.concurrent.ClosingFuture$Peeker:getDone(com.google.common.util.concurrent.ClosingFuture)" : [ "getDone", "checkState", "checkArgument", "contains" ],
  "com.google.common.collect.Maps:difference(java.util.Map,java.util.Map)" : [ "difference", "equals" ],
  "com.google.common.collect.StandardTable$ColumnMap:get(java.lang.Object)" : [ "containsColumn", "column" ],
  "com.google.common.graph.ImmutableNetwork:incidentNodes(java.lang.Object)" : [ "incidentNodes" ],
  "com.google.common.cache.CacheStats:loadCount()" : [ "saturatedAdd" ],
  "com.google.common.base.CharMatcher$NegatedFastMatcher:<init>(com.google.common.base.CharMatcher)" : [ "<init>" ],
  "com.google.common.reflect.TypeToken:isSupertypeOf(java.lang.reflect.Type)" : [ "of", "isSubtypeOf", "getType" ],
  "com.google.common.cache.LocalCache:getEntry(java.lang.Object)" : [ "getEntry", "hash", "segmentFor" ],
  "com.google.common.reflect.TypeResolver:where(java.util.Map)" : [ "<init>", "where" ],
  "com.google.common.collect.Iterators:frequency(java.util.Iterator,java.lang.Object)" : [ "contains" ],
  "com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp:storedPermitsToWaitTime(double,double)" : [ "permitsToTime" ],
  "com.google.common.net.InternetDomainName:isValid(java.lang.String)" : [ "from" ],
  "com.google.common.hash.AbstractStreamingHasher:putLong(long)" : [ "munchIfFull" ],
  "com.google.common.collect.ImmutableTable:cellOf(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "immutableCell", "checkNotNull" ],
  "com.google.common.collect.ArrayTable:erase(java.lang.Object,java.lang.Object)" : [ "set" ],
  "com.google.common.collect.RegularImmutableMap:createValues()" : [ "<init>" ],
  "com.google.common.primitives.Booleans$BooleanArrayAsList:set(int,java.lang.Boolean)" : [ "checkElementIndex", "size", "checkNotNull" ],
  "com.google.common.collect.ForwardingNavigableSet:standardLower(java.lang.Object)" : [ "getNext", "headSet" ],
  "com.google.common.collect.AbstractSetMultimap:entries()" : [ "entries" ],
  "com.google.common.collect.LinkedHashMultiset:<init>()" : [ "<init>" ],
  "com.google.common.util.concurrent.Futures:immediateFailedFuture(java.lang.Throwable)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Lists$TransformingRandomAccessList:<init>(java.util.List,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.collect.Multisets:addAllImpl(com.google.common.collect.Multiset,java.util.Collection)" : [ "addAllImpl", "checkNotNull", "addAll" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:pollLast()" : [ "delegate" ],
  "com.google.common.collect.Maps:unmodifiableEntrySet(java.util.Set)" : [ "<init>" ],
  "com.google.common.base.Functions:compose(com.google.common.base.Function,com.google.common.base.Function)" : [ "<init>" ],
  "com.google.common.collect.Tables$TransposeTable:cellIterator()" : [ "transform" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:setWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference)" : [ "castForTesting" ],
  "com.google.common.primitives.UnsignedLong:times(com.google.common.primitives.UnsignedLong)" : [ "fromLongBits", "checkNotNull" ],
  "com.google.common.collect.CompactHashMap:resizeMeMaybe(int)" : [ "requireEntries", "resizeEntries" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:headMap(java.lang.Object)" : [ "headMap" ],
  "com.google.common.collect.ImmutableEnumMap:entrySpliterator()" : [ "map", "unmodifiableEntry" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:compare(java.lang.Object,java.lang.Object)" : [ "comparator" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:entryIterator()" : [ "isEmpty", "emptyIterator", "endpoint", "lowerBoundType", "natural", "min", "belowValue" ],
  "com.google.common.collect.Synchronized$SynchronizedQueue:delegate()" : [ "delegate" ],
  "com.google.common.reflect.TypeToken:isSubtypeOf(com.google.common.reflect.TypeToken)" : [ "isSubtypeOf", "getType" ],
  "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:makeHash()" : [ "fmix64", "fromBytesNoCopy" ],
  "com.google.common.util.concurrent.ServiceManager:awaitHealthy()" : [ "awaitHealthy" ],
  "com.google.common.collect.ImmutableRangeSet$Builder:combine(com.google.common.collect.ImmutableRangeSet$Builder)" : [ "addAll" ],
  "com.google.common.cache.ForwardingLoadingCache:get(java.lang.Object)" : [ "delegate" ],
  "com.google.common.primitives.ImmutableDoubleArray:trimmed()" : [ "<init>", "isPartialView", "toArray" ],
  "com.google.common.collect.TableCollectors:toImmutableTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" : [ "checkNotNull" ],
  "com.google.common.collect.Maps:doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)" : [ "uncheckedCastNullableTToT", "equivalent", "create" ],
  "com.google.common.primitives.ImmutableIntArray:builder()" : [ "<init>" ],
  "com.google.common.collect.ForwardingMultimap:putAll(com.google.common.collect.Multimap)" : [ "delegate" ],
  "com.google.common.io.MoreFiles:touch(java.nio.file.Path)" : [ "checkNotNull" ],
  "com.google.common.collect.TreeBasedTable:rowComparator()" : [ "rowKeySet" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMap:get(java.lang.Object)" : [ "get" ],
  "com.google.common.io.CharSequenceReader:ready()" : [ "checkOpen" ],
  "com.google.common.collect.AbstractBiMap$KeySet:clear()" : [ "clear" ],
  "com.google.common.io.CharSequenceReader:skip(long)" : [ "checkArgument", "checkOpen", "remaining" ],
  "com.google.common.hash.AbstractByteHasher:putInt(int)" : [ "update" ],
  "com.google.common.collect.ForwardingNavigableMap:standardHigherEntry(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.collect.NullsFirstOrdering:<init>(com.google.common.collect.Ordering)" : [ "<init>" ],
  "com.google.common.base.FinalizableReferenceQueue:close()" : [ "cleanUp" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSet:contains(java.lang.Comparable)" : [ "contains" ],
  "com.google.common.collect.Multimaps$AsMap$EntrySet:iterator()" : [ "asMapEntryIterator" ],
  "com.google.common.collect.TreeBasedTable:create(com.google.common.collect.TreeBasedTable)" : [ "<init>", "rowComparator", "columnComparator" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:<init>(java.util.Map,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.TreeMultimap:<init>(java.util.Comparator,java.util.Comparator,com.google.common.collect.Multimap)" : [ "<init>" ],
  "com.google.common.net.MediaType:createFontType(java.lang.String)" : [ "create" ],
  "com.google.common.io.Files:write(java.lang.CharSequence,java.io.File,java.nio.charset.Charset)" : [ "write" ],
  "com.google.common.hash.Funnels:asOutputStream(com.google.common.hash.PrimitiveSink)" : [ "<init>" ],
  "com.google.common.collect.ObjectArrays:toArrayImpl(java.util.Collection,java.lang.Object[])" : [ "newArray", "fillArray" ],
  "com.google.common.collect.StandardRowSortedTable:rowMap()" : [ "rowMap" ],
  "com.google.common.util.concurrent.Monitor:newGuard(java.util.function.BooleanSupplier)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:takeFirst()" : [ "delegate" ],
  "com.google.common.graph.MapRetrievalCache:<init>(java.util.Map)" : [ "<init>" ],
  "com.google.common.io.ByteSource:concat(java.lang.Iterable)" : [ "<init>" ],
  "com.google.common.collect.SortedMultisets$ElementSet:first()" : [ "multiset" ],
  "com.google.common.collect.StandardTable:remove(java.lang.Object,java.lang.Object)" : [ "safeGet" ],
  "com.google.common.cache.LocalCache$EntryFactory$2:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "<init>" ],
  "com.google.common.graph.ImmutableGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)" : [ "hasEdgeConnecting" ],
  "com.google.common.cache.CacheBuilderSpec$InitialCapacityParser:parseInteger(com.google.common.cache.CacheBuilderSpec,int)" : [ "checkArgument" ],
  "com.google.common.io.Files:asCharSource(java.io.File,java.nio.charset.Charset)" : [ "asCharSource", "asByteSource" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.StandardTable$ColumnMap:keySet()" : [ "columnKeySet" ],
  "com.google.common.hash.Murmur3_32HashFunction:getIntLittleEndian(byte[],int)" : [ "fromBytes" ],
  "com.google.common.graph.AbstractDirectedNetworkConnections:addOutEdge(java.lang.Object,java.lang.Object)" : [ "checkNotNull", "checkState" ],
  "com.google.common.hash.MacHashFunction$MacHasher:update(byte[])" : [ "checkNotDone" ],
  "com.google.common.collect.ForwardingSetMultimap:delegate()" : [ "delegate" ],
  "com.google.common.cache.CacheBuilder$3:<init>()" : [ "<init>" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:clear()" : [ "clear" ],
  "com.google.common.collect.ImmutableList:equals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.collect.ForwardingNavigableMap:lowerKey(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.LinkedHashMultimap:valueIterator()" : [ "valueIterator", "entryIterator" ],
  "com.google.common.io.Files:readFirstLine(java.io.File,java.nio.charset.Charset)" : [ "asCharSource", "readFirstLine" ],
  "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:valueComparator()" : [ "delegate" ],
  "com.google.common.collect.MapMakerInternalMap$EntrySet:size()" : [ "size" ],
  "com.google.common.primitives.ImmutableIntArray:equals(java.lang.Object)" : [ "length", "get" ],
  "com.google.common.util.concurrent.Uninterruptibles:joinUninterruptibly(java.lang.Thread,java.time.Duration)" : [ "joinUninterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.MoreCollectors$ToOptionalState:getElement()" : [ "multiples" ],
  "com.google.common.reflect.TypeToken:of(java.lang.reflect.Type)" : [ "<init>" ],
  "com.google.common.base.Equivalence$EquivalentToPredicate:<init>(com.google.common.base.Equivalence,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap:replaceAll(java.util.function.BiFunction)" : [ "forward" ],
  "com.google.common.util.concurrent.TimeLimiter:callWithTimeout(java.util.concurrent.Callable,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.collect.ImmutableSortedSet:headSet(java.lang.Object,boolean)" : [ "checkNotNull" ],
  "com.google.common.cache.LocalCache$Segment:expireEntries(long)" : [ "drainRecencyQueue", "peek", "isExpired", "removeEntry" ],
  "com.google.common.io.CharStreams$NullWriter:append(java.lang.CharSequence,int,int)" : [ "checkPositionIndexes" ],
  "com.google.common.collect.HashBiMap:put(java.lang.Object,java.lang.Object)" : [ "put" ],
  "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:put(com.google.common.reflect.TypeToken,java.lang.Object)" : [ "put", "rejectTypeVariables" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:put(java.util.Map$Entry)" : [ "put" ],
  "com.google.common.cache.LocalCache$LoadingValueReference:setException(java.lang.Throwable)" : [ "setException" ],
  "com.google.common.collect.ImmutableSortedMap:floorKey(java.lang.Object)" : [ "keyOrNull", "floorEntry" ],
  "com.google.common.base.MoreObjects$ToStringHelper:addValue(float)" : [ "addUnconditionalHolder" ],
  "com.google.common.collect.Synchronized$SynchronizedList:remove(int)" : [ "delegate" ],
  "com.google.common.io.ByteSource$SlicedByteSource:openStream()" : [ "sliceStream" ],
  "com.google.common.collect.MinMaxPriorityQueue:peekLast()" : [ "elementData", "getMaxElementIndex" ],
  "com.google.common.reflect.TypeToken:getArraySubtype(java.lang.Class)" : [ "getComponentType", "getSubtype", "of", "newArrayClassOrGenericArrayType" ],
  "com.google.common.collect.HashBasedTable:column(java.lang.Object)" : [ "column" ],
  "com.google.common.cache.LocalCache$Values:clear()" : [ "clear" ],
  "com.google.common.collect.Sets$FilteredNavigableSet:higher(java.lang.Object)" : [ "find", "unfiltered" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:refreshIfEmpty()" : [ "getDelegate" ],
  "com.google.common.collect.Comparators:isInOrder(java.lang.Iterable,java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap:createKeySet()" : [ "<init>" ],
  "com.google.common.base.Functions$ToStringFunction:apply(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.reflect.TypeToken:isOwnedBySubtypeOf(java.lang.reflect.Type)" : [ "getTypes", "getOwnerTypeIfPresent", "of", "isSubtypeOf" ],
  "com.google.common.hash.AbstractByteHasher:putLong(long)" : [ "update" ],
  "com.google.common.base.Predicates$CompositionPredicate:<init>(com.google.common.base.Predicate,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.graph.Graphs$TransposedNetwork:edgesConnecting(com.google.common.graph.EndpointPair)" : [ "delegate", "transpose" ],
  "com.google.common.math.IntMath:checkedAdd(int,int)" : [ "checkNoOverflow" ],
  "com.google.common.collect.Iterables:getFirst(java.lang.Iterable,java.lang.Object)" : [ "getNext" ],
  "com.google.common.collect.FluentIterable:append(java.lang.Iterable)" : [ "concat", "getDelegate" ],
  "com.google.common.io.BaseEncoding:separatingAppendable(java.lang.Appendable,java.lang.String,int)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.net.InetAddresses:toUriString(java.net.InetAddress)" : [ "toAddrString" ],
  "com.google.common.collect.ForwardingNavigableMap:standardSubMap(java.lang.Object,java.lang.Object)" : [ "subMap" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object)" : [ "of" ],
  "com.google.common.collect.HashBiMap:seekByValue(java.lang.Object,int)" : [ "equal" ],
  "com.google.common.io.ByteSource$SlicedByteSource:sizeIfKnown()" : [ "sizeIfKnown", "of", "absent" ],
  "com.google.common.collect.Synchronized$SynchronizedBiMap:forcePut(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.Multimaps:filterKeys(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)" : [ "<init>", "unfiltered", "and", "filterFiltered", "keyPredicateOnEntries" ],
  "com.google.common.util.concurrent.CombinedFuture:handleAllCompleted()" : [ "execute" ],
  "com.google.common.collect.Multimaps:filterKeys(com.google.common.collect.Multimap,com.google.common.base.Predicate)" : [ "<init>", "filterKeys", "and", "filterFiltered", "keyPredicateOnEntries" ],
  "com.google.common.io.Files:hash(java.io.File,com.google.common.hash.HashFunction)" : [ "asByteSource", "hash" ],
  "com.google.common.collect.ImmutableTable$SerializedForm:create(com.google.common.collect.ImmutableTable,int[],int[])" : [ "<init>", "rowKeySet", "toArray", "columnKeySet", "values" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:ceilingEntry(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.GeneralRange:upTo(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType)" : [ "<init>" ],
  "com.google.common.base.Strings:repeat(java.lang.String,int)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.io.CharSource:copyTo(java.lang.Appendable)" : [ "checkNotNull", "create", "register", "copy", "rethrow", "close" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:delegate()" : [ "delegate" ],
  "com.google.common.collect.TreeRangeMap:getEntry(java.lang.Comparable)" : [ "belowValue", "contains" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:computeBackingRowMap()" : [ "updateWholeRowField" ],
  "com.google.common.base.Splitter:splitToList(java.lang.CharSequence)" : [ "checkNotNull", "splittingIterator" ],
  "com.google.common.graph.Graphs$TransposedNetwork:hasEdgeConnecting(com.google.common.graph.EndpointPair)" : [ "delegate", "transpose" ],
  "com.google.common.primitives.UnsignedBytes:saturatedCast(long)" : [ "toInt" ],
  "com.google.common.collect.ImmutableRangeMap$Builder:<init>()" : [ "newArrayList" ],
  "com.google.common.collect.ForwardingMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.reflect.ClassPath$ClassInfo:getPackageName()" : [ "getPackageName" ],
  "com.google.common.collect.ImmutableBiMap:copyOf(java.util.Map)" : [ "copyOf" ],
  "com.google.common.graph.ValueGraphBuilder:immutable()" : [ "<init>", "cast" ],
  "com.google.common.collect.Maps:filterKeys(java.util.NavigableMap,com.google.common.base.Predicate)" : [ "filterEntries", "keyPredicateOnEntries" ],
  "com.google.common.collect.Sets:newIdentityHashSet()" : [ "newIdentityHashMap" ],
  "com.google.common.collect.Iterators$EmptyModifiableIterator:remove()" : [ "checkRemove" ],
  "com.google.common.util.concurrent.AtomicDoubleArray:accumulateAndGet(int,double,java.util.function.DoubleBinaryOperator)" : [ "checkNotNull", "updateAndGet" ],
  "com.google.common.collect.Cut$BelowAll:leastValueAbove(com.google.common.collect.DiscreteDomain)" : [ "minValue" ],
  "com.google.common.base.CaseFormat$1:convert(com.google.common.base.CaseFormat,java.lang.String)" : [ "convert", "toUpperCase" ],
  "com.google.common.collect.UnmodifiableSortedMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)" : [ "unmodifiableSortedMultiset", "delegate" ],
  "com.google.common.collect.ArrayListMultimap:<init>()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:getOrDefault(java.lang.Object,java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.MapMakerInternalMap:put(java.lang.Object,java.lang.Object)" : [ "put", "checkNotNull", "hash", "segmentFor" ],
  "com.google.common.collect.ForwardingDeque:pop()" : [ "delegate" ],
  "com.google.common.io.ByteStreams:toByteArray(java.io.InputStream)" : [ "checkNotNull", "toByteArrayInternal" ],
  "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask:<init>(java.lang.Runnable)" : [ "checkNotNull", "run" ],
  "com.google.common.graph.StandardNetwork:checkedReferenceNode(java.lang.Object)" : [ "get", "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:descendingIterator()" : [ "descendingSet" ],
  "com.google.common.collect.ImmutableSortedSet:reverseOrder()" : [ "<init>" ],
  "com.google.common.collect.Iterators:cycle(java.lang.Iterable)" : [ "checkNotNull" ],
  "com.google.common.base.CaseFormat$StringConverter:doForward(java.lang.String)" : [ "to" ],
  "com.google.common.collect.FluentIterable:<init>()" : [ "absent" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean)" : [ "<init>", "checkNotNull", "checkPositiveTimeout", "getUninterruptibly", "throwCause" ],
  "com.google.common.collect.Maps:synchronizedNavigableMap(java.util.NavigableMap)" : [ "navigableMap" ],
  "com.google.common.collect.Maps$Values:remove(java.lang.Object)" : [ "map", "equal" ],
  "com.google.common.primitives.Chars$CharArrayAsList:equals(java.lang.Object)" : [ "size" ],
  "com.google.common.collect.ImmutableSortedAsList:comparator()" : [ "comparator", "delegateCollection" ],
  "com.google.common.hash.Fingerprint2011:murmurHash64WithSeed(byte[],int,int,long)" : [ "load64", "shiftMix", "load64Safely" ],
  "com.google.common.net.HostAndPort:getPort()" : [ "checkState", "hasPort" ],
  "com.google.common.collect.SortedMapDifference:entriesDiffering()" : [ "entriesDiffering" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:predecessors()" : [ "predecessorsMultiset" ],
  "com.google.common.collect.ImmutableList$Builder:build()" : [ "asImmutableList" ],
  "com.google.common.collect.Maps$BiMapConverter:doBackward(java.lang.Object)" : [ "convert" ],
  "com.google.common.collect.TableCollectors$MutableCell:<init>(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Cut$AboveValue:isLessThan(java.lang.Comparable)" : [ "compareOrThrow" ],
  "com.google.common.collect.ImmutableMultimap$EntryCollection:iterator()" : [ "entryIterator" ],
  "com.google.common.collect.EnumMultiset:remove(java.lang.Object,int)" : [ "isActuallyE", "checkNonnegative", "count" ],
  "com.google.common.hash.Murmur3_32HashFunction:fmix(int,int)" : [ "fromInt" ],
  "com.google.common.collect.ImmutableListMultimap:flatteningToImmutableListMultimap(java.util.function.Function,java.util.function.Function)" : [ "flatteningToImmutableListMultimap" ],
  "com.google.common.collect.StandardTable$ColumnKeySet:size()" : [ "size", "iterator" ],
  "com.google.common.primitives.Longs:sortDescending(long[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "reverse" ],
  "com.google.common.collect.Cut$AboveValue:withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)" : [ "aboveAll" ],
  "com.google.common.util.concurrent.Uninterruptibles:awaitTerminationUninterruptibly(java.util.concurrent.ExecutorService)" : [ "awaitTerminationUninterruptibly", "verify" ],
  "com.google.common.collect.ArrayTable:get(java.lang.Object,java.lang.Object)" : [ "at" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner4:<init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture)" : [ "of" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:computeIfAbsent(java.lang.Object,java.util.function.Function)" : [ "delegate" ],
  "com.google.common.primitives.ImmutableDoubleArray:copyOf(java.lang.Iterable)" : [ "copyOf", "builder", "addAll", "build" ],
  "com.google.common.cache.LocalCache$Segment:initTable(java.util.concurrent.atomic.AtomicReferenceArray)" : [ "customWeigher" ],
  "com.google.common.collect.Range:canonical(com.google.common.collect.DiscreteDomain)" : [ "canonical", "checkNotNull", "create" ],
  "com.google.common.collect.ContiguousSet:subSet(java.lang.Comparable,boolean,java.lang.Comparable,boolean)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.collect.EnumHashBiMap:readObject(java.io.ObjectInputStream)" : [ "populateMap" ],
  "com.google.common.collect.AbstractMapBasedMultiset:size()" : [ "saturatedCast" ],
  "com.google.common.primitives.ImmutableLongArray$Builder:addAll(java.lang.Iterable)" : [ "addAll", "add" ],
  "com.google.common.graph.StandardValueGraph:edgeValueOrDefault(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "edgeValueOrDefaultInternal", "checkNotNull" ],
  "com.google.common.collect.ImmutableMultiset:copyIntoArray(java.lang.Object[],int)" : [ "entrySet" ],
  "com.google.common.collect.Maps$5:tailSet(java.lang.Object)" : [ "tailSet" ],
  "com.google.common.net.InetAddresses:getInet4Address(byte[])" : [ "checkArgument" ],
  "com.google.common.collect.ImmutableTable:createValues()" : [ "createValues" ],
  "com.google.common.collect.ConcurrentHashMultiset:snapshot()" : [ "newArrayListWithExpectedSize", "size", "entrySet" ],
  "com.google.common.graph.AbstractValueGraph:degree(java.lang.Object)" : [ "degree" ],
  "com.google.common.collect.TopKSelector:greatest(int,java.util.Comparator)" : [ "<init>", "from", "reverse" ],
  "com.google.common.collect.Multimaps$MapMultimap:<init>(java.util.Map)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:pop()" : [ "delegate" ],
  "com.google.common.cache.LocalCache$WeightedStrongValueReference:<init>(java.lang.Object,int)" : [ "<init>" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:trimTrailingPadding(java.lang.CharSequence)" : [ "checkNotNull" ],
  "com.google.common.collect.MinMaxPriorityQueue:<init>(com.google.common.collect.MinMaxPriorityQueue$Builder,int)" : [ "reverse" ],
  "com.google.common.collect.Iterators:removeIf(java.util.Iterator,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.ForwardingBlockingQueue:remainingCapacity()" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue:peekFirst()" : [ "peek" ],
  "com.google.common.collect.Sets:toImmutableEnumSet()" : [ "toImmutableEnumSet" ],
  "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:arrayListValues(int)" : [ "checkNonnegative" ],
  "com.google.common.cache.CacheBuilder:maximumSize(long)" : [ "checkState", "checkArgument" ],
  "com.google.common.io.ByteSource:size()" : [ "sizeIfKnown", "create", "register", "countBySkipping", "close", "exhaust", "rethrow" ],
  "com.google.common.collect.CompactHashMap:entrySetIterator()" : [ "delegateOrNull" ],
  "com.google.common.collect.CompactHashMap:replaceAll(java.util.function.BiFunction)" : [ "checkNotNull", "delegateOrNull", "setValue", "key", "value" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)" : [ "newEntry" ],
  "com.google.common.util.concurrent.RateLimiter:tryAcquire(int,java.time.Duration)" : [ "tryAcquire", "toNanosSaturated" ],
  "com.google.common.graph.StandardNetwork:edges()" : [ "unmodifiableKeySet" ],
  "com.google.common.io.MoreFiles:equal(java.nio.file.Path,java.nio.file.Path)" : [ "checkNotNull", "sizeIfKnown", "contentEquals" ],
  "com.google.common.collect.Sets:immutableEnumSet(java.lang.Iterable)" : [ "of", "asImmutable", "addAll" ],
  "com.google.common.primitives.ImmutableIntArray:subArray(int,int)" : [ "<init>", "checkPositionIndexes", "length" ],
  "com.google.common.reflect.Types$JavaVersion$1:usedInGenericType(java.lang.reflect.Type)" : [ "<init>", "checkNotNull" ],
  "com.google.common.reflect.TypeToken:isSubtypeOf(java.lang.reflect.Type)" : [ "isSubtypeOf", "checkNotNull", "any", "isSupertypeOf", "of", "isSupertypeOfArray", "someRawTypeIsSubclassOf", "isSubtypeOfArrayType" ],
  "com.google.common.collect.TreeRangeMap$AsMapOfRanges:get(java.lang.Object)" : [ "equals" ],
  "com.google.common.util.concurrent.SimpleTimeLimiter:runUninterruptiblyWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)" : [ "checkNotNull", "checkPositiveTimeout", "getUninterruptibly", "wrapAndThrowRuntimeExecutionExceptionOrError" ],
  "com.google.common.io.ByteSource:copyTo(java.io.OutputStream)" : [ "checkNotNull", "create", "register", "copy", "rethrow", "close" ],
  "com.google.common.base.StandardSystemProperty:toString()" : [ "key", "value" ],
  "com.google.common.net.InternetDomainName:publicSuffixIndex()" : [ "findSuffixOfType", "absent" ],
  "com.google.common.util.concurrent.ClosingFuture$Combiner:call(com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable,java.util.concurrent.Executor)" : [ "call", "futureCombiner", "add", "directExecutor" ],
  "com.google.common.util.concurrent.Monitor:enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)" : [ "toSafeNanos", "initNanoTime", "remainingNanos", "awaitNanos" ],
  "com.google.common.collect.ImmutableList:<init>()" : [ "<init>" ],
  "com.google.common.util.concurrent.ClosingFuture:catching(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor)" : [ "catchingMoreGeneric" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:add(java.lang.Object)" : [ "refreshIfEmpty", "addToMap" ],
  "com.google.common.reflect.MutableTypeToInstanceMap:getInstance(java.lang.Class)" : [ "trustedGet", "of" ],
  "com.google.common.collect.CompactHashing:tableSize(int)" : [ "closedTableSize" ],
  "com.google.common.base.Utf8:encodedLength(java.lang.CharSequence)" : [ "encodedLengthGeneral" ],
  "com.google.common.io.CharSource$StringCharSource:<init>(java.lang.String)" : [ "<init>" ],
  "com.google.common.collect.Maps$AsMapView:getOrDefault(java.lang.Object,java.lang.Object)" : [ "safeContains", "backingSet" ],
  "com.google.common.collect.ImmutableSortedSet:copyOf(java.lang.Iterable)" : [ "copyOf", "natural" ],
  "com.google.common.collect.RegularImmutableMap:get(java.lang.Object,com.google.common.collect.ImmutableMapEntry[],int)" : [ "smear", "getNextInKeyBucket" ],
  "com.google.common.cache.LocalCache$StrongEntry:<init>(java.lang.Object,int,com.google.common.cache.ReferenceEntry)" : [ "unset" ],
  "com.google.common.collect.Iterables:concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : [ "concat" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace:<init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)" : [ "getLockName" ],
  "com.google.common.cache.AbstractCache:putAll(java.util.Map)" : [ "put" ],
  "com.google.common.net.InternetDomainName:parent()" : [ "checkState", "hasParent", "ancestor" ],
  "com.google.common.collect.FilteredMultimapValues:iterator()" : [ "valueIterator" ],
  "com.google.common.io.AppendableWriter:write(java.lang.String,int,int)" : [ "checkNotNull", "checkNotClosed" ],
  "com.google.common.net.MediaType$Tokenizer:previewChar()" : [ "checkState", "hasMore" ],
  "com.google.common.collect.ImmutableList$SubList:listIterator()" : [ "listIterator" ],
  "com.google.common.collect.ImmutableBiMap:toImmutableBiMap(java.util.function.Function,java.util.function.Function)" : [ "toImmutableBiMap" ],
  "com.google.common.base.Functions$ConstantFunction:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.collect.RegularImmutableSortedSet:unsafeBinarySearch(java.lang.Object)" : [ "unsafeComparator" ],
  "com.google.common.base.CharMatcher:isNot(char)" : [ "<init>" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:keySet()" : [ "keySet" ],
  "com.google.common.primitives.Chars:reverse(char[])" : [ "reverse", "checkNotNull" ],
  "com.google.common.net.InternetDomainName:isTopPrivateDomain()" : [ "publicSuffixIndex" ],
  "com.google.common.collect.ForwardingNavigableSet:standardTailSet(java.lang.Object)" : [ "tailSet" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:lastIndexOf(java.lang.Object)" : [ "indexOf", "reverseIndex" ],
  "com.google.common.collect.MapMaker:toString()" : [ "toString", "toStringHelper", "add", "toLowerCase", "addValue" ],
  "com.google.common.net.InetAddresses:toAddrString(java.net.InetAddress)" : [ "checkNotNull", "fromBytes", "compressLongestRunOfZeroes", "hextetsToIPv6String", "checkArgument" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:enqueueStoppedEvent()" : [ "enqueue" ],
  "com.google.common.collect.ImmutableRangeMap:asMapOfRanges()" : [ "<init>", "of", "rangeLexOrdering" ],
  "com.google.common.net.MediaType:create(java.lang.String,java.lang.String,com.google.common.collect.Multimap)" : [ "<init>", "checkNotNull", "normalizeToken", "checkArgument", "builder", "put", "normalizeParameterValue", "build", "firstNonNull" ],
  "com.google.common.collect.TreeRangeSet:intersects(com.google.common.collect.Range)" : [ "checkNotNull", "isConnected", "intersection", "isEmpty" ],
  "com.google.common.hash.Fingerprint2011:weakHashLength32WithSeeds(byte[],int,long,long,long[])" : [ "load64" ],
  "com.google.common.collect.DiscreteDomain$BigIntegerDomain:offset(java.math.BigInteger,long)" : [ "checkNonnegative" ],
  "com.google.common.primitives.ImmutableLongArray:builder(int)" : [ "<init>", "checkArgument" ],
  "com.google.common.collect.ImmutableListMultimap:<init>(com.google.common.collect.ImmutableMap,int)" : [ "<init>" ],
  "com.google.common.collect.ImmutableMapEntrySet:hashCode()" : [ "hashCode" ],
  "com.google.common.util.concurrent.AbstractExecutionThreadService:awaitTerminated(java.time.Duration)" : [ "awaitTerminated" ],
  "com.google.common.base.Predicates$InPredicate:<init>(java.util.Collection)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMap$Builder:put(java.util.Map$Entry)" : [ "put" ],
  "com.google.common.collect.LinkedListMultimap:getCopy(java.lang.Object)" : [ "newArrayList" ],
  "com.google.common.collect.EnumBiMap:keySet()" : [ "keySet" ],
  "com.google.common.collect.CompactHashSet:add(java.lang.Object)" : [ "needsAllocArrays", "allocArrays", "delegateOrNull", "requireEntries", "requireElements", "smearedHash", "hashTableMask", "tableGet", "requireTable", "resizeTable", "newCapacity", "tableSet", "getHashPrefix", "getNext", "convertToHashFloodingResistantImplementation", "maskCombine", "resizeMeMaybe", "insertEntry", "incrementModCount", "equal" ],
  "com.google.common.collect.ConcurrentHashMultiset:count(java.lang.Object)" : [ "safeGet" ],
  "com.google.common.primitives.Chars:indexOf(char[],char[])" : [ "checkNotNull" ],
  "com.google.common.io.ByteStreams:readBytes(java.io.InputStream,com.google.common.io.ByteProcessor)" : [ "checkNotNull", "createBuffer" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference)" : [ "equivalent" ],
  "com.google.common.collect.MultimapBuilder$EnumSetSupplier:<init>(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.collect.Streams:mapWithIndex(java.util.stream.Stream,com.google.common.collect.Streams$FunctionWithIndex)" : [ "checkNotNull" ],
  "com.google.common.collect.ObjectArrays:newArray(java.lang.Object[],int)" : [ "newArray" ],
  "com.google.common.base.Suppliers:synchronizedSupplier(com.google.common.base.Supplier)" : [ "<init>" ],
  "com.google.common.reflect.Invokable:isNative()" : [ "getModifiers" ],
  "com.google.common.io.BaseEncoding$Base64Encoding:encodeTo(java.lang.Appendable,byte[],int,int)" : [ "checkNotNull", "checkPositionIndexes", "encode" ],
  "com.google.common.collect.RegularContiguousSet:intersectionInCurrentDomain(com.google.common.collect.Range)" : [ "<init>", "isConnected", "create", "intersection" ],
  "com.google.common.collect.CompactHashSet:setEntry(int,int)" : [ "requireEntries" ],
  "com.google.common.collect.Synchronized$SynchronizedDeque:removeFirst()" : [ "delegate" ],
  "com.google.common.collect.DescendingImmutableSortedSet:tailSetImpl(java.lang.Object,boolean)" : [ "headSet", "descendingSet" ],
  "com.google.common.collect.AbstractNavigableMap:floorKey(java.lang.Object)" : [ "keyOrNull", "floorEntry" ],
  "com.google.common.hash.HashCode$LongHashCode:<init>(long)" : [ "<init>" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:putAll(com.google.common.collect.Multimap)" : [ "putAll" ],
  "com.google.common.collect.ImmutableSetMultimap:copyOf(com.google.common.collect.Multimap,java.util.Comparator)" : [ "checkNotNull", "of", "fromMapEntries" ],
  "com.google.common.math.Quantiles:median()" : [ "scale", "index" ],
  "com.google.common.primitives.UnsignedBytes:parseUnsignedByte(java.lang.String,int)" : [ "checkNotNull" ],
  "com.google.common.reflect.TypeResolver$TypeVariableKey:equalsType(java.lang.reflect.Type)" : [ "equalsTypeVariable" ],
  "com.google.common.collect.Maps:indexMap(java.util.Collection)" : [ "<init>", "put", "buildOrThrow" ],
  "com.google.common.util.concurrent.MoreExecutors:rejectionPropagatingExecutor(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture)" : [ "checkNotNull", "directExecutor" ],
  "com.google.common.util.concurrent.ForwardingListenableFuture:<init>()" : [ "<init>" ],
  "com.google.common.collect.ArrayTable$Row:getValue(int)" : [ "at" ],
  "com.google.common.collect.ImmutableTable:values()" : [ "values" ],
  "com.google.common.collect.ImmutableRangeMap:toString()" : [ "toString", "asMapOfRanges" ],
  "com.google.common.base.Throwables:lazyStackTrace(java.lang.Throwable)" : [ "lazyStackTraceIsLazy", "jlaStackTrace" ],
  "com.google.common.collect.Synchronized:map(java.util.Map,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ImmutableList:sortedCopyOf(java.lang.Iterable)" : [ "toArray", "asImmutableList" ],
  "com.google.common.graph.Traverser$1:newTraversal()" : [ "inGraph" ],
  "com.google.common.collect.StandardTable$RowMap$EntrySet:contains(java.lang.Object)" : [ "safeContains" ],
  "com.google.common.primitives.Doubles:lastIndexOf(double[],double)" : [ "lastIndexOf" ],
  "com.google.common.util.concurrent.ServiceManager:startupDurations()" : [ "copyOf", "transformValues", "startupTimes" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException:<init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace)" : [ "<init>" ],
  "com.google.common.collect.AbstractTable$Values:contains(java.lang.Object)" : [ "containsValue" ],
  "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator:remove()" : [ "checkRemove", "get", "addAndGet" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:descendingEntryIterator()" : [ "isEmpty", "emptyIterator", "natural", "min", "belowValue", "endpoint" ],
  "com.google.common.collect.AbstractMapBasedMultiset:<init>(java.util.Map)" : [ "checkArgument" ],
  "com.google.common.hash.BloomFilter:expectedFpp()" : [ "bitCount", "bitSize" ],
  "com.google.common.io.LittleEndianDataInputStream:readByte()" : [ "readUnsignedByte" ],
  "com.google.common.graph.ImmutableNetwork:allowsParallelEdges()" : [ "allowsParallelEdges" ],
  "com.google.common.collect.TreeBasedTable$TreeRow:maintainEmptyInvariant()" : [ "updateWholeRowField" ],
  "com.google.common.eventbus.Subscriber$SynchronizedSubscriber:invokeSubscriberMethod(java.lang.Object)" : [ "invokeSubscriberMethod" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:descendingKeySet()" : [ "navigableSet", "delegate" ],
  "com.google.common.reflect.TypeResolver$TypeVariableKey:<init>(java.lang.reflect.TypeVariable)" : [ "checkNotNull" ],
  "com.google.common.math.Quantiles$ScaleAndIndexes:<init>(int,int[])" : [ "checkArgument" ],
  "com.google.common.collect.ConcurrentHashMultiset:entrySet()" : [ "entrySet" ],
  "com.google.common.io.TempFileCreator$JavaIoCreator:createTempDir()" : [ "value" ],
  "com.google.common.cache.LocalCache$EntryFactory$8:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)" : [ "copyEntry" ],
  "com.google.common.collect.ImmutableSet$CachingAsList:iterator()" : [ "iterator" ],
  "com.google.common.collect.ImmutableBiMap$Builder:orderEntriesByValue(java.util.Comparator)" : [ "orderEntriesByValue" ],
  "com.google.common.io.Files:equal(java.io.File,java.io.File)" : [ "checkNotNull", "asByteSource", "contentEquals" ],
  "com.google.common.collect.Iterators:clear(java.util.Iterator)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AtomicDouble:getAndAdd(double)" : [ "getAndAccumulate" ],
  "com.google.common.primitives.Longs:checkNoOverflow(long)" : [ "checkArgument" ],
  "com.google.common.collect.ForwardingList:standardIndexOf(java.lang.Object)" : [ "indexOfImpl" ],
  "com.google.common.collect.TreeRangeMap$SubRangeMap:toString()" : [ "asMapOfRanges" ],
  "com.google.common.collect.AbstractSortedMultiset:createElementSet()" : [ "<init>" ],
  "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl:build()" : [ "<init>", "of", "asImmutableList" ],
  "com.google.common.collect.ImmutableMultimap$Values:copyIntoArray(java.lang.Object[],int)" : [ "copyIntoArray", "values" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:floor(java.lang.Object)" : [ "getSortedSetDelegate" ],
  "com.google.common.cache.LocalCache$Segment:drainReferenceQueues()" : [ "usesKeyReferences", "drainKeyReferenceQueue", "usesValueReferences", "drainValueReferenceQueue" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:containsValue(java.lang.Object)" : [ "valueEquivalence", "equivalent", "postReadCleanup" ],
  "com.google.common.base.Joiner:join(java.util.Iterator)" : [ "appendTo" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceListener:failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable)" : [ "transitionService" ],
  "com.google.common.base.Predicates$ContainsPatternPredicate:equals(java.lang.Object)" : [ "equal" ],
  "com.google.common.hash.AbstractHashFunction:hashBytes(java.nio.ByteBuffer)" : [ "newHasher" ],
  "com.google.common.collect.Synchronized$SynchronizedMultiset:remove(java.lang.Object,int)" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractIdleService$DelegateService:doStop()" : [ "renamingDecorator", "executor" ],
  "com.google.common.collect.AbstractTable$CellSet:remove(java.lang.Object)" : [ "safeGet", "safeRemove", "immutableEntry" ],
  "com.google.common.collect.ImmutableClassToInstanceMap:of(java.lang.Class,java.lang.Object)" : [ "<init>", "of" ],
  "com.google.common.collect.Maps:synchronizedBiMap(com.google.common.collect.BiMap)" : [ "biMap" ],
  "com.google.common.reflect.TypeToken$TypeSet:delegate()" : [ "collectTypes", "from", "filter", "toSet" ],
  "com.google.common.collect.ForwardingDeque:peekFirst()" : [ "delegate" ],
  "com.google.common.collect.AbstractIndexedListIterator:previous()" : [ "hasPrevious" ],
  "com.google.common.util.concurrent.ListeningScheduledExecutorService:schedule(java.lang.Runnable,java.time.Duration)" : [ "schedule", "toNanosSaturated" ],
  "com.google.common.reflect.Types$JavaVersion:typeName(java.lang.reflect.Type)" : [ "toString" ],
  "com.google.common.collect.Cut:belowValue(java.lang.Comparable)" : [ "<init>" ],
  "com.google.common.graph.AbstractUndirectedNetworkConnections:removeInEdge(java.lang.Object,boolean)" : [ "removeOutEdge" ],
  "com.google.common.cache.CacheStats:requestCount()" : [ "saturatedAdd" ],
  "com.google.common.collect.Multisets$FilteredMultiset:createElementSet()" : [ "filter" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:values()" : [ "delegate" ],
  "com.google.common.graph.Graphs$TransposedValueGraph:edgeValue(com.google.common.graph.EndpointPair)" : [ "delegate", "transpose" ],
  "com.google.common.primitives.Shorts:indexOf(short[],short)" : [ "indexOf" ],
  "com.google.common.collect.Iterators:removeAll(java.util.Iterator,java.util.Collection)" : [ "checkNotNull" ],
  "com.google.common.primitives.UnsignedInteger:times(com.google.common.primitives.UnsignedInteger)" : [ "fromIntBits", "checkNotNull" ],
  "com.google.common.math.IntMath:checkedPow(int,int)" : [ "checkNonNegative", "checkNoOverflow", "checkedMultiply" ],
  "com.google.common.collect.AbstractSequentialIterator:<init>(java.lang.Object)" : [ "<init>" ],
  "com.google.common.base.Predicates:not(com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:subMap(com.google.common.collect.Range)" : [ "<init>", "isConnected", "of", "intersection" ],
  "com.google.common.math.Quantiles:percentiles()" : [ "scale" ],
  "com.google.common.base.Predicates:contains(java.util.regex.Pattern)" : [ "<init>" ],
  "com.google.common.collect.Collections2$TransformedCollection:spliterator()" : [ "map" ],
  "com.google.common.collect.ReverseNaturalOrdering:reverse()" : [ "natural" ],
  "com.google.common.collect.CompactHashMap:setEntry(int,int)" : [ "requireEntries" ],
  "com.google.common.collect.RegularImmutableTable:createCellSet()" : [ "of" ],
  "com.google.common.hash.Murmur3_32HashFunction:hashBytes(byte[],int,int)" : [ "checkPositionIndexes", "mixK1", "getIntLittleEndian", "mixH1", "fmix", "toInt" ],
  "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:toArray()" : [ "toArrayImpl" ],
  "com.google.common.util.concurrent.AbstractTransformFuture:<init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred:<init>(java.lang.Object)" : [ "<init>" ],
  "com.google.common.hash.Hashing:consistentHash(long,int)" : [ "<init>", "checkArgument", "nextDouble" ],
  "com.google.common.math.BigIntegerMath:log2(java.math.BigInteger,java.math.RoundingMode)" : [ "checkPositive", "checkNotNull", "checkRoundingUnnecessary", "isPowerOfTwo" ],
  "com.google.common.collect.Collections2$OrderedPermutationIterator:computeNext()" : [ "copyOf", "calculateNextPermutation" ],
  "com.google.common.util.concurrent.SequentialExecutor:execute(java.lang.Runnable)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeSet:builder()" : [ "<init>" ],
  "com.google.common.collect.ForwardingMultiset:standardSetCount(java.lang.Object,int,int)" : [ "setCountImpl" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:higher(java.lang.Object)" : [ "getSortedSetDelegate" ],
  "com.google.common.graph.ImmutableGraph:connectionsOf(com.google.common.graph.Graph,java.lang.Object)" : [ "constant", "ofImmutable", "asMap" ],
  "com.google.common.math.Quantiles$ScaleAndIndexes:compute(java.util.Collection)" : [ "toArray" ],
  "com.google.common.collect.CompactHashMap:<init>(int)" : [ "init" ],
  "com.google.common.primitives.Shorts$ShortArrayAsList:set(int,java.lang.Short)" : [ "checkElementIndex", "size", "checkNotNull" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:isEmpty()" : [ "any" ],
  "com.google.common.collect.ForwardingDeque:removeLastOccurrence(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.StandardTable$Row:maintainEmptyInvariant()" : [ "updateBackingRowMapField" ],
  "com.google.common.collect.Tables$UnmodifiableTable:cellSet()" : [ "cellSet" ],
  "com.google.common.graph.DirectedMultiNetworkConnections:removeOutEdge(java.lang.Object)" : [ "removeOutEdge", "getReference", "checkState" ],
  "com.google.common.graph.DirectedGraphConnections$NodeConnection:<init>(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.ContiguousSet:closedOpen(int,int)" : [ "create", "integers" ],
  "com.google.common.collect.Synchronized$SynchronizedCollection:delegate()" : [ "delegate" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:nextIndex()" : [ "getDelegateListIterator" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$LinkedWeakKeyDummyValueEntry:getValue()" : [ "getValue" ],
  "com.google.common.primitives.Chars:fromByteArray(byte[])" : [ "checkArgument", "fromBytes" ],
  "com.google.common.io.LittleEndianDataInputStream:<init>(java.io.InputStream)" : [ "checkNotNull" ],
  "com.google.common.primitives.Ints:tryParse(java.lang.String,int)" : [ "tryParse" ],
  "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)" : [ "<init>" ],
  "com.google.common.collect.SortedMultisets$NavigableElementSet:descendingSet()" : [ "<init>" ],
  "com.google.common.primitives.Chars$CharArrayAsList:toString()" : [ "size" ],
  "com.google.common.math.StatsAccumulator:sampleVariance()" : [ "checkState", "ensureNonNegative" ],
  "com.google.common.math.LongMath:checkedPow(long,int)" : [ "checkNonNegative", "checkNoOverflow", "checkedMultiply" ],
  "com.google.common.collect.HashMultiset:clear()" : [ "clear" ],
  "com.google.common.collect.CompactHashMap$Itr:next()" : [ "checkForConcurrentModification", "hasNext", "getSuccessor" ],
  "com.google.common.graph.ValueGraphBuilder:directed()" : [ "<init>" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:orderValuesBy(java.util.Comparator)" : [ "orderValuesBy" ],
  "com.google.common.collect.MapMakerInternalMap$Values:isEmpty()" : [ "isEmpty" ],
  "com.google.common.collect.ArrayTable$Row:setValue(int,java.lang.Object)" : [ "set" ],
  "com.google.common.util.concurrent.AggregateFuture:addInitialException(java.util.Set)" : [ "checkNotNull", "addCausalChain" ],
  "com.google.common.collect.Synchronized$SynchronizedList:listIterator(int)" : [ "delegate" ],
  "com.google.common.collect.CompactHashMap:trimToSize()" : [ "needsAllocArrays", "delegateOrNull", "createHashFloodingResistantDelegate", "size", "requireEntries", "resizeEntries", "tableSize", "hashTableMask", "resizeTable" ],
  "com.google.common.reflect.TypeResolver$TypeMappingIntrospector:getTypeMappings(java.lang.reflect.Type)" : [ "checkNotNull", "copyOf" ],
  "com.google.common.collect.NaturalOrdering:nullsLast()" : [ "nullsLast" ],
  "com.google.common.collect.CollectSpliterators:flatMapToLong(java.util.Spliterator,java.util.function.Function,int,long)" : [ "<init>", "checkArgument", "checkNotNull" ],
  "com.google.common.collect.ImmutableMultiset:copyOf(java.lang.Iterable)" : [ "create", "copyFromEntries", "entrySet" ],
  "com.google.common.base.MoreObjects$ToStringHelper:toString()" : [ "isEmpty" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:toString()" : [ "toString" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)" : [ "newEntry" ],
  "com.google.common.collect.EnumBiMap:<init>(java.lang.Class,java.lang.Class)" : [ "<init>" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceListener:running()" : [ "transitionService" ],
  "com.google.common.collect.MapMakerInternalMap$HashIterator:advance()" : [ "nextInChain", "nextInTable" ],
  "com.google.common.collect.ForwardingIterator:<init>()" : [ "<init>" ],
  "com.google.common.io.BaseEncoding$StandardBaseEncoding:withSeparator(java.lang.String,int)" : [ "<init>", "checkArgument", "matches" ],
  "com.google.common.net.HostAndPort:getPortOrDefault(int)" : [ "hasPort" ],
  "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:compare(byte[],byte[])" : [ "compare" ],
  "com.google.common.hash.Hashing:concatenating(java.lang.Iterable)" : [ "checkNotNull", "checkArgument" ],
  "com.google.common.reflect.TypeToken$1:getGenericExceptionTypes()" : [ "getGenericExceptionTypes", "resolveTypesInPlace" ],
  "com.google.common.collect.ForwardingList:standardEquals(java.lang.Object)" : [ "equalsImpl" ],
  "com.google.common.hash.BloomFilter:writeTo(java.io.OutputStream)" : [ "checkedCast" ],
  "com.google.common.collect.Multisets$FilteredMultiset:<init>(com.google.common.collect.Multiset,com.google.common.base.Predicate)" : [ "checkNotNull" ],
  "com.google.common.reflect.Types$ParameterizedTypeImpl:equals(java.lang.Object)" : [ "getRawType", "getOwnerType", "getActualTypeArguments", "equal" ],
  "com.google.common.collect.ArrayTable:getValue(int)" : [ "at" ],
  "com.google.common.io.LittleEndianDataOutputStream:<init>(java.io.OutputStream)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.MoreExecutors$ListeningDecorator:<init>(java.util.concurrent.ExecutorService)" : [ "<init>", "checkNotNull" ],
  "com.google.common.reflect.TypeToken$InterfaceSet:readResolve()" : [ "getTypes", "interfaces" ],
  "com.google.common.collect.ObjectArrays:toArrayImpl(java.lang.Object[],int,int,java.lang.Object[])" : [ "checkPositionIndexes", "newArray" ],
  "com.google.common.math.StatsAccumulator:addAll(java.util.Iterator)" : [ "add" ],
  "com.google.common.collect.Iterators:concat(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator)" : [ "concat", "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeMap$2:subRangeMap(com.google.common.collect.Range)" : [ "subRangeMap", "of", "intersection", "isConnected" ],
  "com.google.common.hash.MessageDigestHashFunction:<init>(java.lang.String,java.lang.String)" : [ "getMessageDigest", "checkNotNull", "supportsClone" ],
  "com.google.common.math.Quantiles:selectAllInPlace(int[],int,int,double[],int,int)" : [ "chooseNextSelection", "selectInPlace" ],
  "com.google.common.reflect.TypeToken:<init>(java.lang.reflect.Type)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:headMap(java.lang.Object)" : [ "headMap" ],
  "com.google.common.collect.CompactHashSet:resizeTable(int,int,int,int)" : [ "createTable", "tableSet", "requireTable", "requireEntries", "tableGet", "getHashPrefix", "maskCombine", "getNext", "setHashTableMask" ],
  "com.google.common.hash.AbstractStreamingHasher:<init>(int,int)" : [ "checkArgument" ],
  "com.google.common.collect.TreeMultiset:aggregateAboveRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode)" : [ "comparator", "uncheckedCastNullableTToT", "getUpperEndpoint", "getElement", "getUpperBoundType" ],
  "com.google.common.collect.TreeRangeMap:merge(com.google.common.collect.Range,java.lang.Object,java.util.function.BiFunction)" : [ "<init>", "checkNotNull", "isEmpty", "split", "builder", "getLowerBound", "equals", "put", "getUpperBound", "build" ],
  "com.google.common.collect.ForwardingCollection:contains(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.ImmutableSortedSet:iterator()" : [ "iterator" ],
  "com.google.common.collect.AbstractBiMap$EntrySet:clear()" : [ "clear" ],
  "com.google.common.cache.LocalCache$Segment:reclaimValue(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference)" : [ "equivalent", "removeValueFromChain", "postWriteCleanup" ],
  "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.io.ByteStreams:newDataInput(byte[],int)" : [ "newDataInput", "checkPositionIndex" ],
  "com.google.common.collect.Multimaps:unmodifiableEntries(java.util.Collection)" : [ "<init>", "unmodifiableEntrySet" ],
  "com.google.common.collect.Maps$NavigableAsMapView:entryIterator()" : [ "asMapEntryIterator" ],
  "com.google.common.io.MultiReader:skip(long)" : [ "checkArgument", "advance" ],
  "com.google.common.cache.LocalCache:remove(java.lang.Object)" : [ "remove", "hash", "segmentFor" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:<init>(com.google.common.collect.ImmutableCollection)" : [ "<init>", "linkedHashSetValues", "newIdentityHashMap", "enumKeys" ],
  "com.google.common.util.concurrent.MoreExecutors:addDelayedShutdownHook(java.util.concurrent.ExecutorService,java.time.Duration)" : [ "addDelayedShutdownHook", "toNanosSaturated" ],
  "com.google.common.collect.ImmutableListMultimap$Builder:orderKeysBy(java.util.Comparator)" : [ "orderKeysBy" ],
  "com.google.common.collect.ForwardingNavigableMap:standardTailMap(java.lang.Object)" : [ "tailMap" ],
  "com.google.common.collect.ImmutableSortedMap:headMap(java.lang.Object)" : [ "headMap" ],
  "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "entryOf" ],
  "com.google.common.collect.ComparisonChain$1:compare(int,int)" : [ "compare" ],
  "com.google.common.reflect.Types$WildcardTypeImpl:toString()" : [ "typeName", "iterator" ],
  "com.google.common.collect.ForwardingMultiset:elementSet()" : [ "delegate" ],
  "com.google.common.base.CaseFormat$5:normalizeWord(java.lang.String)" : [ "toUpperCase" ],
  "com.google.common.reflect.TypeToken:constructor(java.lang.reflect.Constructor)" : [ "checkArgument", "getRawType" ],
  "com.google.common.io.ByteSource:wrap(byte[])" : [ "<init>" ],
  "com.google.common.primitives.ImmutableDoubleArray$AsList:indexOf(java.lang.Object)" : [ "indexOf" ],
  "com.google.common.collect.StandardTable$Column:get(java.lang.Object)" : [ "get" ],
  "com.google.common.collect.ContiguousSet:tailSet(java.lang.Object)" : [ "tailSet" ],
  "com.google.common.primitives.Floats:indexOf(float[],float[])" : [ "checkNotNull" ],
  "com.google.common.collect.Range:isConnected(com.google.common.collect.Range)" : [ "compareTo" ],
  "com.google.common.collect.ArrayTable$ArrayMap:getEntry(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.Synchronized$SynchronizedTable:containsColumn(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.TopKSelector:offer(java.lang.Object)" : [ "uncheckedCastNullableTToT", "trim" ],
  "com.google.common.io.Files:map(java.io.File,java.nio.channels.FileChannel$MapMode)" : [ "mapInternal" ],
  "com.google.common.collect.ImmutableTable:contains(java.lang.Object,java.lang.Object)" : [ "get" ],
  "com.google.common.base.Joiner$1:toString(java.lang.Object)" : [ "toString" ],
  "com.google.common.collect.Collections2$TransformedCollection:iterator()" : [ "transform" ],
  "com.google.common.graph.Graphs:transpose(com.google.common.graph.Graph)" : [ "<init>" ],
  "com.google.common.util.concurrent.ForwardingListenableFuture:delegate()" : [ "delegate" ],
  "com.google.common.collect.ForwardingCollection:<init>()" : [ "<init>" ],
  "com.google.common.collect.TableCollectors$MutableCell:merge(java.lang.Object,java.util.function.BinaryOperator)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.Monitor:enterWhen(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)" : [ "enterWhen", "toNanosSaturated" ],
  "com.google.common.collect.ForwardingNavigableMap:pollLastEntry()" : [ "delegate" ],
  "com.google.common.collect.LinkedListMultimap:containsValue(java.lang.Object)" : [ "values" ],
  "com.google.common.collect.ForwardingDeque:addLast(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.FluentIterable:toList()" : [ "copyOf", "getDelegate" ],
  "com.google.common.graph.ImmutableNetwork:edges()" : [ "edges" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:lower(java.lang.Object)" : [ "getSortedSetDelegate" ],
  "com.google.common.collect.Range:isEmpty()" : [ "equals" ],
  "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)" : [ "<init>" ],
  "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:hasNext()" : [ "checkForConcurrentModification" ],
  "com.google.common.collect.ImmutableList:asImmutableList(java.lang.Object[])" : [ "asImmutableList" ],
  "com.google.common.hash.BloomFilter:approximateElementCount()" : [ "bitSize", "bitCount", "roundToLong" ],
  "com.google.common.collect.LinkedHashMultiset:writeObject(java.io.ObjectOutputStream)" : [ "writeMultiset" ],
  "com.google.common.escape.UnicodeEscaper:<init>()" : [ "<init>" ],
  "com.google.common.collect.HashBiMap$Inverse:get(java.lang.Object)" : [ "keyOrNull", "smearedHash" ],
  "com.google.common.graph.AbstractValueGraph:inDegree(java.lang.Object)" : [ "inDegree" ],
  "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" : [ "builder", "put", "build" ],
  "com.google.common.collect.HashBasedTable:remove(java.lang.Object,java.lang.Object)" : [ "remove" ],
  "com.google.common.graph.StandardNetwork:adjacentNodes(java.lang.Object)" : [ "checkedConnections" ],
  "com.google.common.base.PairwiseEquivalence:doHash(java.lang.Iterable)" : [ "hash" ],
  "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:hasPrevious()" : [ "getDelegateListIterator" ],
  "com.google.common.base.Ascii:toUpperCase(java.lang.String)" : [ "isLowerCase" ],
  "com.google.common.util.concurrent.RateLimiter:toString()" : [ "getRate" ],
  "com.google.common.collect.NullsFirstOrdering:nullsLast()" : [ "nullsLast" ],
  "com.google.common.base.Stopwatch:toString()" : [ "elapsedNanos", "chooseUnit", "formatCompact4Digits", "abbreviate" ],
  "com.google.common.collect.ImmutableSetMultimap$Builder:orderValuesBy(java.util.Comparator)" : [ "orderValuesBy" ],
  "com.google.common.collect.FluentIterable:join(com.google.common.base.Joiner)" : [ "join" ],
  "com.google.common.collect.MapMakerInternalMap$Segment:containsKey(java.lang.Object,int)" : [ "getLiveEntry", "postReadCleanup" ],
  "com.google.common.io.CharSource:length()" : [ "lengthIfKnown", "create", "register", "countBySkipping", "rethrow", "close" ],
  "com.google.common.collect.ForwardingMap:containsValue(java.lang.Object)" : [ "delegate" ],
  "com.google.common.collect.MinMaxPriorityQueue$Heap:fillHoleAt(int)" : [ "findMinGrandChild", "elementData" ],
  "com.google.common.collect.Synchronized$SynchronizedSortedSet:delegate()" : [ "delegate" ],
  "com.google.common.graph.AbstractGraph:inDegree(java.lang.Object)" : [ "inDegree" ],
  "com.google.common.collect.ConcurrentHashMultiset:add(java.lang.Object,int)" : [ "checkNotNull", "count", "checkPositive", "safeGet", "checkedAdd" ],
  "com.google.common.collect.Sets$FilteredSet:<init>(java.util.Set,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.io.CharSink:writeLines(java.lang.Iterable)" : [ "writeLines" ],
  "com.google.common.reflect.Types$GenericArrayTypeImpl:equals(java.lang.Object)" : [ "getGenericComponentType", "equal" ],
  "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule:<init>(java.time.Duration)" : [ "<init>", "toNanosSaturated" ],
  "com.google.common.collect.ImmutableMultimap$Keys:getEntry(int)" : [ "entrySet", "immutableEntry" ],
  "com.google.common.collect.ForwardingSortedSet:tailSet(java.lang.Object)" : [ "delegate" ],
  "com.google.common.hash.BloomFilter:writeReplace()" : [ "<init>" ],
  "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,java.lang.Object)" : [ "addHolder" ],
  "com.google.common.cache.LocalCache$AbstractCacheSet:size()" : [ "size" ],
  "com.google.common.math.Stats:readFrom(java.nio.ByteBuffer)" : [ "<init>", "checkNotNull", "checkArgument" ],
  "com.google.common.util.concurrent.MoreExecutors:addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)" : [ "addDelayedShutdownHook" ],
  "com.google.common.math.Stats:of(java.util.stream.IntStream)" : [ "<init>", "snapshot", "add", "addAll" ],
  "com.google.common.primitives.Chars:constrainToRange(char,char,char)" : [ "checkArgument" ],
  "com.google.common.collect.HashBiMap$Inverse:writeReplace()" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedMultimap:putAll(java.lang.Object,java.lang.Iterable)" : [ "delegate" ],
  "com.google.common.collect.Synchronized:deque(java.util.Deque,java.lang.Object)" : [ "<init>" ],
  "com.google.common.collect.Synchronized$SynchronizedEntry:getValue()" : [ "delegate" ],
  "com.google.common.util.concurrent.Monitor:enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)" : [ "enterWhenUninterruptibly", "toNanosSaturated" ],
  "com.google.common.io.LittleEndianDataInputStream:readInt()" : [ "readAndCheckByte", "fromBytes" ],
  "com.google.common.primitives.ImmutableIntArray$Builder:addAll(int[])" : [ "ensureRoomFor" ],
  "com.google.common.io.MoreFiles:deleteDirectoryContentsInsecure(java.nio.file.DirectoryStream)" : [ "concat", "deleteRecursivelyInsecure", "addException" ],
  "com.google.common.util.concurrent.ForwardingBlockingDeque:offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit)" : [ "delegate" ],
  "com.google.common.primitives.UnsignedInteger:valueOf(long)" : [ "checkArgument", "fromIntBits" ],
  "com.google.common.collect.Maps:asConverter(com.google.common.collect.BiMap)" : [ "<init>" ],
  "com.google.common.collect.Maps$SortedKeySet:last()" : [ "map" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:pollFirstEntry()" : [ "delegate" ],
  "com.google.common.collect.JdkBackedImmutableMap:createEntrySet()" : [ "<init>" ],
  "com.google.common.escape.Escapers$1:<init>()" : [ "<init>" ],
  "com.google.common.collect.TreeTraverser:postOrderTraversal(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.Synchronized$SynchronizedMap:keySet()" : [ "set", "delegate" ],
  "com.google.common.collect.ForwardingMapEntry:setValue(java.lang.Object)" : [ "delegate" ],
  "com.google.common.util.concurrent.AbstractListeningExecutorService:newTaskFor(java.lang.Runnable,java.lang.Object)" : [ "create" ],
  "com.google.common.collect.MapMakerInternalMap:clear()" : [ "clear" ],
  "com.google.common.collect.ArrayTable:contains(java.lang.Object,java.lang.Object)" : [ "containsRow", "containsColumn" ],
  "com.google.common.cache.LocalCache$LocalManualCache:cleanUp()" : [ "cleanUp" ],
  "com.google.common.collect.FilteredKeySetMultimap:<init>(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)" : [ "<init>" ],
  "com.google.common.hash.AbstractNonStreamingHashFunction:newHasher()" : [ "newHasher" ],
  "com.google.common.collect.Sets:cartesianProduct(java.util.List)" : [ "create" ],
  "com.google.common.collect.ImmutableBiMap:builderWithExpectedSize(int)" : [ "<init>", "checkNonnegative" ],
  "com.google.common.collect.EnumMultiset$Itr:remove()" : [ "checkRemove" ],
  "com.google.common.collect.AbstractMapBasedMultimap:replaceValues(java.lang.Object,java.lang.Iterable)" : [ "removeAll", "getOrCreateCollection", "unmodifiableCollectionSubclass" ],
  "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture:<init>(com.google.common.util.concurrent.ListenableFuture)" : [ "run" ],
  "com.google.common.collect.ImmutableBiMap:inverse()" : [ "inverse" ],
  "com.google.common.util.concurrent.AbstractService:dispatchListenerEvents()" : [ "isOccupiedByCurrentThread", "dispatch" ],
  "com.google.common.util.concurrent.MoreExecutors$Application:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit)" : [ "addDelayedShutdownHook" ],
  "com.google.common.collect.MultimapBuilder$TreeSetSupplier:<init>(java.util.Comparator)" : [ "checkNotNull" ],
  "com.google.common.primitives.SignedBytes:sortDescending(byte[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.primitives.Primitives:wrap(java.lang.Class)" : [ "checkNotNull" ],
  "com.google.common.collect.HashBasedTable:create()" : [ "<init>" ],
  "com.google.common.base.Converter$ReverseConverter:equals(java.lang.Object)" : [ "equals" ],
  "com.google.common.collect.JdkBackedImmutableMap:createKeySet()" : [ "<init>" ],
  "com.google.common.base.Equivalence:equivalentTo(java.lang.Object)" : [ "<init>" ],
  "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:<init>(long[])" : [ "checkArgument" ],
  "com.google.common.primitives.Floats$FloatArrayAsList:get(int)" : [ "checkElementIndex", "size" ],
  "com.google.common.collect.ForwardingMultiset:standardAddAll(java.util.Collection)" : [ "addAllImpl" ],
  "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:retainAll(java.util.Collection)" : [ "checkNotNull", "newArrayList", "columnKeySet", "immutableEntry", "column" ],
  "com.google.common.collect.ImmutableTable$Builder:putAll(com.google.common.collect.Table)" : [ "put" ],
  "com.google.common.collect.Sets:combinations(java.util.Set,int)" : [ "indexMap", "checkNonnegative", "checkArgument", "of", "keySet" ],
  "com.google.common.collect.TreeRangeSet:addAll(com.google.common.collect.RangeSet)" : [ "addAll" ],
  "com.google.common.collect.Maps$FilteredEntryNavigableMap:descendingMap()" : [ "filterEntries" ],
  "com.google.common.io.BaseEncoding:decode(java.lang.CharSequence)" : [ "decodeChecked" ],
  "com.google.common.collect.LinkedListMultimap:putAll(com.google.common.collect.Multimap)" : [ "putAll" ],
  "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate:doStart()" : [ "renamingDecorator", "executor" ],
  "com.google.common.collect.ImmutableMultiset$Builder:build()" : [ "copyOf" ],
  "com.google.common.collect.Maps:subMap(java.util.NavigableMap,com.google.common.collect.Range)" : [ "natural", "hasLowerBound", "hasUpperBound", "checkArgument", "lowerEndpoint", "upperEndpoint", "lowerBoundType", "upperBoundType", "checkNotNull" ],
  "com.google.common.collect.ImmutableList:copyOf(java.lang.Object[])" : [ "of" ],
  "com.google.common.collect.Lists$ReverseList:<init>(java.util.List)" : [ "checkNotNull" ],
  "com.google.common.collect.ImmutableMultiset:toString()" : [ "entrySet" ],
  "com.google.common.collect.EmptyContiguousSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "subSetImpl" ],
  "com.google.common.graph.StandardMutableValueGraph:addNodeInternal(java.lang.Object)" : [ "newConnections", "checkState", "put" ],
  "com.google.common.base.Converter:correctedDoForward(java.lang.Object)" : [ "checkNotNull", "unsafeDoForward" ],
  "com.google.common.collect.Maps$TransformedEntriesNavigableMap:descendingKeySet()" : [ "fromMap" ],
  "com.google.common.collect.SparseImmutableTable:getValue(int)" : [ "values", "asList" ],
  "com.google.common.util.concurrent.CollectionFuture:releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason)" : [ "releaseResources" ],
  "com.google.common.cache.LocalCache:<init>(com.google.common.cache.CacheBuilder,com.google.common.cache.CacheLoader)" : [ "getConcurrencyLevel", "getKeyStrength", "getValueStrength", "getKeyEquivalence", "getValueEquivalence", "getMaximumWeight", "getWeigher", "getExpireAfterAccessNanos", "getExpireAfterWriteNanos", "getRefreshNanos", "getRemovalListener", "discardingQueue", "getTicker", "recordsTime", "getFactory", "usesAccessEntries", "usesWriteEntries", "getStatsCounterSupplier", "getInitialCapacity", "evictsBySize", "customWeigher", "newSegmentArray", "createSegment" ],
  "com.google.common.collect.ForwardingNavigableSet:delegate()" : [ "delegate" ],
  "com.google.common.collect.MapMakerInternalMap$SerializationProxy:readObject(java.io.ObjectInputStream)" : [ "makeMap" ],
  "com.google.common.io.ByteSource:countBySkipping(java.io.InputStream)" : [ "skipUpTo" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:reverseIndex(int)" : [ "size" ],
  "com.google.common.primitives.Longs:tryParse(java.lang.String)" : [ "tryParse" ],
  "com.google.common.hash.Hashing:murmur3_32_fixed(int)" : [ "<init>" ],
  "com.google.common.math.LongMath$MillerRabinTester$2:squareMod(long,long)" : [ "remainder" ],
  "com.google.common.cache.LocalCache:getIfPresent(java.lang.Object)" : [ "hash", "checkNotNull", "segmentFor", "get" ],
  "com.google.common.collect.Maps:difference(java.util.SortedMap,java.util.Map)" : [ "<init>", "checkNotNull", "orNaturalOrder", "newTreeMap", "doDifference", "equals" ],
  "com.google.common.hash.Hashing:checkPositiveAndMakeMultipleOf32(int)" : [ "checkArgument" ],
  "com.google.common.collect.ImmutableSetMultimap:copyOf(com.google.common.collect.Multimap)" : [ "copyOf" ],
  "com.google.common.primitives.UnsignedInts:sortDescending(int[])" : [ "sortDescending", "checkNotNull" ],
  "com.google.common.collect.TreeMultimap:create(com.google.common.collect.Multimap)" : [ "<init>", "natural" ],
  "com.google.common.collect.SparseImmutableTable:getCell(int)" : [ "entrySet" ],
  "com.google.common.cache.LocalCache$EntrySet:remove(java.lang.Object)" : [ "remove" ],
  "com.google.common.util.concurrent.Uninterruptibles:awaitUninterruptibly(java.util.concurrent.locks.Condition,java.time.Duration)" : [ "awaitUninterruptibly", "toNanosSaturated" ],
  "com.google.thirdparty.publicsuffix.PublicSuffixType:fromCode(char)" : [ "getInnerNodeCode", "getLeafNodeCode" ],
  "com.google.common.collect.ImmutableSet$CachingAsList:asList()" : [ "createAsList" ],
  "com.google.common.collect.Ordering:reverse()" : [ "<init>" ],
  "com.google.common.collect.CollectSpliterators$FlatMapSpliterator:trySplit()" : [ "estimateSize" ],
  "com.google.common.collect.TreeRangeSet$SubRangeSet:remove(com.google.common.collect.Range)" : [ "remove", "isConnected", "intersection" ],
  "com.google.common.collect.ImmutableSet$Builder:build()" : [ "review" ],
  "com.google.common.util.concurrent.Service:awaitRunning(java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.base.Absent:<init>()" : [ "<init>" ],
  "com.google.common.hash.HashCode:fromBytes(byte[])" : [ "checkArgument", "fromBytesNoCopy" ],
  "com.google.common.primitives.ImmutableIntArray:<init>(int[])" : [ "<init>" ],
  "com.google.common.graph.ImmutableNetwork:incidentEdges(java.lang.Object)" : [ "incidentEdges" ],
  "com.google.common.collect.Synchronized$SynchronizedNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)" : [ "navigableMap", "delegate" ],
  "com.google.common.base.CharMatcher$None:or(com.google.common.base.CharMatcher)" : [ "checkNotNull" ],
  "com.google.common.util.concurrent.AggregateFuture:releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason)" : [ "checkNotNull" ],
  "com.google.common.reflect.Invokable$ConstructorInvokable:<init>(java.lang.reflect.Constructor)" : [ "<init>" ],
  "com.google.common.reflect.ClassPath$ResourceInfo:asByteSource()" : [ "asByteSource", "url" ],
  "com.google.common.collect.Collections2:newStringBuilderForCollection(int)" : [ "checkNonnegative" ],
  "com.google.common.io.BaseEncoding$SeparatedBaseEncoding:<init>(com.google.common.io.BaseEncoding,java.lang.String,int)" : [ "<init>", "checkNotNull", "checkArgument" ],
  "com.google.common.collect.Maps$KeySet:remove(java.lang.Object)" : [ "contains", "map" ],
  "com.google.common.collect.ImmutableMultimap$Builder:put(java.util.Map$Entry)" : [ "put" ],
  "com.google.common.util.concurrent.Futures:whenAllComplete(java.lang.Iterable)" : [ "copyOf" ],
  "com.google.common.collect.CompactLinkedHashSet:init(int)" : [ "init" ],
  "com.google.common.primitives.Booleans$BooleanArrayAsList:<init>(boolean[])" : [ "<init>" ],
  "com.google.common.net.InternetDomainName:publicSuffix()" : [ "hasPublicSuffix", "ancestor", "publicSuffixIndex" ],
  "com.google.common.collect.LinkedHashMultiset:size()" : [ "size" ],
  "com.google.common.cache.LocalCache$Segment:runUnlockedCleanup()" : [ "processPendingNotifications" ],
  "com.google.common.util.concurrent.CycleDetectingLockFactory:getOrCreateNodes(java.lang.Class)" : [ "createNodes", "firstNonNull" ],
  "com.google.common.collect.Iterators:transform(java.util.Iterator,com.google.common.base.Function)" : [ "checkNotNull" ],
  "com.google.common.collect.ObjectArrays:concat(java.lang.Object[],java.lang.Object[],java.lang.Class)" : [ "newArray" ],
  "com.google.common.net.MediaType:hashCode()" : [ "parametersAsMap" ],
  "com.google.common.net.InetAddresses:textToNumericFormatV6(java.lang.String)" : [ "countIn", "parseHextet" ],
  "com.google.common.collect.RegularContiguousSet:contains(java.lang.Object)" : [ "contains" ],
  "com.google.common.collect.SingletonImmutableTable:<init>(java.lang.Object,java.lang.Object,java.lang.Object)" : [ "<init>", "checkNotNull" ],
  "com.google.common.collect.Maps$NavigableKeySet:headSet(java.lang.Object,boolean)" : [ "map" ],
  "com.google.common.collect.ImmutableSortedSet$Builder:add(java.lang.Object)" : [ "checkNotNull", "sortAndDedup", "expandedCapacity" ],
  "com.google.common.collect.CompactHashMap:keySetIterator()" : [ "delegateOrNull" ],
  "com.google.common.collect.Maps$TransformedEntriesMap:getOrDefault(java.lang.Object,java.lang.Object)" : [ "uncheckedCastNullableTToT" ],
  "com.google.common.primitives.ImmutableIntArray$AsList:get(int)" : [ "get" ],
  "com.google.common.collect.ImmutableList$ReverseImmutableList:listIterator()" : [ "listIterator" ],
  "com.google.common.reflect.TypeToken:boundsAsInterfaces(java.lang.reflect.Type[])" : [ "builder", "of", "getRawType", "add", "build" ],
  "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)" : [ "<init>" ],
  "com.google.common.collect.ImmutableRangeSet$AsSet:headSetImpl(java.lang.Comparable,boolean)" : [ "subSet", "forBoolean" ],
  "com.google.common.hash.AbstractStreamingHasher:munchIfFull()" : [ "munch" ],
  "com.google.common.collect.MapMakerInternalMap:createWithDummyValues(com.google.common.collect.MapMaker)" : [ "<init>", "getKeyStrength", "getValueStrength", "instance" ],
  "com.google.common.collect.CollectCollectors:toImmutableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" : [ "checkNotNull", "copyOf" ],
  "com.google.common.collect.FluentIterable:toSet()" : [ "copyOf", "getDelegate" ],
  "com.google.common.util.concurrent.RateLimiter:acquire(int)" : [ "reserve" ],
  "com.google.common.collect.Iterables:getLast(java.lang.Iterable)" : [ "getLast", "getLastInNonemptyList" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:comparator()" : [ "sortedMap" ],
  "com.google.common.io.MultiReader:read(char[],int,int)" : [ "checkNotNull", "advance" ],
  "com.google.common.collect.Maps$ViewCachingAbstractMap:createKeySet()" : [ "<init>" ],
  "com.google.common.collect.HashBiMap$InverseSerializedForm:readResolve()" : [ "inverse" ],
  "com.google.common.util.concurrent.ListeningExecutorService:invokeAll(java.util.Collection,java.time.Duration)" : [ "toNanosSaturated" ],
  "com.google.common.io.ByteStreams:newDataInput(java.io.ByteArrayInputStream)" : [ "<init>", "checkNotNull" ],
  "com.google.common.base.CharMatcher:negate()" : [ "<init>" ],
  "com.google.common.collect.Maps:transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer)" : [ "<init>" ],
  "com.google.common.collect.ImmutableTable:copyOf(com.google.common.collect.Table)" : [ "copyOf" ],
  "com.google.common.primitives.Shorts:checkedCast(long)" : [ "checkArgument" ],
  "com.google.common.collect.Maps$KeySet:size()" : [ "map" ],
  "com.google.common.collect.ImmutableListMultimap:inverse()" : [ "invert" ],
  "com.google.common.collect.Maps$FilteredEntrySortedMap:subMap(java.lang.Object,java.lang.Object)" : [ "<init>", "sortedMap" ],
  "com.google.common.cache.LocalCache:createSegment(int,long,com.google.common.cache.AbstractCache$StatsCounter)" : [ "<init>" ],
  "com.google.common.hash.MacHashFunction$MacHasher:update(byte[],int,int)" : [ "checkNotDone" ],
  "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl:add(java.lang.Object)" : [ "checkNotNull" ],
  "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:tailSet(java.lang.Object)" : [ "sortedMap" ],
  "com.google.common.collect.LinkedHashMultimap$ValueSet:add(java.lang.Object)" : [ "<init>", "smearedHash", "mask", "matchesValue", "getPredecessorInMultimap", "rehashIfNecessary" ],
  "com.google.common.hash.Murmur3_32HashFunction:hashLong(long)" : [ "mixK1", "mixH1", "fmix" ],
  "com.google.common.collect.FluentIterable:from(com.google.common.collect.FluentIterable)" : [ "checkNotNull" ],
  "com.google.common.collect.Lists:newArrayList(java.lang.Iterable)" : [ "newArrayList", "checkNotNull" ],
  "com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm:readResolve()" : [ "<init>", "asSet" ],
  "com.google.common.collect.EnumBiMap:create(java.util.Map)" : [ "create", "inferKeyTypeOrObjectUnderJ2cl", "inferValueTypeOrObjectUnderJ2cl", "putAll" ],
  "com.google.common.base.Splitter:withKeyValueSeparator(char)" : [ "withKeyValueSeparator", "on" ],
  "com.google.common.collect.Sets$DescendingSet:reverse(java.util.Comparator)" : [ "reverse", "from" ],
  "com.google.common.collect.ImmutableMultimap:createEntries()" : [ "<init>" ],
  "com.google.common.util.concurrent.MoreExecutors$Application:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor)" : [ "getExitingScheduledExecutorService" ],
  "com.google.common.primitives.Bytes:indexOf(byte[],byte)" : [ "indexOf" ],
  "com.google.common.collect.CollectSpliterators$FlatMapSpliteratorOfLong:trySplit()" : [ "trySplit" ],
  "com.google.common.util.concurrent.Uninterruptibles:getUninterruptibly(java.util.concurrent.Future,java.time.Duration)" : [ "getUninterruptibly", "toNanosSaturated" ],
  "com.google.common.collect.RegularImmutableSortedSet:containsAll(java.util.Collection)" : [ "hasSameComparator", "iterator" ],
  "com.google.common.collect.TreeRangeMap:remove(com.google.common.collect.Range)" : [ "isEmpty", "getUpperBound", "compareTo", "putRangeMapEntry", "getLowerBound" ],
  "com.google.common.collect.AbstractBiMap$EntrySet:contains(java.lang.Object)" : [ "containsEntryImpl", "delegate" ],
  "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:enqueueHealthyEvent()" : [ "enqueue" ],
  "com.google.common.collect.SingletonImmutableBiMap:<init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableBiMap)" : [ "<init>" ],
  "com.google.common.collect.Tables$TransposeTable:cellSpliterator()" : [ "map" ],
  "com.google.common.collect.DescendingMultiset:comparator()" : [ "from", "reverse" ],
  "com.google.common.io.CharStreams:copy(java.lang.Readable,java.lang.Appendable)" : [ "copyReaderToBuilder", "copyReaderToWriter", "asWriter", "checkNotNull", "createBuffer", "flip", "clear" ],
  "com.google.common.graph.ImmutableGraph$Builder:<init>(com.google.common.graph.GraphBuilder)" : [ "copy", "incidentEdgeOrder", "stable", "build" ],
  "com.google.common.util.concurrent.Futures$InCompletionOrderState:recordOutputCancellation(boolean)" : [ "recordCompletion" ],
  "com.google.common.base.Joiner:withKeyValueSeparator(char)" : [ "withKeyValueSeparator" ],
  "com.google.common.math.BigIntegerMath:sqrtFloor(java.math.BigInteger)" : [ "log2", "sqrtApproxWithDoubles" ],
  "com.google.common.io.ByteSource$ConcatenatedByteSource:<init>(java.lang.Iterable)" : [ "<init>", "checkNotNull" ],
  "com.google.common.cache.CacheBuilderSpec$MaximumSizeParser:parseLong(com.google.common.cache.CacheBuilderSpec,long)" : [ "checkArgument" ],
  "com.google.common.base.SmallCharMatcher:<init>(char[],long,boolean,java.lang.String)" : [ "<init>" ],
  "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:containsKey(java.lang.Object)" : [ "containsKey" ]
}