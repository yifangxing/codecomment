1 Retrieves an exiting executor service instance. @param executor ThreadPoolExecutor instance to wrap
2 Returns an exiting executor service with a specified termination timeout. @param executor existing thread pool executor @param terminationTimeout duration before shutting down the executor
3 Retrieves a scheduled executor service with exit handling. @param executor existing thread pool executor
4 Retrieves an existing scheduled executor service with a specified termination timeout. @param executor Scheduled thread pool executor @param terminationTimeout duration in nanoseconds before shutdown
5 Evicts entries from the segment to maintain size within bounds. @param newest the newest entry by weight
6 Awaits until the health check is successful or times out. @param timeout maximum duration to wait before throwing an exception
7 Returns a map of service to startup duration in milliseconds.
8 Fetches annotations of specified type from this element. @param annotationType Class of the annotations to search for @return Array of annotations found or null if none exist
9 Creates a new ReentrantLock with the specified name. @param lockName unique identifier for the lock
10 Creates a new Reentrant Read-Write Lock with the specified name. @param lockName unique identifier for the lock
11 Validates the syntax of a command by checking each part. @param parts list of command parts @return true if syntax is valid, false otherwise
12 Registers a listener by adding its subscriber methods to the corresponding event type. @param listener object with subscriber methods
13 Removes event subscriber registrations for the given listener. @param listener object to unregister from events
14 Creates an immutable network builder.
15 Creates an induced subgraph from the given nodes. @param graph parent graph @param nodes iterable of node identifiers to include @return MutableGraph representing the subgraph or null if invalid input
16 Creates a deep copy of the given graph. @param graph original graph to copy @return MutableGraph object representing the copied graph
17 Returns an immutable builder for the value graph. @return Builder for immutable ValueGraph
18 Combines filtered map and entry predicate to create a new filtered map. @param map original filtered map @param entryPredicate additional filter for entries @return new filtered BiMap instance
19 Filters a navigable map's entries using the provided predicate. @param unfiltered original map to filter @param entryPredicate predicate to apply to each entry @return filtered NavigableMap or null if input is invalid
20 Filters a sorted map based on the provided predicate. @param unfiltered input map to be filtered @param entryPredicate filter criteria for each entry @return filtered sorted map or null if input is not FilteredEntrySortedMap
21 Filters a map by applying the given predicate to its values. @param unfiltered original map @param valuePredicate predicate for filtering values @return new map with filtered values or null if all entries removed
22 Converts a stream of objects to an immutable map, applying the specified key and value functions. @param keyFunction maps each object to its unique key @param valueFunction maps each object to its associated value @param mergeFunction merges values for duplicate keys
23 Converts a collection of elements to an immutable range map. @param keyFunction function to extract the range key @param valueFunction function to extract the associated value
24 Creates a sorted multiset from the given iterable of elements. @param elements input iterable to be copied
25 Builds and returns an ImmutableSortedMultiset instance from existing sorted multiset data. @return ImmutableSortedMultiset object representing the built collection.
26 Creates a wildcard type that extends the given upper bound. @param upperBound the supertype of the wildcard type
27 Creates a WildcardType that is a supertype of the given Type, allowing any Object. @param lowerBound minimum type bound
28 Generates all ordered permutations of input elements. @param elements iterable collection of elements to permute @param comparator ordering comparator for the permutation order
29 Converts delegate iterable to a sorted, immutable list. @param comparator comparison function for sorting @return ImmutableList of elements in sorted order or null if not found
30 Creates an immutable copy of the specified collection. @param elements Collection to be copied
31 Builds and returns an immutable bi-map. This is a convenience method that simply calls {@link #buildOrThrow()}.
32 Builds an immutable map and throws any exception that occurs. @return ImmutableMap of K to V or null if build fails
33 Builds an immutable map keeping only the last entry. @return An empty map if no entries were kept
34 Returns an immutable sorted map containing all entries with keys less than the specified key. @param toKey upper bound of the returned map's key range
35 Returns a sub-map of this map, containing keys within the specified range. @param fromKey starting key @param fromInclusive whether starting key is inclusive @param toKey ending key @param toInclusive whether ending key is inclusive
36 Returns an immutable map containing all entries with keys greater than or equal to the specified key. @param fromKey key to start including in the returned map
37 Creates an immutable sorted map from the given entries. @param entries Iterable of key-value pairs
38 Creates an immutable sorted map from the given map, using natural order for keys. @param map input map to copy from
39 Creates an immutable sorted map from the given map and comparator. @param map map to copy @param comparator key comparator for sorting @return ImmutableSortedMap instance
40 Generates Cartesian product of input sets. @param sets collection of sets to combine @return set of lists representing all possible combinations
41 Removes the exact object from the queue. @param target Object to be removed @return true if removed, false otherwise
42 Removes and returns an element at specified index. @param index position of the element to remove
43 Creates an immutable set from the given iterable. @param elements collection of elements to be copied
44 Creates an Invokable for a constructor. @param constructor the Constructor to create an Invokable for
45 Checks if this type is a subtype of the given supertype. @param supertype the supertype to check against @return true if this type is a subtype, false otherwise
46 Creates an Invokable instance for the given Method. @param method the target method to invoke
