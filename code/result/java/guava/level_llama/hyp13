1 Retrieves the live value associated with a given cache entry. @param entry ReferenceEntry object to retrieve value for @param now current timestamp in nanoseconds @return live value if present, null otherwise
2 Performs pre-write cleanup of cache entries. Calls runLockedCleanup to drain reference queues and expire expired entries. @param now current timestamp in nanoseconds
3 Resolves a given TypeVariable by delegating to specific resolvers based on its dependencies. @param var non-null type variable @param forDependants TypeTable object containing dependencies
4 Retrieves the generic return type of this constructor.
5 Resolves runtime type using a TypeResolver and creates a SimpleTypeToken. @return Object representing the resolved type
6 Creates a traverser for file trees. @return Traverser instance for navigating file structures
7 Creates a HostSpecifier from a valid string specifier. @param specifier input string in the format "host[:port]" or IP address
8 Constructs an InternetDomainName object representing the specified ancestor domain. @param levels number of levels to traverse up the domain hierarchy
9 Creates a child domain by appending given parts to the current domain. @param leftParts additional domain parts to be appended
10 Validates an internet domain name by attempting to create a valid InternetDomainName object. @param name the input domain name to be validated @return true if the domain is valid, false otherwise
11 Creates a collector for accumulating elements into an immutable list-based multimap. @param keyFunction function to extract the key from each element @param valuesFunction function to generate a stream of values for each element
12 Creates an ImmutableMultimap instance with a single key-value pair. @param k1 unique key @param v1 associated value
13 Creates an ImmutableListMultimap instance with a key-value pair. @param k1 unique key @param v1 associated value @param k2 unique key @param v2 associated value
14 Creates an ImmutableListMultimap instance with the specified key-value pairs. @param k1 first unique key @param v1 associated value for k1 @param k2 second unique key @param v2 associated value for k2 @param k3 third unique key @param v3 associated value for k3
15 Creates an ImmutableListMultimap instance with four key-value pairs. @param k1 unique key @param v1 associated value @param k2 unique key @param v2 associated value @param k3 unique key @param v3 associated value @param k4 unique key @param v4 associated value
16 Creates an ImmutableListMultimap instance with the specified key-value pairs. @param k1 unique key @param v1 associated value @param k2 unique key @param v2 associated value @param k3 unique key @param v3 associated value @param k4 unique key @param v4 associated value @param k5 unique key @param v5 associated value
17 Creates a copy of the provided multimap from key-value pairs. @param entries iterable collection of Entries to replicate
18 Builds an ImmutableListMultimap instance from an iterator of values and a key-function. @param values iterator of values to index @param keyFunction function mapping each value to its corresponding key @return ImmutableListMultimap object or empty if input is empty
19 Adds or updates media type parameters. @param attribute parameter name @param values associated parameter values @return the updated MediaType object
20 Converts a stream of data into an immutable multiset map. @param keyFunction function to extract the key from each element @param valueFunction function to extract the value from each element
21 Returns an inverted multimap instance. @return a new ImmutableSetMultimap with keys and values swapped
22 Marks the service manager as ready, checking for potential asynchronous transitions. @throws IllegalArgumentException if services are transitioning asynchronously
23 Returns a multimap of services grouped by state. @return ImmutableSetMultimap containing service-state mappings
24 Creates an immutable map with unique keys from the iterable delegate using the given key function. @param keyFunction function to extract unique keys from values @return ImmutableMap instance or null if delegate is not set
25 Creates an ArrayTable instance from a given Table, potentially reusing an existing ArrayTable if the input matches. @param table the source Table to create ArrayTable from
26 Creates an immutable network copy from the constructed mutable network. @return ImmutableNetwork instance
27 Creates an immutable copy of the constructed graph. @return ImmutableValueGraph object or null if not found
28 Constructs a TypeToken instance from the given class, resolving its type if necessary. @param declaringClass Class to capture and resolve type for
29 Creates an empty MinMaxPriorityQueue with default parameters.
30 Creates a populated MinMaxPriorityQueue from provided initial contents. @param initialContents iterable of elements to initialize the queue with
31 Fetches all nodes reachable from the given node in the graph. @param graph the graph to traverse @param node the starting node for traversal @return an immutable set of reachable nodes or empty set if not found
