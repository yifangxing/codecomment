1 Returns an exiting executor service with a configured shutdown hook. @param executor underlying thread pool executor
2 Returns an exiting executor service with a configured shutdown hook. @param executor underlying thread pool executor @param terminationTimeout timeout for shutdown in nanoseconds
3 Creates an exiting scheduled executor service with immediate shutdown hook. @param executor ScheduledThreadPoolExecutor to be configured
4 Configures and returns a scheduled executor service with immediate shutdown hook. @param executor ScheduledThreadPoolExecutor to be configured @param terminationTimeout time interval for shutdown in nanoseconds
5 Evicts cache entries to maintain segment weight within threshold. @param newest newest entry to consider for eviction
6 Waits for services managed by this ServiceManager to become healthy within a given Duration. @param timeout maximum time to wait in the specified duration
7 Returns a map of service startup times in milliseconds. @return Map with services as keys and their respective startup times in milliseconds as values
8 Retrieves annotations of specified type from declared parameters. @param annotationType target annotation class @return array of annotations or empty array if none found
9 Creates a reentrant lock with cycle detection. @param lockName unique identifier of the lock
10 Creates a reentrant read-write lock with cycle detection. @param lockName unique identifier of the lock
11 Validates the syntax of a domain name based on its individual parts. @param parts list of domain parts to validate
12 Registers a listener object and associates its annotated methods with specific event types. @param listener Object to invoke subscriber methods on
13 Unregisters event subscribers associated with the given listener object. @param listener Object to stop invoking subscriber methods on
14 Creates an immutable network builder instance.
15 Creates an induced subgraph from the given graph and node set. @param graph original graph @param nodes subset of graph nodes to include in the subgraph @return MutableGraph instance representing the induced subgraph
16 Creates a deep copy of the given graph. @param graph the original graph to copy @return a new MutableGraph instance with the same structure and nodes as the input graph
17 Returns an immutable value graph builder. @return Builder instance with updated generics
18 Filters entries in a filtered map based on an additional predicate. @param map original filtered bi-map @param entryPredicate condition for entries to be included
19 Filters a navigable map based on the provided predicate. @param unfiltered the original map to filter @param entryPredicate condition for entries to be included in the map
20 Filters entries in a sorted map based on the provided predicate. @param unfiltered original sorted map @param entryPredicate condition for entries to be included @return filtered sorted map or new FilteredEntrySortedMap instance if necessary
21 Filters map entries based on the given value predicate. @param unfiltered original map to filter @param valuePredicate condition for values to be included in the filtered map
22 Creates an immutable map from a stream of data using the provided key and value functions. @param keyFunction function to extract keys from elements @param valueFunction function to extract values from elements @param mergeFunction function to combine conflicting values
23 Converts a stream of data to an immutable range map. @param keyFunction maps each element to its corresponding key @param valueFunction maps each element to its corresponding value
24 Creates a sorted multiset from the given iterable using natural ordering. @param elements Iterable of elements to add
25 Finalizes and returns the built immutable sorted multiset. @return ImmutableSortedMultiset object
26 Creates a WildcardType representing a subtype of the given type. @param upperBound the upper bound of the subtype
27 Creates a WildcardType with the given lower bound and upper bound fixed to Object. @param lowerBound lower bound of the wildcard type
28 Generates all permutations of the input iterable, sorted by the provided comparator. @param elements Input collection to permute @param comparator Comparator for sorting element order @return A collection of permutated lists or null if not found
29 Converts the iterable to a sorted list using the provided comparator. @param comparator nullable comparator for sorting @return ImmutableList object or null if not found
30 Creates an immutable list copy from a specified collection of elements. @param elements nullable collection to validate and store
31 Builds the ImmutableBiMap based on accumulated entries. @return ImmutableBiMap object
32 Builds an immutable map with duplicate key checks enabled. @throws Exception if duplicate keys are detected
33 Builds an immutable map keeping last entry in case of duplicate keys. @return ImmutableMap instance
34 Returns a view of the sorted map from the beginning up to but not including the specified key. @param toKey key to stop at
35 Returns a view of the sorted map within the specified range. @param fromKey key to start at @param fromInclusive whether to include the exact match (true) or its predecessor (false) @param toKey key to stop at @param toInclusive whether to include the key itself (true) or its successor (false)
36 Returns a view of the sorted map starting from the given key. @param fromKey key to start from
37 Creates a new ImmutableSortedMap instance from an iterable of key-value pairs. @param entries input iterable of map entries
38 Creates a copy of the given map as an ImmutableSortedMap. @param map input map to be copied
39 Creates a copy of the given sorted map as an ImmutableSortedMap. @param map input map to be copied @param comparator comparison function for sorting elements; if null, uses natural ordering
40 Computes the Cartesian product of multiple sets. @param sets collection of sets to create the Cartesian product
41 Removes the exact object from the priority queue. @param target Object to be removed
42 Retrieves and removes the element at a specified index. @param index position of the element within the queue @return element value or null if removed
43 Creates an immutable set by copying elements from the given iterable. @param elements Iterable of elements to be copied
44 Creates an Invokable for the given constructor, ensuring it matches the raw type. @param constructor Constructor object to create Invokable from @return Invokable object representing the constructor
45 Checks if the given supertype is a subtype of the current type. @param supertype Type to check against bounds @return true if supertype is a subtype, false otherwise
46 Creates an Invokable for the given Method, checking if it's declared by this TypeToken. @param method the Method to create Invokable for
