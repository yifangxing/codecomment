1 Retrieves the live value associated with a given entry. @param entry ReferenceEntry object @param now current time in milliseconds @return the live value (V) or null if expired or not found
2 Performs cleanup and locking operations before writing. @param now current timestamp
3 Resolves internal TypeVariables using a provided TypeTable for dependants. @param var TypeVariable to resolve @param forDependants TypeTable used for resolving dependent types @return resolved Type or original TypeVariable if not resolvable
4 Returns the generic return type of this method, or its raw Class if none specified.
5 Resolves runtime type and returns a serialized representation. @return TypeResolver result or null if failed
6 Creates a traverser for navigating directory hierarchies.
7 Creates a HostSpecifier from a valid string representation. @param specifier string containing the host specifier
8 Constructs the ancestral domain by clipping leading parts. @param levels number of levels to clip
9 Constructs a child domain name by appending the given parts to the current domain name. @param leftParts parts of the child domain name
10 Validates a domain name by attempting to parse it. @param name the name to validate @return true if valid, false otherwise
11 Converts a stream of objects to an immutable multimap. @param keyFunction maps each object to its key @param valuesFunction maps each object to a stream of values
12 Creates a multimap with a single entry. @param k1 key @param v1 value
13 Creates a multimap with two key-value pairs. @param k1 first key @param v1 value for k1 @param k2 second key @param v2 value for k2 @return ImmutableListMultimap instance
14 Creates a Multimap with three key-value pairs. @param k1 first key @param v1 value for k1 @param k2 second key @param v2 value for k2 @param k3 third key @param v3 value for k3 @return Multimap with three entries
15 Creates a multimap with four entries. @param k1 key of first entry @param v1 value of first entry @param k2 key of second entry @param v2 value of second entry @param k3 key of third entry @param v3 value of third entry @param k4 key of fourth entry @param v4 value of fourth entry
16 Creates a multimap with the specified key-value pairs. @param k1 first key @param v1 first value @param k2 second key @param v2 second value @param k3 third key @param v3 third value @param k4 fourth key @param v4 fourth value @param k5 fifth key @param v5 fifth value
17 Creates a copy of the given multimap from its entries. @param entries iterable collection of key-value pairs
18 Creates a multimap index from an iterator of values using a key function. @param values iterator over values to be indexed @param keyFunction function to extract keys from values @return ImmutableListMultimap with indexed values
19 Adds parameters to the media type, overriding existing values if specified. @param attribute parameter name (e.g. "Accept-Language") @param values values for the specified parameter
20 Converts a stream of objects into an immutable multimap. @param keyFunction maps each object to its key @param valueFunction maps each object to its values
21 Computes and returns the inverse of this multimap. @return Inverse multimap or existing cached result if available
22 Marks the service manager as ready, throwing exception if services transitioned prematurely.
23 Returns multimap of services grouped by their corresponding states.
24 Creates an immutable map with unique keys from a delegate iterable. @param keyFunction function to extract keys from elements
25 Creates an ArrayTable instance from a given Table. @param table the input Table to convert @return ArrayTable instance or null if not compatible
26 Builds and returns an immutable network from the mutable network. @return ImmutableNetwork object representing the built network
27 Builds an immutable ValueGraph from the mutable instance. @return ImmutableValueGraph object
28 Captures and resolves the type token for a given class. @param declaringClass the class that declares the generic type
29 Creates an empty Min-Max Priority Queue of type T.
30 Creates a Min-Max priority queue with the given initial contents. @param initialContents iterable collection of elements to initialize the queue
31 Returns an immutable set of all nodes reachable from the given node in the graph. @param graph non-null graph containing the node @param node ID of the starting node
