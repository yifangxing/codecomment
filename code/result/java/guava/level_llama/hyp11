1 Drains reference queues for key and value references. @GuardedBy("this") ensures thread safety
2 Filters a bi-map by keys using the specified predicate. @param unfiltered original bi-map to filter @param keyPredicate condition for keys to be included @return FilteredKeyBiMap instance or the original if already filtered
3 Filters a bi-map by keeping only entries with values satisfying the given predicate. @param unfiltered original bi-map to filter @param valuePredicate condition for entry values to be included @return FilteredEntryBiMap instance or the original if already filtered
4 Creates a new immutable sorted multiset from an iterator of elements with natural ordering. @param elements Iterator of elements to be added
5 Creates a TypeToken instance for the given class type. @param cls Class<T> to create token for
6 Converts this iterable to an ImmutableMultiset. @return ImmutableMultiset containing all elements
7 Builds and returns an immutable multiset from the accumulated contents. @return ImmutableMultiset object containing all added elements
8 Computes the Cartesian product of input lists. @param lists collection of input lists
9 Parses a cache builder specification string into a CacheBuilderSpec instance. @param cacheBuilderSpecification configuration as a string
10 Converts this iterable collection to an immutable list. @return ImmutableList of elements or null if not set
11 Lists files in a directory. @param dir Path to the directory @return Immutable list of file paths or empty if not found
12 Constructs an InternetDomainName object from a given string representation. @param name the domain name to be created
13 Aggregates a collection of futures into a single future containing a list of results. @param futures iterable of ListenableFutures to be aggregated @return ListenableFuture containing the aggregated result as a list of V instances
14 Combines all provided futures to completion. @param futures iterable of listenable futures
15 Assembles a FutureCombiner from the provided iterable of successful futures. @param futures collection of completed ListenableFutures to combine
16 Combines a collection of futures into a single future with the aggregated results. @param futures iterable of ListenableFutures to be combined
17 Converts an iterable of ListenableFutures to a gwt-compatible array. @param futures Iterable of ListenableFutures
18 Creates an immutable range set from a collection of ranges. @param ranges iterable of ranges to combine
19 Computes the intersection of this set with another. @param other input RangeSet to intersect with @return new ImmutableRangeSet containing overlapping ranges
20 Computes the difference between this set and another range set. @param other the input RangeSet to remove ranges from
21 Converts a stream of data to an immutable bi-map. @param keyFunction function mapping each element to its key @param valueFunction function mapping each element to its value
22 Creates a copy of the given immutable map, or constructs a new one from its entries. @param map source map containing class-type instances
23 Creates a copy of the given Multimap, preserving its key-value associations. @param multimap original Multimap instance @return ImmutableListMultimap object or empty if input is empty
24 Builds an ImmutableMultimap instance from the accumulated entries. @return ImmutableMultimap object or empty if input is empty
25 Merges a specified range of values into the map, remapping existing entries and filling gaps with a specified value. @param range the range to merge @param value the value to use for unmapped ranges, or null for no change @param remappingFunction function to apply to each entry's value when merging
26 Builds an ImmutableSetMultimap instance based on the constructed builder state. @return ImmutableSetMultimap object or default instance if no entries exist
27 Creates an immutable map with unique keys from the given iterator of values. @param values iterator over values to be indexed @param keyFunction function to extract unique keys from values
28 Generates all combinations of a given set's elements with a specified size. @param set the input set to generate combinations from @param size the desired combination size @return an immutable set containing all possible combinations
29 Creates an immutable copy of the provided graph. @param graph original graph to copy @return ImmutableGraph object or null if graph is already immutable
30 Creates a new TypeResolver with a filtered type table based on the given type mappings. @param mappings mapping of type variables to their corresponding types
31 Converts an iterable of unique keys into a map with values generated by the given function. @param keys iterator of unique keys @param valueFunction function to compute associated value for each key
32 Retrieves and removes the minimum element from the queue (equiv to poll()). @return Minimum element value or null if empty
33 Offers an element to the queue while maintaining its ordering properties. @param element the element to be added @return true if the element was successfully added (i.e., the queue is not full)
34 Retrieves all ClassInfo objects from classpath resources. @return an ImmutableSet of ClassInfo objects
35 Retrieves top-level classes from the resources. @return ImmutableSet of ClassInfo objects
36 Performs breadth-first traversal starting from the given nodes. @param startNodes Iterable of initial nodes for traversal
37 Performs a depth-first traversal of the graph, starting from the given nodes. @param startNodes Iterable of nodes to initiate the traversal
38 Performs a depth-first post-order traversal of the graph starting from the given nodes. @param startNodes Iterable of nodes to initiate the traversal
39 Scans resources from the specified files and adds them to an immutable set. @param scannedFiles Set of previously scanned File objects @return ImmutableSet of ResourceInfo objects representing the scanned resources
40 Returns a specialized invokable with the specified return type if it matches. @param returnType TypeToken representing the desired return type
