1 Refreshes the value for a given key using the provided loader. @param key the cache key @param hash hash code of the key @param loader CacheLoader to load the new value @param checkTime whether to check refresh time @return refreshed value or null if loading fails or is not done
2 Retrieves and records statistics for a cache value. Handles successful load, null checks, and exception recording. @param key the entry's key @param hash the entry's hash code @param loadingValueReference reference to the loading value @param newValue future representing the new value @return the loaded value @throws ExecutionException if computation threw an exception
3 Advances to the next valid cache entry. @param entry the cache entry to check @return true if a valid entry is found, false otherwise
4 Checks if the segment contains a specific value. @param value the value to search for @return true if the value is found, false otherwise
5 Indexes elements by applying a key function. @param keyFunction function to extract keys from elements @return ImmutableListMultimap with indexed elements
6 Sets the character set for this media type. @param charset the character set to use @return new MediaType instance with the specified character set
7 Returns a new MediaType instance without parameters. @return MediaType object with no parsed charset if parameters are empty; otherwise, creates a new one
8 Creates an application media type. @param subtype MIME subtype (e.g., "json") @return MediaType object representing the application type with no charset
9 Creates a MediaType instance for audio types. @param subtype MIME subtype of the audio (e.g., "mpeg") @return MediaType object representing the audio type
10 Creates a font media type with specified subtype. @param subtype MIME subtype (e.g., "woff", "ttf") @return Font MediaType object
11 Creates an image MediaType instance. @param subtype MIME subtype (e.g., "png", "jpeg") @return MediaType object representing the image type
12 Creates a text-based MediaType. @param subtype MIME subtype (e.g., "plain", "html") @return MediaType object with type "text"
13 Creates a video media type. @param subtype MIME subtype (e.g., "mp4", "avi") @return MediaType object representing the video type
14 Builds an immutable table from added cells. @return ImmutableTable instance based on the number of cells
15 Retrieves the generic superclass of a type. Handles TypeVariable and WildcardType cases. @return TypeToken representing the generic superclass or null if none exists
16 Retrieves generic interfaces for the runtime type. @return ImmutableList of TypeTokens representing generic interfaces
17 Retrieves the closest supertype of a given class. @param superclass the superclass to check against @return TypeToken representing the closest supertype or throws IllegalArgumentException if not applicable
