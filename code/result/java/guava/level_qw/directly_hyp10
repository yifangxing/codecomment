1 Attempts to lock and expire entries older than the given timestamp. @param now current timestamp
2 Creates a new instance with explicit ordering for an enum class. @param enumClass the enum class to be used @param policy the policy for ordering @return a WithExplicitOrdering instance initialized with the given policy and lock graph nodes
3 Registers an object as a subscriber. @param object the object to register
4 Unregisters an object from subscribers. @param object the object to be unregistered
5 Returns an immutable graph builder. @return ImmutableGraph.Builder instance
6 Filters entries in a BiMap based on a predicate. @param unfiltered the original BiMap to filter @param entryPredicate predicate to determine which entries to include @return a new BiMap containing only entries that match the predicate
7 Filters entries in a NavigableMap based on a key predicate. @param unfiltered the original NavigableMap to filter @param keyPredicate predicate to test keys against @return a new NavigableMap with only entries whose keys satisfy the predicate
8 Filters map values using a predicate. @param unfiltered the original map to filter @param valuePredicate predicate to test map values @return a new NavigableMap with entries that match the predicate
9 Filters entries by key predicate. @param unfiltered the original sorted map @param keyPredicate predicate to test keys @return a new sorted map with filtered keys
10 Filters entries in a sorted map based on a value predicate. @param unfiltered the original sorted map to filter @param valuePredicate predicate for filtering values @return new sorted map with filtered entries
11 Creates an immutable sorted multiset from elements. @param comparator ordering for the elements @param elements iterator of elements to include @return ImmutableSortedMultiset with specified elements and order
12 Retrieves location information from a class loader. @param classloader the source class loader @return an ImmutableSet of LocationInfo objects
13 Finds the subtype of component type from bounds. @param bounds array of generic type bounds @return Type object or null if not found
14 Creates a new array type for the given component type. Handles wildcard types by inferring bounds. @param componentType the type of components in the array @return Type representing the new array type
15 Generates ordered permutations of elements. @param elements iterable collection of comparable elements @return collection of lists representing permutations
16 Creates an immutable multiset from the given iterable. @param elements source iterable of elements @return ImmutableMultiset containing elements from the input iterable
17 Creates an immutable multiset from an iterator. @param elements iterator of elements to include @return ImmutableMultiset containing the elements
18 Copies a multiset with elements sorted by descending count. @param multiset the input multiset to copy and sort @return an ImmutableMultiset with elements ordered by highest count first
19 Generates all permutations of a collection. @param elements input collection of elements @return Collection containing all possible permutations
20 Creates an immutable list from the given iterable. @param elements source iterable of elements @return ImmutableList containing the provided elements
21 Creates an immutable copy of a RangeSet. @param rangeSet the RangeSet to copy @return an ImmutableRangeSet containing the same ranges
22 Creates an immutable sorted set from a sorted set. @param sortedSet the source sorted set to copy @return an ImmutableSortedSet containing the same elements as sortedSet
23 Reads all lines from a file into an immutable list. @return ImmutableList containing all lines from the file @throws IOException if an I/O error occurs
24 Builds an immutable class-to-instance map. @return ImmutableClassToInstanceMap containing mappings or empty map if none
25 Creates an ImmutableListMultimap from map entries. @param mapEntries collection of key-value pairs where values are collections @param valueComparator optional comparator for sorting values @return ImmutableListMultimap with sorted or unsorted values based on comparator
26 Builds and returns an immutable map. @return ImmutableMap instance containing key-value pairs
27 Creates an ImmutableSetMultimap from map entries. @param mapEntries collection of key-value pairs where values are collections @param valueComparator optional comparator for values within sets @return ImmutableSetMultimap with keys and immutable sets of values
28 Converts Properties to ImmutableMap. @param properties source Properties object @return ImmutableMap with key-value pairs from Properties
29 Creates an index map from a collection. @param list the input collection @return ImmutableMap with elements as keys and their indices as values
30 Builds and returns an immutable map from the builder. @return ImmutableTypeToInstanceMap object containing built mappings
31 Creates a new TypeTable with additional mappings. @param mappings map of TypeVariableKey to Type @return new TypeTable instance with updated mappings
32 Converts an iterator of keys to an ImmutableMap using a value function. @param keys Iterator of keys @param valueFunction Function to generate values from keys @return ImmutableMap with keys and computed values, preserving last entries for duplicates
33 Returns a view of the portion of this map whose keys range from fromKey (inclusive) to toKey (exclusive). @param fromKey low endpoint (inclusive) of the returned map @param toKey high endpoint (exclusive) of the returned map @return ImmutableSortedMap containing the specified range of keys and their corresponding values
34 Collects elements into an ImmutableSortedMap. @param comparator for sorting keys @param keyFunction extracts map keys from elements @param valueFunction extracts map values from elements @param mergeFunction merges values with the same key @return ImmutableSortedMap with sorted keys
35 Removes and returns the last element. @return the last element or null if empty
36 Removes and returns the last element. Throws NoSuchElementException if list is empty.
37 Converts delegate to an immutable set. @return ImmutableSet containing elements from the delegate
38 Checks if this type is a supertype of another. @param type the type to check against @return true if this type is a supertype, false otherwise
39 Checks if this type is a supertype of the given type. @param type the type to check against @return true if this type is a supertype of the given type, false otherwise
40 Checks if this type is a subtype of the specified type. @param type the TypeToken to compare against @return true if this type is a subtype, false otherwise
