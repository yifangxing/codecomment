1 Retrieves the live value from a cache entry. @param entry the ReferenceEntry to fetch the value from @param now current timestamp in milliseconds @return the live value if not expired, otherwise null
2 Performs cleanup operations before writing. @param now current timestamp in milliseconds
3 Resolves a type variable using given bounds and dependencies. @param var the type variable to resolve @param forDependants table of dependent types @return resolved Type or original if no change
4 Retrieves the generic return type of a method. @return Type representing the generic return type or raw class if none
5 Resolves and returns a serializable type representation. @return Serializable type object
6 Creates a traverser for file system paths. @return Traverser instance for navigating file trees
7 Creates a HostSpecifier from a valid string. @param specifier host specification string @return HostSpecifier object or throws if invalid
8 Retrieves an ancestor domain by removing specified levels. @param levels number of levels to remove from the current domain @return InternetDomainName object representing the ancestor domain
9 Creates a child domain name. @param leftParts additional parts to prepend @return new InternetDomainName with added parts
10 Validates domain name format. @param name domain name to validate @return true if valid, false otherwise
11 Collects elements into an ImmutableListMultimap. @param keyFunction extracts the key from each element @param valuesFunction extracts a stream of values from each element @return Collector that groups elements by keys with list of values
12 Creates an immutable multimap with a single key-value pair. @param k1 the key @param v1 the value associated with the key @return an ImmutableListMultimap containing the key-value pair
13 Creates an immutable multimap with two key-value pairs. @param k1 first key @param v1 value for the first key @param k2 second key @param v2 value for the second key @return ImmutableMultimap containing the specified entries
14 Creates an immutable multimap with three key-value pairs. @param k1 first key @param v1 value for the first key @param k2 second key @param v2 value for the second key @param k3 third key @param v3 value for the third key @return Immutable multimap containing specified entries
15 Creates an immutable multimap with four key-value pairs. @param k1 first key @param v1 value for the first key @param k2 second key @param v2 value for the second key @param k3 third key @param v3 value for the third key @param k4 fourth key @param v4 value for the fourth key @return Immutable multimap containing the specified entries
16 Creates an immutable multimap with five key-value pairs. @param k1 first key @param v1 value for the first key @param k2 second key @param v2 value for the second key @param k3 third key @param v3 value for the third key @param k4 fourth key @param v4 value for the fourth key @param k5 fifth key @param v5 value for the fifth key @return ImmutableMultimap containing the specified key-value pairs
17 Creates an immutable multimap from the given entries. @param entries iterable of key-value pairs @return Immutable list multimap containing the entries
18 Indexes values by applying a key function. @param values iterator of values to index @param keyFunction function to extract keys from values @return ImmutableListMultimap with indexed values
19 Creates a new MediaType with additional parameters. @param attribute parameter key to add @param values iterable of parameter values for the key @return new MediaType instance with updated parameters
20 Collects elements into an ImmutableSetMultimap. @param keyFunction extracts the key from each element @param valueFunction extracts the value from each element @return ImmutableSetMultimap with extracted keys and values
21 Returns the inverse of this multimap. @return ImmutableSetMultimap with keys and values swapped
22 Marks the service manager as ready. Throws an exception if services have transitioned asynchronously.
23 Returns a multimap of services grouped by their states. @return ImmutableSetMultimap with State as key and Set of Services as value
24 Creates an immutable map from elements using a key function. @param keyFunction extracts keys from elements @return ImmutableMap with elements indexed by keys
25 Creates an ArrayTable from a given Table. @param table the source Table to convert @return a new ArrayTable instance
26 Builds an immutable network from the mutable one. @return ImmutableNetwork object based on current state of mutableNetwork
27 Builds an immutable graph from the mutable one. @return ImmutableValueGraph instance
28 Initializes a TypeToken with the specified declaring class. @param declaringClass the class declaring the generic type
29 Creates an empty MinMaxPriorityQueue. @return MinMaxPriorityQueue instance with no initial elements
30 Creates a MinMaxPriorityQueue with natural ordering. @param initialContents elements to initialize the queue @return MinMaxPriorityQueue instance
31 Finds all nodes reachable from a given node in a graph. @param graph the graph to traverse @param node the starting node @return an immutable set of reachable nodes
