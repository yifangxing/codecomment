1 Drains reference queues for keys and values. Checks and processes weak references to reclaim entries safely.
2 Filters a BiMap by keys using a predicate. @param unfiltered the original bi-map to filter @param keyPredicate condition for keys to satisfy @return a new FilteredEntryBiMap with filtered entries
3 Filters entries of a BiMap based on a value predicate. @param unfiltered the original bi-map to filter @param valuePredicate condition to evaluate on entry values @return a new FilteredEntryBiMap with filtered entries
4 Creates an immutable sorted multiset from an iterator using natural ordering. @param elements iterator providing elements to add @return ImmutableSortedMultiset instance with sorted elements
5 Converts a class to its generic type token. Handles array and parameterized types. @param cls the class to convert @return TypeToken representing the generic type
6 Converts the iterable to an immutable multiset. @return ImmutableMultiset containing elements from the delegate iterable or empty if none
7 Builds an immutable multiset from the current contents. @return ImmutableMultiset containing elements added to this builder
8 Computes the Cartesian product of multiple lists. @param lists input lists representing dimensions @return List of Lists containing all combinations
9 Parses a cache specification string into a CacheBuilderSpec. @param cacheBuilderSpecification string representation of cache settings @return CacheBuilderSpec object configured from the input string
10 Converts the iterable to an immutable list. @return ImmutableList containing all elements from the delegate iterable
11 Lists files in a directory. @param dir directory path to list files from @return ImmutableList of file paths or empty if none found @throws IOException if an I/O error occurs
12 Constructs an InternetDomainName object by normalizing and validating the given domain name. @param name raw domain name string to be processed
13 Aggregates multiple ListenableFutures into a single future. @param futures iterable of ListenableFutures to aggregate @return ListenableFuture containing results from all input futures
14 Combines multiple listenable futures into a single combiner. @param futures iterable of listenable futures to combine @return FutureCombiner that aggregates all input futures
15 Combines multiple listenable futures to wait for all successful completions. @param futures iterable of futures to combine @return FutureCombiner that aggregates results from all futures
16 Aggregates results from a collection of ListenableFutures. @param futures iterable of ListenableFutures to aggregate @return ListenableFuture containing list of results, ignoring failures
17 Converts an iterable of ListenableFutures to a GWT-compatible array. @param futures iterable of ListenableFutures @return array of ListenableFutures
18 Creates an immutable range set from a collection of ranges. @param ranges iterable of Range objects to be combined @return ImmutableRangeSet containing the union of all input ranges
19 Computes the intersection of this range set with another. @param other the RangeSet to intersect with @return ImmutableRangeSet representing the intersection
20 Computes the difference between this set and another RangeSet. @param other the RangeSet to subtract from this set @return a new ImmutableRangeSet representing the difference
21 Creates a collector for an immutable bi-directional map from input elements. @param keyFunction extracts keys from input elements @param valueFunction extracts values from input elements @return Collector for ImmutableBiMap
22 Creates an immutable map from the given class-instance mapping. @param map source map with class types as keys and corresponding instances as values @return ImmutableClassToInstanceMap instance based on input map
23 Creates an immutable copy of the given multimap. @param multimap the multimap to copy @return a new ImmutableListMultimap instance with the same key-value pairs
24 Builds an ImmutableMultimap from added entries. @return the constructed ImmutableMultimap
25 Merges a range with a value using a remapping function. @param range the range to merge @param value the value associated with the range @param remappingFunction function to resolve conflicts between existing and new values
26 Builds an immutable sorted set multimap. @return ImmutableSetMultimap instance with entries sorted by key and values
27 Creates an immutable map from iterator values with unique keys. @param values iterator of values to be indexed @param keyFunction function to extract keys from values @return ImmutableMap with unique keys or throws on duplicates
28 Generates all possible combinations of a given set with a specified size. @param set the input set from which to generate combinations @param size the size of each combination @return a set containing all combinations of the specified size
29 Creates an immutable copy of a given graph. @param graph the source graph to copy @return ImmutableGraph instance representing the copied graph
30 Creates a new TypeResolver with additional type mappings. @param mappings map of TypeVariableKey to Type representing new bindings @return new TypeResolver instance including updated mappings
31 Converts an iterable of keys and a value function into an ImmutableMap. @param keys Iterable providing the map keys @param valueFunction Function to compute values from keys @return ImmutableMap with keys mapped to their computed values
32 Retrieves and removes the minimum element from the queue. @return the smallest element or null if the queue is empty
33 Adds an element to the priority queue. @param element the element to add @return true if addition is successful, false if it exceeds max size and element is removed
34 Retrieves all ClassInfo objects from resources. @return Immutable set of ClassInfo instances
35 Retrieves top-level class information from resources. @return ImmutableSet of ClassInfo objects representing top-level classes
36 Performs a breadth-first traversal starting from specified nodes. @param startNodes initial set of nodes to traverse from @return Iterable representing the traversal order
37 Performs a pre-order depth-first traversal starting from given nodes. @param startNodes initial set of nodes to traverse @return Iterable of nodes in pre-order sequence
38 Performs depth-first post-order traversal on validated nodes. @param startNodes initial set of nodes to traverse @return Iterable of traversed nodes in post-order
39 Scans specified files for resources. @param scannedFiles set of already scanned files @return ImmutableSet of ResourceInfo objects found @throws IOException if an I/O error occurs during scanning
40 Specializes the invokable to a more specific return type. @param returnType the expected return type @return specialized Invokable with the specified return type @throws IllegalArgumentException if returnType is not a supertype of the current return type
