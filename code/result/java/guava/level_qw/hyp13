1 Retrieves a live value from a cache entry. @param entry the cache entry to retrieve from @param now current time in nanoseconds @return the live value or null if expired or invalid
2 Performs pre-write cleanup operations. @param now current time in nanoseconds
3 Resolves a type variable to its actual type. @param var the type variable to resolve @param forDependants table for resolving dependent types @return resolved Type or original if unresolved
4 Retrieves the generic return type of the method or constructor. @return ParameterizedType if generic, otherwise raw Class
5 Provides a serializable representation of the runtime type. @return Serializable TypeToken instance representing the resolved type
6 Creates a traverser for navigating file trees. @return Traverser object configured to traverse file paths
7 Constructs a valid HostSpecifier from a string. @param specifier host specification string @return HostSpecifier object or throws IllegalArgumentException if invalid
8 Finds an ancestor domain by removing specified levels. @param levels number of hierarchical levels to ascend @return InternetDomainName object representing the ancestor domain
9 Creates a child domain by appending a subdomain to the current domain. @param leftParts subdomain parts to be added @return InternetDomainName object representing the child domain
10 Validates if a given string is a valid internet domain name. @param name the domain name to validate @return true if valid, false otherwise
11 Creates a collector to flatten elements into an immutable list-based multimap. @param keyFunction extracts the key from each element @param valuesFunction generates a stream of values for each key @return Collector that accumulates elements into ImmutableListMultimap
12 Creates an immutable multimap with a single key-value pair. @param k1 the key @param v1 the value associated with the key @return an ImmutableListMultimap containing the key-value pair
13 Creates an ImmutableListMultimap with two key-value pairs. @param k1 first key @param v1 value associated with the first key @param k2 second key @param v2 value associated with the second key @return ImmutableMultimap containing the specified key-value pairs
14 Creates an ImmutableListMultimap with three key-value pairs. @param k1 first key @param v1 value associated with the first key @param k2 second key @param v2 value associated with the second key @param k3 third key @param v3 value associated with the third key @return an ImmutableMultimap containing the specified key-value pairs
15 Creates an ImmutableListMultimap with four key-value pairs. @param k1 first key @param v1 value associated with the first key @param k2 second key @param v2 value associated with the second key @param k3 third key @param v3 value associated with the third key @param k4 fourth key @param v4 value associated with the fourth key @return ImmutableMultimap containing the specified entries
16 Creates an ImmutableListMultimap from five key-value pairs. @param k1,k2,k3,k4,k5 keys for the multimap entries @param v1,v2,v3,v4,v5 values associated with each key @return ImmutableMultimap containing the specified key-value pairs
17 Creates an immutable list multimap from the given iterable of entries. @param entries iterable containing key-value pairs to add @return a new ImmutableListMultimap instance with the provided entries
18 Indexes values by applying a key function. @param values iterator of values to index @param keyFunction function to extract keys from values @return ImmutableMultimap with indexed values
19 Creates a new MediaType with additional parameters. @param attribute parameter name to add @param values iterable of parameter values @return new MediaType instance with updated parameters
20 Converts a stream of elements into an immutable set multimap. @param keyFunction extracts the key from each element @param valueFunction extracts the value from each element @return Collector for building ImmutableSetMultimap
21 Returns the inverted multimap with keys and values swapped. Uses cached result if available to optimize performance.
22 Marks the service manager as ready. Checks for race conditions where services transition before initialization. Throws an exception if services are in unexpected states.
23 Retrieves services grouped by their current state. @return ImmutableSetMultimap with State as key and Service as value
24 Creates an immutable map from iterable values with unique keys. @param keyFunction function to extract keys from values @return ImmutableMap with unique keys or throws on duplicates
25 Creates an ArrayTable from another Table. @param table source table to initialize from @return ArrayTable instance initialized with the provided table's data
26 Builds an immutable network from the mutable one. @return ImmutableNetwork instance created from mutableNetwork
27 Builds an immutable value graph from the mutable one. @return ImmutableValueGraph instance
28 Constructs a TypeToken for the given declaring class. @param declaringClass the class declaring the generic type
29 Creates an empty MinMaxPriorityQueue. @return configured MinMaxPriorityQueue instance
30 Creates a MinMaxPriorityQueue with natural ordering. @param initialContents elements to initialize the queue @return configured MinMaxPriorityQueue instance
31 Finds all nodes reachable from a given node in a graph. @param graph the graph to traverse @param node the starting node for traversal @return an immutable set of reachable nodes
