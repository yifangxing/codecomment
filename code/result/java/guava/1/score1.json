[
    {
        "com.google.common.base.Absent:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Present:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Absent:or(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Absent:or(com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter$IdentityConverter:doAndThen(com.google.common.base.Converter)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter:convertAll(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Present:or(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:<init>(com.google.common.base.Ticker)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$Builder:orderRowsBy(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$Builder:orderColumnsBy(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:mergeSorted(java.lang.Iterable,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:indexOf(java.util.Iterator,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:treeSetValues(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:enumSetValues(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:union(java.util.Set,java.util.Set)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:intersection(java.util.Set,java.util.Set)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:difference(java.util.Set,java.util.Set)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:symmetricDifference(java.util.Set,java.util.Set)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors$MutableCell:merge(java.lang.Object,java.util.function.BinaryOperator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors:toImmutableTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:indexOf(boolean[],boolean[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:indexOf(byte[],byte[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars:indexOf(char[],char[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:indexOf(double[],double[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Floats:indexOf(float[],float[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints:indexOf(int[],int[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:indexOf(long[],long[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:indexOf(short[],short[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ImmediateFuture:addListener(java.lang.Runnable,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor$Guard:<init>(com.google.common.util.concurrent.Monitor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:newGuard(java.util.function.BooleanSupplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Absent:or(com.google.common.base.Optional)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Any:matchesAllOf(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Any:removeFrom(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Any:trimFrom(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Any:and(com.google.common.base.CharMatcher)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Any:or(com.google.common.base.CharMatcher)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$NamedFastMatcher:<init>(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:indexIn(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:lastIndexIn(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:matchesNoneOf(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:replaceFrom(java.lang.CharSequence,java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:countIn(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:and(com.google.common.base.CharMatcher)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:or(com.google.common.base.CharMatcher)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Defaults:defaultValue(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Equivalence$EquivalentToPredicate:<init>(com.google.common.base.Equivalence,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Equivalence$Wrapper:<init>(com.google.common.base.Equivalence,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Functions$ForMapWithDefault:<init>(java.util.Map,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Functions$FunctionComposition:<init>(com.google.common.base.Function,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Functions$FunctionForMapNoDefault:<init>(java.util.Map)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Functions$PredicateFunction:<init>(com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Functions$SupplierFunction:<init>(com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Functions$ToStringFunction:apply(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.JdkPattern$JdkMatcher:<init>(java.util.regex.Matcher)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.JdkPattern:<init>(java.util.regex.Pattern)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner$MapJoiner:<init>(com.google.common.base.Joiner,java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:<init>(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:useForNull(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:iterable(java.lang.Object,java.lang.Object,java.lang.Object[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:<init>(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Optional:presentInstances(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Platform:compilePattern(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates$CompositionPredicate:<init>(com.google.common.base.Predicate,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates$ContainsPatternPredicate:<init>(com.google.common.base.CommonPattern)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates$InPredicate:<init>(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates$InstanceOfPredicate:<init>(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates$NotPredicate:<init>(com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates$SubtypeOfPredicate:<init>(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates:defensiveCopy(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Present:or(com.google.common.base.Optional)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Present:or(com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Splitter$MapSplitter:<init>(com.google.common.base.Splitter,com.google.common.base.Splitter)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Splitter:split(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Strings:padStart(java.lang.String,int,char)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Strings:padEnd(java.lang.String,int,char)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Suppliers$MemoizingSupplier:<init>(com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:<init>(com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Suppliers$SupplierComposition:<init>(com.google.common.base.Function,com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Suppliers$ThreadSafeSupplier:<init>(com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Throwables:throwIfInstanceOf(java.lang.Throwable,java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Throwables:throwIfUnchecked(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Throwables:getCausalChain(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Throwables:jlaStackTrace(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader$FunctionToCacheLoader:load(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader$SupplierToCacheLoader:load(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader:asyncReloading(com.google.common.cache.CacheLoader,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:newEntry(java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.RemovalListeners:asynchronous(com.google.common.cache.RemovalListener,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.RemovalNotification:<init>(java.lang.Object,java.lang.Object,com.google.common.cache.RemovalCause)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:forEachEntry(java.util.function.ObjIntConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:<init>(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:column(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:row(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toMultiset(java.util.function.Function,java.util.function.ToIntFunction,java.util.function.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:flatteningToMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators:map(java.util.Spliterator,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators:filter(java.util.Spliterator,java.util.function.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:removeIf(java.util.function.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$TransformedCollection:<init>(java.util.Collection,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$TransformedCollection:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$TransformedCollection:removeIf(java.util.function.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2:safeContains(java.util.Collection,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2:safeRemove(java.util.Collection,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Comparators:isInOrder(java.lang.Iterable,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Comparators:isInStrictOrder(java.lang.Iterable,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Comparators:emptiesFirst(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Comparators:emptiesLast(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:headSet(java.lang.Comparable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:headSet(java.lang.Comparable,boolean)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:tailSet(java.lang.Comparable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:tailSet(java.lang.Comparable,boolean)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:forEachEntry(java.util.function.ObjIntConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EvictingQueue:add(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap:<init>(com.google.common.collect.Multimap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet:addAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap:<init>(com.google.common.collect.Multimap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredMultimapValues:<init>(com.google.common.collect.FilteredMultimap)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:from(com.google.common.collect.FluentIterable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap:getInstance(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$Builder:add(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapKeySet:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapValues:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:orderKeysBy(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:orderValuesBy(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:add(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:addCopies(java.lang.Object,int)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:setCount(java.lang.Object,int)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Indexed:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl:add(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:toImmutableSortedMultiset(java.util.Comparator,java.util.function.Function,java.util.function.ToIntFunction)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:headSet(java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:tailSet(java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.IndexedImmutableSet:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:unmodifiableIterable(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:unmodifiableIterable(com.google.common.collect.ImmutableCollection)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:removeFirstMatching(java.lang.Iterable,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:cycle(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:filter(java.lang.Iterable,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:transform(java.lang.Iterable,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:consumingIterable(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators$PeekingImpl:<init>(java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:unmodifiableIterator(java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:unmodifiableIterator(com.google.common.collect.UnmodifiableIterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:removeAll(java.util.Iterator,java.util.Collection)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:removeIf(java.util.Iterator,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:retainAll(java.util.Iterator,java.util.Collection)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:addAll(java.util.Collection,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:cycle(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:filter(java.util.Iterator,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:all(java.util.Iterator,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:find(java.util.Iterator,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:transform(java.util.Iterator,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:consumingIterator(java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:clear(java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:forEnumeration(java.util.Enumeration)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:asEnumeration(java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:peekingIterator(com.google.common.collect.PeekingIterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$AbstractListWrapper:<init>(java.util.List)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$OnePlusArrayList:<init>(java.lang.Object,java.lang.Object[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:<init>(java.util.List)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$TransformingRandomAccessList:<init>(java.util.List,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$TransformingRandomAccessList:removeIf(java.util.function.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$TransformingSequentialList:<init>(java.util.List,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$TransformingSequentialList:removeIf(java.util.function.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$TwoPlusArrayList:<init>(java.lang.Object,java.lang.Object,java.lang.Object[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:<init>(java.util.Set,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$KeySet:<init>(java.util.Map)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$KeySet:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:<init>(java.util.NavigableSet,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesMap:<init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesMap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:<init>(java.util.Map)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:newEnumMap(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:unmodifiableEntry(java.util.Map$Entry)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:transformEntry(com.google.common.collect.Maps$EntryTransformer,java.util.Map$Entry)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:safeGet(java.util.Map,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:safeContainsKey(java.util.Map,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:safeRemove(java.util.Map,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Builder:<init>(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$EnumSetSupplier:<init>(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$TreeSetSupplier:<init>(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder:treeKeys(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder:enumKeys(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$AsMap:<init>(com.google.common.collect.Multimap)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$Keys:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$MapMultimap:<init>(java.util.Map)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesMultimap:<init>(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:unmodifiableMultimap(com.google.common.collect.ImmutableMultimap)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multiset:forEachEntry(java.util.function.ObjIntConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multiset:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$FilteredMultiset:<init>(com.google.common.collect.Multiset,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:unmodifiableMultiset(com.google.common.collect.ImmutableMultiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:union(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:intersection(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:sum(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:difference(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:containsOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:retainOccurrencesImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:removeOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:retainAllImpl(com.google.common.collect.Multiset,java.util.Collection)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.NaturalOrdering:compare(java.lang.Comparable,java.lang.Comparable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:from(com.google.common.collect.Ordering)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:drain(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:drainUninterruptibly(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:contains(java.lang.Comparable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:headIndex(java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:tailIndex(java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ReverseNaturalOrdering:compare(java.lang.Comparable,java.lang.Comparable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$ImprovedAbstractSet:retainAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newTreeSet(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableBiMap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnKeySet:retainAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Streams:zip(java.util.stream.Stream,java.util.stream.Stream,java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Streams:mapWithIndex(java.util.stream.Stream,com.google.common.collect.Streams$FunctionWithIndex)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Streams:mapWithIndex(java.util.stream.IntStream,com.google.common.collect.Streams$IntFunctionWithIndex)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Streams:mapWithIndex(java.util.stream.LongStream,com.google.common.collect.Streams$LongFunctionWithIndex)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Streams:mapWithIndex(java.util.stream.DoubleStream,com.google.common.collect.Streams$DoubleFunctionWithIndex)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedObject:<init>(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors:toTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors:mergeTables(com.google.common.collect.Table,java.lang.Object,java.lang.Object,java.lang.Object,java.util.function.BinaryOperator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:<init>(com.google.common.collect.Table,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransposeTable:<init>(com.google.common.collect.Table)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TransformedIterator:<init>(java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$1:put(com.google.common.collect.Range,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$1:putCoalescing(com.google.common.collect.Range,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$1:remove(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$1:merge(com.google.common.collect.Range,java.lang.Object,java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$1:subRangeMap(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser$PostOrderNode:<init>(java.lang.Object,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser$PreOrderIterator:next()": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser:using(com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser:preOrderTraversal(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser:postOrderTraversal(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser:breadthFirstTraversal(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.ArrayBasedCharEscaper:escape(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.ArrayBasedEscaperMap:createReplacementArray(java.util.Map)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.ArrayBasedUnicodeEscaper:escape(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.CharEscaperBuilder:addEscape(char,java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.Escapers$Builder:addEscape(char,java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.UnicodeEscaper:codePointAt(java.lang.CharSequence,int,int)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.DeadEvent:<init>(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:handleSubscriberException(java.lang.Throwable,com.google.common.eventbus.SubscriberExceptionContext)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.Subscriber:invokeSubscriberMethod(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberExceptionContext:<init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.Object,java.lang.reflect.Method)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractUndirectedNetworkConnections:<init>(java.util.Map)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections$NodeConnection:<init>(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:value(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.EdgesConnecting:<init>(java.util.Map,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.EndpointPair:<init>(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:copyOf(com.google.common.graph.ImmutableGraph)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:copyOf(com.google.common.graph.ImmutableNetwork)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:copyOf(com.google.common.graph.ImmutableValueGraph)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.MapIteratorCache:<init>(java.util.Map)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.MapIteratorCache:getWithoutCaching(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.MultiEdgesConnecting:<init>(java.util.Map,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Traverser$Traversal$2:visitNext(java.util.Deque)": {
            "checkNotNull": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Traverser:<init>(com.google.common.graph.SuccessorsFunction)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedGraphConnections:<init>(java.util.Map)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Funnels$SequentialFunnel:<init>(com.google.common.hash.Funnel)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Funnels$SinkAsStream:<init>(com.google.common.hash.PrimitiveSink)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Funnels$StringCharsetFunnel:<init>(java.nio.charset.Charset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.HashingInputStream:<init>(com.google.common.hash.HashFunction,java.io.InputStream)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.HashingOutputStream:<init>(com.google.common.hash.HashFunction,java.io.OutputStream)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:<init>(java.lang.Appendable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:encodingStream(java.io.Writer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:trimTrailingPadding(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:decodingStream(java.io.Reader)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:encodingSink(com.google.common.io.CharSink)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:decodingSource(com.google.common.io.CharSource)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:trimTrailingPadding(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:ignoringReader(java.io.Reader,java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:<init>(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams$NullWriter:write(char[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams$NullWriter:write(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams:copyReaderToBuilder(java.io.Reader,java.lang.StringBuilder)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams:copyReaderToWriter(java.io.Reader,java.io.Writer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams:skipFully(java.io.Reader,long)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Closer:<init>(com.google.common.io.Closer$Suppressor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CountingInputStream:<init>(java.io.InputStream)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CountingOutputStream:<init>(java.io.OutputStream)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:newReader(java.io.File,java.nio.charset.Charset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:newWriter(java.io.File,java.nio.charset.Charset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:touch(java.io.File)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:createParentDirs(java.io.File)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:getFileExtension(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:getNameWithoutExtension(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:<init>(java.io.InputStream)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataOutputStream:<init>(java.io.OutputStream)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:touch(java.nio.file.Path)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.PatternFilenameFilter:<init>(java.util.regex.Pattern)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:isPowerOfTwo(java.math.BigInteger)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.PercentEscaper:nextEscapeIndex(java.lang.CharSequence,int,int)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.PercentEscaper:escape(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:forEach(java.util.function.DoubleConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:forEach(java.util.function.IntConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:forEach(java.util.function.LongConsumer)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Primitives:isWrapperType(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Primitives:wrap(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Primitives:unwrap(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:parseUnsignedByte(java.lang.String,int)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:parseUnsignedInt(java.lang.String,int)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$LocationInfo:<init>(java.io.File,java.lang.ClassLoader)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$ResourceInfo:<init>(java.io.File,java.lang.String,java.lang.ClassLoader)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:<init>(java.lang.reflect.AccessibleObject)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeVariableKey:<init>(java.lang.reflect.TypeVariable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:<init>(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$JavaVersion$2:usedInGenericType(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Types:getComponentType(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractCatchingFuture:<init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture$Failure:<init>(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule:<init>(long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractTransformFuture:<init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:<init>(java.util.concurrent.ConcurrentHashMap)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:updateAndGet(java.lang.Object,java.util.function.LongUnaryOperator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:getAndUpdate(java.lang.Object,java.util.function.LongUnaryOperator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Callables:asAsyncCallable(java.util.concurrent.Callable,com.google.common.util.concurrent.ListeningExecutorService)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Callables:threadRenaming(java.util.concurrent.Callable,com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Callables:threadRenaming(java.lang.Runnable,com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$CloseableList:add(java.lang.AutoCloseable,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Peeker:<init>(com.google.common.collect.ImmutableList)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$ValueAndCloser:<init>(com.google.common.util.concurrent.ClosingFuture)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:withoutCloser(com.google.common.util.concurrent.AsyncFunction)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:<init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FakeTimeLimiter:newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:from(com.google.common.util.concurrent.FluentFuture)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:lazyTransform(java.util.concurrent.Future,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:renamingDecorator(java.util.concurrent.Executor,com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:renamingDecorator(java.util.concurrent.ExecutorService,com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:renamingDecorator(java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Platform:restoreInterruptIfIsInterruptedException(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:<init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SequentialExecutor:<init>(java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SequentialExecutor:execute(java.lang.Runnable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:<init>(java.util.concurrent.ExecutorService)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ThreadFactoryBuilder:setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ThreadFactoryBuilder:setThreadFactory(java.util.concurrent.ThreadFactory)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TimeoutFuture:<init>(com.google.common.util.concurrent.ListenableFuture)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:joinUninterruptibly(java.lang.Thread,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:<init>(java.util.concurrent.ExecutorService)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:submit(java.util.concurrent.Callable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Splitter$SplittingIterator:<init>(com.google.common.base.Splitter,java.lang.CharSequence)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:ticker(com.google.common.base.Ticker)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:removalListener(com.google.common.cache.RemovalListener)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$NodeIterator:setValue(java.lang.Object)": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator:set(java.lang.Object)": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractDirectedNetworkConnections:addOutEdge(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.graph.AbstractUndirectedNetworkConnections:addOutEdge(java.lang.Object,java.lang.Object)": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:<init>(com.google.common.graph.ElementOrder$Type,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:hash()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Stats:mean()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Stats:min()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Stats:max()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:mean()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:min()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:max()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$CloseableList:whenClosedCountDown()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor:execute(java.lang.Runnable)": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue:run()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.AbstractIterator:hasNext()": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "tryToComputeNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Converter:unsafeDoForward(java.lang.Object)": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter:unsafeDoBackward(java.lang.Object)": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Functions$ForMapWithDefault:apply(java.lang.Object)": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Suppliers$ExpiringMemoizingSupplier:get()": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Suppliers$MemoizingSupplier:get()": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:get()": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Ascii:toLowerCase(java.lang.String)": {
            "isUpperCase": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Ascii:toLowerCase(char)": {
            "isUpperCase": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:hasUpperCase()": {
            "isUpperCase": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Ascii:toUpperCase(java.lang.String)": {
            "isLowerCase": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Ascii:toUpperCase(char)": {
            "isLowerCase": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:hasLowerCase()": {
            "isLowerCase": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Ascii:truncate(java.lang.CharSequence,int,java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.Stats:writeTo(java.nio.ByteBuffer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Ints:constrainToRange(int,int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:constrainToRange(short,short,short)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ThreadFactoryBuilder:setPriority(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Ascii:equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": {
            "getAlphaIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$And:<init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$AnyOf:<init>(java.lang.CharSequence)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$ForPredicate:<init>(com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Negated:<init>(com.google.common.base.CharMatcher)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Or:<init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$And:setBits(java.util.BitSet)": {
            "setBits": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Negated:setBits(java.util.BitSet)": {
            "setBits": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Or:setBits(java.util.BitSet)": {
            "setBits": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$InRange:<init>(char,char)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$RangesMatcher:<init>(java.lang.String,char[],char[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:<init>(long,long,long,long,long,long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:<init>(java.util.Map)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:setMap(java.util.Map)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:<init>(java.util.Map)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators:indexed(int,int,java.util.function.IntFunction,java.util.Comparator)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:add(java.lang.Object)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:addAll(java.util.Collection)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:subSet(java.lang.Comparable,java.lang.Comparable)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:subSet(java.lang.Comparable,boolean,java.lang.Comparable,boolean)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:inferKeyTypeOrObjectUnderJ2cl(java.util.Map)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:inferValueTypeOrObjectUnderJ2cl(java.util.Map)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:<init>(java.lang.Class)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumMap:<init>(java.util.EnumMap)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Iterables:partition(java.lang.Iterable,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterables:paddedPartition(java.lang.Iterable,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators:partitionImpl(java.util.Iterator,int,boolean)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Builder:expectedSize(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Builder:maximumSize(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:<init>(java.lang.Object,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractNonStreamingHashFunction:newHasher(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:<init>(int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:separatingAppendable(java.lang.Appendable,java.lang.String,int)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.math.DoubleUtils:ensureNonNegative(double)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:toFile(java.net.URL)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:is(char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:isEither(char,char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:isNot(char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Negated:matchesNoneOf(java.lang.CharSequence)": {
            "matchesAllOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Negated:countIn(java.lang.CharSequence)": {
            "countIn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:collapseFrom(java.lang.CharSequence,char)": {
            "finishCollapseFrom": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CommonPattern:isPcreLike()": {
            "patternCompilerIsPcreLike": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter$ConverterComposition:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter$ReverseConverter:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Enums:getEnumConstants(java.lang.Class)": {
            "populateCache": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.FunctionalEquivalence:<init>(com.google.common.base.Function,com.google.common.base.Equivalence)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.PairwiseEquivalence:<init>(com.google.common.base.Equivalence)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.Equivalence$EquivalentToPredicate:apply(java.lang.Object)": {
            "equivalent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Equivalence$Wrapper:equals(java.lang.Object)": {
            "equivalent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Equivalence:test(java.lang.Object,java.lang.Object)": {
            "equivalent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.FunctionalEquivalence:doEquivalent(java.lang.Object,java.lang.Object)": {
            "equivalent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.PairwiseEquivalence:doEquivalent(java.lang.Iterable,java.lang.Iterable)": {
            "equivalent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference)": {
            "equivalent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:clearValueForTesting(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference)": {
            "equivalent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Equivalence$EquivalentToPredicate:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Functions$ConstantFunction:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Functions$ForMapWithDefault:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Predicates$ContainsPatternPredicate:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Suppliers$SupplierOfInstance:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapEntry:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:containsValue(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredMultimapValues:remove(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:seekByKey(java.lang.Object,int)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:seekByValue(java.lang.Object,int)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Iterators:elementsEqual(java.util.Iterator,java.util.Iterator)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap$ValueEntry:matchesValue(java.lang.Object,int)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredMapValues:remove(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$ValueDifferenceImpl:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multisets$AbstractEntry:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables$AbstractCell:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Graphs:canTraverseWithoutReusingEdge(com.google.common.graph.Graph,java.lang.Object,java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Equivalence$Wrapper:hashCode()": {
            "hash": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.FunctionalEquivalence:doHash(java.lang.Object)": {
            "hash": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.PairwiseEquivalence:doHash(java.lang.Iterable)": {
            "hash": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.FinalizablePhantomReference:<init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue)": {
            "cleanUp": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.FinalizableReferenceQueue:close()": {
            "cleanUp": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.FinalizableSoftReference:<init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue)": {
            "cleanUp": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.FinalizableWeakReference:<init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue)": {
            "cleanUp": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.FinalizableReferenceQueue$DecoupledLoader:loadFinalizer()": {
            "getBaseUrl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "newLoader": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Functions:constant(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Functions$FunctionForMapNoDefault:apply(java.lang.Object)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser:parseInteger(com.google.common.cache.CacheBuilderSpec,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$InitialCapacityParser:parseInteger(com.google.common.cache.CacheBuilderSpec,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$MaximumSizeParser:parseLong(com.google.common.cache.CacheBuilderSpec,long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$MaximumWeightParser:parseLong(com.google.common.cache.CacheBuilderSpec,long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:<init>(java.util.concurrent.ConcurrentMap)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$BiMapConverter:convert(com.google.common.collect.BiMap,java.lang.Object)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:incidentEdges(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:getHostAndPortFromBracketedHost(java.lang.String)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:requireBracketsForIPv6()": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:decrement(java.net.InetAddress)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:increment(java.net.InetAddress)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Reflection:newProxy(java.lang.Class,java.lang.reflect.InvocationHandler)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeCapture:capture()": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeParameter:<init>()": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner$1:toString(java.lang.Object)": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:appendTo(java.lang.Appendable,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "toString": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.base.Joiner$MapJoiner:appendTo(java.lang.StringBuilder,java.lang.Iterable)": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner$MapJoiner:join(java.util.Iterator)": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:withKeyValueSeparator(char)": {
            "withKeyValueSeparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:toString()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addHolder(java.lang.Object)": {
            "addHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addHolder(java.lang.String,java.lang.Object)": {
            "addHolder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addUnconditionalHolder(java.lang.Object)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addUnconditionalHolder(java.lang.String,java.lang.Object)": {
            "addUnconditionalHolder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:getWeigher()": {
            "firstNonNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:getKeyStrength()": {
            "firstNonNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:getValueStrength()": {
            "firstNonNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:getRemovalListener()": {
            "firstNonNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:get(java.lang.Object)": {
            "firstNonNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:getKeyStrength()": {
            "firstNonNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:getValueStrength()": {
            "firstNonNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Resources:getResource(java.lang.String)": {
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.Optional:absent()": {
            "withType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Optional:toJavaUtil(com.google.common.base.Optional)": {
            "toJavaUtil": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Platform:emptyToNull(java.lang.String)": {
            "stringIsNullOrEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Strings:isNullOrEmpty(java.lang.String)": {
            "stringIsNullOrEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$AccessDurationParser:parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$RecordStatsParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$RefreshDurationParser:parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$WriteDurationParser:parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:chooseTableSize(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:skip(java.lang.Iterable,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterables:limit(java.lang.Iterable,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators:advance(java.util.Iterator,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators:limit(java.util.Iterator,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Traverser:forTree(com.google.common.graph.SuccessorsFunction)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:<init>(long[])": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hashing:checkPositiveAndMakeMultipleOf32(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams$LimitedInputStream:<init>(java.io.InputStream,long)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.Quantiles$Scale:<init>(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Quantiles$ScaleAndIndexes:<init>(int,int[])": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:fromBigInteger(java.math.BigInteger,boolean)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$PowerOfTwoStriped:<init>(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:decodabetFor(char[])": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Strings:repeat(java.lang.String,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs:checkNonNegative(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs:checkPositive(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractHashFunction:newHasher(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:<init>(com.google.common.hash.BloomFilterStrategies$LockFreeBitArray,int,com.google.common.hash.Funnel,com.google.common.hash.BloomFilter$Strategy)": {
            "checkArgument": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "checkNotNull": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            }
        }
    },
    {
        "com.google.common.hash.ChecksumHashFunction:<init>(com.google.common.hash.ImmutableSupplier,int,java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.hash.Hashing:concatenating(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.SipHashFunction:<init>(int,int,long,long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.FileBackedOutputStream:<init>(int,boolean)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses$TeredoInfo:<init>(java.net.Inet4Address,java.net.Inet4Address,int,int)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:getInet4Address(byte[])": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:ensureCapacity(boolean[],int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:ensureCapacity(byte[],int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars:ensureCapacity(char[],int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:ensureCapacity(double[],int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Floats:ensureCapacity(float[],int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints:ensureCapacity(int[],int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:ensureCapacity(long[],int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:ensureCapacity(short[],int,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:checkPermits(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs:checkNonNegative(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs:checkPositive(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars:checkedCast(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints:checkedCast(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:checkNoOverflow(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:checkedCast(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.SignedBytes:checkedCast(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:checkedCast(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:checkedCast(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$Scheduler:newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$Scheduler:newFixedRateSchedule(long,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:checkPositiveTimeout(long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars:constrainToRange(char,char,char)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:constrainToRange(long,long,long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$KeyStrengthParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$ValueStrengthParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multisets$FilteredMultiset:add(java.lang.Object,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Resources:getResource(java.lang.Class,java.lang.String)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types:disallowPrimitiveType(java.lang.reflect.Type[],java.lang.String)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService$StateSnapshot:<init>(com.google.common.util.concurrent.Service$State,boolean,java.lang.Throwable)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableTable:checkNoDuplicate(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:start()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:stop()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:checkNonLoadingCache()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:checkWeightWithWeigher()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:remove()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectPreconditions:checkRemove(boolean)": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:orderEntriesByValue(java.util.Comparator)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Iterators$PeekingImpl:remove()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator:remove()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:isEvenLevel(int)": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MacHashFunction$MacHasher:checkNotDone()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:checkNotDone()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:initialCapacity(int)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:concurrencyLevel(int)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:initialCapacity(int)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:concurrencyLevel(int)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.HashCode$BytesHashCode:asInt()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:maximumSize(long)": {
            "checkState": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "checkArgument": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:maximumWeight(long)": {
            "checkState": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:weigher(com.google.common.cache.Weigher)": {
            "checkState": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:expireAfterWrite(long,java.util.concurrent.TimeUnit)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:expireAfterAccess(long,java.util.concurrent.TimeUnit)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:refreshAfterWrite(long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:keyEquivalence(com.google.common.base.Equivalence)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:valueEquivalence(com.google.common.base.Equivalence)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:setKeyStrength(com.google.common.cache.LocalCache$Strength)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:setValueStrength(com.google.common.cache.LocalCache$Strength)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:keyEquivalence(com.google.common.base.Equivalence)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:<init>()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService$StateSnapshot:failureCause()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture:doTransform(com.google.common.util.concurrent.AsyncFunction,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask:runInterruptibly()": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask:runInterruptibly()": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Preconditions:checkElementIndex(int,int,java.lang.String)": {
            "badElementIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Preconditions:checkPositionIndex(int,int,java.lang.String)": {
            "badPositionIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Preconditions:badPositionIndexes(int,int,int)": {
            "badPositionIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates:alwaysTrue()": {
            "withNarrowedType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates:alwaysFalse()": {
            "withNarrowedType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates:isNull()": {
            "withNarrowedType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates:notNull()": {
            "withNarrowedType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates:and(com.google.common.base.Predicate,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "asList": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.base.Predicates:or(com.google.common.base.Predicate,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "asList": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.base.SmallCharMatcher:matches(char)": {
            "checkFilter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "smear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.Splitter:<init>(com.google.common.base.Splitter$Strategy)": {
            "none": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.base.Splitter:omitEmptyStrings()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:limit(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:trimResults(com.google.common.base.CharMatcher)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:splitToList(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "splittingIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.TempFileCreator$JavaIoCreator:createTempDir()": {
            "value": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.TempFileCreator$JavaNioCreator:createTempDir()": {
            "value": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.TempFileCreator$JavaNioCreator:createTempFile(java.lang.String)": {
            "value": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.StandardSystemProperty:toString()": {
            "key": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "value": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:<init>()": {
            "systemTicker": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:getTicker(boolean)": {
            "systemTicker": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:elapsed(java.util.concurrent.TimeUnit)": {
            "elapsedNanos": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:elapsed()": {
            "elapsedNanos": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:toString()": {
            "elapsedNanos": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "chooseUnit": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "formatCompact4Digits": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "abbreviate": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.base.Strings:nullToEmpty(java.lang.String)": {
            "nullToEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Strings:commonPrefix(java.lang.CharSequence,java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "validSurrogatePairAt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Strings:commonSuffix(java.lang.CharSequence,java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "validSurrogatePairAt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Suppliers:ofInstance(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Ticker$1:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder$3:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Utf8:encodedLengthGeneral(java.lang.CharSequence,int)": {
            "unpairedSurrogateMsg": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,char,char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,int,char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,long,char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,char,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,long,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,char,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,int,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,char,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,int,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,long,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Verify:verify(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.internal.Finalizer:cleanUp(java.lang.ref.Reference)": {
            "getFinalizeReferentMethod": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.AbstractCache$SimpleStatsCounter:<init>()": {
            "create": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.AbstractCache$SimpleStatsCounter:incrementBy(com.google.common.cache.AbstractCache$StatsCounter)": {
            "hitCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "missCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "loadSuccessCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "loadExceptionCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "totalLoadTime": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "evictionCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.cache.AbstractLoadingCache:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Platform:preservesInsertionOrderOnPutsMap()": {
            "newLinkedHashMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.AbstractCache:putAll(java.util.Map)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.AbstractCache:invalidateAll(java.lang.Iterable)": {
            "invalidate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.AbstractLoadingCache:getUnchecked(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:newBuilder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec:hashCode()": {
            "durationInNanos": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec:equals(java.lang.Object)": {
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "durationInNanos": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader$FunctionToCacheLoader:<init>(com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader$SupplierToCacheLoader:<init>(com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader:loadAll(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:requestCount()": {
            "saturatedAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:loadCount()": {
            "saturatedAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:loadExceptionRate()": {
            "saturatedAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:averageLoadPenalty()": {
            "saturatedAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingIterator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingTable:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingExecutorService:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFuture:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.ForwardingLoadingCache:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:createEntrySet()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl:build()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:createEntrySet()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableTable:createCellSet()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:getSubscribersForTesting(java.lang.Class)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$TypeCollector$3:getInterfaces(java.lang.Object)": {
            "of": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$AbstractCacheSet:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Values:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$AccessQueue:offer(com.google.common.cache.ReferenceEntry)": {
            "connectAccessOrder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$AccessQueue:iterator()": {
            "peek": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:drainRecencyQueue()": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$2:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)": {
            "copyEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$3:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)": {
            "copyEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$4:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)": {
            "copyEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$6:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)": {
            "copyEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$7:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)": {
            "copyEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$8:copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object)": {
            "copyEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:copyEntry(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)": {
            "copyEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WriteQueue:offer(com.google.common.cache.ReferenceEntry)": {
            "connectWriteOrder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap:satisfies(java.lang.Object,java.lang.Object)": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableBiMap$InverseEntries:get(int)": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AbstractFilteredMap:apply(java.lang.Object,java.lang.Object)": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$MapMultimap:containsEntry(java.lang.Object,java.lang.Object)": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$MapMultimap:remove(java.lang.Object,java.lang.Object)": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column:removeFromColumnIf(com.google.common.base.Predicate)": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$KeyIterator:next()": {
            "getKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$StrongEntry:<init>(java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "unset": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeakEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "unset": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:set(java.lang.Object)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:setException(java.lang.Throwable)": {
            "setException": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:init()": {
            "directExecutor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:closeQuietly(java.lang.AutoCloseable,java.util.concurrent.Executor)": {
            "directExecutor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:rejectionPropagatingExecutor(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "directExecutor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:waitForValue()": {
            "getUninterruptibly": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:getDone(java.util.concurrent.Future)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:getUnchecked(java.util.concurrent.Future)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:size()": {
            "longSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:initTable(java.util.concurrent.atomic.AtomicReferenceArray)": {
            "customWeigher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FakeTimeLimiter:runWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:wrapAndThrowExecutionExceptionOrError(java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:wrapAndThrowRuntimeExecutionExceptionOrError(java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:clearReferenceQueues()": {
            "usesKeyReferences": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "clearKeyReferenceQueue": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "usesValueReferences": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "clearValueReferenceQueue": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WriteQueue:iterator()": {
            "peek": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:runUnlockedCleanup()": {
            "processPendingNotifications": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$SoftValueReference:copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeightedSoftValueReference:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeightedStrongValueReference:<init>(java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Strength$1:defaultEquivalence()": {
            "equals": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Strength$1:defaultEquivalence()": {
            "equals": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Strength$2:defaultEquivalence()": {
            "identity": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Strength$3:defaultEquivalence()": {
            "identity": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Strength$2:defaultEquivalence()": {
            "identity": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeakValueReference:copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeightedWeakValueReference:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:nullifyAccessOrder(com.google.common.cache.ReferenceEntry)": {
            "nullEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:nullifyWriteOrder(com.google.common.cache.ReferenceEntry)": {
            "nullEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$StrongValueReference:waitForValue()": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$ValueIterator:next()": {
            "getValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WriteThroughEntry:toString()": {
            "getKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:usesWriteQueue()": {
            "expiresAfterWrite": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:recordsWrite()": {
            "expiresAfterWrite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "refreshes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:expires()": {
            "expiresAfterWrite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "expiresAfterAccess": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:usesAccessQueue()": {
            "expiresAfterAccess": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "evictsBySize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:recordsAccess()": {
            "expiresAfterAccess": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:isExpired(com.google.common.cache.ReferenceEntry,long)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "expiresAfterAccess": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "expiresAfterWrite": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:newValueReference(com.google.common.cache.ReferenceEntry,java.lang.Object,int)": {
            "segmentFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:hash(java.lang.Object)": {
            "hash": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "rehash": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:size()": {
            "longSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "saturatedCast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:size()": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:size()": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:size()": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:size(java.util.Iterator)": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMultiset:size()": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:size()": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:linearTimeSizeImpl(com.google.common.collect.Multiset)": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:size()": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:saturatedAdd(int,int)": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:saturatedSubtract(int,int)": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:saturatedMultiply(int,int)": {
            "saturatedCast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Platform:preservesInsertionOrderOnAddsSet()": {
            "newLinkedHashSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$Inverse:checkKey(java.lang.Object)": {
            "checkValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:entrySet()": {
            "entrySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:entrySet()": {
            "entrySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$BiMapEntry:setValue(java.lang.Object)": {
            "checkValue": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "entrySet": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.4
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.38
            },
            "containsValue": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.09
            },
            "checkArgument": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:containsValue(java.lang.Object)": {
            "containsValue": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:containsValue(java.lang.Object)": {
            "containsValue": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$EntrySet:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$KeySet:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$EntrySet:iterator()": {
            "entrySetIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:makeInverse(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$Inverse:checkValue(java.lang.Object)": {
            "checkKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$Inverse:values()": {
            "values": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:values()": {
            "values": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$KeySet:iterator()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "keyIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$Keys:iterator()": {
            "keyIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:keySet()": {
            "keySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:keySet()": {
            "keySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$ValueSet:iterator()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "valueIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.FilteredMultimapValues:iterator()": {
            "valueIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:inverse()": {
            "inverse": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:inverse()": {
            "inverse": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$Itr:next()": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:<init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)": {
            "checkNotNull": {
                "count_score": 0.23,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.46,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "checkArgument": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators$PeekingImpl:next()": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators$PeekingImpl:peek()": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesMap:getOrDefault(java.lang.Object,java.lang.Object)": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesMap:remove(java.lang.Object)": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:getElement()": {
            "uncheckedCastNullableTToT": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:updateInverseMap(java.lang.Object,boolean,java.lang.Object,java.lang.Object)": {
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeFromInverseMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:removeFromBothMaps(java.lang.Object)": {
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeFromInverseMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:replaceAll(java.util.function.BiFunction)": {
            "replaceAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:replaceAll(java.util.function.BiFunction)": {
            "replaceAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractIndexedListIterator:next()": {
            "hasNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractIndexedListIterator:previous()": {
            "hasPrevious": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractIterator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSequentialIterator:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableListIterator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractIterator:hasNext()": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "tryToComputeNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap:wrapEntry(java.util.Map$Entry)": {
            "wrapCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "immutableEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:sortedMap()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:comparator()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:firstKey()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:lastKey()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:headMap(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:subMap(java.lang.Object,java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:tailMap(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:createKeySet()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:pollAsMapEntry(java.util.Iterator)": {
            "unmodifiableCollectionSubclass": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "immutableEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:createUnmodifiableEmptyCollection()": {
            "unmodifiableCollectionSubclass": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:sortedMap()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:comparator()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:first()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:headSet(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:last()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:subSet(java.lang.Object,java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:tailSet(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:pollFirst()": {
            "pollNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:pollFirst()": {
            "pollNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:pollFirstEntry()": {
            "pollNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:pollLastEntry()": {
            "pollNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardPollFirstEntry()": {
            "pollNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardPollFirst()": {
            "pollNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:remove()": {
            "removeIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:refreshIfEmpty()": {
            "getDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:addAll(int,java.util.Collection)": {
            "getListDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:get(int)": {
            "getListDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:set(int,java.lang.Object)": {
            "getListDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:add(int,java.lang.Object)": {
            "getListDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:remove(int)": {
            "getListDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:indexOf(java.lang.Object)": {
            "getListDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:lastIndexOf(java.lang.Object)": {
            "getListDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:hasPrevious()": {
            "getDelegateListIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:previous()": {
            "getDelegateListIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:nextIndex()": {
            "getDelegateListIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:previousIndex()": {
            "getDelegateListIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:set(java.lang.Object)": {
            "getDelegateListIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:add(java.lang.Object)": {
            "getDelegateListIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedList:subList(int,int)": {
            "getListDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wrapList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:getSortedSetDelegate()": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:comparator()": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:first()": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:last()": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:headSet(java.lang.Object)": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:subSet(java.lang.Object,java.lang.Object)": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:tailSet(java.lang.Object)": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:put(java.lang.Object,java.lang.Object)": {
            "createCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:getOrCreateCollection(java.lang.Object)": {
            "createCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:get(java.lang.Object)": {
            "createCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "wrapCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:values()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:values()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:createKeys()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:createKeys()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$MapMultimap:createKeys()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:entries()": {
            "entries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:valueIterator()": {
            "entries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "valueIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:entries()": {
            "entries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:getAndSet(com.google.common.collect.Count,int)": {
            "getAndSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator:next()": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:clear()": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:iterator()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:iterator()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Collections2:newStringBuilderForCollection(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap$Keys:remove(java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists:computeArrayListCapacity(int)": {
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "saturatedCast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Lists:newArrayListWithCapacity(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:capacity(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$ArrayListSupplier:<init>(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$HashSetSupplier:<init>(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:<init>(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:arrayListValues(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:hashSetValues(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:linkedHashSetValues(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder:hashKeys(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder:linkedHashKeys(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$ImmutableEntry:<init>(java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int,int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap$Entries:spliterator()": {
            "entrySpliterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap$EntrySet:hashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeySetMultimap$EntrySet:hashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSet:standardHashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:hashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableEntrySet:hashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:hashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredSet:hashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$AsRanges:hashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap$EntrySet:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeySetMultimap$EntrySet:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSet:standardEquals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableEntrySet:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredSet:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$AsRanges:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:containsValue(java.lang.Object)": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:containsEntry(java.lang.Object,java.lang.Object)": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:remove(java.lang.Object,java.lang.Object)": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:hashCode()": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:toString()": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:asMap()": {
            "asMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:putAll(com.google.common.collect.Multimap)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:keySet()": {
            "keySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:keys()": {
            "keys": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:contains(java.lang.Object)": {
            "contains": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:contains(java.lang.Object)": {
            "contains": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:add(java.lang.Object)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:removeAll(java.util.Collection)": {
            "removeAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardRemoveAll(java.util.Collection)": {
            "removeAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:elementSet()": {
            "createElementSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:entrySet()": {
            "createEntrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardEquals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:firstEntry()": {
            "getNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:lastEntry()": {
            "getNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:getFirst(java.lang.Iterable,java.lang.Object)": {
            "getNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:lowerKey(java.lang.Object)": {
            "lowerEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:floorKey(java.lang.Object)": {
            "floorEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:ceilingKey(java.lang.Object)": {
            "ceilingEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:higherKey(java.lang.Object)": {
            "higherEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:descendingKeySet()": {
            "descendingMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:<init>(com.google.common.collect.ImmutableList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:<init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableRangeSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:<init>(java.util.NavigableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:contains(java.lang.Comparable)": {
            "contains": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:contains(java.lang.Comparable)": {
            "contains": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractRangeSet:clear()": {
            "all": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "remove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:<init>(java.util.NavigableMap)": {
            "all": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:enclosesAll(com.google.common.collect.RangeSet)": {
            "enclosesAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:enclosesAll(com.google.common.collect.RangeSet)": {
            "enclosesAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:addAll(com.google.common.collect.RangeSet)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:removeAll(com.google.common.collect.RangeSet)": {
            "removeAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedSetMultimap:asMap()": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:keySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:orNaturalOrder(java.util.Comparator)": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ReverseNaturalOrdering:reverse()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedIterables:comparator(java.util.SortedSet)": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:comparator()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:comparator()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:comparator()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:firstEntry()": {
            "firstEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:lastEntry()": {
            "lastEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:descendingMultiset()": {
            "createDescendingMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable$Values:contains(java.lang.Object)": {
            "containsValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:containsValue(java.lang.Object)": {
            "containsValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:isEmpty()": {
            "isEmpty": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:putAll(com.google.common.collect.Table)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:cellSet()": {
            "createCellSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:values()": {
            "createValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ByFunctionOrdering:<init>(com.google.common.base.Function,com.google.common.collect.Ordering)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ComparatorOrdering:<init>(java.util.Comparator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.CompoundOrdering:<init>(java.util.Comparator,java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ExplicitOrdering:<init>(com.google.common.collect.ImmutableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LexicographicalOrdering:<init>(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.NaturalOrdering:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.NullsFirstOrdering:<init>(com.google.common.collect.Ordering)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.NullsLastOrdering:<init>(com.google.common.collect.Ordering)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ReverseNaturalOrdering:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ReverseOrdering:<init>(com.google.common.collect.Ordering)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.UsingToStringOrdering:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayListMultimap:writeObject(java.io.ObjectOutputStream)": {
            "writeMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:writeObject(java.io.ObjectOutputStream)": {
            "writeMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:writeObject(java.io.ObjectOutputStream)": {
            "writeMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayListMultimap:readObject(java.io.ObjectInputStream)": {
            "readCount": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.74,
                "total_score": 0.74
            },
            "newHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "populateMultimap": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.Serialization:populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream)": {
            "populateMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors$MutableCell:<init>(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Tables$ImmutableCell:<init>(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$ArrayMap:keySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$ArrayMap:getKey(int)": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$ArrayMap:put(java.lang.Object,java.lang.Object)": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:columnKeySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:rowKeySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap:getKey(int)": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ExplicitOrdering:toString()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:createKeySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm:readResolve()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:keySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:columnKeySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap$KeySet$SerializedForm:readResolve()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$PowerSet:contains(java.lang.Object)": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$ArrayMap:entryIterator()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$ArrayMap:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$ArrayMap:containsKey(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:containsColumn(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:containsRow(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:containsKey(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapKeySet:contains(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:containsKey(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:cellIterator()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:valuesIterator()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet:asList()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:get(java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableTable:createValues()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:column(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "firstNonNull": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.56
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeTable:<init>()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntry:<init>(java.lang.Object,java.lang.Object)": {
            "checkEntryNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:put(java.lang.Object,java.lang.Object)": {
            "checkEntryNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DiscreteDomain$BigIntegerDomain:offset(java.math.BigInteger,long)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DiscreteDomain$LongDomain:offset(java.lang.Long,long)": {
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.DiscreteDomain:offset(java.lang.Comparable,long)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators$FlatMapSpliterator:trySplit()": {
            "estimateSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators:flatMapToDouble(java.util.Spliterator,java.util.function.Function,int,long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.38
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators:flatMapToInt(java.util.Spliterator,java.util.function.Function,int,long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.38
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators:flatMapToLong(java.util.Spliterator,java.util.function.Function,int,long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.38
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators:flatMap(java.util.Spliterator,java.util.function.Function,int,long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.38
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredSet:<init>(java.util.Set,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:containsAll(java.util.Collection)": {
            "containsAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardContainsAll(java.util.Collection)": {
            "containsAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:containsAll(java.util.Collection)": {
            "containsAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:containsAll(java.util.Collection)": {
            "containsAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$OrderedPermutationIterator:calculateNextPermutation()": {
            "findNextJ": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "findNextL": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Collections2$PermutationIterator:calculateNextPermutation()": {
            "switchDirection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$EntrySetView:contains(java.lang.Object)": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$KeySetView:remove(java.lang.Object)": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:keySetIterator()": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:entrySetIterator()": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:size()": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:valuesIterator()": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$KeySetView:spliterator()": {
            "needsAllocArrays": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "delegateOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$ValuesView:spliterator()": {
            "needsAllocArrays": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "delegateOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$Itr:next()": {
            "checkForConcurrentModification": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            },
            "hasNext": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getSuccessor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:setHashTableMask(int)": {
            "maskCombine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:setHashTableMask(int)": {
            "maskCombine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:entry(int)": {
            "requireEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:setEntry(int,int)": {
            "requireEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:key(int)": {
            "requireKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:setKey(int,java.lang.Object)": {
            "requireKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:resizeEntries(int)": {
            "requireEntries": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "requireKeys": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.22
            },
            "requireValues": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:value(int)": {
            "requireValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:setValue(int,java.lang.Object)": {
            "requireValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:keySet()": {
            "createKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:entrySet()": {
            "createEntrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:values()": {
            "createValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:isUsingHashFloodingResistance()": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:iterator()": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:size()": {
            "delegateOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:entry(int)": {
            "requireEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:setEntry(int,int)": {
            "requireEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:resizeEntries(int)": {
            "requireEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "requireElements": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:spliterator()": {
            "needsAllocArrays": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "delegateOrNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "requireElements": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:toArray()": {
            "needsAllocArrays": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "delegateOrNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "requireElements": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:element(int)": {
            "requireElements": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:setElement(int,java.lang.Object)": {
            "requireElements": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashing:tableSize(int)": {
            "closedTableSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:link(int)": {
            "requireLinks": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:setLink(int,long)": {
            "requireLinks": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:getPredecessor(int)": {
            "requirePredecessors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:setPredecessor(int,int)": {
            "requirePredecessors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:getSuccessor(int)": {
            "requireSuccessors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:setSuccessor(int,int)": {
            "requireSuccessors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ComparisonChain$1:compare(int,int)": {
            "compare": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Ints$LexicographicalComparator:compare(int[],int[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ComparisonChain$1:compare(long,long)": {
            "compare": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Longs$LexicographicalComparator:compare(long[],long[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ComparisonChain$1:compareTrueFirst(boolean,boolean)": {
            "compare": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ComparisonChain$1:compareFalseFirst(boolean,boolean)": {
            "compare": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Booleans$LexicographicalComparator:compare(boolean[],boolean[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset$3:next()": {
            "next": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:readObject(java.io.ObjectInputStream)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Cut$BelowAll:leastValueAbove(com.google.common.collect.DiscreteDomain)": {
            "minValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Cut$AboveAll:greatestValueBelow(com.google.common.collect.DiscreteDomain)": {
            "maxValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Cut$AboveValue:isLessThan(java.lang.Comparable)": {
            "compareOrThrow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Cut$BelowValue:isLessThan(java.lang.Comparable)": {
            "compareOrThrow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:equalsOrThrow(java.lang.Comparable,java.lang.Comparable)": {
            "compareOrThrow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:<init>(com.google.common.collect.DiscreteDomain)": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:<init>(com.google.common.collect.ImmutableList,java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut$AboveAll:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut$AboveValue:<init>(java.lang.Comparable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut$BelowAll:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut$BelowValue:<init>(java.lang.Comparable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut$AboveValue:withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)": {
            "belowAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:hasLowerBound()": {
            "belowAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Cut$AboveValue:withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)": {
            "aboveAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Cut:compareTo(com.google.common.collect.Cut)": {
            "belowAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "aboveAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "compareOrThrow": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.23
            },
            "compare": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.Range:hasUpperBound()": {
            "aboveAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Cut$AboveValue:canonical(com.google.common.collect.DiscreteDomain)": {
            "leastValueAbove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "aboveAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedMultiset:<init>(com.google.common.collect.ImmutableSortedMultiset)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:<init>(com.google.common.collect.RegularImmutableSortedSet,long[],int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedMultiset:elementSet()": {
            "descendingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:valueComparator()": {
            "comparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:comparator()": {
            "comparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:indexOf(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingMultiset:entrySet()": {
            "createEntrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DiscreteDomain:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet:tailSetImpl(java.lang.Object,boolean)": {
            "tailSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "subSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet:headSetImpl(java.lang.Object,boolean)": {
            "headSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:writeObject(java.io.ObjectOutputStream)": {
            "writeMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:writeObject(java.io.ObjectOutputStream)": {
            "writeMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:writeObject(java.io.ObjectOutputStream)": {
            "writeMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset$Itr:next()": {
            "hasNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:checkIsE(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "isActuallyE": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:count(java.lang.Object)": {
            "isActuallyE": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:writeObject(java.io.ObjectOutputStream)": {
            "writeMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:writeObject(java.io.ObjectOutputStream)": {
            "writeMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:writeObject(java.io.ObjectOutputStream)": {
            "writeMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:writeObject(java.io.ObjectOutputStream)": {
            "writeMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ExplicitOrdering:rank(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap$AsMap:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap$Builder:<init>()": {
            "newArrayList": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$Builder:<init>()": {
            "newArrayList": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$Builder:<init>()": {
            "newArrayList": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.Files$1:<init>()": {
            "newArrayList": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.Resources$1:<init>()": {
            "newArrayList": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap:removeAll(java.lang.Object)": {
            "unmodifiableEmptyCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyListMultimap:unfiltered()": {
            "unfiltered": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap:removeAll(java.lang.Object)": {
            "containsKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "unmodifiableEmptyCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:from(java.lang.Object[])": {
            "from": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:of()": {
            "from": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:isEmpty()": {
            "getDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:append(java.lang.Iterable)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "concat": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterables:concat(java.lang.Iterable,java.lang.Iterable)": {
            "concat": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)": {
            "concat": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)": {
            "concat": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:stream()": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "stream": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:remainingCapacity()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:putFirst(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:putLast(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:takeFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:takeLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:pollFirst(long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:pollLast(long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:put(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:offer(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:take()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:poll(long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:drainTo(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:drainTo(java.util.Collection,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:frequency(java.util.Iterator,java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:containsKeyImpl(java.util.Map,java.lang.Object)": {
            "keyIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps:containsValueImpl(java.util.Map,java.lang.Object)": {
            "valueIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardAddAll(int,java.lang.Iterable)": {
            "addAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardSubList(int,int)": {
            "subListImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardHashCode()": {
            "hashCodeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingListMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingListMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardPutAll(java.util.Map)": {
            "putAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardEquals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset$StandardElementSet:iterator()": {
            "multiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "elementIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap:replaceAll(java.util.function.BiFunction)": {
            "forward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:lowerEntry(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:lowerKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:floorEntry(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:floorKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:ceilingEntry(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:ceilingKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:higherEntry(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:higherKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:firstEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:lastEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:pollFirstEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:pollLastEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:descendingMap()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:navigableKeySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:descendingKeySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:headMap(java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:tailMap(java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:elementSet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:comparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:descendingMultiset()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:firstEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:lastEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:pollFirstEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:pollLastEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSetMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSetMultimap:removeAll(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSetMultimap:valueComparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSetMultimap:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:cellSet()": {
            "cellSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:column(java.lang.Object)": {
            "column": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:columnKeySet()": {
            "columnKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:row(java.lang.Object)": {
            "row": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:rowKeySet()": {
            "rowKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:values()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:tooLow(java.lang.Object)": {
            "hasLowerBound": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getLowerEndpoint": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.19,
                "total_score": 0.45
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "getLowerBoundType": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:tooHigh(java.lang.Object)": {
            "hasUpperBound": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getUpperEndpoint": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.19,
                "total_score": 0.45
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "getUpperBoundType": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:equals(java.lang.Object)": {
            "getLowerBoundType": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getUpperBoundType": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getLowerEndpoint": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.1
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getUpperEndpoint": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:hashCode()": {
            "getLowerEndpoint": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getLowerBoundType": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getUpperEndpoint": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getUpperBoundType": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:<init>(java.util.Map,com.google.common.collect.HashBasedTable$Factory)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardRowSortedTable:<init>(java.util.SortedMap,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables:newCustomTable(java.util.Map,com.google.common.base.Supplier)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.37
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:columnMap()": {
            "columnMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:columnKeySet()": {
            "columnKeySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:size()": {
            "columnKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap:keySet()": {
            "columnKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:column(java.lang.Object)": {
            "column": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:row(java.lang.Object)": {
            "row": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:clear()": {
            "forward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:containsKey(java.lang.Object)": {
            "forward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:inverse()": {
            "forward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:values()": {
            "forward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$InverseSerializedForm:readResolve()": {
            "inverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:values()": {
            "inverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Itr:next()": {
            "hasNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:init(int)": {
            "checkNonnegative": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "closedTableSize": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.5
            },
            "createTable": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:rehashIfNecessary()": {
            "needsResizing": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "createTable": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "insert": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.collect.Serialization:populateMap(java.util.Map,java.io.ObjectInputStream)": {
            "populateMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:entrySet()": {
            "entrySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:readObject(java.io.ObjectInputStream)": {
            "readCount": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.74,
                "total_score": 0.74
            },
            "newHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "populateMultiset": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:readObject(java.io.ObjectInputStream)": {
            "readCount": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "populateMultiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Serialization:populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream)": {
            "populateMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Hashing:smearedHash(java.lang.Object)": {
            "smear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:rebuildHashTable(int,java.lang.Object[],int)": {
            "smear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableAsList:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$SerializedForm:makeBuilder(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:builderWithExpectedSize(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap:inverse()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:valuePredicateOnEntries(com.google.common.base.Predicate)": {
            "valueFunction": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "compose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableBiMap:<init>(com.google.common.collect.ImmutableList,java.util.Map,java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap:<init>(com.google.common.collect.ImmutableMapEntry[],com.google.common.collect.ImmutableMapEntry[],java.util.Map$Entry[],int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableBiMap:<init>(java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkEntryNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableBiMap:<init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableBiMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMap:<init>(java.util.Map,com.google.common.collect.ImmutableList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:<init>(java.util.Map$Entry[],com.google.common.collect.ImmutableMapEntry[],int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap:readResolve()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:ensureCapacity(int)": {
            "expandedCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$SetBuilderImpl:ensureCapacity(int)": {
            "expandedCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$Builder:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:<init>(com.google.common.collect.Multiset)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:<init>(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:addAll(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$Builder:addAll(java.util.Iterator)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:addAll(java.util.Iterator)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:addAll(java.util.Iterator)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapValues:<init>(com.google.common.collect.ImmutableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$EntryCollection:<init>(com.google.common.collect.ImmutableMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Values:<init>(com.google.common.collect.ImmutableMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$Builder:addAll(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "copyIntoArray": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "addAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumMap:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumMap:entryIterator()": {
            "unmodifiableEntryIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableEntries:iterator()": {
            "unmodifiableEntryIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumSet:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$Builder:combine(com.google.common.collect.ImmutableList$Builder)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:reverseIndex(int)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:reversePosition(int)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$SubList:listIterator(int)": {
            "listIterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:listIterator()": {
            "listIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableAsList:listIterator(int)": {
            "listIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:toImmutableList()": {
            "toImmutableList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner2:<init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner3:<init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner4:<init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner5:<init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:copyIntoArray(java.lang.Object[],int)": {
            "copyIntoArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Indexed:copyIntoArray(java.lang.Object[],int)": {
            "copyIntoArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.IndexedImmutableSet:copyIntoArray(java.lang.Object[],int)": {
            "copyIntoArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableAsList:copyIntoArray(java.lang.Object[],int)": {
            "copyIntoArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:copyIntoArray(java.lang.Object[],int)": {
            "copyIntoArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$ParameterizedTypeImpl:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$WildcardTypeImpl:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:of()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:<init>(com.google.common.collect.ImmutableMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:<init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap:createKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableBiMap:createKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMap:createKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap$Inverse:createKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap:createKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:entryIterator()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$SerializedForm:<init>(com.google.common.collect.ImmutableMap)": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:keyIterator()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:hashCode()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "hashCodeImpl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm:readResolve()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapKeySet:get(int)": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapValues:asList()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SparseImmutableTable:getCell(int)": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:containsValue(java.lang.Object)": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapValues$SerializedForm:readResolve()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Values:copyIntoArray(java.lang.Object[],int)": {
            "values": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyIntoArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap$Values$SerializedForm:readResolve()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:isHashCodeFast()": {
            "isHashCodeFast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet:isHashCodeFast()": {
            "isHashCodeFast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:checkNoConflict(boolean,java.lang.String,java.lang.Object,java.lang.Object)": {
            "conflictException": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:createAsList()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedAsList:<init>(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapValues:contains(java.lang.Object)": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$EntryCollection:iterator()": {
            "entryIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$EntryCollection:isPartialView()": {
            "isPartialView": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$EntryCollection:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Keys:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Values:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMultiset:<init>(java.util.Map,com.google.common.collect.ImmutableList,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMultiset:<init>(com.google.common.collect.Multisets$ImmutableEntry[],com.google.common.collect.Multisets$ImmutableEntry[],int,int,com.google.common.collect.ImmutableSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Keys:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$KeysSerializedForm:readResolve()": {
            "keys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Values:contains(java.lang.Object)": {
            "containsValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Values:iterator()": {
            "valueIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMultiset:elementSet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMultiset:elementSet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$EntrySet:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:toImmutableRangeSet()": {
            "toImmutableRangeSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:<init>(com.google.common.collect.ImmutableSet$RegularSetBuilderImpl)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:toImmutableSet()": {
            "toImmutableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedAsList:delegateCollection()": {
            "delegateCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:<init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:isPartialView()": {
            "isPartialView": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:firstEntry()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:lastEntry()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:comparator()": {
            "keySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "comparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet$Builder:add(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "sortAndDedup": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "expandedCapacity": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.13
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:unsafeCompare(java.lang.Object,java.lang.Object)": {
            "unsafeCompare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableTable:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableTable:<init>(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Interners$InternerBuilder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Interners:asFunction(com.google.common.collect.Interner)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Iterables:toString(java.lang.Iterable)": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:getOnlyElement(java.lang.Iterable)": {
            "getOnlyElement": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:getOnlyElement(java.util.Iterator,java.lang.Object)": {
            "getOnlyElement": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ObjectArrays:concat(java.lang.Object[],java.lang.Object[],java.lang.Class)": {
            "newArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:getLast(java.lang.Iterable)": {
            "getLastInNonemptyList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getLast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators:getLast(java.util.Iterator,java.lang.Object)": {
            "getLast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators$ConcatenatedIterator:hasNext()": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getTopMetaIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators:emptyIterator()": {
            "emptyListIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableList:iterator()": {
            "singletonIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableSet:iterator()": {
            "singletonIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap$ValueEntry:newHeader()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap$ValueSet:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getSuccessorInValueSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap$ValueSet:rehashIfNecessary()": {
            "needsResizing": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getSuccessorInValueSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap$ValueSet:clear()": {
            "getSuccessorInValueSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink)": {
            "succeedsInValueSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)": {
            "setSuccessorInMultimap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "setPredecessorInMultimap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:entrySpliterator()": {
            "entries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:writeObject(java.io.ObjectOutputStream)": {
            "keySet": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "entries": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:valueIterator()": {
            "entryIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "valueIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:hasNext()": {
            "checkForConcurrentModification": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:next()": {
            "checkForConcurrentModification": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:remove()": {
            "checkForConcurrentModification": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$NodeIterator:hasNext()": {
            "checkForConcurrentModification": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$NodeIterator:next()": {
            "checkForConcurrentModification": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$NodeIterator:remove()": {
            "checkForConcurrentModification": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$NodeIterator:hasPrevious()": {
            "checkForConcurrentModification": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap$NodeIterator:previous()": {
            "checkForConcurrentModification": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists:charactersOf(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists$RandomAccessPartition:<init>(java.util.List,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists:indexOfImpl(java.util.List,java.lang.Object)": {
            "indexOfRandomAccess": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Lists:lastIndexOfImpl(java.util.List,java.lang.Object)": {
            "lastIndexOfRandomAccess": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ForwardingConcurrentMap:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry:<init>(java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry:<init>(java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:containsValue(java.lang.Object)": {
            "valueEquivalence": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equivalent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$EntrySet:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$KeySet:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Values:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$HashIterator:nextInTable()": {
            "nextInChain": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:expand()": {
            "newEntryArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:<init>(com.google.common.collect.MapMakerInternalMap,int)": {
            "newEntryArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "initTable": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:tryDrainReferenceQueues()": {
            "maybeDrainReferenceQueues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:runLockedCleanup()": {
            "maybeDrainReferenceQueues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:clear()": {
            "maybeClearReferenceQueues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper:newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry:<init>(java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "unsetWeakValueReference": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "unsetWeakValueReference": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:newWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)": {
            "castForTesting": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:setWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference)": {
            "castForTesting": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:getWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry)": {
            "castForTesting": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getValueReference": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry)": {
            "newEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$LinkedWeakKeyDummyValueEntry:getValue()": {
            "getValue": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)": {
            "newEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:newWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)": {
            "castForTesting": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:setWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference)": {
            "castForTesting": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:getWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry)": {
            "castForTesting": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getValueReference": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:isLiveForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry)": {
            "segmentFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getLiveValueForTesting": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:hash(java.lang.Object)": {
            "hash": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "rehash": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredKeyMap:<init>(java.util.Map,com.google.common.base.Predicate,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:createKeySet()": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:size()": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:containsKey(java.lang.Object)": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:remove(java.lang.Object)": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:clear()": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "backingSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:backingSet()": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:entryIterator()": {
            "asMapEntryIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$AsMap$EntrySet:iterator()": {
            "asMapEntryIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:iterator()": {
            "columnKeySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asMapEntryIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$RowMap$EntrySet:iterator()": {
            "asMapEntryIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:entrySet()": {
            "createEntrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:subMap(java.lang.Object,java.lang.Object)": {
            "subMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:headMap(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:tailMap(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:removeAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAllImpl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryBiMap:forcePut(java.lang.Object,java.lang.Object)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryBiMap:replaceAll(java.util.function.BiFunction)": {
            "unfiltered": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryMap$KeySet:removeAll(java.util.Collection)": {
            "removeAllKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryMap$KeySet:retainAll(java.util.Collection)": {
            "retainAllKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:comparator()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap:comparator()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap:lastKey()": {
            "sortedMap": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap:firstKey()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$KeySet:iterator()": {
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "keyIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$KeySet:size()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$KeySet:isEmpty()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$KeySet:contains(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$KeySet:clear()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedKeySet:map()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedMapDifferenceImpl:<init>(java.util.SortedMap,java.util.SortedMap,java.util.SortedMap,java.util.SortedMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$MapDifferenceImpl:toString()": {
            "areEqual": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedMapDifferenceImpl:entriesOnlyOnLeft()": {
            "entriesOnlyOnLeft": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedMapDifferenceImpl:entriesOnlyOnRight()": {
            "entriesOnlyOnRight": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedMapDifferenceImpl:entriesInCommon()": {
            "entriesInCommon": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$MapDifferenceImpl:equals(java.lang.Object)": {
            "entriesOnlyOnLeft": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "entriesOnlyOnRight": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "entriesInCommon": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "entriesDiffering": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.collect.Maps$MapDifferenceImpl:hashCode()": {
            "entriesOnlyOnLeft": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "entriesOnlyOnRight": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "entriesInCommon": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "entriesDiffering": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedMapDifferenceImpl:entriesDiffering()": {
            "entriesDiffering": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:lower(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:floor(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:ceiling(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:higher(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:pollFirst()": {
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:pollLast()": {
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:descendingSet()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:headSet(java.lang.Object,boolean)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:tailSet(java.lang.Object,boolean)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:fromMap()": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesSortedMap:comparator()": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesSortedMap:firstKey()": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesSortedMap:lastKey()": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$ValueDifferenceImpl:create(java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:iterator()": {
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "valueIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:remove(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:size()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:isEmpty()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:contains(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:clear()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:removeAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "newHashSet": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "map": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.Maps$Values:retainAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "newHashSet": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "map": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:<init>(com.google.common.eventbus.EventBus)": {
            "newConcurrentMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:<init>()": {
            "newTreeMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newIdentityHashSet()": {
            "newIdentityHashMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:synchronizedBiMap(com.google.common.collect.BiMap)": {
            "biMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:keyPredicateOnEntries(com.google.common.base.Predicate)": {
            "keyFunction": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "compose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:compareElements(int,int)": {
            "elementData": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:peek()": {
            "elementData": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:getGrandparentIndex(int)": {
            "getParentIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:crossOverUp(int,java.lang.Object)": {
            "getParentIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.53
            },
            "elementData": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "getRightChildIndex": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "getLeftChildIndex": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:swapWithConceptuallyLastElement(java.lang.Object)": {
            "getParentIndex": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.55
            },
            "getRightChildIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.26
            },
            "getLeftChildIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.19
            },
            "elementData": {
                "count_score": 0.2,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.56
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:nextNotInSkipMe(int)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.24
            },
            "elementData": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "foundAndRemovedExactReference": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:initialQueueSize(int,int,java.lang.Iterable)": {
            "capAtMaximumSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MoreCollectors$ToOptionalState:add(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "multiples": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MoreCollectors$ToOptionalState:combine(com.google.common.collect.MoreCollectors$ToOptionalState)": {
            "multiples": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MoreCollectors$ToOptionalState:getOptional()": {
            "multiples": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MoreCollectors$ToOptionalState:getElement()": {
            "multiples": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$ListMultimapBuilder:build(com.google.common.collect.Multimap)": {
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$SetMultimapBuilder:build(com.google.common.collect.Multimap)": {
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$AsMap$EntrySet:remove(java.lang.Object)": {
            "removeValuesForKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$AsMap:get(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$AsMap:remove(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableListMultimap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableSetMultimap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$FilteredMultiset:remove(java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "count": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multisets:iteratorImpl(com.google.common.collect.Multiset)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multisets$MultisetIteratorImpl:next()": {
            "hasNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$UnmodifiableMultiset:elementSet()": {
            "createElementSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap$2:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:writeReplace()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ObjectArrays:newArray(java.lang.Object[],int)": {
            "newArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ObjectArrays:toArrayImpl(java.util.Collection)": {
            "fillArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ObjectArrays:checkElementsNotNull(java.lang.Object[],int)": {
            "checkElementNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering$ArbitraryOrdering:compare(java.lang.Object,java.lang.Object)": {
            "identityHashCode": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getUid": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Ordering:min(java.util.Iterator)": {
            "min": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ReverseOrdering:max(java.lang.Object,java.lang.Object)": {
            "min": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:max(java.util.Iterator)": {
            "max": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:encloseAll(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.38,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.81
            },
            "natural": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.3
            },
            "min": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.08,
                "total_score": 0.22
            },
            "max": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            }
        }
    },
    {
        "com.google.common.collect.ReverseOrdering:min(java.lang.Object,java.lang.Object)": {
            "max": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newConcurrentHashSet()": {
            "newConcurrentHashSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range$RangeLexOrdering:compare(com.google.common.collect.Range,com.google.common.collect.Range)": {
            "start": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:lowerEndpoint()": {
            "endpoint": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:upperEndpoint()": {
            "endpoint": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:descendingIterator()": {
            "last": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:iterator()": {
            "first": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:size()": {
            "first": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "last": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:equals(java.lang.Object)": {
            "first": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "last": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap$Inverse:size()": {
            "inverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap$Inverse:get(java.lang.Object)": {
            "smear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNextInValueBucket": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap:checkNoConflictInValueBucket(java.lang.Object,java.util.Map$Entry,com.google.common.collect.ImmutableMapEntry)": {
            "getNextInValueBucket": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap$Inverse:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:removeDuplicates(java.util.Map$Entry[],int,int,java.util.IdentityHashMap)": {
            "createEntryArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:createKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap$KeySet:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap$Values:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:checkNoConflictInKeyBucket(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableMapEntry,boolean)": {
            "getNextInKeyBucket": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:get(java.lang.Object,com.google.common.collect.ImmutableMapEntry[],int)": {
            "smear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNextInKeyBucket": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMultiset:hashFloodingDetected(com.google.common.collect.Multisets$ImmutableEntry[])": {
            "nextInBucket": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:forEachEntry(java.util.function.ObjIntConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getCount": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:last()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:unsafeBinarySearch(java.lang.Object)": {
            "unsafeComparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:indexOf(java.lang.Object)": {
            "unsafeComparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$PowerSet:iterator()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:toImmutableEnumSet()": {
            "toImmutableEnumSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:complementOf(java.util.Collection)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "makeComplementByHand": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets:complementOf(java.util.Collection,java.lang.Class)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "makeComplementByHand": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$NavigableElementSet:<init>(com.google.common.collect.SortedMultiset)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$ElementSet:iterator()": {
            "multiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "elementIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$ElementSet:comparator()": {
            "multiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$ElementSet:subSet(java.lang.Object,java.lang.Object)": {
            "multiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$ElementSet:headSet(java.lang.Object)": {
            "multiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$ElementSet:tailSet(java.lang.Object)": {
            "multiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$ElementSet:first()": {
            "multiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$ElementSet:last()": {
            "multiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnKeySet:iterator()": {
            "createColumnKeyIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:updateBackingRowMapField()": {
            "computeBackingRowMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:put(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "getOrCreate": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:rowMap()": {
            "createRowMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Streams:findLast(java.util.stream.IntStream)": {
            "findLast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Streams:findLast(java.util.stream.LongStream)": {
            "findLast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Streams:findLast(java.util.stream.DoubleStream)": {
            "findLast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMap:values()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:<init>(java.util.Set,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSet:<init>(java.util.SortedSet,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:set(java.util.Set,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedEntry:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:<init>(java.util.Deque,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:queue(java.util.Queue,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedRandomAccessList:<init>(java.util.List,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:multiset(com.google.common.collect.Multiset,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:get(java.lang.Object,java.lang.Object)": {
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:remove(java.lang.Object,java.lang.Object)": {
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableRowSortedMap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:partition(int,int,int)": {
            "uncheckedCastNullableTToT": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "swap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.TransformedListIterator:hasPrevious()": {
            "backingIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TransformedListIterator:previous()": {
            "backingIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TransformedListIterator:nextIndex()": {
            "backingIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TransformedListIterator:previousIndex()": {
            "backingIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:comparator()": {
            "columnComparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:computeBackingRowMap()": {
            "updateWholeRowField": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:maintainEmptyInvariant()": {
            "updateWholeRowField": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:createCollection(java.lang.Object)": {
            "keyComparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:writeObject(java.io.ObjectOutputStream)": {
            "keyComparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            },
            "valueComparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "writeMultimap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:recomputeMultiset()": {
            "distinctElements": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "totalCount": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:recomputeHeight()": {
            "height": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:balanceFactor()": {
            "height": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode)": {
            "successor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:elementIterator()": {
            "entryIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "elementIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:comparator()": {
            "comparator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:equals(java.lang.Object)": {
            "asMapOfRanges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:hashCode()": {
            "asMapOfRanges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:toString()": {
            "asMapOfRanges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:equals(java.lang.Object)": {
            "asMapOfRanges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:hashCode()": {
            "asMapOfRanges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.CharEscaper:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.escape.UnicodeEscaper:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.escape.CharEscaper:escapeSlow(java.lang.String,int)": {
            "charBufferFromThreadLocal": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "growBuffer": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.escape.Escapers:computeReplacement(com.google.common.escape.CharEscaper,char)": {
            "stringOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.Escapers:computeReplacement(com.google.common.escape.UnicodeEscaper,int)": {
            "stringOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.Dispatcher$ImmediateDispatcher:dispatch(java.lang.Object,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "dispatchEvent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher:dispatch(java.lang.Object,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "dispatchEvent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher:dispatch(java.lang.Object,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "dispatchEvent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus$LoggingHandler:logger(com.google.common.eventbus.SubscriberExceptionContext)": {
            "getEventBus": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "identifier": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus$LoggingHandler:message(com.google.common.eventbus.SubscriberExceptionContext)": {
            "getSubscriberMethod": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getSubscriber": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getEvent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.eventbus.Subscriber:<init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "executor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:validateEndpoints(com.google.common.graph.EndpointPair)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "isOrderingCompatible": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.61
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "isOrderingCompatible": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "nodeU": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.23
            },
            "nodeV": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.graph.ForwardingGraph:predecessors(java.lang.Object)": {
            "predecessors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.EndpointPairIterator:advance()": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "successors": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.ForwardingGraph:successors(java.lang.Object)": {
            "successors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.IncidentEdgeSet:size()": {
            "successors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.IncidentEdgeSet:contains(java.lang.Object)": {
            "successors": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.18
            },
            "predecessors": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "nodeU": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "nodeV": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.graph.EndpointPairIterator$Undirected:computeNext()": {
            "unordered": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.EndpointPair:of(com.google.common.graph.Graph,java.lang.Object,java.lang.Object)": {
            "ordered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unordered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.EndpointPair:of(com.google.common.graph.Network,java.lang.Object,java.lang.Object)": {
            "ordered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unordered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.EndpointPairIterator$Directed:computeNext()": {
            "ordered": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs:transpose(com.google.common.graph.EndpointPair)": {
            "ordered": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:edges()": {
            "edges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:edges()": {
            "edges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:validateEndpoints(com.google.common.graph.EndpointPair)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "isOrderingCompatible": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.61
            }
        }
    },
    {
        "com.google.common.graph.AbstractUndirectedNetworkConnections:inEdges()": {
            "incidentEdges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractUndirectedNetworkConnections:outEdges()": {
            "incidentEdges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractUndirectedNetworkConnections:removeInEdge(java.lang.Object,boolean)": {
            "removeOutEdge": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:removeOutEdge(java.lang.Object)": {
            "removeOutEdge": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getReference": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.graph.EdgesConnecting:iterator()": {
            "getConnectingEdge": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "singletonIterator": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.EdgesConnecting:size()": {
            "getConnectingEdge": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.EdgesConnecting:contains(java.lang.Object)": {
            "getConnectingEdge": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.EndpointPair$Ordered:hashCode()": {
            "source": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "target": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.EndpointPair$Ordered:toString()": {
            "source": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "target": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.EndpointPair$Ordered:equals(java.lang.Object)": {
            "isOrdered": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "source": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "target": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.graph.EndpointPair$Unordered:iterator()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.EndpointPair$Unordered:equals(java.lang.Object)": {
            "isOrdered": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "nodeU": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "nodeV": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.51
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:nodes()": {
            "nodes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:isDirected()": {
            "isDirected": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:allowsSelfLoops()": {
            "allowsSelfLoops": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:nodeOrder()": {
            "nodeOrder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:adjacentNodes(java.lang.Object)": {
            "adjacentNodes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:incidentEdges(java.lang.Object)": {
            "incidentEdges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:degree(java.lang.Object)": {
            "degree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:inDegree(java.lang.Object)": {
            "inDegree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:outDegree(java.lang.Object)": {
            "outDegree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "hasEdgeConnecting": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "hasEdgeConnecting": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ForwardingValueGraph:successors(java.lang.Object)": {
            "successors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:nodeOrder(com.google.common.graph.ElementOrder)": {
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:incidentEdgeOrder(com.google.common.graph.ElementOrder)": {
            "type": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.14
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "cast": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedGraph:predecessors(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "successors": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedGraph:successors(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "predecessors": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedGraph:inDegree(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedGraph:outDegree(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs:transpose(com.google.common.graph.Graph)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Graphs:transpose(com.google.common.graph.Network)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:predecessors(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:successors(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:inDegree(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:outDegree(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:inEdges(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:outEdges(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:edgesConnecting(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:edgeConnecting(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:edgeConnectingOrNull(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs:transpose(com.google.common.graph.ValueGraph)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:predecessors(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "successors": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:successors(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:inDegree(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:outDegree(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:edgeValue(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:edgeValueOrDefault(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:asGraph()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:asGraph()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:edgeOrder()": {
            "edgeOrder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:nodeOrder()": {
            "nodeOrder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:allowsSelfLoops()": {
            "allowsSelfLoops": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:allowsParallelEdges()": {
            "allowsParallelEdges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:isDirected()": {
            "isDirected": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:nodes()": {
            "nodes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:nodeOrder()": {
            "nodeOrder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:allowsSelfLoops()": {
            "allowsSelfLoops": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:isDirected()": {
            "isDirected": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:nodes()": {
            "nodes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.MapIteratorCache:put(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "clearCache": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.graph.MapIteratorCache:remove(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "clearCache": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.MapIteratorCache:clear()": {
            "clearCache": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.MapRetrievalCache:clearCache()": {
            "clearCache": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.MapIteratorCache:containsKey(java.lang.Object)": {
            "getIfCached": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:edges()": {
            "unmodifiableKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.MapRetrievalCache:getIfCached(java.lang.Object)": {
            "getIfCached": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addToCache": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.MapRetrievalCache:addToCache(java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "addToCache": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:nodeOrder(com.google.common.graph.ElementOrder)": {
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:edgeOrder(com.google.common.graph.ElementOrder)": {
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.Traverser$1:newTraversal()": {
            "inGraph": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Traverser$Traversal$2:<init>(com.google.common.graph.SuccessorsFunction)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Traverser$Traversal:breadthFirst(java.util.Iterator)": {
            "topDown": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Traverser$Traversal:preOrder(java.util.Iterator)": {
            "topDown": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedGraphConnections:predecessors()": {
            "adjacentNodes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedGraphConnections:successors()": {
            "adjacentNodes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedGraphConnections:removePredecessor(java.lang.Object)": {
            "removeSuccessor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedGraphConnections:addPredecessor(java.lang.Object,java.lang.Object)": {
            "addSuccessor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:removeOutEdge(java.lang.Object)": {
            "removeOutEdge": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getReference": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:nodeOrder(com.google.common.graph.ElementOrder)": {
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:incidentEdgeOrder(com.google.common.graph.ElementOrder)": {
            "type": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.14
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "cast": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:update(byte[])": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:update(java.nio.ByteBuffer)": {
            "update": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "position": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:update(int)": {
            "update": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "clear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractCompositeHashFunction:newHasher()": {
            "fromHashers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractCompositeHashFunction:newHasher(int)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromHashers": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractHasher:putDouble(double)": {
            "putLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hasher:putLong(long)": {
            "putLong": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractHasher:putFloat(float)": {
            "putInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractHasher:putUnencodedChars(java.lang.CharSequence)": {
            "putChar": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hasher:putChar(char)": {
            "putChar": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher:putBytes(java.nio.ByteBuffer)": {
            "write": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher:hash()": {
            "byteArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:processRemaining(java.nio.ByteBuffer)": {
            "position": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "limit": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "flip": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.37
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:munch()": {
            "flip": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter$SerialForm:<init>(com.google.common.hash.BloomFilter)": {
            "toPlainArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:equals(java.lang.Object)": {
            "toPlainArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:hashCode()": {
            "toPlainArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:apply(java.lang.Object)": {
            "mightContain": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:toBloomFilter(com.google.common.hash.Funnel,long,double)": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "checkArgument": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.36
            },
            "put": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:bitSize()": {
            "bitSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ReaderInputStream:read()": {
            "toInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:saturatedCast(long)": {
            "toInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:compare(byte,byte)": {
            "toInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:toString(byte,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "toInt": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:putAll(com.google.common.hash.BloomFilterStrategies$LockFreeBitArray)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "putData": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:set(long)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.HashCode$BytesHashCode:equalsSameBits(com.google.common.hash.HashCode)": {
            "getBytesInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.HashCode:hashCode()": {
            "getBytesInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.HashCode:toString()": {
            "getBytesInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:fromByteArray(byte[])": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromBytes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.Crc32cHashFunction$Crc32cHasher:process(java.nio.ByteBuffer)": {
            "computeForWord": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Crc32cHashFunction$Crc32cHasher:processRemaining(java.nio.ByteBuffer)": {
            "combine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.FarmHashFingerprint64:weakHashLength32WithSeeds(byte[],int,long,long,long[])": {
            "load64": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Fingerprint2011:weakHashLength32WithSeeds(byte[],int,long,long,long[])": {
            "load64": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.FarmHashFingerprint64:hashLength17to32(byte[],int,int)": {
            "load64": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            },
            "hashLength16": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.hash.FarmHashFingerprint64:hashLength33To64(byte[],int,int)": {
            "load64": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            },
            "hashLength16": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.hash.FarmHashFingerprint64:hashLength0to16(byte[],int,int)": {
            "load64": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "hashLength16": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.33
            },
            "load32": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "shiftMix": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.16
            }
        }
    },
    {
        "com.google.common.hash.Fingerprint2011:hashLength33To64(byte[],int,int)": {
            "load64": {
                "count_score": 0.83,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "shiftMix": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.hash.Fingerprint2011:murmurHash64WithSeed(byte[],int,int,long)": {
            "load64": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "shiftMix": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.37
            },
            "load64Safely": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.hash.Funnels$StringCharsetFunnel:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.HashCode$BytesHashCode:<init>(byte[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.hash.HashCode$IntHashCode:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.HashCode$LongHashCode:<init>(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.HashCode$BytesHashCode:asLong()": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "padToLong": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.HashCode$IntHashCode:padToLong()": {
            "toLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:longValue()": {
            "toLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:divide(int,int)": {
            "toLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:remainder(int,int)": {
            "toLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hashing$Crc32cMethodHandles:crc32cConstructor()": {
            "newLinkageError": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hashing:murmur3_32(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Hashing:murmur3_32_fixed(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Hashing:murmur3_128(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Hashing:consistentHash(long,int)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "nextDouble": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.MacHashFunction:newHasher()": {
            "getMac": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MacHashFunction:<init>(java.lang.String,java.security.Key,java.lang.String)": {
            "getMac": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "supportsClone": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction:newHasher()": {
            "getMessageDigest": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction:<init>(java.lang.String,java.lang.String)": {
            "getMessageDigest": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.13
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "supportsClone": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction:<init>(java.lang.String,int,java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getMessageDigest": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.1
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "supportsClone": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:bmix64(long,long)": {
            "mixK1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "mixK2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:processRemaining(java.nio.ByteBuffer)": {
            "toInt": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "mixK1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "mixK2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction:newHasher()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putByte(byte)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putInt(int)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putLong(long)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putChar(char)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction:getIntLittleEndian(byte[],int)": {
            "fromBytes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints:fromByteArray(byte[])": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromBytes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.SipHashFunction$SipHasher:processM(long)": {
            "sipRound": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:write(char[],int,int)": {
            "checkNotClosed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:write(int)": {
            "checkNotClosed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:write(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkNotClosed": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:write(java.lang.String,int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkNotClosed": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:flush()": {
            "checkNotClosed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:append(char)": {
            "checkNotClosed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:append(java.lang.CharSequence)": {
            "checkNotClosed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.AppendableWriter:append(java.lang.CharSequence,int,int)": {
            "checkNotClosed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ByteArrayByteSource:<init>(byte[],int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ConcatenatedByteSource:<init>(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.io.Files$FileByteSource:<init>(java.io.File)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.io.Resources$UrlByteSource:<init>(java.net.URL)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:decode(char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$SeparatedBaseEncoding:<init>(com.google.common.io.BaseEncoding,java.lang.String,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.29
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:<init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "matches": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.31
            }
        }
    },
    {
        "com.google.common.io.CharSource$CharSequenceCharSource:<init>(java.lang.CharSequence)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.io.CharSource$ConcatenatedCharSource:<init>(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.io.ByteSource$AsCharSource:asByteSource(java.nio.charset.Charset)": {
            "asByteSource": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ByteArrayByteSource:openBufferedStream()": {
            "openStream": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$EmptyByteSource:asCharSource(java.nio.charset.Charset)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "empty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.ByteSource$SlicedByteSource:slice(long,long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "empty": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "slice": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.io.CharSource$AsByteSource:asCharSource(java.nio.charset.Charset)": {
            "asCharSource": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MoreFiles$PathByteSource:asCharSource(java.nio.charset.Charset)": {
            "asCharSource": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:copy(java.io.InputStream,java.io.OutputStream)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "createBuffer": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:exhaust(java.io.InputStream)": {
            "createBuffer": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:readBytes(java.io.InputStream,com.google.common.io.ByteProcessor)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "createBuffer": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:newDataInput(java.io.ByteArrayInputStream)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:newDataOutput(java.io.ByteArrayOutputStream)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ReaderInputStream:<init>(java.io.Reader,java.nio.charset.CharsetEncoder,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.23
            },
            "flip": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.io.ReaderInputStream:startDraining(boolean)": {
            "flip": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:copy(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "createBuffer": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "flip": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "clear": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.io.LineReader:readLine()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:skipUpTo(java.io.InputStream,long)": {
            "skipSafely": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:ready()": {
            "checkOpen": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:mark(int)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkOpen": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:reset()": {
            "checkOpen": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:hasRemaining()": {
            "remaining": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:skip(long)": {
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkOpen": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.23
            },
            "remaining": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.CharSink:writeLines(java.util.Iterator,java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "openBufferedStream": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.CharSource$CharSequenceCharSource:lines()": {
            "linesIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "stream": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.CharSource$CharSequenceCharSource:readFirstLine()": {
            "linesIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource$CharSequenceCharSource:readLines(com.google.common.io.LineProcessor)": {
            "linesIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource:lines()": {
            "openBufferedStream": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams:exhaust(java.lang.Readable)": {
            "createBuffer": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "clear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.LineReader:<init>(java.lang.Readable)": {
            "createBuffer": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.io.Closeables:closeQuietly(java.io.InputStream)": {
            "close": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Closeables:closeQuietly(java.io.Reader)": {
            "close": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.FileBackedOutputStream:openInputStream()": {
            "getBuffer": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getCount": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.FileBackedOutputStream:update(int)": {
            "getCount": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "getBuffer": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.FileBackedOutputStream:reset()": {
            "close": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:asCharSource(java.io.File,java.nio.charset.Charset)": {
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Flushables:flushQuietly(java.io.Flushable)": {
            "flush": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:checkAllowsInsecure(java.nio.file.Path,com.google.common.io.RecursiveDeleteOption[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ReaderInputStream:grow(java.nio.CharBuffer)": {
            "position": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "limit": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.LineBuffer:add(char[],int,int)": {
            "finishLine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LineBuffer:finish()": {
            "finishLine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readByte()": {
            "readUnsignedByte": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readBoolean()": {
            "readUnsignedByte": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readUnsignedShort()": {
            "readAndCheckByte": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "fromBytes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readInt()": {
            "readAndCheckByte": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.24
            },
            "fromBytes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readLong()": {
            "readAndCheckByte": {
                "count_score": 0.89,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.67
            },
            "fromBytes": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataOutputStream:writeChar(int)": {
            "writeShort": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataOutputStream:writeFloat(float)": {
            "writeInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataOutputStream:writeLong(long)": {
            "toByteArray": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "write": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.MoreFiles$PathByteSource:size()": {
            "readAttributes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:deleteRecursivelyInsecure(java.nio.file.Path)": {
            "addException": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:deleteDirectoryContentsSecure(java.nio.file.SecureDirectoryStream)": {
            "concat": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addException": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.MultiInputStream:advance()": {
            "close": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MultiReader:advance()": {
            "close": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Resources:asCharSource(java.net.URL,java.nio.charset.Charset)": {
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath$BigIntegerToDoubleRounder:roundToDoubleArbitrarily(java.math.BigInteger)": {
            "bigToDouble": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:divide(int,int,java.math.RoundingMode)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.LongMath:divide(long,long,java.math.RoundingMode)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:factorial(int)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:pow(int,int)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:gcd(int,int)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:factorial(int)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:binomial(int,int)": {
            "checkNonNegative": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.math.LongMath:pow(long,int)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:factorial(int)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:listProduct(java.util.List)": {
            "listProduct": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:checkFinite(double)": {
            "isFinite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.math.DoubleUtils:getSignificand(double)": {
            "isFinite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation:mapping(double,double)": {
            "isFinite": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:fuzzyEquals(double,double,double)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.ToDoubleRounder:roundToDouble(java.lang.Number,java.math.RoundingMode)": {
            "checkNotNull": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.28
            },
            "nextDown": {
                "count_score": 0.57,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.math.IntMath:ceilingPowerOfTwo(int)": {
            "checkPositive": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:floorPowerOfTwo(int)": {
            "checkPositive": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:log2(int,java.math.RoundingMode)": {
            "checkPositive": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.28
            },
            "isPowerOfTwo": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "lessThanBranchFree": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.math.IntMath:log10Floor(int)": {
            "lessThanBranchFree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:sqrt(int,java.math.RoundingMode)": {
            "checkNonNegative": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "sqrtFloor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "lessThanBranchFree": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.math.IntMath:checkedAdd(int,int)": {
            "checkNoOverflow": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.IntMath:checkedSubtract(int,int)": {
            "checkNoOverflow": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.IntMath:checkedMultiply(int,int)": {
            "checkNoOverflow": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$RegularLinearTransformation:<init>(double,double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$RegularLinearTransformation:<init>(double,double,com.google.common.math.LinearTransformation)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$VerticalLinearTransformation:<init>(double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$VerticalLinearTransformation:<init>(double,com.google.common.math.LinearTransformation)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LongMath$MillerRabinTester:testWitness(long,long)": {
            "powMod": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:ceilingPowerOfTwo(long)": {
            "checkPositive": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:floorPowerOfTwo(long)": {
            "checkPositive": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:log2(long,java.math.RoundingMode)": {
            "checkPositive": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.28
            },
            "isPowerOfTwo": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "lessThanBranchFree": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.math.LongMath:log10Floor(long)": {
            "lessThanBranchFree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:gcd(long,long)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:mod(long,int)": {
            "mod": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:checkedAdd(long,long)": {
            "checkNoOverflow": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LongMath:checkedSubtract(long,long)": {
            "checkNoOverflow": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LongMath:checkedMultiply(long,long)": {
            "checkNoOverflow": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LongMath:saturatedPow(long,int)": {
            "checkNonNegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "saturatedMultiply": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.math.PairedStats:count()": {
            "count": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.PairedStats:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:calculateNewMeanNonFinite(double,double)": {
            "isFinite": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:count()": {
            "count": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:ensureInUnitRange(double)": {
            "constrainToRange": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Quantiles:median()": {
            "scale": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "index": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.Quantiles:quartiles()": {
            "scale": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Quantiles:percentiles()": {
            "scale": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Quantiles:movePivotToStartOfSlice(double[],int,int)": {
            "swap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Stats:readFrom(java.nio.ByteBuffer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:snapshot()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:getPort()": {
            "hasPort": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:getPortOrDefault(int)": {
            "hasPort": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:toString()": {
            "hasPort": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:withDefaultPort(int)": {
            "isValidPort": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "hasPort": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:textToNumericFormatV4(java.lang.String)": {
            "countIn": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "parseOctet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:textToNumericFormatV6(java.lang.String)": {
            "countIn": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "parseHextet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:toAddrString(java.net.InetAddress)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkArgument": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "fromBytes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.17
            },
            "compressLongestRunOfZeroes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "hextetsToIPv6String": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:isIsatapAddress(java.net.Inet6Address)": {
            "isTeredoAddress": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:hasEmbeddedIPv4ClientAddress(java.net.Inet6Address)": {
            "isCompatIPv4Address": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "is6to4Address": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "isTeredoAddress": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.net.MediaType$Tokenizer:previewChar()": {
            "hasMore": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Booleans$BooleanArrayAsList:<init>(boolean[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Booleans$BooleanArrayAsList:equals(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans$BooleanArrayAsList:toString()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans$BooleanArrayAsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:toArray(java.util.Collection)": {
            "toBooleanArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:indexOf(boolean[],boolean)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:lastIndexOf(boolean[],boolean)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Bytes$ByteArrayAsList:<init>(byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Bytes$ByteArrayAsList:equals(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Bytes$ByteArrayAsList:toString()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Bytes$ByteArrayAsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:toArray(java.util.Collection)": {
            "toByteArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:indexOf(byte[],byte)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:lastIndexOf(byte[],byte)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars$CharArrayAsList:<init>(char[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Chars$CharArrayAsList:equals(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars$CharArrayAsList:toString()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars$CharArrayAsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars:toArray(java.util.Collection)": {
            "toCharArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Chars$LexicographicalComparator:compare(char[],char[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars:indexOf(char[],char)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars:lastIndexOf(char[],char)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Chars:fromByteArray(byte[])": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromBytes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Doubles$DoubleArrayAsList:<init>(double[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Doubles$DoubleArrayAsList:equals(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Doubles$DoubleArrayAsList:toString()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Doubles$DoubleArrayAsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:toArray(java.util.Collection)": {
            "toDoubleArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:indexOf(double[],double)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:lastIndexOf(double[],double)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Floats$FloatArrayAsList:<init>(float[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Floats$FloatArrayAsList:equals(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Floats$FloatArrayAsList:toString()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Floats$FloatArrayAsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Floats:toArray(java.util.Collection)": {
            "toFloatArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Floats:indexOf(float[],float)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Floats:lastIndexOf(float[],float)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:size()": {
            "length": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:builder(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$Builder:ensureRoomFor(int)": {
            "expandedCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:<init>(double[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:indexOf(double)": {
            "areEqual": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:lastIndexOf(double)": {
            "areEqual": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:toString()": {
            "isEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:readResolve()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:size()": {
            "length": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:indexOf(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:contains(int)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:lastIndexOf(java.lang.Object)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:builder(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$Builder:ensureRoomFor(int)": {
            "expandedCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:<init>(int[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints$IntArrayAsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:toString()": {
            "isEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:readResolve()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:size()": {
            "length": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:indexOf(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:contains(long)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:lastIndexOf(java.lang.Object)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:builder(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$Builder:ensureRoomFor(int)": {
            "expandedCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:<init>(long[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs$LongArrayAsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:toString()": {
            "isEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:readResolve()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints$IntArrayAsList:<init>(int[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Ints$IntArrayAsList:equals(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints$IntArrayAsList:toString()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints:toArray(java.util.Collection)": {
            "toIntArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Ints:indexOf(int[],int)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints:lastIndexOf(int[],int)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs$LongArrayAsList:<init>(long[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Longs$LongArrayAsList:equals(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs$LongArrayAsList:toString()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:toArray(java.util.Collection)": {
            "toLongArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Longs:indexOf(long[],long)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:lastIndexOf(long[],long)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:tryParse(java.lang.String,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "digit": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.primitives.ParseRequest:fromString(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isWrapper()": {
            "allWrapperTypes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts$LexicographicalComparator:compare(short[],short[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts$ShortArrayAsList:<init>(short[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Shorts$ShortArrayAsList:equals(java.lang.Object)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts$ShortArrayAsList:toString()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts$ShortArrayAsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:toArray(java.util.Collection)": {
            "toShortArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:indexOf(short[],short)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:lastIndexOf(short[],short)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:fromByteArray(byte[])": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromBytes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.SignedBytes$LexicographicalComparator:compare(byte[],byte[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:getBestComparator()": {
            "lexicographicalComparatorJavaImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:fromIntBits(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:toString(int)": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:toString(int)": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:compare(int,int)": {
            "flip": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "compare": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:fromLongBits(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:compare(long,long)": {
            "flip": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "compare": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:parseUnsignedLong(java.lang.String,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "overflowInParse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.AbstractInvocationHandler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
            "hashCode": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "isProxyOfSameInterfaces": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "equals": {
                "count_score": 0.57,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "toString": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$ClassInfo:getPackageName()": {
            "getPackageName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Reflection:getPackageName(java.lang.Class)": {
            "getPackageName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$ResourceInfo:asByteSource()": {
            "url": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.ImmutableTypeToInstanceMap:getInstance(com.google.common.reflect.TypeToken)": {
            "rejectTypeVariables": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "trustedGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.Invokable$ConstructorInvokable:getGenericParameterTypes()": {
            "mayNeedHiddenThis": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isPublic()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isProtected()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isPrivate()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isStatic()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isFinal()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isAbstract()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isNative()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isSynchronized()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isVolatile()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isTransient()": {
            "getModifiers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.MutableTypeToInstanceMap:getInstance(com.google.common.reflect.TypeToken)": {
            "rejectTypeVariables": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "trustedGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.MutableTypeToInstanceMap:putInstance(com.google.common.reflect.TypeToken,java.lang.Object)": {
            "rejectTypeVariables": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "trustedPut": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.Parameter:getAnnotations()": {
            "getDeclaredAnnotations": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeVariableKey:equals(java.lang.Object)": {
            "equalsTypeVariable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeVariableKey:equalsType(java.lang.reflect.Type)": {
            "equalsTypeVariable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$WildcardCapturer:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$WildcardCapturer:notForTypeVariable()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:every(java.lang.reflect.Type[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:any(java.lang.reflect.Type[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$ClassSet:readResolve()": {
            "getTypes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "classes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$InterfaceSet:readResolve()": {
            "getTypes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "interfaces": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:of(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:of(java.lang.reflect.Type)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$GenericArrayTypeImpl:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$JavaVersion:typeName(java.lang.reflect.Type)": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$JavaVersion$1:newArrayType(java.lang.reflect.Type)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Types$JavaVersion$1:usedInGenericType(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Types$JavaVersion$2:newArrayType(java.lang.reflect.Type)": {
            "getArrayClass": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.Types$GenericArrayTypeImpl:equals(java.lang.Object)": {
            "getGenericComponentType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.Types$ParameterizedTypeImpl:equals(java.lang.Object)": {
            "getRawType": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getOwnerType": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getActualTypeArguments": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractExecutionThreadService:toString()": {
            "serviceName": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "state": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$InCompletionOrderFuture:<init>(com.google.common.util.concurrent.Futures$InCompletionOrderState)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:isDone()": {
            "isDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:isCancelled()": {
            "isCancelled": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:getDoneValue(java.lang.Object)": {
            "cancellationExceptionWithCause": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "uncheckedNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:addListener(java.lang.Runnable,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "isDone": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "executeListener": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:maybePropagateCancellationTo(java.util.concurrent.Future)": {
            "isCancelled": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wasInterrupted": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:addDoneString(java.lang.StringBuilder)": {
            "getUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "appendResultObject": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier:get()": {
            "serviceName": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "state": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractIdleService:toString()": {
            "serviceName": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "state": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$ListeningDecorator:<init>(java.util.concurrent.ExecutorService)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningExecutorService:submit(java.util.concurrent.Callable)": {
            "submit": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceListener:<init>(com.google.common.util.concurrent.Service,java.lang.ref.WeakReference)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1:schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2:schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable:initializeOrUpdateCancellationDelegate(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule)": {
            "submitToExecutor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningExecutorService:invokeAll(java.util.Collection,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningExecutorService:invokeAny(java.util.Collection,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningExecutorService:awaitTermination(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningScheduledExecutorService:schedule(java.util.concurrent.Callable,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningScheduledExecutorService:scheduleAtFixedRate(java.lang.Runnable,java.time.Duration,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningScheduledExecutorService:scheduleWithFixedDelay(java.lang.Runnable,java.time.Duration,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Service:awaitRunning(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Service:awaitTerminated(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TimeLimiter:newProxy(java.lang.Object,java.lang.Class,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TimeLimiter:callWithTimeout(java.util.concurrent.Callable,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TimeLimiter:callUninterruptiblyWithTimeout(java.util.concurrent.Callable,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TimeLimiter:runWithTimeout(java.lang.Runnable,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TimeLimiter:runUninterruptiblyWithTimeout(java.lang.Runnable,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService:executor()": {
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addListener": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService:toString()": {
            "serviceName": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "state": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:state()": {
            "externalState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:<init>(com.google.common.collect.ImmutableCollection,boolean,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:addInitialException(java.util.Set)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addCausalChain": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:handleException(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "addCausalChain": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            },
            "log": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:toString()": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:intValue()": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:longValue()": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:floatValue()": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:doubleValue()": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:writeObject(java.io.ObjectOutputStream)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:readObject(java.io.ObjectInputStream)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:getAndAccumulate(double,java.util.function.DoubleBinaryOperator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getAndUpdate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:accumulateAndGet(double,java.util.function.DoubleBinaryOperator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "updateAndGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDoubleArray:toString()": {
            "length": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDoubleArray:writeObject(java.io.ObjectOutputStream)": {
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDoubleArray:getAndAccumulate(int,double,java.util.function.DoubleBinaryOperator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getAndUpdate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDoubleArray:accumulateAndGet(int,double,java.util.function.DoubleBinaryOperator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "updateAndGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:removeIfZero(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:asMap()": {
            "createAsMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:replace(java.lang.Object,long,long)": {
            "putIfAbsent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:close()": {
            "close": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:finishToFuture()": {
            "compareAndUpdateState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:finishToValueAndCloser(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "compareAndUpdateState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:checkAndUpdateState(com.google.common.util.concurrent.ClosingFuture$State,com.google.common.util.concurrent.ClosingFuture$State)": {
            "compareAndUpdateState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.CollectionFuture:collectOneValue(int,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.CombinedFuture:handleAllCompleted()": {
            "execute": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace:<init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)": {
            "getLockName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenableFutureTask:<init>(java.util.concurrent.Callable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenableFutureTask:<init>(java.lang.Runnable,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ExecutionList:add(java.lang.Runnable,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "executeListener": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.util.concurrent.ExecutionList:execute()": {
            "executeListener": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor:<init>(java.util.concurrent.Executor,com.google.common.util.concurrent.ExecutionSequencer)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ExecutionSequencer:<init>()": {
            "immediateVoidFuture": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFluentFuture:<init>(com.google.common.util.concurrent.ListenableFuture)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:catchingAsync(java.lang.Class,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor)": {
            "catchingAsync": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:transformAsync(com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor)": {
            "transformAsync": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:remainingCapacity()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:putFirst(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:putLast(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:takeFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:takeLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:pollFirst(long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:pollLast(long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:put(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:offer(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:take()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:poll(long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:drainTo(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:drainTo(java.util.Collection,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingQueue:drainTo(java.util.Collection,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingQueue:drainTo(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingQueue:offer(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingQueue:poll(long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingQueue:put(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingQueue:remainingCapacity()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingQueue:take()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingListenableFuture:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingListeningExecutorService:submit(java.lang.Runnable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingListeningExecutorService:submit(java.lang.Runnable,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$InCompletionOrderState:recordOutputCancellation(boolean)": {
            "recordCompletion": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture:<init>(com.google.common.util.concurrent.ListenableFuture)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:immediateFuture(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:immediateFailedFuture(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:immediateCancelledFuture()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder:getBestValidator()": {
            "weakSetValidator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked:newWithCause(java.lang.Class,java.lang.Throwable)": {
            "newFromConstructor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ImmediateFuture:get(long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.InterruptibleTask$Blocker:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.InterruptibleTask$Blocker:<init>(com.google.common.util.concurrent.InterruptibleTask)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.TrustedListenableFutureTask:afterDone()": {
            "interruptTask": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenerCallQueue:enqueueHelper(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenerCallQueue:dispatch()": {
            "dispatch": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterInterruptibly(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "enterInterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "enterIfInterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:hasWaiters(com.google.common.util.concurrent.Monitor$Guard)": {
            "getWaitQueueLength": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:isSatisfied(com.google.common.util.concurrent.Monitor$Guard)": {
            "signalAllWaiters": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask:<init>(java.lang.Runnable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "run": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:shutdownAndAwaitTermination(java.util.concurrent.ExecutorService,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "shutdownAndAwaitTermination": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1:sleepMicrosUninterruptibly(long)": {
            "sleepUninterruptibly": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:sleepUninterruptibly(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sleepUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:create(double,com.google.common.util.concurrent.RateLimiter$SleepingStopwatch)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:create(double,long,java.util.concurrent.TimeUnit,double,com.google.common.util.concurrent.RateLimiter$SleepingStopwatch)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:setRate(double)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "mutex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:getRate()": {
            "mutex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SequentialExecutor$QueueWorker:run()": {
            "workOnQueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SettableFuture:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:getUninterruptibly(java.util.concurrent.Future,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:findInterruptibleMethods(java.lang.Class)": {
            "newHashSet": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "declaresInterruptedEx": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp:storedPermitsToWaitTime(double,double)": {
            "permitsToTime": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SmoothRateLimiter:doSetRate(double,long)": {
            "resync": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SmoothRateLimiter:reserveEarliestAvailable(int,long)": {
            "resync": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "saturatedAdd": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$PowerOfTwoStriped:get(java.lang.Object)": {
            "indexFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$WeakSafeLock:newCondition()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:readLock()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:writeLock()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped:lazyWeakReadWriteLock(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped:lock(int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "custom": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped:semaphore(int,int)": {
            "custom": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped:readWriteLock(int)": {
            "custom": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ThreadFactoryBuilder:build()": {
            "doBuild": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TimeoutFuture$Fire:<init>(com.google.common.util.concurrent.TimeoutFuture)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.TrustedListenableFutureTask:create(com.google.common.util.concurrent.AsyncCallable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.TrustedListenableFutureTask:create(java.util.concurrent.Callable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.TrustedListenableFutureTask:create(java.lang.Runnable,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:awaitUninterruptibly(java.util.concurrent.CountDownLatch,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "awaitUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:awaitUninterruptibly(java.util.concurrent.locks.Condition,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "awaitUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:tryAcquireUninterruptibly(java.util.concurrent.Semaphore,long,java.util.concurrent.TimeUnit)": {
            "tryAcquireUninterruptibly": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:tryAcquireUninterruptibly(java.util.concurrent.Semaphore,int,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "tryAcquireUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:tryLockUninterruptibly(java.util.concurrent.locks.Lock,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "tryLockUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:awaitTerminationUninterruptibly(java.util.concurrent.ExecutorService,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "awaitTerminationUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:execute(java.lang.Runnable)": {
            "wrapTask": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:submit(java.lang.Runnable)": {
            "wrapTask": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:submit(java.lang.Runnable,java.lang.Object)": {
            "wrapTask": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.thirdparty.publicsuffix.PublicSuffixType:fromCode(char)": {
            "getInnerNodeCode": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getLeafNodeCode": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Optional:of(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Present:transform(com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:createUnstarted(com.google.common.base.Ticker)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Iterables:indexOf(java.lang.Iterable,com.google.common.base.Predicate)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:any(java.util.Iterator,com.google.common.base.Predicate)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:treeSetValues()": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "treeSetValues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.AbstractDirectedNetworkConnections:adjacentNodes()": {
            "union": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:toImmutableTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)": {
            "toImmutableTable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Any:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Ascii:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$BitSetMatcher:<init>(java.util.BitSet,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$JavaIsoControl:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Whitespace:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.SmallCharMatcher:<init>(char[],long,boolean,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Equivalence:equivalentTo(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Functions:forMap(java.util.Map,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Functions:compose(com.google.common.base.Function,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Functions:forMap(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.JdkPattern:matcher(java.lang.CharSequence)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Platform$JdkPatternCompiler:compile(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:on(java.util.regex.Pattern)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Joiner:on(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Joiner:on(char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Joiner$MapJoiner:useForNull(java.lang.String)": {
            "useForNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CommonPattern:compile(java.lang.String)": {
            "compilePattern": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Splitter:onPattern(java.lang.String)": {
            "compilePattern": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates$ContainsPatternFromStringPredicate:<init>(java.lang.String)": {
            "compilePattern": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Predicates:contains(java.util.regex.Pattern)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Predicates:not(com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Predicates:and(java.lang.Iterable)": {
            "defensiveCopy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates:or(java.lang.Iterable)": {
            "defensiveCopy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Splitter$MapSplitter:split(java.lang.CharSequence)": {
            "split": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkArgument": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            }
        }
    },
    {
        "com.google.common.base.Splitter:splitToStream(java.lang.CharSequence)": {
            "split": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Suppliers:memoize(com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Suppliers:compose(com.google.common.base.Function,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Suppliers:synchronizedSupplier(com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Throwables:propagateIfInstanceOf(java.lang.Throwable,java.lang.Class)": {
            "throwIfInstanceOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Throwables:propagateIfPossible(java.lang.Throwable)": {
            "throwIfUnchecked": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Throwables:propagate(java.lang.Throwable)": {
            "throwIfUnchecked": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:getAnnotatedMethods(java.lang.Class)": {
            "throwIfUnchecked": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Hashing$Crc32cMethodHandles:newCrc32c()": {
            "throwIfUnchecked": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "newLinkageError": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Throwables:lazyStackTrace(java.lang.Throwable)": {
            "lazyStackTraceIsLazy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "jlaStackTrace": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:newEntry(java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "segmentFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "newEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.RemovalNotification:create(java.lang.Object,java.lang.Object,com.google.common.cache.RemovalCause)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:forEachEntry(java.util.function.ObjIntConsumer)": {
            "forEachEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:forEachEntry(java.util.function.ObjIntConsumer)": {
            "forEachEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:<init>()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:<init>(com.google.common.collect.TreeMultiset$Reference,com.google.common.collect.GeneralRange,com.google.common.collect.TreeMultiset$AvlNode)": {
            "comparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)": {
            "subMultiset": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multisets:toMultiset(java.util.function.Function,java.util.function.ToIntFunction,java.util.function.Supplier)": {
            "toMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:toMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)": {
            "toMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:flatteningToMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)": {
            "flatteningToMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:valuesSpliterator()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$TransformedCollection:spliterator()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:keySpliterator()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapValues:spliterator()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:entrySpliterator()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$Keys:spliterator()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:cellSpliterator()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransposeTable:cellSpliterator()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:spliterator()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:removeAll(java.util.Collection)": {
            "removeIf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:retainAll(java.util.Collection)": {
            "removeIf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2:transform(java.util.Collection,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:contains(java.lang.Object)": {
            "safeContains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:contains(java.lang.Object)": {
            "safeContains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:contains(java.lang.Iterable,java.lang.Object)": {
            "safeContains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:getOrDefault(java.lang.Object,java.lang.Object)": {
            "backingSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "safeContains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:getOrDefault(java.lang.Object,java.lang.Object)": {
            "safeContains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$RowMap$EntrySet:contains(java.lang.Object)": {
            "safeContains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:headSet(java.lang.Object)": {
            "headSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:headSet(java.lang.Object,boolean)": {
            "headSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:tailSet(java.lang.Object)": {
            "tailSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:tailSet(java.lang.Object,boolean)": {
            "tailSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EvictingQueue:offer(java.lang.Object)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntrySetMultimap:<init>(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyListMultimap:<init>(com.google.common.collect.ListMultimap,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeySetMultimap:<init>(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap:createValues()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap:createValues()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "forEach": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:forEach(java.util.function.Consumer)": {
            "forEach": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$1EntrySet:forEach(java.util.function.Consumer)": {
            "forEach": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "forEach": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableAsList:forEach(java.util.function.Consumer)": {
            "forEach": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet:forEach(java.util.function.Consumer)": {
            "forEach": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:forEach(java.util.function.Consumer)": {
            "forEach": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:orderKeysBy(java.util.Comparator)": {
            "orderKeysBy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:orderKeysBy(java.util.Comparator)": {
            "orderKeysBy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:orderValuesBy(java.util.Comparator)": {
            "orderValuesBy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:orderValuesBy(java.util.Comparator)": {
            "orderValuesBy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset$Builder:add(java.lang.Object)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset$Builder:addCopies(java.lang.Object,int)": {
            "addCopies": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset$Builder:setCount(java.lang.Object,int)": {
            "setCount": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:toImmutableSortedMultiset(java.util.Comparator)": {
            "toImmutableSortedMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:tailSetImpl(java.lang.Object,boolean)": {
            "headSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "descendingSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:headSet(java.lang.Object)": {
            "headSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:headSetImpl(java.lang.Object,boolean)": {
            "tailSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "descendingSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:tailSet(java.lang.Object)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:pollFirstEntry()": {
            "removeFirstMatching": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:pollLastEntry()": {
            "removeFirstMatching": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:pollFirst()": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeFirstMatching": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:pollLast()": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeFirstMatching": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:cycle()": {
            "getDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "cycle": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:filter(com.google.common.base.Predicate)": {
            "getDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "filter": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.collect.Iterables:filter(java.lang.Iterable,java.lang.Class)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "instanceOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "filter": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:transform(com.google.common.base.Function)": {
            "getDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "transform": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.collect.Iterators:peekingIterator(java.util.Iterator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumMap:keyIterator()": {
            "unmodifiableIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumSet:iterator()": {
            "unmodifiableIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables$UnmodifiableIterable:iterator()": {
            "unmodifiableIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$UnmodifiableMultiset:iterator()": {
            "unmodifiableIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$UnmodifiableNavigableSet:descendingIterator()": {
            "unmodifiableIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:removeAll(java.lang.Iterable,java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "removeAll": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.Sets:removeAllImpl(java.util.Set,java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "removeAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.14
            },
            "removeAllImpl": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnKeySet:removeAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:removeAll(java.util.Collection)": {
            "removeAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:removeIf(java.lang.Iterable,com.google.common.base.Predicate)": {
            "removeIf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:retainAll(java.lang.Iterable,java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "retainAll": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:retainAll(java.util.Collection)": {
            "retainAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:putAll(java.lang.Object,java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "addAll": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardAddAll(java.util.Collection)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:addAll(java.util.Collection,java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "addAll": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.Lists:newArrayList(java.util.Iterator)": {
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newHashSet(java.util.Iterator)": {
            "newHashSet": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:iterator()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:filter(java.util.Iterator,java.lang.Class)": {
            "instanceOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:entryIterator()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:descendingEntryIterator()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$FilteredMultiset:iterator()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:descendingIterator()": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterables:all(java.lang.Iterable,com.google.common.base.Predicate)": {
            "all": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:find(java.lang.Iterable,com.google.common.base.Predicate)": {
            "find": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:last()": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "find": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredSortedSet:first()": {
            "find": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)": {
            "find": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:lower(java.lang.Object)": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "find": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:floor(java.lang.Object)": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "find": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Collections2$TransformedCollection:iterator()": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:cellIterator()": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransposeTable:cellIterator()": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedGraphConnections:incidentEdgeIterator(java.lang.Object)": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap:clear()": {
            "clear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$KeySet:clear()": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "clear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:removeAllNodes(java.lang.Object)": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$IteratorBasedAbstractMap:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:clear()": {
            "hasLowerBound": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.33
            },
            "hasUpperBound": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.33
            },
            "successor": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            },
            "clear": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "entryIterator": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "com.google.common.collect.Lists$RandomAccessListWrapper:<init>(java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists:listIteratorImpl(java.util.List,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists:asList(java.lang.Object,java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists$RandomAccessReverseList:<init>(java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists:transform(java.util.List,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists:asList(java.lang.Object,java.lang.Object,java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:<init>(java.util.SortedSet,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:asMap(java.util.Set,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedKeySet:<init>(java.util.SortedMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$ViewCachingAbstractMap:createKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:asMap(java.util.NavigableSet,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesSortedMap:<init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:values()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredMapValues:<init>(java.util.Map,java.util.Map,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesMap:values()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$ViewCachingAbstractMap:createValues()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumMap:entrySpliterator()": {
            "unmodifiableEntry": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Maps:unmodifiableOrNull(java.util.Map$Entry)": {
            "unmodifiableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:containsEntryImpl(java.util.Collection,java.lang.Object)": {
            "unmodifiableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:removeEntryImpl(java.util.Collection,java.lang.Object)": {
            "unmodifiableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:transformEntry(java.util.Map$Entry)": {
            "transformEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesMap:entryIterator()": {
            "asEntryToEntryFunction": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "transform": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesMap:entrySpliterator()": {
            "asEntryToEntryFunction": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesMultimap:entryIterator()": {
            "asEntryToEntryFunction": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "transform": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap:get(java.lang.Object)": {
            "safeGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wrapCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:count(java.lang.Object)": {
            "safeGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable$CellSet:contains(java.lang.Object)": {
            "safeGet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "immutableEntry": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.88,
                "total_score": 0.75
            },
            "safeContains": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable$CellSet:remove(java.lang.Object)": {
            "safeGet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "immutableEntry": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.96,
                "total_score": 0.78
            },
            "safeRemove": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:get(java.lang.Object,java.lang.Object)": {
            "safeGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:count(java.lang.Object)": {
            "safeGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:removeExactly(java.lang.Object,int)": {
            "checkPositive": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "safeGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:setCount(java.lang.Object,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkNonnegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.17
            },
            "safeGet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:setCount(java.lang.Object,int,int)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.22
            },
            "safeGet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.Maps$EntrySet:contains(java.lang.Object)": {
            "safeGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$Keys:count(java.lang.Object)": {
            "safeGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:remove(java.lang.Object,java.lang.Object)": {
            "safeGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap:containsKey(java.lang.Object)": {
            "safeContainsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:containsRow(java.lang.Object)": {
            "safeContainsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:containsColumn(java.lang.Object)": {
            "safeContainsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:contains(java.lang.Object,java.lang.Object)": {
            "safeGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "safeContainsKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:containsColumn(java.lang.Object)": {
            "safeContainsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:containsRow(java.lang.Object)": {
            "safeContainsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:removeValuesForKey(java.lang.Object)": {
            "safeRemove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:remove(java.lang.Object,java.lang.Object)": {
            "safeGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "safeRemove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableMultimap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "forEach": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder:treeKeys()": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "treeKeys": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:createAsMap()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$MapMultimap:createAsMap()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:forMap(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesListMultimap:<init>(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:transformEntries(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:addAll(java.lang.Iterable)": {
            "forEachEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Multisets:addAllImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "forEachEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:retainOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset)": {
            "retainOccurrencesImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:removeOccurrences(com.google.common.collect.Multiset,java.lang.Iterable)": {
            "removeOccurrences": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:retainAll(java.util.Collection)": {
            "retainAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardRetainAll(java.util.Collection)": {
            "retainAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:drain(java.util.concurrent.BlockingQueue,java.util.Collection,int,java.time.Duration)": {
            "drain": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:drainUninterruptibly(java.util.concurrent.BlockingQueue,java.util.Collection,int,java.time.Duration)": {
            "drainUninterruptibly": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:apply(java.lang.Comparable)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:containsAll(java.lang.Iterable)": {
            "isEmpty": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "natural": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "contains": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:contains(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$RangeMapEntry:contains(java.lang.Comparable)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap$Inverse:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "forEach": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:lower(java.lang.Object)": {
            "headIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:floor(java.lang.Object)": {
            "headIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:ceiling(java.lang.Object)": {
            "tailIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:higher(java.lang.Object)": {
            "tailIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Streams:forEachPair(java.util.stream.Stream,java.util.stream.Stream,java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "zip": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:<init>(java.util.Collection,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedEntry:<init>(java.util.Map$Entry,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:<init>(java.util.Map,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:<init>(com.google.common.collect.Multimap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:<init>(com.google.common.collect.Table,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors:toTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.Supplier)": {
            "toTable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables:toTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)": {
            "toTable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables:transformValues(com.google.common.collect.Table,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables:transpose(com.google.common.collect.Table)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TransformedListIterator:<init>(java.util.ListIterator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser$PostOrderIterator:expand(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.escape.ArrayBasedEscaperMap:create(java.util.Map)": {
            "createReplacementArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.escape.CharEscaperBuilder:addEscapes(char[],java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addEscape": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.escape.UnicodeEscaper:nextEscapeIndex(java.lang.CharSequence,int,int)": {
            "codePointAt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.Subscriber$SynchronizedSubscriber:invokeSubscriberMethod(java.lang.Object)": {
            "invokeSubscriberMethod": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.Subscriber:context(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "hasEdgeConnecting": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "hasEdgeConnecting": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "isOrderingCompatible": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.1
            },
            "nodeU": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.45,
                "total_score": 0.39
            },
            "nodeV": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.44,
                "total_score": 0.39
            },
            "hasEdgeConnecting": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:<init>(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.UndirectedNetworkConnections:<init>(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedNetworkConnections:edgesConnecting(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.UndirectedNetworkConnections:edgesConnecting(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.MapRetrievalCache:<init>(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.MapIteratorCache:get(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getIfCached": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.13
            },
            "getWithoutCaching": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.graph.UndirectedGraphConnections:of(com.google.common.graph.ElementOrder)": {
            "type": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Funnels:sequentialFunnel(com.google.common.hash.Funnel)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Funnels:asOutputStream(com.google.common.hash.PrimitiveSink)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Funnels:stringFunnel(java.nio.charset.Charset)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.CharStreams:asWriter(java.lang.Appendable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:canDecode(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "trimTrailingPadding": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            },
            "isValidPaddingStartPosition": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.14
            },
            "canDecode": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$SeparatedBaseEncoding:trimTrailingPadding(java.lang.CharSequence)": {
            "trimTrailingPadding": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:decodeChecked(java.lang.CharSequence)": {
            "trimTrailingPadding": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "extract": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.CharSource$CharSequenceCharSource:openStream()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.Closer:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.PatternFilenameFilter:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:log2(java.math.BigInteger,java.math.RoundingMode)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositive": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.1
            },
            "isPowerOfTwo": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap$Builder:cast(java.lang.Class,java.lang.Object)": {
            "wrap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:cast(java.lang.Class,java.lang.Object)": {
            "wrap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:parseUnsignedByte(java.lang.String)": {
            "parseUnsignedByte": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:parseUnsignedInt(java.lang.String)": {
            "parseUnsignedInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$ClassInfo:<init>(java.io.File,java.lang.String,java.lang.ClassLoader)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getClassName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable$ConstructorInvokable:<init>(java.lang.reflect.Constructor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Invokable$MethodInvokable:<init>(java.lang.reflect.Method)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeVariableKey:forLookup(java.lang.reflect.Type)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture:<init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture:<init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:getFutureValue(com.google.common.util.concurrent.ListenableFuture)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getUninterruptibly": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule:<init>(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture:<init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture:<init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:afterDone()": {
            "releaseResources": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CollectionFuture:releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason)": {
            "releaseResources": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CombinedFuture:releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason)": {
            "releaseResources": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:accumulateAndGet(java.lang.Object,long,java.util.function.LongBinaryOperator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "updateAndGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:getAndAccumulate(java.lang.Object,long,java.util.function.LongBinaryOperator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getAndUpdate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:put(java.lang.Object,long)": {
            "getAndUpdate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$CloseableList:applyAsyncClosingFunction(com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.lang.Object)": {
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$DeferredCloser:eventuallyClose(java.lang.Object,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Peeker:call(com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable,com.google.common.util.concurrent.ClosingFuture$CloseableList)": {
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Peeker:callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner$AsyncCombiningCallable,com.google.common.util.concurrent.ClosingFuture$CloseableList)": {
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:provideValueAndCloser(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer,com.google.common.util.concurrent.ClosingFuture)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractIdleService$DelegateService:doStart()": {
            "executor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "renamingDecorator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractIdleService$DelegateService:doStop()": {
            "executor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "renamingDecorator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task:run()": {
            "restoreInterruptIfIsInterruptedException": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "shutDown": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.FakeTimeLimiter:callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "restoreInterruptIfIsInterruptedException": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.03,
                "total_score": 0.11
            }
        }
    },
    {
        "com.google.common.util.concurrent.InterruptibleTask:run()": {
            "waitForInterrupt": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.23
            },
            "restoreInterruptIfIsInterruptedException": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.SmoothRateLimiter:<init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:newSequentialExecutor(java.util.concurrent.Executor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:create(java.util.concurrent.ExecutorService)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:joinUninterruptibly(java.lang.Thread,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "joinUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingScheduledExecutorService:<init>(java.util.concurrent.ScheduledExecutorService)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:addOutEdge(java.lang.Object,java.lang.Object)": {
            "addOutEdge": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getReference": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.graph.AbstractUndirectedNetworkConnections:addInEdge(java.lang.Object,java.lang.Object,boolean)": {
            "addOutEdge": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:addOutEdge(java.lang.Object,java.lang.Object)": {
            "addOutEdge": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getReference": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:unordered()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:stable()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:insertion()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:natural()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:sorted(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:whenClosedCountDown()": {
            "whenClosedCountDown": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue:<init>(java.lang.Object,java.util.concurrent.Executor)": {
            "newArrayDeque": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "run": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.AbstractIterator:next()": {
            "hasNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.Converter:correctedDoForward(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unsafeDoForward": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Converter:correctedDoBackward(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unsafeDoBackward": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$1:normalizeWord(java.lang.String)": {
            "toLowerCase": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$2:normalizeWord(java.lang.String)": {
            "toLowerCase": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$3:normalizeFirstWord(java.lang.String)": {
            "toLowerCase": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.MediaType:normalizeToken(java.lang.String)": {
            "matchesAllOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "toLowerCase": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.19
            }
        }
    },
    {
        "com.google.common.net.MediaType:normalizeParameterValue(java.lang.String,java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "ascii": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "matchesAllOf": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.04,
                "total_score": 0.38
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.47,
                "total_score": 0.55
            },
            "toLowerCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.13
            }
        }
    },
    {
        "com.google.common.base.Ascii:toLowerCase(java.lang.CharSequence)": {
            "toLowerCase": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$5:normalizeWord(java.lang.String)": {
            "toUpperCase": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Ascii:toUpperCase(java.lang.CharSequence)": {
            "toUpperCase": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.CaseFormat:firstCharOnlyToUpper(java.lang.String)": {
            "toUpperCase": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toLowerCase": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.CharSource$CharSequenceCharSource:toString()": {
            "truncate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.PairedStats:toByteArray()": {
            "writeTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Stats:toByteArray()": {
            "writeTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:init(int)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "constrainToRange": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:init(int)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "constrainToRange": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:and(com.google.common.base.CharMatcher)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:forPredicate(com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$NegatedFastMatcher:<init>(com.google.common.base.CharMatcher)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:negate()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:or(com.google.common.base.CharMatcher)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:inRange(char,char)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Digit:<init>()": {
            "zeroes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "nines": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Invisible:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$SingleWidth:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.AbstractCache$SimpleStatsCounter:snapshot()": {
            "negativeToMaxValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:minus(com.google.common.cache.CacheStats)": {
            "saturatedSubtract": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:plus(com.google.common.cache.CacheStats)": {
            "saturatedAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractListMultimap:<init>(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSetMultimap:<init>(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$CustomMultimap:<init>(java.util.Map,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators:indexed(int,int,java.util.function.IntFunction)": {
            "indexed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:subSet(java.lang.Object,java.lang.Object)": {
            "subSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "subSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:create(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "subSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "descendingSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:subSet(java.lang.Object,java.lang.Object)": {
            "subSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:partition(java.util.Iterator,int)": {
            "partitionImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:paddedPartition(java.util.Iterator,int)": {
            "partitionImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:expectedSize(int)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "expectedSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:maximumSize(int)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "maximumSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:addRightChild(java.lang.Object,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "succ": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:addLeftChild(java.lang.Object,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "pred": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractNonStreamingHashFunction:newHasher()": {
            "newHasher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractNonStreamingHashFunction:hashBytes(java.nio.ByteBuffer)": {
            "newHasher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:separatingWriter(java.io.Writer,java.lang.String,int)": {
            "separatingAppendable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Stats:populationVariance()": {
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "ensureNonNegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "count": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.math.Stats:sampleVariance()": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "ensureNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:populationVariance()": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "ensureNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:sampleVariance()": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "ensureNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:anyOf(java.lang.CharSequence)": {
            "none": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "is": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "isEither": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:trimAndCollapseFrom(java.lang.CharSequence,char)": {
            "collapseFrom": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "finishCollapseFrom": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$StringConverter:<init>(com.google.common.base.CaseFormat,com.google.common.base.CaseFormat)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.Converter$ConverterComposition:<init>(com.google.common.base.Converter,com.google.common.base.Converter)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Converter$FunctionBasedConverter:<init>(com.google.common.base.Function,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.Converter$ReverseConverter:<init>(com.google.common.base.Converter)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Enums$StringConverter:<init>(java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Maps$BiMapConverter:<init>(com.google.common.collect.BiMap)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.base.Equivalence:onResultOf(com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Equivalence:pairwise()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference)": {
            "segmentFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reclaimValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterables:elementsEqual(java.lang.Iterable,java.lang.Iterable)": {
            "elementsEqual": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists:equalsImpl(java.util.List,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.2
            },
            "elementsEqual": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:create(java.util.concurrent.ConcurrentMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$BiMapConverter:doForward(java.lang.Object)": {
            "convert": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$BiMapConverter:doBackward(java.lang.Object)": {
            "convert": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:incidentEdges(java.lang.Object)": {
            "incidentEdges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:incidentEdges(java.lang.Object)": {
            "incidentEdges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Joiner:appendTo(java.lang.Appendable,java.lang.Iterable)": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:appendTo(java.lang.StringBuilder,java.util.Iterator)": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner$MapJoiner:appendTo(java.lang.StringBuilder,java.util.Map)": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner$MapJoiner:join(java.lang.Iterable)": {
            "join": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addValue(java.lang.Object)": {
            "addHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,java.lang.Object)": {
            "addHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addValue(boolean)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addValue(char)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addValue(double)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addValue(float)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addValue(int)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:addValue(long)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,boolean)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,char)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,double)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,float)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,int)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.MoreObjects$ToStringHelper:add(java.lang.String,long)": {
            "addUnconditionalHolder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:getKeyEquivalence()": {
            "getKeyStrength": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:getValueEquivalence()": {
            "getValueStrength": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:getKeyEquivalence()": {
            "getKeyStrength": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.Absent:transform(com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "absent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Optional:fromNullable(java.lang.Object)": {
            "absent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:<init>()": {
            "absent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource:sizeIfKnown()": {
            "absent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource:lengthIfKnown()": {
            "absent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:createConstant(java.lang.String,java.lang.String)": {
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.26
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.12
            },
            "addKnownType": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "absent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.base.Strings:emptyToNull(java.lang.String)": {
            "emptyToNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$DurationParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)": {
            "isNullOrEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$IntegerParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)": {
            "isNullOrEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec$LongParser:parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)": {
            "isNullOrEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:fromString(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "getHostAndPortFromBracketedHost": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "isNullOrEmpty": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.13
            },
            "ascii": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.08
            },
            "matchesAllOf": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.09
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.58,
                "total_score": 0.63
            },
            "isValidPort": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:skip(int)": {
            "getDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "skip": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:limit(int)": {
            "getDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "limit": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.collect.Iterables:get(java.lang.Iterable,int,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkNonnegative": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "advance": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getNext": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.collect.Iterators:get(java.util.Iterator,int)": {
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "advance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators:get(java.util.Iterator,int,java.lang.Object)": {
            "checkNonnegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "advance": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getNext": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.io.Files:fileTraverser()": {
            "forTree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter$SerialForm:readResolve()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:copy()": {
            "toPlainArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:limit(java.io.InputStream,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:fromIPv4BigInteger(java.math.BigInteger)": {
            "fromBigInteger": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:fromIPv6BigInteger(java.math.BigInteger)": {
            "fromBigInteger": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$CompactStriped:<init>(int,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$SmallLazyStriped:<init>(int,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractDirectedNetworkConnections:<init>(java.util.Map,java.util.Map,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkNonNegative": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "checkState": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.24
            }
        }
    },
    {
        "com.google.common.graph.AbstractDirectedNetworkConnections:removeInEdge(java.lang.Object,boolean)": {
            "checkNonNegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:<init>(java.util.Map,java.util.List,int,int)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.24
            }
        }
    },
    {
        "com.google.common.graph.AbstractDirectedNetworkConnections:addInEdge(java.lang.Object,java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositive": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "checkState": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.29
            }
        }
    },
    {
        "com.google.common.hash.AbstractHashFunction:hashUnencodedChars(java.lang.CharSequence)": {
            "newHasher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractHashFunction:hashInt(int)": {
            "newHasher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractHashFunction:hashBytes(java.nio.ByteBuffer)": {
            "newHasher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hashing:sipHash24(long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.FileBackedOutputStream:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:fromInteger(int)": {
            "toByteArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getInet4Address": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:reserve(int)": {
            "checkPermits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "mutex": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "reserveAndGetWaitLength": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:tryAcquire(int,long,java.util.concurrent.TimeUnit)": {
            "checkPermits": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "mutex": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "canAcquire": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "reserveAndGetWaitLength": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.collect.DiscreteDomain$IntegerDomain:offset(java.lang.Integer,long)": {
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkedCast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:writeTo(java.io.OutputStream)": {
            "checkedCast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$Scheduler:newFixedDelaySchedule(java.time.Duration,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "newFixedDelaySchedule": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$Scheduler:newFixedRateSchedule(java.time.Duration,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "newFixedRateSchedule": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:toSafeNanos(long,java.util.concurrent.TimeUnit)": {
            "constrainToRange": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService$StateSnapshot:<init>(com.google.common.util.concurrent.Service$State)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:createStarted(com.google.common.base.Ticker)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "start": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator:remove()": {
            "checkRemove": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "get": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.43
            },
            "addAndGet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset$Itr:remove()": {
            "checkRemove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators$EmptyModifiableIterator:remove()": {
            "checkRemove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$MultisetIteratorImpl:remove()": {
            "checkRemove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:orderEntriesByValue(java.util.Comparator)": {
            "orderEntriesByValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:heapForIndex(int)": {
            "isEvenLevel": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MacHashFunction$MacHasher:update(byte)": {
            "checkNotDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MacHashFunction$MacHasher:update(byte[])": {
            "checkNotDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MacHashFunction$MacHasher:update(byte[],int,int)": {
            "checkNotDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MacHashFunction$MacHasher:update(java.nio.ByteBuffer)": {
            "checkNotDone": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:update(byte)": {
            "checkNotDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:update(byte[],int,int)": {
            "checkNotDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:update(java.nio.ByteBuffer)": {
            "checkNotDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Interners$InternerBuilder:concurrencyLevel(int)": {
            "concurrencyLevel": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:expireAfterWrite(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "expireAfterWrite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:expireAfterAccess(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "expireAfterAccess": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:refreshAfterWrite(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "refreshAfterWrite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:weakKeys()": {
            "setKeyStrength": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:weakValues()": {
            "setValueStrength": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:softValues()": {
            "setValueStrength": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:weakKeys()": {
            "setKeyStrength": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:weakValues()": {
            "setValueStrength": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:readMapMaker(java.io.ObjectInputStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "initialCapacity": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "setKeyStrength": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "setValueStrength": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "keyEquivalence": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "concurrencyLevel": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:failureCause()": {
            "failureCause": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Preconditions:checkElementIndex(int,int)": {
            "checkElementIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Preconditions:checkPositionIndex(int,int)": {
            "checkPositionIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Preconditions:checkPositionIndexes(int,int,int)": {
            "badPositionIndexes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Predicates:equalTo(java.lang.Object)": {
            "isNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "withNarrowedType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:createCombined(com.google.common.base.Predicate)": {
            "and": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterFiltered(com.google.common.collect.FilteredMultimap,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multisets:filter(com.google.common.collect.Multiset,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:on(com.google.common.base.CharMatcher)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:fixedLength(int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:trimResults()": {
            "whitespace": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "trimResults": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:createUnstarted()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Stopwatch:createStarted()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "start": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:elapsedNanos()": {
            "elapsed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1:readMicros()": {
            "elapsed": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Utf8:encodedLength(java.lang.CharSequence)": {
            "encodedLengthGeneral": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:awaitTerminationUninterruptibly(java.util.concurrent.ExecutorService)": {
            "awaitTerminationUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "verify": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.internal.Finalizer:run()": {
            "cleanUp": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:<init>()": {
            "preservesInsertionOrderOnPutsMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.AbstractLoadingCache:apply(java.lang.Object)": {
            "getUnchecked": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$ManualSerializationProxy:recreateCacheBuilder()": {
            "newBuilder": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "setKeyStrength": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "setValueStrength": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "keyEquivalence": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "valueEquivalence": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "concurrencyLevel": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "removalListener": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "expireAfterWrite": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "expireAfterAccess": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "weigher": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "maximumWeight": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "maximumSize": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "ticker": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader:from(com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader:from(com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader$1:loadAll(java.lang.Iterable)": {
            "loadAll": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:hitRate()": {
            "requestCount": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:missRate()": {
            "requestCount": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache$SimpleForwardingCache:<init>(com.google.common.cache.Cache)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.ForwardingLoadingCache:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$ManualSerializationProxy:<init>(com.google.common.cache.LocalCache$Strength,com.google.common.cache.LocalCache$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,long,long,long,com.google.common.cache.Weigher,int,com.google.common.cache.RemovalListener,com.google.common.base.Ticker,com.google.common.cache.CacheLoader)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "systemTicker": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSet:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableEntries:<init>(java.util.Collection)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$CartesianSet:<init>(com.google.common.collect.ImmutableList,com.google.common.collect.CartesianList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingListIterator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:<init>(java.util.Map,com.google.common.collect.AbstractBiMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingConcurrentMap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap:<init>(com.google.common.collect.ImmutableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableBiMap:<init>(com.google.common.collect.BiMap,com.google.common.collect.BiMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:<init>(java.util.Map)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.reflect.ImmutableTypeToInstanceMap:<init>(com.google.common.collect.ImmutableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.MutableTypeToInstanceMap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "newHashMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry:<init>(java.util.Map$Entry)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ForwardingListMultimap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSetMultimap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableMultimap:<init>(com.google.common.collect.Multimap)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:<init>(com.google.common.collect.Table)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingListeningExecutorService:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture:<init>(java.util.concurrent.Future)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingListenableFuture:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter:<init>(java.util.concurrent.Future,java.util.concurrent.Executor)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.ForwardingLoadingCache:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingLoadingCache:getUnchecked(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingLoadingCache:getAll(java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingLoadingCache:apply(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingLoadingCache:refresh(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:entrySet()": {
            "createEntrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:getNextEvictable()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:copyEntry(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)": {
            "segmentFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$AbstractFilteredMap:put(java.lang.Object,java.lang.Object)": {
            "apply": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$AbstractFilteredMap:putAll(java.util.Map)": {
            "apply": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$AbstractFilteredMap:containsKey(java.lang.Object)": {
            "apply": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AbstractFilteredMap:get(java.lang.Object)": {
            "apply": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$EntrySet:clear()": {
            "alwaysTrue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "removeFromColumnIf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$1:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$StrongAccessEntry:<init>(java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "nullEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$StrongAccessWriteEntry:<init>(java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "nullEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$StrongWriteEntry:<init>(java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "nullEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$5:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeakAccessEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "nullEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeakAccessWriteEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "nullEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeakWriteEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "nullEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:notifyNewValue(java.lang.Object)": {
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "unset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:compute(java.lang.Object,java.util.function.BiFunction)": {
            "start": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "setException": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "set": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractCatchingFuture:run()": {
            "getDone": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.42
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.21
            },
            "isInstanceOfThrowableClass": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "restoreInterruptIfIsInterruptedException": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractTransformFuture:run()": {
            "getDone": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "restoreInterruptIfIsInterruptedException": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$ValueAndCloser:get()": {
            "getDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$CallbackListener:run()": {
            "getDone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FakeTimeLimiter:runUninterruptiblyWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": {
            "runWithTimeout": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositiveTimeout": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.15
            },
            "wrapAndThrowExecutionExceptionOrError": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:callUninterruptiblyWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "checkPositiveTimeout": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            },
            "getUninterruptibly": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.11
            },
            "wrapAndThrowExecutionExceptionOrError": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:runWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositiveTimeout": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.15
            },
            "wrapAndThrowRuntimeExecutionExceptionOrError": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:runUninterruptiblyWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "checkPositiveTimeout": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            },
            "getUninterruptibly": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.11
            },
            "wrapAndThrowRuntimeExecutionExceptionOrError": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:postWriteCleanup()": {
            "runUnlockedCleanup": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Strength$2:referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeightedSoftValueReference:copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Strength$1:referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Strength$3:referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.ReferenceEntry,java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WeightedWeakValueReference:copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$AccessQueue:remove(java.lang.Object)": {
            "connectAccessOrder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "nullifyAccessOrder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$AccessQueue:clear()": {
            "nullifyAccessOrder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory:copyAccessEntry(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)": {
            "connectAccessOrder": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "nullifyAccessOrder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory:copyWriteEntry(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)": {
            "connectWriteOrder": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "nullifyWriteOrder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WriteQueue:remove(java.lang.Object)": {
            "connectWriteOrder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "nullifyWriteOrder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WriteQueue:clear()": {
            "nullifyWriteOrder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:usesWriteEntries()": {
            "usesWriteQueue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "recordsWrite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:<init>(com.google.common.cache.LocalCache,int,long,com.google.common.cache.AbstractCache$StatsCounter)": {
            "checkNotNull": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "newEntryArray": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.07
            },
            "initTable": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "usesKeyReferences": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.09
            },
            "usesValueReferences": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.09
            },
            "usesAccessQueue": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.1
            },
            "discardingQueue": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            },
            "usesWriteQueue": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:recordRead(com.google.common.cache.ReferenceEntry,long)": {
            "recordsAccess": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:recordLockedRead(com.google.common.cache.ReferenceEntry,long)": {
            "recordsAccess": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:recordWrite(com.google.common.cache.ReferenceEntry,int,long)": {
            "drainRecencyQueue": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "recordsAccess": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "recordsWrite": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:recordsTime()": {
            "recordsWrite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "recordsAccess": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:usesAccessEntries()": {
            "usesAccessQueue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "recordsAccess": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:getLiveValue(com.google.common.cache.ReferenceEntry,long)": {
            "isExpired": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$AbstractCacheSet:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Values:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:size()": {
            "size": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:size()": {
            "size": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Iterables:size(java.lang.Iterable)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$EntrySet:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$KeySet:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Values:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardSize()": {
            "linearTimeSizeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$ViewMultiset:size()": {
            "linearTimeSizeImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$OnePlusArrayList:size()": {
            "saturatedAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$TwoPlusArrayList:size()": {
            "saturatedAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:degree(java.lang.Object)": {
            "saturatedAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:toByteArrayInternal(java.io.InputStream,java.util.Queue,int)": {
            "combineBuffers": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "saturatedMultiply": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.math.IntMath:saturatedPow(int,int)": {
            "checkNonNegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "saturatedMultiply": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:setDelegates(java.util.Map,java.util.Map)": {
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.48
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "makeInverse": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:all(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:downTo(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:upTo(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:range(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:intersect(com.google.common.collect.GeneralRange)": {
            "checkNotNull": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "checkArgument": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.21
            },
            "getLowerEndpoint": {
                "count_score": 0.21,
                "dataflow_score": 0.0,
                "indegree_score": 0.06,
                "total_score": 0.09
            },
            "getLowerBoundType": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.03,
                "total_score": 0.06
            },
            "hasLowerBound": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getUpperEndpoint": {
                "count_score": 0.21,
                "dataflow_score": 0.0,
                "indegree_score": 0.06,
                "total_score": 0.09
            },
            "getUpperBoundType": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.03,
                "total_score": 0.06
            },
            "hasUpperBound": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.03,
                "total_score": 0.01
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesMap:get(java.lang.Object)": {
            "getOrDefault": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$1:getElement()": {
            "getElement": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:count(java.util.Comparator,java.lang.Object)": {
            "getElement": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:ceiling(java.util.Comparator,java.lang.Object)": {
            "getElement": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:floor(java.util.Comparator,java.lang.Object)": {
            "getElement": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:putInBothMaps(java.lang.Object,java.lang.Object,boolean)": {
            "checkKey": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "checkValue": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.16
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.39
            },
            "inverse": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.16
            },
            "containsValue": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.19
            },
            "checkArgument": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "updateInverseMap": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:remove(java.lang.Object)": {
            "removeFromBothMaps": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$PermutationIterator:<init>(java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ConsumingQueueIterator:<init>(java.util.Queue)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.graph.EndpointPairIterator:<init>(com.google.common.graph.BaseGraph)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "of": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.AbstractIterator:next()": {
            "hasNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractIterator:peek()": {
            "hasNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:spliterator()": {
            "wrapEntry": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:next()": {
            "wrapEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:lowerEntry(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:lowerKey(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:floorEntry(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:floorKey(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:ceilingEntry(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:ceilingKey(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:higherEntry(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:higherKey(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:firstEntry()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:lastEntry()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:descendingMap()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:createKeySet()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:headMap(java.lang.Object,boolean)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:tailMap(java.lang.Object,boolean)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:keySet()": {
            "createKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:pollFirstEntry()": {
            "pollAsMapEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:removeAll(java.lang.Object)": {
            "createUnmodifiableEmptyCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "unmodifiableCollectionSubclass": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:lower(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:floor(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:ceiling(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:higher(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:descendingSet()": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:headSet(java.lang.Object,boolean)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:tailSet(java.lang.Object,boolean)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:validateIterator()": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:size()": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:equals(java.lang.Object)": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:hashCode()": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:toString()": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:iterator()": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:spliterator()": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:add(java.lang.Object)": {
            "refreshIfEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addToMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:contains(java.lang.Object)": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:containsAll(java.util.Collection)": {
            "refreshIfEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:remove(java.lang.Object)": {
            "refreshIfEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeIfEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:lower(java.lang.Object)": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:floor(java.lang.Object)": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:ceiling(java.lang.Object)": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:higher(java.lang.Object)": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:descendingSet()": {
            "getSortedSetDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wrap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:descendingIterator()": {
            "getSortedSetDelegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "getSortedSetDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wrap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:headSet(java.lang.Object,boolean)": {
            "getSortedSetDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wrap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:tailSet(java.lang.Object,boolean)": {
            "getSortedSetDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wrap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractListMultimap:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSetMultimap:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractListMultimap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSetMultimap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:containsValue(java.lang.Object)": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSetMultimap:entries()": {
            "entries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap$Values:iterator()": {
            "valueIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:valueSpliterator()": {
            "valueIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:writeObject(java.io.ObjectOutputStream)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "entries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:setCount(java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getAndSet": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2:toStringImpl(java.util.Collection)": {
            "newStringBuilderForCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:toStringImpl(java.util.Map)": {
            "newStringBuilderForCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists:newArrayListWithExpectedSize(int)": {
            "computeArrayListCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CollectionFuture$ListFuture:combine(java.util.List)": {
            "newArrayListWithCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:newHashMapWithExpectedSize(int)": {
            "capacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:newLinkedHashMapWithExpectedSize(int)": {
            "capacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newHashSetWithExpectedSize(int)": {
            "capacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newLinkedHashSetWithExpectedSize(int)": {
            "capacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:arrayListValues()": {
            "arrayListValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:hashSetValues()": {
            "hashSetValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:linkedHashSetValues()": {
            "linkedHashSetValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder:hashKeys()": {
            "hashKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder:linkedHashKeys()": {
            "linkedHashKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:immutableEntry(java.lang.Object,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry:<init>(java.lang.Object,int,com.google.common.collect.Multisets$ImmutableEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:setCount(java.lang.Object,int)": {
            "setCountImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardSetCount(java.lang.Object,int)": {
            "setCountImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:setCount(java.lang.Object,int,int)": {
            "setCountImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardSetCount(java.lang.Object,int,int)": {
            "setCountImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:equals(java.lang.Object)": {
            "isHashCodeFast": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "hashCode": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.25
            },
            "equalsImpl": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.collect.Sets$PowerSet:hashCode()": {
            "keySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "hashCode": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap$Values:contains(java.lang.Object)": {
            "containsValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:containsEntry(java.lang.Object,java.lang.Object)": {
            "containsEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:remove(java.lang.Object,java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:putAll(com.google.common.collect.Multimap)": {
            "putAll": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:equals(java.lang.Object)": {
            "equals": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:elementSet()": {
            "elementSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:elementSet()": {
            "elementSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:elementSet()": {
            "elementSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:entrySet()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:isEmpty()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:hashCode()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:toString()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:entrySet()": {
            "entrySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:entrySet()": {
            "entrySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:firstKey()": {
            "firstEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:lastKey()": {
            "lastEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardFirstEntry()": {
            "getFirst": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:ceiling(java.lang.Object)": {
            "tailSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getFirst": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:higher(java.lang.Object)": {
            "tailSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getFirst": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:contains(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$Complement:contains(java.lang.Comparable)": {
            "contains": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSet:contains(java.lang.Comparable)": {
            "contains": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:clear()": {
            "clear": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:clear()": {
            "clear": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:<init>(java.util.NavigableMap,com.google.common.collect.Range)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:<init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedKeySortedSetMultimap:asMap()": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedIterables:hasSameComparator(java.util.Comparator,java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "comparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:descendingMultiset()": {
            "descendingMultiset": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:containsValue(java.lang.Object)": {
            "containsValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:putAll(com.google.common.collect.Table)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:clear()": {
            "cellSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "clear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:valuesIterator()": {
            "cellSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable:hashCode()": {
            "cellSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:cellSet()": {
            "cellSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:cellSet()": {
            "cellSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:cellSet()": {
            "cellSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:values()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:values()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:values()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:equals(java.lang.Object)": {
            "equals": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:equals(java.lang.Object)": {
            "equals": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Ordering:onResultOf(com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Ordering:from(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Ordering:compound(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Comparators:lexicographical(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Ordering:lexicographical()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Ordering:nullsFirst()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Ordering:nullsLast()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Ordering:reverse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:readObject(java.io.ObjectInputStream)": {
            "checkNotNull": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "populateMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables:immutableCell(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Keys:elementSet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:contains(java.lang.Object,java.lang.Object)": {
            "containsRow": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "containsColumn": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Keys:contains(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:entryOf(java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry:<init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableMapEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:makeImmutable(java.util.Map$Entry,java.lang.Object,java.lang.Object)": {
            "isReusable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:put(java.util.Map$Entry)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators$FlatMapSpliteratorOfPrimitive:trySplit()": {
            "trySplit": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:valueSpliterator()": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "flatMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:entrySpliterator()": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "flatMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:entrySpliterator()": {
            "asMap": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "entrySet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "size": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.52
            },
            "flatMap": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.47,
                "total_score": 0.56
            }
        }
    },
    {
        "com.google.common.collect.Multisets:spliteratorImpl(com.google.common.collect.Multiset)": {
            "flatMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:cellSpliterator()": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "flatMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredSortedSet:<init>(java.util.SortedSet,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$KeySetView:iterator()": {
            "keySetIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$EntrySetView:iterator()": {
            "entrySetIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$MapEntry:updateLastKnownIndex()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:isEmpty()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:clear()": {
            "needsAllocArrays": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.32
            },
            "incrementModCount": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.17
            },
            "delegateOrNull": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "size": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.42,
                "total_score": 0.5
            },
            "constrainToRange": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.44
            },
            "requireKeys": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.22
            },
            "requireValues": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.2
            },
            "requireTable": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.42,
                "total_score": 0.5
            },
            "tableClear": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "requireEntries": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:writeObject(java.io.ObjectOutputStream)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "entrySetIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$ValuesView:iterator()": {
            "valuesIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:resizeTable(int,int,int,int)": {
            "createTable": {
                "count_score": 0.09,
                "dataflow_score": 0.75,
                "indegree_score": 0.41,
                "total_score": 0.41
            },
            "tableSet": {
                "count_score": 0.18,
                "dataflow_score": 0.75,
                "indegree_score": 0.73,
                "total_score": 0.57
            },
            "requireTable": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.64,
                "total_score": 0.36
            },
            "requireEntries": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.4
            },
            "tableGet": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.88,
                "total_score": 0.71
            },
            "getHashPrefix": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.73,
                "total_score": 0.4
            },
            "maskCombine": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "getNext": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.38
            },
            "setHashTableMask": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:resizeTable(int,int,int,int)": {
            "createTable": {
                "count_score": 0.09,
                "dataflow_score": 0.75,
                "indegree_score": 0.41,
                "total_score": 0.41
            },
            "tableSet": {
                "count_score": 0.18,
                "dataflow_score": 0.75,
                "indegree_score": 0.73,
                "total_score": 0.57
            },
            "requireTable": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.64,
                "total_score": 0.36
            },
            "requireEntries": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.4
            },
            "tableGet": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.88,
                "total_score": 0.71
            },
            "getHashPrefix": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.73,
                "total_score": 0.4
            },
            "maskCombine": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "getNext": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.38
            },
            "setHashTableMask": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:resizeMeMaybe(int)": {
            "requireEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "resizeEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:resizeEntries(int)": {
            "resizeEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "requireLinks": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:containsValue(java.lang.Object)": {
            "delegateOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.45
            },
            "value": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:insertEntry(int,java.lang.Object,java.lang.Object,int,int)": {
            "maskCombine": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "setEntry": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "setKey": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "setValue": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.19
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:replaceAll(java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "delegateOrNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.23
            },
            "key": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.11
            },
            "value": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            },
            "setValue": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:isEmpty()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:clear()": {
            "needsAllocArrays": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.37
            },
            "incrementModCount": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.19
            },
            "delegateOrNull": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "size": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.51,
                "total_score": 0.54
            },
            "constrainToRange": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.49
            },
            "requireElements": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.39
            },
            "requireTable": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.58
            },
            "tableClear": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "requireEntries": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.39
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:writeObject(java.io.ObjectOutputStream)": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:resizeMeMaybe(int)": {
            "requireEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "resizeEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:resizeEntries(int)": {
            "resizeEntries": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "requirePredecessors": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "requireSuccessors": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:insertEntry(int,java.lang.Object,int,int)": {
            "maskCombine": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "setEntry": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "setElement": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:allocArrays()": {
            "needsAllocArrays": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.74,
                "total_score": 0.66
            },
            "checkState": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "tableSize": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.47
            },
            "createTable": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.47
            },
            "setHashTableMask": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:allocArrays()": {
            "needsAllocArrays": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.6,
                "total_score": 0.6
            },
            "checkState": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "tableSize": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.47
            },
            "createTable": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.47
            },
            "setHashTableMask": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:getPredecessor(int)": {
            "link": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:getSuccessor(int)": {
            "link": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:setSuccessor(int,int)": {
            "link": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "setLink": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:setPredecessor(int,int)": {
            "link": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "setLink": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:setSucceeds(int,int)": {
            "setSuccessor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "setPredecessor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet:<init>(com.google.common.collect.DiscreteDomain)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:<init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:asRanges()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "rangeLexOrdering": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:emptySet(java.util.Comparator)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut$BelowValue:withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)": {
            "belowAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut$BelowValue:withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)": {
            "aboveAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut:aboveValue(java.lang.Comparable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut:belowValue(java.lang.Comparable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Cut:equals(java.lang.Object)": {
            "compareTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:<init>(com.google.common.collect.Cut,com.google.common.collect.Cut)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "compareTo": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.18
            },
            "aboveAll": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "belowAll": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "toString": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.Range:encloses(com.google.common.collect.Range)": {
            "compareTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:isConnected(com.google.common.collect.Range)": {
            "compareTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:writeObject(java.io.ObjectOutputStream)": {
            "valueComparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "writeMultimap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)": {
            "comparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.DescendingMultiset:toString()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:remove(java.lang.Object,int)": {
            "isActuallyE": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.22
            },
            "checkNonnegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "count": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ExplicitOrdering:compare(java.lang.Object,java.lang.Object)": {
            "rank": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntrySetMultimap:removeAll(java.lang.Object)": {
            "removeAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:add(int,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:addAll(int,java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:get(int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:indexOf(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:lastIndexOf(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:listIterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:listIterator(int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:remove(int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:set(int,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:subList(int,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyListMultimap:removeAll(java.lang.Object)": {
            "removeAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeySetMultimap:removeAll(java.lang.Object)": {
            "removeAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractDirectedNetworkConnections$1:iterator()": {
            "concat": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "union": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.13
            },
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "unmodifiableIterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Iterables:frequency(java.lang.Iterable,java.lang.Object)": {
            "frequency": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardContainsKey(java.lang.Object)": {
            "containsKeyImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardContainsValue(java.lang.Object)": {
            "containsValueImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ExplicitOrdering:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardLowerKey(java.lang.Object)": {
            "lowerEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardFloorKey(java.lang.Object)": {
            "floorEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardCeilingKey(java.lang.Object)": {
            "ceilingEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardHigherKey(java.lang.Object)": {
            "higherEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardFirstKey()": {
            "firstEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardLastKey()": {
            "lastEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardLastEntry()": {
            "descendingMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getFirst": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardPollLastEntry()": {
            "descendingMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "pollNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardDescendingKeySet()": {
            "descendingMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardSubMap(java.lang.Object,java.lang.Object)": {
            "subMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardLowerEntry(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardFloorEntry(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardHeadMap(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardCeilingEntry(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardHigherEntry(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:standardTailMap(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:standardSubMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)": {
            "tailMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSetMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:isEmpty()": {
            "hasUpperBound": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.2
            },
            "getUpperEndpoint": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.25
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "tooLow": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "hasLowerBound": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.2
            },
            "getLowerEndpoint": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.25
            },
            "tooHigh": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:contains(java.lang.Object)": {
            "tooLow": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "tooHigh": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable:<init>(java.util.Comparator,java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:replaceAll(java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "clear": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:<init>(int)": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:readObject(java.io.ObjectInputStream)": {
            "readCount": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "init": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "populateMap": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:readObject(java.io.ObjectInputStream)": {
            "populateMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:readObject(java.io.ObjectInputStream)": {
            "populateMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:readObject(java.io.ObjectInputStream)": {
            "populateMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:indexOf(java.lang.Object)": {
            "needsAllocArrays": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.3
            },
            "smearedHash": {
                "count_score": 0.1,
                "dataflow_score": 0.25,
                "indegree_score": 0.81,
                "total_score": 0.43
            },
            "hashTableMask": {
                "count_score": 0.1,
                "dataflow_score": 0.75,
                "indegree_score": 0.42,
                "total_score": 0.42
            },
            "requireTable": {
                "count_score": 0.1,
                "dataflow_score": 0.25,
                "indegree_score": 0.47,
                "total_score": 0.29
            },
            "tableGet": {
                "count_score": 0.1,
                "dataflow_score": 0.25,
                "indegree_score": 0.58,
                "total_score": 0.34
            },
            "getHashPrefix": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.51,
                "total_score": 0.56
            },
            "entry": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "key": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.18
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getNext": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.58,
                "total_score": 0.41
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:moveLastEntry(int,int)": {
            "requireTable": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "requireEntries": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.19
            },
            "requireKeys": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.08
            },
            "requireValues": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "size": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "smearedHash": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "tableGet": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.45
            },
            "tableSet": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.38
            },
            "getNext": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.15
            },
            "maskCombine": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:contains(java.lang.Object)": {
            "needsAllocArrays": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "delegateOrNull": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.29
            },
            "smearedHash": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.81,
                "total_score": 0.43
            },
            "hashTableMask": {
                "count_score": 0.09,
                "dataflow_score": 0.75,
                "indegree_score": 0.42,
                "total_score": 0.42
            },
            "requireTable": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.47,
                "total_score": 0.29
            },
            "tableGet": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.58,
                "total_score": 0.33
            },
            "getHashPrefix": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.51,
                "total_score": 0.56
            },
            "entry": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "element": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.14
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getNext": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.58,
                "total_score": 0.41
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:moveLastEntry(int,int)": {
            "requireTable": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.38
            },
            "requireEntries": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.22
            },
            "requireElements": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.22
            },
            "size": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "smearedHash": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "tableGet": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.4,
                "total_score": 0.49
            },
            "tableSet": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.42
            },
            "getNext": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.19
            },
            "maskCombine": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.CompactHashing:remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[])": {
            "smearedHash": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.62,
                "total_score": 0.43
            },
            "tableGet": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.09
            },
            "getHashPrefix": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getNext": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.14,
                "total_score": 0.43
            },
            "tableSet": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "maskCombine": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse$InverseKeySet:remove(java.lang.Object)": {
            "smearedHash": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:get(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$Inverse:remove(java.lang.Object)": {
            "smearedHash": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap$KeySet:remove(java.lang.Object)": {
            "smearedHash": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:containsKey(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "seekByKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:containsValue(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "seekByValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:get(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "seekByKey": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "valueOrNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:put(java.lang.Object,java.lang.Object,boolean)": {
            "smearedHash": {
                "count_score": 0.22,
                "dataflow_score": 0.67,
                "indegree_score": 0.77,
                "total_score": 0.57
            },
            "seekByKey": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.45
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "seekByValue": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.13,
                "total_score": 0.29
            },
            "delete": {
                "count_score": 0.22,
                "dataflow_score": 0.67,
                "indegree_score": 0.13,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "insert": {
                "count_score": 0.22,
                "dataflow_score": 0.33,
                "indegree_score": 0.13,
                "total_score": 0.22
            },
            "rehashIfNecessary": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:putInverse(java.lang.Object,java.lang.Object,boolean)": {
            "smearedHash": {
                "count_score": 0.22,
                "dataflow_score": 0.67,
                "indegree_score": 0.77,
                "total_score": 0.57
            },
            "seekByValue": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.13,
                "total_score": 0.39
            },
            "seekByKey": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.45
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "delete": {
                "count_score": 0.22,
                "dataflow_score": 0.67,
                "indegree_score": 0.13,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "insert": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.13,
                "total_score": 0.19
            },
            "rehashIfNecessary": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "keyOrNull": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.67,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:remove(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "seekByKey": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.2
            },
            "delete": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap$ValueSet:contains(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "mask": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "matchesValue": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap$ValueSet:remove(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "mask": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "matchesValue": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMultiset:count(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.4
            },
            "getElement": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getCount": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "nextInBucket": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSet:contains(java.lang.Object)": {
            "smearedHash": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$SerializedForm:makeBuilder(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:builderWithExpectedSize(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$Builder:<init>(java.util.Comparator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$Values:removeAll(java.util.Collection)": {
            "in": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.29
            },
            "valuePredicateOnEntries": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "removeFromColumnIf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableBiMap:inverse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:of(java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableBiMap:inverse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:combine(com.google.common.collect.ImmutableMap$Builder)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "ensureCapacity": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$SetBuilderImpl:addDedupedElement(java.lang.Object)": {
            "ensureCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$Builder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:builderWithExpectedSize(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet$Builder:<init>(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet$Builder:addAll(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset$Builder:addAll(java.util.Iterator)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet$Builder:addAll(java.util.Iterator)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:<init>(com.google.common.collect.ImmutableList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists$StringAsImmutableList:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableList:<init>(java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap$Values:<init>(com.google.common.collect.RegularImmutableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableList:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap:createValues()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMap:createValues()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:createEntries()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:createValues()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumSet:<init>(java.util.EnumSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$EntrySet:<init>(com.google.common.collect.ImmutableSetMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableSet:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:listIterator()": {
            "listIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$SubList:listIterator()": {
            "listIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:iterator()": {
            "listIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EmptyImmutableListMultimap:<init>()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableBiMap:createEntrySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMap:createEntrySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap:createKeySet()": {
            "isFull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "keySet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "createKeySet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$SerializedForm:<init>(com.google.common.collect.ImmutableBiMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapKeySet:iterator()": {
            "keyIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ExplicitOrdering:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:createAsList()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:<init>(int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "instance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:copy()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedAsList:comparator()": {
            "delegateCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "comparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedAsList:indexOf(java.lang.Object)": {
            "delegateCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:asMapOfRanges()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "rangeLexOrdering": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$SerializedForm:<init>(com.google.common.collect.ImmutableSortedMap)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "comparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet$Builder:combine(com.google.common.collect.ImmutableSet$Builder)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:of(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableTable:<init>(com.google.common.collect.Table$Cell)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:toString()": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toString": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:putAll(java.lang.Object,java.lang.Iterable)": {
            "toString": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkEntryNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:pathNotFound(java.nio.file.Path,java.util.Collection)": {
            "getOnlyElement": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getParentPath": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterables:getOnlyElement(java.lang.Iterable,java.lang.Object)": {
            "getOnlyElement": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:throwCause(java.lang.Exception,boolean)": {
            "concat": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:getLast(java.lang.Iterable,java.lang.Object)": {
            "getLastInNonemptyList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getLast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators$ConcatenatedIterator:next()": {
            "hasNext": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet:iterator()": {
            "emptyIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet:descendingIterator()": {
            "emptyIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators$ConcatenatedIterator:<init>(java.util.Iterator)": {
            "emptyIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap$ValueSet:add(java.lang.Object)": {
            "smearedHash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "mask": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.2
            },
            "matchesValue": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.09
            },
            "getPredecessorInMultimap": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.15
            },
            "rehashIfNecessary": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry)": {
            "getPredecessorInMultimap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.3
            },
            "getSuccessorInMultimap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "succeedsInMultimap": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:clear()": {
            "succeedsInMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:valueSpliterator()": {
            "entrySpliterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:put(java.lang.Object,java.lang.Object)": {
            "addNode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists:partition(java.util.List,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardIndexOf(java.lang.Object)": {
            "indexOfImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:indexOf(java.lang.Object)": {
            "indexOfImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardLastIndexOf(java.lang.Object)": {
            "lastIndexOfImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:lastIndexOf(java.lang.Object)": {
            "lastIndexOfImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingConcurrentMap:putIfAbsent(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingConcurrentMap:remove(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingConcurrentMap:replace(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingConcurrentMap:replace(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Values:contains(java.lang.Object)": {
            "containsValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$HashIterator:advance()": {
            "nextInChain": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nextInTable": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:<init>(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:getEntry(java.lang.Object,int)": {
            "getFirst": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "tryDrainReferenceQueues": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.18
            },
            "equivalent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:preWriteCleanup()": {
            "runLockedCleanup": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:runCleanup()": {
            "runLockedCleanup": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry)": {
            "newEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)": {
            "newEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)": {
            "newEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$LinkedWeakKeyWeakValueEntry:<init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:comparator()": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:keySet()": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:firstKey()": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:lastKey()": {
            "backingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:last()": {
            "lastKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:first()": {
            "firstKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$KeySet:remove(java.lang.Object)": {
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedKeySet:comparator()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedKeySet:first()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedKeySet:last()": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedMapDifference:entriesOnlyOnLeft()": {
            "entriesOnlyOnLeft": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SortedMapDifference:entriesDiffering()": {
            "entriesDiffering": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:descendingIterator()": {
            "descendingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:subSet(java.lang.Object,java.lang.Object)": {
            "subSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:headSet(java.lang.Object)": {
            "headSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:tailSet(java.lang.Object)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:ceilingKey(java.lang.Object)": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:descendingKeySet()": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:floorKey(java.lang.Object)": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:higherKey(java.lang.Object)": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:lowerKey(java.lang.Object)": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:navigableKeySet()": {
            "fromMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:comparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:firstKey()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:headMap(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:lastKey()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:subMap(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:tailMap(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)": {
            "uncheckedCastNullableTToT": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.96,
                "total_score": 0.78
            },
            "equivalent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:<init>(java.lang.String,java.util.concurrent.Executor,com.google.common.eventbus.Dispatcher,com.google.common.eventbus.SubscriberExceptionHandler)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap:entryPredicate()": {
            "keyPredicateOnEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:findMin(int,int)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "compareElements": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:getMaxElementIndex()": {
            "compareElements": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:peekFirst()": {
            "peek": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:bubbleUpAlternatingLevels(int,java.lang.Object)": {
            "getGrandparentIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "elementData": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:verifyIndex(int)": {
            "getLeftChildIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "compareElements": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.3
            },
            "getRightChildIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.24
            },
            "getParentIndex": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "getGrandparentIndex": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:hasNext()": {
            "checkModCount": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            },
            "nextNotInSkipMe": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "size": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:next()": {
            "checkModCount": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.14
            },
            "nextNotInSkipMe": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "size": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.26
            },
            "elementData": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder:build(com.google.common.collect.Multimap)": {
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableListMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableSetMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:descendingIterator()": {
            "descendingMultiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "iteratorImpl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:iterator()": {
            "iteratorImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingMultiset:iterator()": {
            "iteratorImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:iterator()": {
            "iteratorImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardIterator()": {
            "iteratorImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$ViewMultiset:iterator()": {
            "iteratorImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:iterator()": {
            "iteratorImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:elementSet()": {
            "elementSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:comparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:firstEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:lastEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:count(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:add(java.lang.Object,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:remove(java.lang.Object,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:elementSet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:entrySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:setCount(java.lang.Object,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:setCount(java.lang.Object,int,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableCollection:toArray(java.lang.Object[])": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "internalArray": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "internalArrayStart": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "internalArrayEnd": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "copy": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "newArray": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.12
            },
            "copyIntoArray": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.11
            }
        }
    },
    {
        "com.google.common.collect.ObjectArrays:concat(java.lang.Object,java.lang.Object[])": {
            "newArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ObjectArrays:toArrayImpl(java.util.Collection,java.lang.Object[])": {
            "newArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fillArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:toArray()": {
            "toArrayImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:toArray()": {
            "toArrayImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:min(java.lang.Iterable)": {
            "min": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ReverseOrdering:max(java.util.Iterator)": {
            "min": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:max(java.lang.Iterable)": {
            "max": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ReverseOrdering:min(java.util.Iterator)": {
            "max": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFutureState:getOrInitSeenExceptions()": {
            "newConcurrentHashSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:entryIterator()": {
            "hasLowerBound": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "lowerEndpoint": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:from(com.google.common.collect.Range)": {
            "hasLowerBound": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.19
            },
            "lowerEndpoint": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.06
            },
            "lowerBoundType": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.06
            },
            "hasUpperBound": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.21
            },
            "upperEndpoint": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.06
            },
            "upperBoundType": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "natural": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.09
            }
        }
    },
    {
        "com.google.common.collect.Maps:subMap(java.util.NavigableMap,com.google.common.collect.Range)": {
            "natural": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.21
            },
            "hasLowerBound": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.1
            },
            "hasUpperBound": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.11
            },
            "lowerEndpoint": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.06
            },
            "upperEndpoint": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.06
            },
            "checkArgument": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.2
            },
            "lowerBoundType": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.05
            },
            "upperBoundType": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "checkNotNull": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.collect.Sets:subSet(java.util.NavigableSet,com.google.common.collect.Range)": {
            "natural": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.21
            },
            "hasLowerBound": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.1
            },
            "hasUpperBound": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.11
            },
            "lowerEndpoint": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.06
            },
            "upperEndpoint": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.06
            },
            "checkArgument": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.2
            },
            "lowerBoundType": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.05
            },
            "upperBoundType": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "checkNotNull": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:contains(java.lang.Object)": {
            "unsafeBinarySearch": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:get(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:count(java.lang.Object)": {
            "indexOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getCount": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:lower(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:floor(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:ceiling(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:higher(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:pollFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:pollLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:descendingSet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:descendingIterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:headSet(java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:tailSet(java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:createElementSet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.DescendingMultiset:elementSet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$NavigableElementSet:descendingSet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$NavigableElementSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "forBoolean": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$NavigableElementSet:headSet(java.lang.Object,boolean)": {
            "forBoolean": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$NavigableElementSet:tailSet(java.lang.Object,boolean)": {
            "forBoolean": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnKeySet:size()": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:maintainEmptyInvariant()": {
            "updateBackingRowMapField": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:containsKey(java.lang.Object)": {
            "updateBackingRowMapField": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "safeContainsKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:get(java.lang.Object)": {
            "updateBackingRowMapField": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "safeGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:size()": {
            "updateBackingRowMapField": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:entryIterator()": {
            "updateBackingRowMapField": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "emptyModifiableIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:entrySpliterator()": {
            "updateBackingRowMapField": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.47
            },
            "wrapEntry": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:put(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:rowMap()": {
            "rowMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardRowSortedTable:rowMap()": {
            "rowMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:rowKeySet()": {
            "rowMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMap:containsValue(java.lang.Object)": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMap:entrySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:<init>(java.util.NavigableSet,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:sortedSet(java.util.SortedSet,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:add(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:addAll(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:clear()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:contains(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:containsAll(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:isEmpty()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:iterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:spliterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:stream()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:parallelStream()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:forEach(java.util.function.Consumer)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:remove(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:removeAll(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:retainAll(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:removeIf(java.util.function.Predicate)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:size()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:toArray()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedCollection:toArray(java.lang.Object[])": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedQueue:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSet:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedEntry:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedEntry:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedEntry:getKey()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedEntry:getValue()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedEntry:setValue(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedBiMap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:clear()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:containsKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:containsValue(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:entrySet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:forEach(java.util.function.BiConsumer)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:getOrDefault(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:isEmpty()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:keySet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:put(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:putIfAbsent(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:replace(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:replace(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:computeIfAbsent(java.lang.Object,java.util.function.Function)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:computeIfPresent(java.lang.Object,java.util.function.BiFunction)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:compute(java.lang.Object,java.util.function.BiFunction)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:putAll(java.util.Map)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:replaceAll(java.util.function.BiFunction)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:remove(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:remove(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:size()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:values()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMap:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedMap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedListMultimap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:size()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:isEmpty()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:containsKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:containsValue(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:containsEntry(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:put(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:putAll(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:putAll(com.google.common.collect.Multimap)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:remove(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:removeAll(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:clear()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:keySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:values()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:entries()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:forEach(java.util.function.BiConsumer)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "forEach": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSetMultimap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:contains(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:containsRow(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:containsColumn(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:containsValue(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:get(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:isEmpty()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:size()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:clear()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:putAll(com.google.common.collect.Table)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:remove(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:cellSet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:rowKeySet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:columnKeySet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:values()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:deque(java.util.Deque,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Queues:synchronizedQueue(java.util.Queue)": {
            "queue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:list(java.util.List,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:keys()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "multiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableRowSortedMap:rowKeySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:compare(java.lang.Object,java.lang.Object)": {
            "comparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:recompute()": {
            "recomputeMultiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "recomputeHeight": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:aggregateBelowRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode)": {
            "comparator": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.19
            },
            "getLowerEndpoint": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.4
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "getElement": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "getLowerBoundType": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:aggregateAboveRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode)": {
            "comparator": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.19
            },
            "getUpperEndpoint": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.4
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "getElement": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "getUpperBoundType": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.escape.ArrayBasedCharEscaper:<init>(com.google.common.escape.ArrayBasedEscaperMap,char,char)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.03
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getReplacementArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.escape.CharEscaperBuilder$CharArrayDecorator:<init>(char[][])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.escape.Escapers$1:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.escape.ArrayBasedUnicodeEscaper:<init>(com.google.common.escape.ArrayBasedEscaperMap,int,int,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getReplacementArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.PercentEscaper:<init>(java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "createSafeOctets": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.escape.CharEscaper:escape(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "escapeSlow": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus$LoggingHandler:handleException(java.lang.Throwable,com.google.common.eventbus.SubscriberExceptionContext)": {
            "logger": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "message": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.eventbus.Subscriber:create(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method)": {
            "isDeclaredThreadSafe": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "hasEdgeConnecting": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "hasEdgeConnecting": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:predecessors(java.lang.Object)": {
            "predecessors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:successors(java.lang.Object)": {
            "successors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:incidentNodes(java.lang.Object)": {
            "delegate": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "nodeV": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.97,
                "total_score": 0.61
            },
            "nodeU": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "transpose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:edgesConnecting(com.google.common.graph.EndpointPair)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transpose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:edgeConnecting(com.google.common.graph.EndpointPair)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transpose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:edgeConnectingOrNull(com.google.common.graph.EndpointPair)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transpose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedNetwork:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transpose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transpose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:edgeValue(com.google.common.graph.EndpointPair)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transpose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs$TransposedValueGraph:edgeValueOrDefault(com.google.common.graph.EndpointPair,java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transpose": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:equals(java.lang.Object)": {
            "edges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:hashCode()": {
            "edges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:toString()": {
            "edges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork$1:edges()": {
            "edges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph$1:edges()": {
            "edges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:containsEdge(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:edges()": {
            "edges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.MapRetrievalCache:get(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getIfCached": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "addToCache": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.Traverser$Traversal:inTree(com.google.common.graph.SuccessorsFunction)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:removeInEdge(java.lang.Object,boolean)": {
            "removeOutEdge": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:putBytes(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "update": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:putBytes(java.nio.ByteBuffer)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:putShort(short)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:putInt(int)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:putLong(long)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:putChar(char)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hasher:putDouble(double)": {
            "putDouble": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractCompositeHashFunction$1:putLong(long)": {
            "putLong": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractHashFunction:hashLong(long)": {
            "newHasher": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "putLong": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractCompositeHashFunction$1:putChar(char)": {
            "putChar": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:hash()": {
            "munch": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "flip": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "processRemaining": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "position": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:munchIfFull()": {
            "munch": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:toBloomFilter(com.google.common.hash.Funnel,long)": {
            "toBloomFilter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:expectedFpp()": {
            "bitCount": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "bitSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:isCompatible(com.google.common.hash.BloomFilter)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "bitSize": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:compare(byte[],byte[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:toString(byte)": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:putAll(com.google.common.hash.BloomFilter)": {
            "checkNotNull": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "checkArgument": {
                "count_score": 0.19,
                "dataflow_score": 1.0,
                "indegree_score": 0.47,
                "total_score": 0.55
            },
            "bitSize": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.41
            },
            "putAll": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            }
        }
    },
    {
        "com.google.common.hash.FarmHashFingerprint64:hashLength65Plus(byte[],int,int)": {
            "shiftMix": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.15
            },
            "load64": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "weakHashLength32WithSeeds": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "hashLength16": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.29
            }
        }
    },
    {
        "com.google.common.hash.Fingerprint2011:fullFingerprint(byte[],int,int)": {
            "load64": {
                "count_score": 0.36,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.81
            },
            "weakHashLength32WithSeeds": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.39
            },
            "shiftMix": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.23
            },
            "hash128to64": {
                "count_score": 0.21,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.hash.HashCode:fromBytesNoCopy(byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.HashCode:fromInt(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.HashCode:fromLong(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:floatValue()": {
            "longValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:doubleValue()": {
            "longValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:bigIntegerValue()": {
            "longValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hashing:goodFastHash(int)": {
            "checkPositiveAndMakeMultipleOf32": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "murmur3_128": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.Hashing:consistentHash(com.google.common.hash.HashCode,int)": {
            "consistentHash": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hashing:hmacMd5(java.security.Key)": {
            "hmacToString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Hashing:hmacSha1(java.security.Key)": {
            "hmacToString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Hashing:hmacSha256(java.security.Key)": {
            "hmacToString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Hashing:hmacSha512(java.security.Key)": {
            "hmacToString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction$SerializedForm:readResolve()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:process(java.nio.ByteBuffer)": {
            "bmix64": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putBytes(java.nio.ByteBuffer)": {
            "putInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "putByte": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.SipHashFunction$SipHasher:process(java.nio.ByteBuffer)": {
            "processM": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ByteArrayByteSource:<init>(byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ByteArrayByteSource:slice(long,long)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteSource:concat(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base16Encoding:decodeTo(byte[],java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.02
            },
            "decode": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base64Encoding:decodeTo(byte[],java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "isValidPaddingStartPosition": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.02
            },
            "decode": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:decodeTo(byte[],java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "trimTrailingPadding": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "isValidPaddingStartPosition": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.05
            },
            "decode": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:withSeparator(java.lang.String,int)": {
            "matches": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.17
            },
            "checkArgument": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base16Encoding:<init>(com.google.common.io.BaseEncoding$Alphabet)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.04
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "encode": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base64Encoding:<init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.CharSource$StringCharSource:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.CharSource:concat(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:newDataInput(byte[])": {
            "newDataInput": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:newDataOutput()": {
            "newDataOutput": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:newDataOutput(int)": {
            "newDataOutput": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ReaderInputStream:<init>(java.io.Reader,java.nio.charset.Charset,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteSource:countBySkipping(java.io.InputStream)": {
            "skipUpTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:skipFully(java.io.InputStream,long)": {
            "skipUpTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:read(java.nio.CharBuffer)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkOpen": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.12
            },
            "hasRemaining": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "remaining": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.14
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:read()": {
            "checkOpen": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "hasRemaining": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.CharSink:writeLines(java.lang.Iterable,java.lang.String)": {
            "writeLines": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSink:writeLines(java.util.stream.Stream,java.lang.String)": {
            "writeLines": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource:forEachLine(java.util.function.Consumer)": {
            "lines": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams:readLines(java.lang.Readable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "readLine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams:readLines(java.lang.Readable,com.google.common.io.LineProcessor)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "readLine": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.FileBackedOutputStream:write(int)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.FileBackedOutputStream:write(byte[],int,int)": {
            "update": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ReaderInputStream:readMoreChars()": {
            "availableCapacity": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "flip": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "grow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "limit": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readShort()": {
            "readUnsignedShort": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readChar()": {
            "readUnsignedShort": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readFloat()": {
            "readInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readDouble()": {
            "readLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataOutputStream:writeChars(java.lang.String)": {
            "writeChar": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataOutputStream:writeDouble(double)": {
            "writeLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:deleteDirectoryContentsInsecure(java.nio.file.DirectoryStream)": {
            "deleteRecursivelyInsecure": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "concat": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.6
            },
            "addException": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:deleteRecursivelySecure(java.nio.file.SecureDirectoryStream,java.nio.file.Path)": {
            "deleteDirectoryContentsSecure": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addException": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.MultiInputStream:<init>(java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "advance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.MultiInputStream:read()": {
            "advance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MultiInputStream:read(byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "advance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.MultiReader:<init>(java.util.Iterator)": {
            "advance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MultiReader:read(char[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "advance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.MultiReader:skip(long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "advance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$ResourceInfo:asCharSource(java.nio.charset.Charset)": {
            "url": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Lists$Partition:size()": {
            "divide": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$SeparatedBaseEncoding:maxEncodedSize(int)": {
            "divide": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:maxEncodedSize(int)": {
            "divide": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray:<init>(long)": {
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "divide": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkedCast": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.collect.Collections2$PermutationCollection:size()": {
            "factorial": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$OrderedPermutationCollection:calculateSize(java.util.List,java.util.Comparator)": {
            "binomial": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "saturatedMultiply": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:mean(java.util.Iterator)": {
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkFinite": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:isPowerOfTwo(double)": {
            "isFinite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getSignificand": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:isMathematicalInteger(double)": {
            "isFinite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getSignificand": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.LongMath:roundToDouble(long,java.math.RoundingMode)": {
            "compare": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.21
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "nextDown": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getSignificand": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:fuzzyCompare(double,double,double)": {
            "fuzzyEquals": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "compare": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:maxRunBeforeFallback(int)": {
            "log2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:trim()": {
            "log2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.25
            },
            "partition": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:<init>(java.lang.String,char[],byte[],boolean)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "log2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "divide": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped:ceilToPowerOfTwo(int)": {
            "log2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.IntMath:log10(int,java.math.RoundingMode)": {
            "checkPositive": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.26
            },
            "log10Floor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "lessThanBranchFree": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.math.LongMath:sqrt(long,java.math.RoundingMode)": {
            "checkNonNegative": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.21
            },
            "fitsInInt": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "sqrt": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "lessThanBranchFree": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.CartesianList:<init>(com.google.common.collect.ImmutableList)": {
            "checkedMultiply": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:calculateNewCapacity()": {
            "checkedMultiply": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "capAtMaximumSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:<init>(java.util.Comparator,int)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.48
            },
            "checkedMultiply": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.math.IntMath:checkedPow(int,int)": {
            "checkNonNegative": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "checkNoOverflow": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkedMultiply": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation:horizontal(double)": {
            "isFinite": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.48,
                "total_score": 0.64
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$VerticalLinearTransformation:createInverse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$LinearTransformationBuilder:withSlope(double)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "isFinite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.31
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation:vertical(double)": {
            "isFinite": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.41,
                "total_score": 0.61
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$RegularLinearTransformation:createInverse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LongMath$MillerRabinTester:test(long,long)": {
            "testWitness": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:factorial(int)": {
            "checkNonNegative": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "log2": {
                "count_score": 0.36,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.27
            },
            "divide": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.26
            },
            "listProduct": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.math.LongMath:log10(long,java.math.RoundingMode)": {
            "checkPositive": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.26
            },
            "log10Floor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "lessThanBranchFree": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.math.LongMath:multiplyFraction(long,long,long)": {
            "gcd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:checkedPow(long,int)": {
            "checkNonNegative": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "checkNoOverflow": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.29
            },
            "checkedMultiply": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.math.PairedStats:populationCovariance()": {
            "count": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.math.PairedStats:sampleCovariance()": {
            "count": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.math.PairedStats:pearsonsCorrelationCoefficient()": {
            "count": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.21
            },
            "checkState": {
                "count_score": 0.3,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "xStats": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.1
            },
            "sumOfSquaresOfDeltas": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.17
            },
            "yStats": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.1
            },
            "ensurePositive": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "ensureInUnitRange": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.math.Stats:meanOf(java.util.Iterator)": {
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "isFinite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.21
            },
            "calculateNewMeanNonFinite": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:add(double)": {
            "isFinite": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "calculateNewMeanNonFinite": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:merge(long,double,double,double,double)": {
            "isFinite": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "calculateNewMeanNonFinite": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:populationCovariance()": {
            "count": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:sampleCovariance()": {
            "count": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:pearsonsCorrelationCoefficient()": {
            "count": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.17
            },
            "checkState": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.51
            },
            "sumOfSquaresOfDeltas": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.18
            },
            "ensurePositive": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "ensureInUnitRange": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.math.Quantiles:partition(double[],int,int)": {
            "movePivotToStartOfSlice": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "swap": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.math.PairedStats:fromByteArray(byte[])": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "readFrom": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.Stats:fromByteArray(byte[])": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            },
            "readFrom": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:snapshot()": {
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:xStats()": {
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:yStats()": {
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Stats:toStats()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "snapshot": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:convertDottedQuadToHex(java.lang.String)": {
            "textToNumericFormatV4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:toUriString(java.net.InetAddress)": {
            "toAddrString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:getCompatIPv4Address(java.net.Inet6Address)": {
            "isCompatIPv4Address": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "toAddrString": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.32
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "getInet4Address": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:get6to4IPv4Address(java.net.Inet6Address)": {
            "is6to4Address": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "toAddrString": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.32
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "getInet4Address": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:getIsatapIPv4Address(java.net.Inet6Address)": {
            "isIsatapAddress": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "toAddrString": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.46,
                "total_score": 0.41
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "getInet4Address": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.26
            }
        }
    },
    {
        "com.google.common.net.MediaType$Tokenizer:consumeCharacter(com.google.common.base.CharMatcher)": {
            "hasMore": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.44
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "previewChar": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.net.MediaType$Tokenizer:consumeCharacter(char)": {
            "hasMore": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.44
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "previewChar": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Quantiles$ScaleAndIndex:compute(java.util.Collection)": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Quantiles$ScaleAndIndexes:compute(java.util.Collection)": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$Builder:add(double)": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(double[])": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(java.util.Collection)": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(com.google.common.primitives.ImmutableDoubleArray)": {
            "length": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "ensureRoomFor": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:of(double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:of(double,double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:of(double,double,double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:of(double,double,double,double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:of(double,double,double,double,double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:of(double,double,double,double,double,double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:copyOf(double[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:copyOf(java.util.Collection)": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:copyOf(java.util.stream.DoubleStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:trimmed()": {
            "isPartialView": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:indexOf(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:contains(double)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:lastIndexOf(java.lang.Object)": {
            "lastIndexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:contains(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$Builder:add(int)": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$Builder:addAll(int[])": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$Builder:addAll(java.util.Collection)": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$Builder:addAll(com.google.common.primitives.ImmutableIntArray)": {
            "length": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "ensureRoomFor": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:of(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:of(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:of(int,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:of(int,int,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:of(int,int,int,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:of(int,int,int,int,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:copyOf(int[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:copyOf(java.util.stream.IntStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:trimmed()": {
            "isPartialView": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:contains(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$Builder:add(long)": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$Builder:addAll(long[])": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$Builder:addAll(java.util.Collection)": {
            "ensureRoomFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$Builder:addAll(com.google.common.primitives.ImmutableLongArray)": {
            "length": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "ensureRoomFor": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:of(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:of(long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:of(long,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:of(long,long,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:of(long,long,long,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:of(long,long,long,long,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:copyOf(long[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:copyOf(java.util.stream.LongStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:trimmed()": {
            "isPartialView": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.27
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Quantiles$Scale:indexes(java.util.Collection)": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:copyOf(java.util.Collection)": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:copyOf(java.util.Collection)": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.primitives.Ints:tryParse(java.lang.String,int)": {
            "tryParse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:tryParse(java.lang.String)": {
            "tryParse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:decode(java.lang.String)": {
            "fromString": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "parseUnsignedInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:valueOf(long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromIntBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:valueOf(java.math.BigInteger)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.26
            },
            "fromIntBits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:valueOf(java.lang.String,int)": {
            "parseUnsignedInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "fromIntBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:plus(com.google.common.primitives.UnsignedInteger)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromIntBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:minus(com.google.common.primitives.UnsignedInteger)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromIntBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:times(com.google.common.primitives.UnsignedInteger)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromIntBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:dividedBy(com.google.common.primitives.UnsignedInteger)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "divide": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "fromIntBits": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.52
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:mod(com.google.common.primitives.UnsignedInteger)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "remainder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "fromIntBits": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.52
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:compareTo(com.google.common.primitives.UnsignedInteger)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "compare": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts$LexicographicalComparator:compare(int[],int[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:valueOf(long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromLongBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:valueOf(java.math.BigInteger)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.26
            },
            "fromLongBits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:plus(com.google.common.primitives.UnsignedLong)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromLongBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:minus(com.google.common.primitives.UnsignedLong)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromLongBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:times(com.google.common.primitives.UnsignedLong)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromLongBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:compare(byte[],byte[])": {
            "compare": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:compareTo(com.google.common.primitives.UnsignedLong)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "compare": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs$LexicographicalComparator:compare(long[],long[])": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:divide(long,long)": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:remainder(long,long)": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:valueOf(java.lang.String,int)": {
            "parseUnsignedLong": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "fromLongBits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:parseUnsignedLong(java.lang.String)": {
            "parseUnsignedLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:decode(java.lang.String)": {
            "fromString": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "parseUnsignedLong": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:isPackagePrivate()": {
            "isPrivate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "isPublic": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "isProtected": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:getKey()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:getValue()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:setValue(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ImmutableTypeToInstanceMap:getInstance(java.lang.Class)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "trustedGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:getOwnerType()": {
            "getDeclaringClass": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.MutableTypeToInstanceMap:getInstance(java.lang.Class)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "trustedGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.MutableTypeToInstanceMap:putInstance(java.lang.Class,java.lang.Object)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "trustedPut": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:wrap()": {
            "isPrimitive": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "wrap": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.62
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:unwrap()": {
            "isWrapper": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "unwrap": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:getReturnType()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$Bounds:isSubtypeOf(java.lang.reflect.Type)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$Bounds:isSupertypeOf(java.lang.reflect.Type)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getComponentType()": {
            "getComponentType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isSubtypeOfArrayType(java.lang.reflect.GenericArrayType)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isSupertypeOfArray(java.lang.reflect.GenericArrayType)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getSubtypeFromLowerBounds(java.lang.Class,java.lang.reflect.Type[])": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$JavaVersion$4:typeName(java.lang.reflect.Type)": {
            "typeName": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractExecutionThreadService$1:toString()": {
            "toString": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:get()": {
            "getDoneValue": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:addListener(java.lang.Runnable,java.util.concurrent.Executor)": {
            "addListener": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractIdleService$DelegateService:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:<init>(java.util.concurrent.ScheduledExecutorService)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingListeningExecutorService:submit(java.util.concurrent.Callable)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "submit": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:submitAndAddQueueListener(com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.Callable,java.util.concurrent.BlockingQueue)": {
            "submit": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractExecutionThreadService:awaitRunning(java.time.Duration)": {
            "awaitRunning": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractIdleService:awaitRunning(java.time.Duration)": {
            "awaitRunning": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService:awaitRunning(java.time.Duration)": {
            "awaitRunning": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:awaitRunning(java.time.Duration)": {
            "awaitRunning": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractExecutionThreadService:awaitTerminated(java.time.Duration)": {
            "awaitTerminated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractIdleService:awaitTerminated(java.time.Duration)": {
            "awaitTerminated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService:awaitTerminated(java.time.Duration)": {
            "awaitTerminated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:awaitTerminated(java.time.Duration)": {
            "awaitTerminated": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate:doStart()": {
            "executor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "renamingDecorator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard:isSatisfied()": {
            "state": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService$IsStartableGuard:isSatisfied()": {
            "state": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService$IsStoppableGuard:isSatisfied()": {
            "state": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService$IsStoppedGuard:isSatisfied()": {
            "state": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:isRunning()": {
            "state": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:toString()": {
            "state": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CollectionFuture:<init>(com.google.common.collect.ImmutableCollection,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "newArrayListWithCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.CombinedFuture:<init>(com.google.common.collect.ImmutableCollection,boolean,java.util.concurrent.Executor,com.google.common.util.concurrent.AsyncCallable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.CombinedFuture:<init>(com.google.common.collect.ImmutableCollection,boolean,java.util.concurrent.Executor,java.util.concurrent.Callable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:collectValueFromNonCancelledFuture(int,java.util.concurrent.Future)": {
            "getDone": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "handleException": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:getAndAdd(double)": {
            "getAndAccumulate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDouble:addAndGet(double)": {
            "accumulateAndGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDoubleArray:getAndAdd(int,double)": {
            "getAndAccumulate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDoubleArray:addAndGet(int,double)": {
            "accumulateAndGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:cancel(boolean)": {
            "close": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:finalize()": {
            "finishToFuture": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:becomeSubsumedInto(com.google.common.util.concurrent.ClosingFuture$CloseableList)": {
            "checkAndUpdateState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "directExecutor": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.65,
                "total_score": 0.66
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException:<init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenableFutureTask:create(java.util.concurrent.Callable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenableFutureTask:create(java.lang.Runnable,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenableFutureTask:addListener(java.lang.Runnable,java.util.concurrent.Executor)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter:addListener(java.lang.Runnable,java.util.concurrent.Executor)": {
            "add": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "execute": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenableFutureTask:done()": {
            "execute": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ExecutionSequencer:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:from(com.google.common.util.concurrent.ListenableFuture)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:addFirst(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:addLast(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:descendingIterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:getFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:getLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:offerFirst(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:offerLast(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:peekFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:peekLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:pollFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:pollLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:pop()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:push(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:removeFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:removeLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:removeFirstOccurrence(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:removeLastOccurrence(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingListenableFuture:addListener(java.lang.Runnable,java.util.concurrent.Executor)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFuture:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "directExecutor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader:reload(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "immediateFuture": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$CloseableList:applyClosingFunction(com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.lang.Object)": {
            "immediateFuture": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "directExecutor": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:fullyFailedFuture(java.lang.Throwable)": {
            "immediateFailedFuture": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked:wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "newWithCause": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked:hasConstructorUsableByGetChecked(java.lang.Class)": {
            "newWithCause": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenerCallQueue:enqueue(com.google.common.util.concurrent.ListenerCallQueue$Event)": {
            "enqueueHelper": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenerCallQueue:enqueue(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.String)": {
            "enqueueHelper": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:dispatchListenerEvents()": {
            "isOccupiedByCurrentThread": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "dispatch": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:dispatchListenerEvents()": {
            "isOccupiedByCurrentThread": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "dispatch": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:signalNextWaiter()": {
            "isSatisfied": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:toString()": {
            "getRate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "checkPositiveTimeout": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.27
            },
            "findInterruptibleMethods": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "newProxy": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:useDaemonThreadFactory(java.util.concurrent.ThreadPoolExecutor)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "setDaemon": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "setThreadFactory": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.util.concurrent.TimeoutFuture:create(com.google.common.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "directExecutor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:submitAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:scheduleAsync(com.google.common.util.concurrent.AsyncCallable,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)": {
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractListeningExecutorService:newTaskFor(java.util.concurrent.Callable)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:submit(java.util.concurrent.Callable,java.util.concurrent.Executor)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractListeningExecutorService:newTaskFor(java.lang.Runnable,java.lang.Object)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:submit(java.lang.Runnable,java.util.concurrent.Executor)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Uninterruptibles:tryAcquireUninterruptibly(java.util.concurrent.Semaphore,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "tryAcquireUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Platform:getEnumIfPresent(java.lang.Class,java.lang.String)": {
            "getEnumConstants": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "absent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "of": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:<init>(java.lang.Iterable)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:first()": {
            "getDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "absent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:last()": {
            "getDelegate": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "absent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators:tryFind(java.util.Iterator,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "absent": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:expectedNodeCount(int)": {
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:expectedNodeCount(int)": {
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:expectedEdgeCount(int)": {
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:expectedNodeCount(int)": {
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ByteArrayByteSource:sizeIfKnown()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource$CharSequenceCharSource:lengthIfKnown()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files$FileByteSource:sizeIfKnown()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "absent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.MoreFiles$PathByteSource:sizeIfKnown()": {
            "readAttributes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "absent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.net.MediaType:createConstantUtf8(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.12
            },
            "addKnownType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Iterables:any(java.lang.Iterable,com.google.common.base.Predicate)": {
            "any": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.SmallCharMatcher:from(java.util.BitSet,java.lang.String)": {
            "chooseTableSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "smear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Predicates:containsPattern(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$EntrySet:retainAll(java.util.Collection)": {
            "in": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "not": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "removeFromColumnIf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$KeySet:retainAll(java.util.Collection)": {
            "in": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "not": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "keyPredicateOnEntries": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "removeFromColumnIf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$Values:retainAll(java.util.Collection)": {
            "in": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.26
            },
            "not": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.47,
                "total_score": 0.56
            },
            "valuePredicateOnEntries": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "removeFromColumnIf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.base.Throwables:propagateIfPossible(java.lang.Throwable,java.lang.Class)": {
            "propagateIfInstanceOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "propagateIfPossible": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:flattenHierarchy(java.lang.Class)": {
            "propagate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:platformThreadFactory()": {
            "isAppEngineWithApiClasses": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "propagate": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:enqueueNotification(java.lang.Object,int,java.lang.Object,int,com.google.common.cache.RemovalCause)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable$Values:spliterator()": {
            "valuesSpliterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapKeySet:spliterator()": {
            "keySpliterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:createValues()": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesMultimap:createValues()": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:createValues()": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:remove(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:remove(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:contains(java.lang.Object)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$AsMapView:get(java.lang.Object)": {
            "getOrDefault": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:get(java.lang.Object)": {
            "getOrDefault": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterFiltered(com.google.common.collect.FilteredSetMultimap,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterKeys(com.google.common.collect.ListMultimap,com.google.common.base.Predicate)": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "and": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:filter(java.lang.Class)": {
            "getDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "filter": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.Iterators$MergingIterator:<init>(java.lang.Iterable,java.util.Comparator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "peekingIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:entryIterator()": {
            "hasLowerBound": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.23
            },
            "lowerEndpoint": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "lowerBoundType": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "peekingIterator": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "belowAll": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.49,
                "total_score": 0.6
            },
            "contains": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "emptyIterator": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:descendingEntryIterator()": {
            "hasUpperBound": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.21
            },
            "upperEndpoint": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.06
            },
            "aboveAll": {
                "count_score": 0.16,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.5
            },
            "upperBoundType": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "peekingIterator": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.06
            },
            "belowAll": {
                "count_score": 0.42,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.58
            },
            "contains": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.64,
                "total_score": 0.57
            },
            "emptyIterator": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.17
            },
            "firstNonNull": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.72
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:descendingEntryIterator()": {
            "hasUpperBound": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "upperEndpoint": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "peekingIterator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet:removeAll(java.util.Collection)": {
            "removeAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSet:standardRemoveAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAllImpl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$ImprovedAbstractSet:removeAll(java.util.Collection)": {
            "removeAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:clear()": {
            "removeIf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredMultimapValues:removeAll(java.util.Collection)": {
            "in": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.31
            },
            "valuePredicateOnEntries": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.69
            },
            "and": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "removeIf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.FilteredMultimapValues:retainAll(java.util.Collection)": {
            "in": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.29
            },
            "not": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.59,
                "total_score": 0.59
            },
            "valuePredicateOnEntries": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.67
            },
            "and": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "removeIf": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "putAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:putAll(java.lang.Object,java.lang.Iterable)": {
            "putAll": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:create(java.lang.Iterable)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.EvictingQueue:addAll(java.util.Collection)": {
            "skip": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Lists:newLinkedList(java.lang.Iterable)": {
            "newLinkedList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Queues:newArrayDeque(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:newConcurrentLinkedQueue(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:newLinkedBlockingDeque(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:newLinkedBlockingQueue(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:newPriorityBlockingQueue(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:newPriorityQueue(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newEnumSet(java.lang.Iterable,java.lang.Class)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newConcurrentHashSet(java.lang.Iterable)": {
            "newConcurrentHashSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Sets:newLinkedHashSet(java.lang.Iterable)": {
            "newLinkedHashSet": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Sets:newTreeSet(java.lang.Iterable)": {
            "newTreeSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser$BreadthFirstIterator:next()": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:castOrCopyToCollection(java.lang.Iterable)": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:getCopy(java.lang.Object)": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists:newArrayList(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "newArrayList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryMap$KeySet:toArray()": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryMap$KeySet:toArray(java.lang.Object[])": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredMapValues:toArray()": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredMapValues:toArray(java.lang.Object[])": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:retainAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "columnKeySet": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.09
            },
            "newArrayList": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.14
            },
            "column": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "immutableEntry": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues:removeAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "columnKeySet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.1
            },
            "newArrayList": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.15
            },
            "column": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues:retainAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "columnKeySet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.1
            },
            "newArrayList": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.15
            },
            "column": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.Sets:newHashSet(java.lang.Iterable)": {
            "newHashSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:toArray()": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "newArrayList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:toArray(java.lang.Object[])": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "newArrayList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:allMatch(com.google.common.base.Predicate)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "all": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:ceiling(java.lang.Object)": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "find": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:higher(java.lang.Object)": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "find": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardListIterator(int)": {
            "listIteratorImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesListMultimap:transform(java.lang.Object,java.util.Collection)": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesMultimap:transform(java.lang.Object,java.util.Collection)": {
            "transform": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps:asMap(java.util.SortedSet,com.google.common.base.Function)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:edgeIncidentNodesMap(com.google.common.graph.Network)": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:edgeValueMap(com.google.common.graph.ValueGraph)": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableKeySet:<init>(java.util.NavigableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedKeySet:subSet(java.lang.Object,java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedKeySet:headSet(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedKeySet:tailSet(java.lang.Object)": {
            "map": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardRowSortedTable$RowSortedMap:createKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:keySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$ViewCachingAbstractMap:keySet()": {
            "createKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:subMap(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:headMap(java.lang.Object,boolean)": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:tailMap(java.lang.Object,boolean)": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:descendingMap()": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:<init>(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:transformValues(java.util.Map,com.google.common.base.Function)": {
            "transformEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesMultimap:createAsMap()": {
            "transformEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AbstractFilteredMap:createValues()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:values()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$ViewCachingAbstractMap:values()": {
            "createValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap$EntrySet:contains(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "containsEntryImpl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:contains(java.lang.Object)": {
            "containsEntryImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:remove(java.lang.Object)": {
            "removeEntryImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:ceilingEntry(java.lang.Object)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:firstEntry()": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:floorEntry(java.lang.Object)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:higherEntry(java.lang.Object)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:lastEntry()": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:lowerEntry(java.lang.Object)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:pollFirstEntry()": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:pollLastEntry()": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:add(java.lang.Object,int)": {
            "count": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "get": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.23
            },
            "add": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultiset:remove(java.lang.Object,int)": {
            "count": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.16
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "get": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.25
            },
            "add": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:count(java.lang.Object)": {
            "count": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:count(java.lang.Object)": {
            "count": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:get(java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:get(java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:add(java.lang.Object,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "count": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.1
            },
            "checkPositive": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.12
            },
            "safeGet": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.23
            },
            "checkedAdd": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:remove(java.lang.Object,int)": {
            "count": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkPositive": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.17
            },
            "safeGet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.Maps$EntrySet:remove(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$Keys:remove(java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "count": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "safeGet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:remove(java.lang.Object,java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$KeySet:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:containsRow(java.lang.Object)": {
            "containsRow": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:containsColumn(java.lang.Object)": {
            "containsColumn": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:contains(java.lang.Object,java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:containsColumn(java.lang.Object)": {
            "containsColumn": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$EntrySet:isEmpty()": {
            "containsColumn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnKeySet:contains(java.lang.Object)": {
            "containsColumn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap:get(java.lang.Object)": {
            "containsColumn": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "column": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap:containsKey(java.lang.Object)": {
            "containsColumn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap:remove(java.lang.Object)": {
            "containsColumn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:containsRow(java.lang.Object)": {
            "containsRow": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$RowMap:containsKey(java.lang.Object)": {
            "containsRow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$RowMap:get(java.lang.Object)": {
            "containsRow": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "row": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:transformEntries(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:transformValues(com.google.common.collect.Multimap,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset$Builder:addAll(java.lang.Iterable)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:addAllImpl(com.google.common.collect.Multiset,java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addAllImpl": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "addAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.Range:apply(java.lang.Object)": {
            "apply": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:indexOf(java.lang.Object)": {
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "first": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:nullableSynchronizedEntry(java.util.Map$Entry,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMap:<init>(java.util.Map,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedBiMap:<init>(com.google.common.collect.BiMap,java.lang.Object,com.google.common.collect.BiMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedMap:<init>(java.util.SortedMap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:map(java.util.Map,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedListMultimap:<init>(com.google.common.collect.ListMultimap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSetMultimap:<init>(com.google.common.collect.SetMultimap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:multimap(com.google.common.collect.Multimap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:table(com.google.common.collect.Table,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables:toTable(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.Supplier)": {
            "toTable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransposeTable:putAll(com.google.common.collect.Table)": {
            "transpose": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeTraverser$PostOrderIterator:computeNext()": {
            "expand": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.UnicodeEscaper:escapeSlow(java.lang.String,int)": {
            "charBufferFromThreadLocal": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "codePointAt": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "growBuffer": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "nextEscapeIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:of()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:removePredecessor(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:addPredecessor(java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkPositive": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:removeSuccessor(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:addSuccessor(java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkPositive": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:<init>(com.google.common.graph.NetworkBuilder,java.util.Map,java.util.Map)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "cast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:<init>(com.google.common.graph.AbstractGraphBuilder,java.util.Map,long)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableNetwork:removeEdge(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "get": {
                "count_score": 0.6,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.6
            },
            "remove": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:removeNode(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.43
            },
            "get": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.19
            },
            "getWithoutCaching": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "checkState": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "remove": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.09
            },
            "checkNonNegative": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.09
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:removeEdge(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "get": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.24
            },
            "checkNonNegative": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:checkedReferenceNode(java.lang.Object)": {
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm:readResolve()": {
            "stringFunnel": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams:copy(java.lang.Readable,java.lang.Appendable)": {
            "copyReaderToBuilder": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.08
            },
            "asWriter": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "copyReaderToWriter": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "createBuffer": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.4
            },
            "flip": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.28
            },
            "clear": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:decode(java.lang.CharSequence)": {
            "decodeChecked": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:ceilingPowerOfTwo(java.math.BigInteger)": {
            "log2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:floorPowerOfTwo(java.math.BigInteger)": {
            "log2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:getInstance(java.lang.Class)": {
            "cast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$ResourceInfo:of(java.io.File,java.lang.String,java.lang.ClassLoader)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:from(java.lang.reflect.Constructor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:from(java.lang.reflect.Method)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeMappingIntrospector:map(com.google.common.reflect.TypeResolver$TypeVariableKey,java.lang.reflect.Type)": {
            "equalsType": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "forLookup": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractCatchingFuture:create(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "rejectionPropagatingExecutor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:complete(com.google.common.util.concurrent.AbstractFuture,boolean)": {
            "interruptTask": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "afterDone": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "clearListeners": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "getFutureValue": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "executeListener": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractTransformFuture:create(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "rejectionPropagatingExecutor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.34
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:addAndGet(java.lang.Object,long)": {
            "accumulateAndGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:getAndAdd(java.lang.Object,long)": {
            "getAndAccumulate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:putAll(java.util.Map)": {
            "put": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.FakeTimeLimiter:callUninterruptiblyWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)": {
            "callWithTimeout": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.TrustedListenableFutureTask:run()": {
            "run": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:addInEdge(java.lang.Object,java.lang.Object,boolean)": {
            "addOutEdge": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:incidentEdgeOrder()": {
            "unordered": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:incidentEdgeOrder()": {
            "stable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:incidentEdgeOrder()": {
            "stable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraphBuilder:<init>(boolean)": {
            "insertion": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "unordered": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "absent": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListenerCallQueue:addListener(java.lang.Object,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Converter$ConverterComposition:correctedDoForward(java.lang.Object)": {
            "correctedDoForward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter$ReverseConverter:correctedDoBackward(java.lang.Object)": {
            "correctedDoForward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter:convert(java.lang.Object)": {
            "correctedDoForward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter$ConverterComposition:correctedDoBackward(java.lang.Object)": {
            "correctedDoBackward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter$ReverseConverter:correctedDoForward(java.lang.Object)": {
            "correctedDoBackward": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:<init>()": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:<init>(int)": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:init(int)": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:<init>()": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:<init>(int)": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:init(int)": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$FastMatcher:negate()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$AnyOf:negate()": {
            "negate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$JavaLetter:negate()": {
            "negate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$JavaUpperCase:negate()": {
            "negate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Or:negate()": {
            "negate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$RangesMatcher:negate()": {
            "negate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$ClassInfo:getSimpleName()": {
            "inRange": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "trimLeadingFrom": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getPackageName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:stats()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "incrementBy": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "snapshot": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$CustomListMultimap:<init>(java.util.Map,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedSetMultimap:<init>(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$CustomSetMultimap:<init>(java.util.Map,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:newMultimap(java.util.Map,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:cellSpliterator()": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.73
            },
            "getCell": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "indexed": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$EntrySetView:spliterator()": {
            "delegateOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "indexed": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:spliterator()": {
            "indexed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Indexed:spliterator()": {
            "indexed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.IndexedImmutableSet:spliterator()": {
            "indexed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:create(java.lang.Iterable,java.lang.Class)": {
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.Crc32cHashFunction$Crc32cHasher:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.SipHashFunction$SipHasher:<init>(int,int,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.Stats:populationStandardDeviation()": {
            "populationVariance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Stats:sampleStandardDeviation()": {
            "sampleVariance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:populationStandardDeviation()": {
            "populationVariance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:sampleStandardDeviation()": {
            "sampleVariance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:noneOf(java.lang.CharSequence)": {
            "anyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "negate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.CaseFormat:converterTo(com.google.common.base.CaseFormat)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Converter:doAndThen(com.google.common.base.Converter)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Converter:reverse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Enums:stringConverter(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:asConverter(com.google.common.collect.BiMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:drainValueReferenceQueue(java.lang.ref.ReferenceQueue)": {
            "reclaimValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardEquals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:equals(java.lang.Object)": {
            "equalsImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:create(java.lang.Iterable)": {
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.base.Joiner:appendTo(java.lang.Appendable,java.lang.Object[])": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:appendTo(java.lang.StringBuilder,java.lang.Iterable)": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:join(java.util.Iterator)": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner$MapJoiner:join(java.util.Map)": {
            "join": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec:toString()": {
            "toStringHelper": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.46
            },
            "toParsableString": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "addValue": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.7,
                "total_score": 0.65
            },
            "toString": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:toString()": {
            "toStringHelper": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.46
            },
            "addValue": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "toString": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$CallbackListener:toString()": {
            "toStringHelper": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.46
            },
            "addValue": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "toString": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.eventbus.DeadEvent:toString()": {
            "toStringHelper": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.41
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toString": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:toString()": {
            "toStringHelper": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.41
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toString": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:toString()": {
            "toStringHelper": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.43
            },
            "add": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "addValue": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "toString": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.base.Predicates$ContainsPatternPredicate:toString()": {
            "toStringHelper": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.43
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "toString": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:toString()": {
            "toStringHelper": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.38
            },
            "add": {
                "count_score": 0.27,
                "dataflow_score": 0.5,
                "indegree_score": 0.37,
                "total_score": 0.38
            },
            "toLowerCase": {
                "count_score": 0.13,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.65
            },
            "addValue": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "toString": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:toString()": {
            "toStringHelper": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.37
            },
            "add": {
                "count_score": 0.24,
                "dataflow_score": 0.5,
                "indegree_score": 0.37,
                "total_score": 0.37
            },
            "toLowerCase": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.63
            },
            "addValue": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "toString": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            }
        }
    },
    {
        "com.google.common.cache.CacheStats:toString()": {
            "toStringHelper": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.42
            },
            "add": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "toString": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:<init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper)": {
            "getConcurrencyLevel": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "getKeyEquivalence": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "getInitialCapacity": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "newSegmentArray": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "createSegment": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.base.Optional:fromJavaUtil(java.util.Optional)": {
            "fromNullable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable$2:<init>(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Iterables$UnmodifiableIterable:<init>(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ConcatenatedByteSource:sizeIfKnown()": {
            "absent": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "sizeIfKnown": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "of": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "com.google.common.io.ByteSource$SlicedByteSource:sizeIfKnown()": {
            "sizeIfKnown": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "absent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.io.CharSource$ConcatenatedCharSource:lengthIfKnown()": {
            "lengthIfKnown": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "absent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:addPendingString(java.lang.StringBuilder)": {
            "appendUserObject": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "pendingToString": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "emptyToNull": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "isDone": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "addDoneString": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:fromParts(java.lang.String,int)": {
            "isValidPort": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "checkArgument": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.79
            },
            "fromString": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "hasPort": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.HostAndPort:fromHost(java.lang.String)": {
            "fromString": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "hasPort": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.22
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.Iterables:get(java.lang.Iterable,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "get": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:copy()": {
            "copy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:<init>(java.util.Map,java.util.Map,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedNetworkConnections:<init>(java.util.Map,java.util.Map,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:removeInEdge(java.lang.Object,boolean)": {
            "removeInEdge": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getReference": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:of(com.google.common.graph.ElementOrder)": {
            "type": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:addInEdge(java.lang.Object,java.lang.Object,boolean)": {
            "addInEdge": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getReference": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:acquire(int)": {
            "reserve": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:tryAcquire(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "tryAcquire": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:tryAcquire(long,java.util.concurrent.TimeUnit)": {
            "tryAcquire": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:tryAcquire(int)": {
            "tryAcquire": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:tryAcquire()": {
            "tryAcquire": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:tryAcquire(int,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "tryAcquire": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enter(long,java.util.concurrent.TimeUnit)": {
            "toSafeNanos": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "remainingNanos": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:isIntact()": {
            "heapForIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec:toCacheBuilder()": {
            "newBuilder": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "initialCapacity": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "maximumSize": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "maximumWeight": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "concurrencyLevel": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "weakKeys": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "softValues": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "weakValues": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "recordStats": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "expireAfterWrite": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "expireAfterAccess": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "refreshAfterWrite": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.collect.Interners$InternerBuilder:build()": {
            "weakKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Platform:tryWeakKeys(com.google.common.collect.MapMaker)": {
            "weakKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:checkCurrentState(com.google.common.util.concurrent.Service$State)": {
            "state": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "failureCause": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$ArrayMap:getEntry(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:at(int,int)": {
            "checkElementIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:set(int,int,java.lang.Object)": {
            "checkElementIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CartesianList$1:get(int)": {
            "size": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "checkElementIndex": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "com.google.common.collect.CartesianList:get(int)": {
            "size": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "checkElementIndex": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:get(int)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.45
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "reverseIndex": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$SubList:get(int)": {
            "checkElementIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$CharSequenceAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:reverseIndex(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Lists$StringAsImmutableList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableList:get(int)": {
            "checkElementIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans$BooleanArrayAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Booleans$BooleanArrayAsList:set(int,java.lang.Boolean)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.Bytes$ByteArrayAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Bytes$ByteArrayAsList:set(int,java.lang.Byte)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.Chars$CharArrayAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Chars$CharArrayAsList:set(int,java.lang.Character)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.Doubles$DoubleArrayAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Doubles$DoubleArrayAsList:set(int,java.lang.Double)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.Floats$FloatArrayAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Floats$FloatArrayAsList:set(int,java.lang.Float)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:get(int)": {
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:get(int)": {
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:get(int)": {
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Ints$IntArrayAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Ints$IntArrayAsList:set(int,java.lang.Integer)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.Longs$LongArrayAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Longs$LongArrayAsList:set(int,java.lang.Long)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.Shorts$ShortArrayAsList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.Shorts$ShortArrayAsList:set(int,java.lang.Short)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$LargeLazyStriped:getAt(int)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "firstNonNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$SmallLazyStriped:getAt(int)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "drainQueue": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Any:indexIn(java.lang.CharSequence,int)": {
            "checkPositionIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$None:indexIn(java.lang.CharSequence,int)": {
            "checkPositionIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:indexIn(java.lang.CharSequence,int)": {
            "checkPositionIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractIndexedListIterator:<init>(int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkPositionIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:add(int,java.lang.Object)": {
            "checkPositionIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:addAll(int,java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:reversePosition(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkPositionIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:newDataInput(byte[],int)": {
            "checkPositionIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "newDataInput": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Utf8:isWellFormed(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "isWellFormedSlowPath": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ObjectArrays:toArrayImpl(java.lang.Object[],int,int,java.lang.Object[])": {
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "newArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ObjectArrays:copyAsObjectArray(java.lang.Object[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableList:subList(int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractByteHasher:putBytes(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "update": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractHasher:putBytes(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.HashCode:writeBytesTo(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putBytes(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "update": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.22
            },
            "putByte": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base16Encoding:encodeTo(java.lang.Appendable,byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base64Encoding:encodeTo(java.lang.Appendable,byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "checkPositionIndexes": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.27
            },
            "encode": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:encodeChunkTo(java.lang.Appendable,byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkPositionIndexes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.3
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.3
            },
            "encode": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:encode(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:read(java.io.InputStream,byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.CharSequenceReader:read(char[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkOpen": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.18
            },
            "hasRemaining": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "remaining": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.11
            }
        }
    },
    {
        "com.google.common.io.CharStreams$NullWriter:write(char[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams$NullWriter:write(java.lang.String,int,int)": {
            "checkPositionIndexes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharStreams$NullWriter:append(java.lang.CharSequence,int,int)": {
            "checkPositionIndexes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans$BooleanArrayAsList:subList(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:reverse(boolean[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Bytes$ByteArrayAsList:subList(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:reverse(byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Chars$CharArrayAsList:subList(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Chars:reverse(char[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Doubles$DoubleArrayAsList:subList(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:reverse(double[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Floats$FloatArrayAsList:subList(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Floats:reverse(float[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:subArray(int,int)": {
            "length": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.57
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:subArray(int,int)": {
            "length": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.57
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:subArray(int,int)": {
            "length": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.57
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Ints$IntArrayAsList:subList(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Ints:reverse(int[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Longs$LongArrayAsList:subList(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Longs:reverse(long[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Shorts$ShortArrayAsList:subList(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:reverse(short[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:sort(byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkPositionIndexes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.32
            },
            "flip": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:sortDescending(byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:sort(int[],int,int)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkPositionIndexes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.31
            },
            "flip": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:sortDescending(int[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:sort(long[],int,int)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkPositionIndexes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.31
            },
            "flip": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:sortDescending(long[],int,int)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$Values:remove(java.lang.Object)": {
            "equalTo": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "valuePredicateOnEntries": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "removeFromColumnIf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.31
            }
        }
    },
    {
        "com.google.common.reflect.Types:filterUpperBounds(java.lang.Iterable)": {
            "equalTo": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "not": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "filter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Collections2:filter(java.util.Collection,com.google.common.base.Predicate)": {
            "createCombined": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap:createKeys()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Splitter:on(char)": {
            "is": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "on": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:<init>(com.google.common.cache.LocalCache$ValueReference)": {
            "create": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.2
            },
            "createUnstarted": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "unset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "createStarted": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.base.internal.Finalizer:<init>(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache:<init>(com.google.common.cache.LoadingCache)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$ManualSerializationProxy:<init>(com.google.common.cache.LocalCache)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multisets$UnmodifiableMultiset:<init>(com.google.common.collect.Multiset)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EvictingQueue:<init>(int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ForwardingDeque:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingQueue:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableEntrySet:<init>(java.util.Set)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:<init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableMap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:<init>(java.util.NavigableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:<init>(java.util.NavigableMap,com.google.common.collect.Maps$UnmodifiableNavigableMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableBiMap:inverse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:unmodifiableBiMap(com.google.common.collect.BiMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:create(java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.ImmutableTypeToInstanceMap:of()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry:transformEntries(java.util.Iterator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSetMultimap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableListMultimap:<init>(com.google.common.collect.ListMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableSetMultimap:<init>(com.google.common.collect.SetMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:unmodifiableMultimap(com.google.common.collect.Multimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableRowSortedMap:<init>(com.google.common.collect.RowSortedTable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables:unmodifiableTable(com.google.common.collect.Table)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture:<init>(com.google.common.util.concurrent.ListenableFuture)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter:<init>(java.util.concurrent.Future)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.JdkFutureAdapters:listenInPoolThread(java.util.concurrent.Future,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:getIfPresent(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:get(java.lang.Object,java.util.concurrent.Callable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:getAllPresent(java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:put(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:putAll(java.util.Map)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:invalidate(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:invalidateAll(java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:invalidateAll()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:size()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:stats()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:asMap()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.ForwardingCache:cleanUp()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm:readResolve()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:iterator()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:copyIntoArray(java.lang.Object[],int)": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:hashCode()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "hashCodeImpl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:toString()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$AbstractFilteredMap:remove(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$2:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$4:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$3:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$6:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$8:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntryFactory$7:newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.ReferenceEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$CallbackListener:<init>(java.util.concurrent.Future,com.google.common.util.concurrent.FutureCallback)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$AccessQueue:poll()": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WriteQueue:poll()": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:createSegment(int,long,com.google.common.cache.AbstractCache$StatsCounter)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:waitForLoadingValue(com.google.common.cache.ReferenceEntry,java.lang.Object,com.google.common.cache.LocalCache$ValueReference)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.07
            },
            "recordRead": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:setValue(com.google.common.cache.ReferenceEntry,java.lang.Object,java.lang.Object,long)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "recordWrite": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:size()": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Lists$OnePlusArrayList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Lists$TwoPlusArrayList:get(int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:edgeCount()": {
            "degree": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:inDegree(java.lang.Object)": {
            "degree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph:outDegree(java.lang.Object)": {
            "degree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:degree(java.lang.Object)": {
            "degree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:degree(java.lang.Object)": {
            "degree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:toByteArray(java.io.InputStream)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toByteArrayInternal": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:toByteArray(java.io.InputStream,long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toByteArrayInternal": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:<init>(java.util.Map,java.util.Map)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "setDelegates": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:<init>(java.util.Comparator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "all": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "successor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:readObject(java.io.ObjectInputStream)": {
            "getFieldSetter": {
                "count_score": 0.36,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.11
            },
            "set": {
                "count_score": 0.36,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.81
            },
            "all": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.53
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.2
            },
            "successor": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "populateMultiset": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "comparator": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "upTo": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "intersect": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.29,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "comparator": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "downTo": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "intersect": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.29,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:put(java.lang.Object,java.lang.Object)": {
            "putInBothMaps": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:forcePut(java.lang.Object,java.lang.Object)": {
            "putInBothMaps": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:remove(java.lang.Object)": {
            "remove": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:remove(java.lang.Object)": {
            "remove": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Collections2$PermutationCollection:iterator()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:pollLastEntry()": {
            "descendingMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "pollAsMapEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:descendingKeySet()": {
            "descendingMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:subMap(java.lang.Object,java.lang.Object)": {
            "subMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:headMap(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:tailMap(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:keySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractListMultimap:removeAll(java.lang.Object)": {
            "removeAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "removeAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            },
            "getOrCreateCollection": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "unmodifiableCollectionSubclass": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.AbstractSetMultimap:removeAll(java.lang.Object)": {
            "removeAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:descendingIterator()": {
            "descendingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:headSet(java.lang.Object)": {
            "headSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:subSet(java.lang.Object,java.lang.Object)": {
            "subSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:tailSet(java.lang.Object)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:hasNext()": {
            "validateIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:next()": {
            "validateIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:getDelegateIterator()": {
            "validateIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:addAll(java.util.Collection)": {
            "size": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "addToMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:clear()": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "removeIfEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:removeAll(java.util.Collection)": {
            "size": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "removeIfEmpty": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:retainAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "removeIfEmpty": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.09
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:pollLast()": {
            "descendingIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "pollNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedSetMultimap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultimap$Values:spliterator()": {
            "valueSpliterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:setCount(java.lang.Object,int)": {
            "setCount": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:setCount(java.lang.Object,int)": {
            "setCount": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardToString()": {
            "toStringImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardToString()": {
            "toStringImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:toString()": {
            "toStringImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset$EntrySet:snapshot()": {
            "newArrayListWithExpectedSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:<init>(int)": {
            "newHashMapWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Platform:newHashMapWithExpectedSize(int)": {
            "newHashMapWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs:hasCycle(com.google.common.graph.Graph)": {
            "newHashMapWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable$Factory:get()": {
            "newLinkedHashMapWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:create(int,int)": {
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "newLinkedHashMapWithExpectedSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:<init>(int)": {
            "newLinkedHashMapWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Platform:newLinkedHashMapWithExpectedSize(int)": {
            "newLinkedHashMapWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ElementOrder:createMap(int)": {
            "newHashMapWithExpectedSize": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "newLinkedHashMapWithExpectedSize": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "comparator": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "newTreeMap": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.52
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl:<init>(com.google.common.collect.ImmutableSet$SetBuilderImpl)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "newHashSetWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Maps$EntrySet:retainAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "retainAll": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "newHashSetWithExpectedSize": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.2,
                "total_score": 0.29
            },
            "contains": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Platform:newHashSetWithExpectedSize(int)": {
            "newHashSetWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.EndpointPairIterator$Undirected:<init>(com.google.common.graph.BaseGraph)": {
            "newHashSetWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Platform:newLinkedHashSetWithExpectedSize(int)": {
            "newLinkedHashSetWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:<init>(com.google.common.collect.ImmutableCollection)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "enumKeys": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "linkedHashSetValues": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "newIdentityHashMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:pollFirstEntry()": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedMultiset:pollLastEntry()": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:standardFirstEntry()": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:standardLastEntry()": {
            "descendingMultiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "immutableEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:standardPollFirstEntry()": {
            "immutableEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMultiset:standardPollLastEntry()": {
            "descendingMultiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "immutableEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Keys:getEntry(int)": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "immutableEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:getEntry(int)": {
            "getCount": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "immutableEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:toString()": {
            "getElement": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getCount": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "immutableEntry": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.71
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:setCount(java.lang.Object,int,int)": {
            "setCount": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$PowerSet:equals(java.lang.Object)": {
            "keySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "equals": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:entrySet()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:entrySet()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumMultiset:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:snapshot()": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "newArrayListWithExpectedSize": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "entrySet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:floor(java.lang.Object)": {
            "ceiling": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:lower(java.lang.Object)": {
            "higher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:create(com.google.common.collect.RangeSet)": {
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:create(java.lang.Iterable)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:<init>(java.util.NavigableMap)": {
            "all": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:asMap()": {
            "asMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable$CellSet:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable$Values:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractTable$Values:iterator()": {
            "valuesIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:cellSet()": {
            "cellSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:containsValue(java.lang.Object)": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:values()": {
            "values": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:onKeys()": {
            "keyFunction": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "onResultOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Builder:ordering()": {
            "from": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.NaturalOrdering:nullsFirst()": {
            "nullsFirst": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.NullsLastOrdering:nullsFirst()": {
            "nullsFirst": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.NaturalOrdering:nullsLast()": {
            "nullsLast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.NullsFirstOrdering:nullsLast()": {
            "nullsLast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:<init>(com.google.common.collect.ImmutableSortedSet)": {
            "comparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.21
            },
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.42
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.DescendingMultiset:comparator()": {
            "from": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.GeneralRange:reverse()": {
            "from": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.26
            },
            "reverse": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getUpperEndpoint": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.13
            },
            "getUpperBoundType": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getLowerEndpoint": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.13
            },
            "getLowerBoundType": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:reverse(java.util.Comparator)": {
            "from": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:<init>(com.google.common.collect.MinMaxPriorityQueue$Builder,int)": {
            "reverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.NullsFirstOrdering:reverse()": {
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "nullsLast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.NullsLastOrdering:reverse()": {
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "nullsFirst": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$DescendingSet:reverse(java.util.Comparator)": {
            "from": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$TypeCollector:collectTypes(java.lang.Iterable)": {
            "newHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.18
            },
            "collectTypes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "natural": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "reverse": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.76,
                "total_score": 0.68
            },
            "sortKeysByValue": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:cellOf(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "immutableCell": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$CellIterator:next()": {
            "immutableCell": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:elementSet()": {
            "elementSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:put(java.lang.Object,java.lang.Object)": {
            "ensureCapacity": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "entryOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "entryOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableBiMapEntry:<init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableMapEntry,com.google.common.collect.ImmutableMapEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:fromEntryArrayCheckingBucketOverflow(int,java.util.Map$Entry[],boolean)": {
            "createEntryArray": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.57
            },
            "closedTableSize": {
                "count_score": 0.22,
                "dataflow_score": 0.5,
                "indegree_score": 0.73,
                "total_score": 0.51
            },
            "checkEntryNotNull": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "smear": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.41
            },
            "checkNoConflictInKeyBucket": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.16
            },
            "makeImmutable": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "removeDuplicates": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:makeImmutable(java.util.Map$Entry)": {
            "makeImmutable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:put(java.util.Map$Entry)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:putAll(java.lang.Iterable)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:put(java.util.Map$Entry)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators$FlatMapSpliteratorOfDouble:trySplit()": {
            "trySplit": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectSpliterators$FlatMapSpliteratorOfLong:trySplit()": {
            "trySplit": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multiset:spliterator()": {
            "spliteratorImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:<init>(java.util.NavigableSet,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredSortedSet:subSet(java.lang.Object,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredSortedSet:headSet(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredSortedSet:tailSet(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets:filter(java.util.SortedSet,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.19
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$MapEntry:getValue()": {
            "delegateOrNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.47
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "updateLastKnownIndex": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "unsafeNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:firstEntryIndex()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:trimToSize()": {
            "needsAllocArrays": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.32
            },
            "delegateOrNull": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "size": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.42,
                "total_score": 0.35
            },
            "createHashFloodingResistantDelegate": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "requireEntries": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.28
            },
            "resizeEntries": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "tableSize": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.27,
                "total_score": 0.29
            },
            "hashTableMask": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.35,
                "total_score": 0.32
            },
            "resizeTable": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:trimToSize()": {
            "needsAllocArrays": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.37
            },
            "delegateOrNull": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "size": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.51,
                "total_score": 0.39
            },
            "createHashFloodingResistantDelegate": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "requireEntries": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.39
            },
            "resizeEntries": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.12
            },
            "tableSize": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.39,
                "total_score": 0.34
            },
            "hashTableMask": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.51,
                "total_score": 0.39
            },
            "resizeTable": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:firstEntryIndex()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:allocArrays()": {
            "allocArrays": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:allocArrays()": {
            "allocArrays": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:setSucceeds(int,int)": {
            "setSuccessor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "setPredecessor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:insertEntry(int,java.lang.Object,int,int)": {
            "insertEntry": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "setSucceeds": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet$SerializedForm:readResolve()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet$SerializedForm:readResolve()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EmptyContiguousSet:createDescendingSet()": {
            "natural": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.62
            },
            "emptySet": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:emptySet(java.util.Comparator)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "emptySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:emptyMap(java.util.Comparator)": {
            "natural": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.29
            },
            "emptySet": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:<init>(java.util.Comparator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "emptySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Cut$BelowAll:canonical(com.google.common.collect.DiscreteDomain)": {
            "minValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "belowValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:getEntry(java.lang.Comparable)": {
            "belowValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Range:isEmpty()": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:get(java.lang.Object)": {
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "equals": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Range:create(com.google.common.collect.Cut,com.google.common.collect.Cut)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:encloses(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "encloses": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:rangeEnclosing(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "encloses": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardAdd(java.lang.Object)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardIterator()": {
            "listIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingList:standardListIterator()": {
            "listIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:asMap()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:clear()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:containsEntry(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:containsKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:containsValue(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:entries()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:isEmpty()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:keys()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:keySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:put(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:putAll(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:putAll(com.google.common.collect.Multimap)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:remove(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:removeAll(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:size()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:values()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultimap:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:count(java.lang.Object)": {
            "get": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.42
            },
            "contains": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.4
            },
            "comparator": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "count": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:firstNode()": {
            "get": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.1
            },
            "hasLowerBound": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "getLowerEndpoint": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.19,
                "total_score": 0.4
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "comparator": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.22
            },
            "getLowerBoundType": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.07
            },
            "getElement": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "contains": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:lastNode()": {
            "get": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.1
            },
            "hasUpperBound": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "getUpperEndpoint": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.19,
                "total_score": 0.4
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "comparator": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.22
            },
            "getUpperBoundType": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.07
            },
            "getElement": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "contains": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:create(com.google.common.collect.Table)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable:create()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable:create(java.util.Comparator,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:create(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:containsKey(java.lang.Object)": {
            "delegateOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "indexOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:get(java.lang.Object)": {
            "delegateOrNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "indexOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "accessEntry": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "value": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.42,
                "total_score": 0.39
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:moveLastEntry(int,int)": {
            "moveLastEntry": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            },
            "getPredecessor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "getSuccessor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "setSucceeds": {
                "count_score": 0.3,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.59
            },
            "requirePredecessors": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "requireSuccessors": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$EntrySetView:remove(java.lang.Object)": {
            "delegateOrNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "needsAllocArrays": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.32
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "moveLastEntry": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "incrementModCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:removeHelper(java.lang.Object)": {
            "needsAllocArrays": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "hashTableMask": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.35,
                "total_score": 0.27
            },
            "requireTable": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.47,
                "total_score": 0.37
            },
            "requireEntries": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.82,
                "total_score": 0.51
            },
            "requireKeys": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.58,
                "total_score": 0.41
            },
            "remove": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "value": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.47,
                "total_score": 0.42
            },
            "moveLastEntry": {
                "count_score": 0.11,
                "dataflow_score": 0.83,
                "indegree_score": 0.0,
                "total_score": 0.28
            },
            "incrementModCount": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:remove(java.lang.Object)": {
            "needsAllocArrays": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.37
            },
            "delegateOrNull": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "hashTableMask": {
                "count_score": 0.1,
                "dataflow_score": 0.4,
                "indegree_score": 0.51,
                "total_score": 0.35
            },
            "requireTable": {
                "count_score": 0.1,
                "dataflow_score": 0.4,
                "indegree_score": 0.61,
                "total_score": 0.4
            },
            "requireEntries": {
                "count_score": 0.1,
                "dataflow_score": 0.4,
                "indegree_score": 0.9,
                "total_score": 0.51
            },
            "requireElements": {
                "count_score": 0.1,
                "dataflow_score": 0.4,
                "indegree_score": 0.9,
                "total_score": 0.51
            },
            "remove": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.45
            },
            "moveLastEntry": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "incrementModCount": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:forcePut(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap$Builder:<init>()": {
            "builder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:<init>()": {
            "builder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$SerializedForm:makeBuilder(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:naturalOrder()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:orderedBy(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:reverseOrder()": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:of(java.lang.Object,java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:inverse()": {
            "inverse": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:combine(com.google.common.collect.ImmutableMap$Builder)": {
            "combine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$Builder:combine(com.google.common.collect.ImmutableMap$Builder)": {
            "combine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:orderedBy(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:reverseOrder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:naturalOrder()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:reverse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists:charactersOf(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:createValues()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:of(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:entries()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:of(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:iterator()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Indexed:iterator()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$1EntrySet:iterator()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.IndexedImmutableSet:iterator()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet:iterator()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:iterator()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$CartesianSet:hashCode()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.MediaType:charset()": {
            "absent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "get": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.reflect.Parameter:getAnnotation(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Types$WildcardTypeImpl:toString()": {
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "typeName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:stopAsync()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:isHealthy()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:builderWithExpectedSize(int)": {
            "checkNonnegative": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:copy()": {
            "copy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedAsList:subListUnchecked(int,int)": {
            "comparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedAsList:spliterator()": {
            "comparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "indexed": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedAsList:lastIndexOf(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedAsList:contains(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:hashCode()": {
            "asMapOfRanges": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "hashCode": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:equals(java.lang.Object)": {
            "asMapOfRanges": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "equals": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:writeReplace()": {
            "asMapOfRanges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:putAll(java.lang.Object,java.lang.Iterable)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:putAll(com.google.common.collect.Multimap)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:combine(com.google.common.collect.ImmutableMultimap$Builder)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:putAll(java.lang.Object,java.lang.Iterable)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:throwDeleteFailed(java.nio.file.Path,java.util.Collection)": {
            "pathNotFound": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.SimpleTimeLimiter:callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "checkPositiveTimeout": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.17
            },
            "getUninterruptibly": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.14
            },
            "throwCause": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Iterators:concat(java.util.Iterator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:readObject(java.io.ObjectInputStream)": {
            "newLinkedHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:lastIndexOf(java.lang.Object)": {
            "indexOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "reverseIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:contains(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:indexOf(java.lang.Object)": {
            "lastIndexOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "reverseIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$HashIterator:nextEntry()": {
            "advance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:newSegment(com.google.common.collect.MapMakerInternalMap,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:getLiveEntry(java.lang.Object,int)": {
            "getEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:getEntry(java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.88,
                "total_score": 0.75
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getEntry": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:put(java.lang.Object,int,java.lang.Object,boolean)": {
            "preWriteCleanup": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.29
            },
            "expand": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "equivalent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:replace(java.lang.Object,int,java.lang.Object,java.lang.Object)": {
            "preWriteCleanup": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "equivalent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "valueEquivalence": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:replace(java.lang.Object,int,java.lang.Object)": {
            "preWriteCleanup": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equivalent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:remove(java.lang.Object,int)": {
            "preWriteCleanup": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equivalent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:remove(java.lang.Object,int,java.lang.Object)": {
            "preWriteCleanup": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "equivalent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "valueEquivalence": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$CleanupMapTask:run()": {
            "runCleanup": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:postReadCleanup()": {
            "runCleanup": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$EntrySet:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$KeySet:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Values:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:standardContainsKey(java.lang.Object)": {
            "tailMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "comparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "unsafeCompare": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedMap:standardSubMap(java.lang.Object,java.lang.Object)": {
            "comparator": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "unsafeCompare": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.46
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "tailMap": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:size()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:isEmpty()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:remove(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:clear()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:containsKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:containsValue(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:put(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:putAll(java.util.Map)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:keySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:values()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:entrySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:difference(java.util.Map,java.util.Map,com.google.common.base.Equivalence)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "newLinkedHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.09
            },
            "doDifference": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:difference(java.util.SortedMap,java.util.Map)": {
            "checkNotNull": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "orNaturalOrder": {
                "count_score": 0.11,
                "dataflow_score": 0.8,
                "indegree_score": 0.0,
                "total_score": 0.27
            },
            "newTreeMap": {
                "count_score": 0.44,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.47
            },
            "equals": {
                "count_score": 0.11,
                "dataflow_score": 0.2,
                "indegree_score": 0.24,
                "total_score": 0.19
            },
            "doDifference": {
                "count_score": 0.11,
                "dataflow_score": 0.4,
                "indegree_score": 0.1,
                "total_score": 0.19
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.eventbus.AsyncEventBus:<init>(java.lang.String,java.util.concurrent.Executor)": {
            "legacyAsync": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.eventbus.AsyncEventBus:<init>(java.util.concurrent.Executor,com.google.common.eventbus.SubscriberExceptionHandler)": {
            "legacyAsync": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.eventbus.AsyncEventBus:<init>(java.util.concurrent.Executor)": {
            "legacyAsync": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:<init>(java.lang.String)": {
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "perThreadDispatchQueue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:<init>(com.google.common.eventbus.SubscriberExceptionHandler)": {
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "perThreadDispatchQueue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:findMinChild(int)": {
            "getLeftChildIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "findMin": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:findMinGrandChild(int)": {
            "getLeftChildIndex": {
                "count_score": 0.67,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.9
            },
            "findMin": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:peekLast()": {
            "getMaxElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "elementData": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:bubbleUp(int,java.lang.Object)": {
            "crossOverUp": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "bubbleUpAlternatingLevels": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:valueComparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardContains(java.lang.Object)": {
            "count": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardAdd(java.lang.Object)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardRemove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardClear()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "clear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardCount(java.lang.Object)": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardHashCode()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardToString()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableCollection:toArray()": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:toArray(java.lang.Object[])": {
            "toArrayImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardToArray(java.lang.Object[])": {
            "toArrayImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapEntries:toArray(java.lang.Object[])": {
            "toArrayImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ReverseOrdering:max(java.lang.Iterable)": {
            "min": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ReverseOrdering:min(java.lang.Iterable)": {
            "max": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$6:descendingSet()": {
            "descendingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardPollLast()": {
            "descendingIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "pollNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardLast()": {
            "descendingIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardSubSet(java.lang.Object,java.lang.Object)": {
            "subSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$6:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "subSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardLower(java.lang.Object)": {
            "headSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardFloor(java.lang.Object)": {
            "headSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardHeadSet(java.lang.Object)": {
            "headSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$6:headSet(java.lang.Object,boolean)": {
            "headSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardCeiling(java.lang.Object)": {
            "tailSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardHigher(java.lang.Object)": {
            "tailSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardSubSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:standardTailSet(java.lang.Object)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$6:tailSet(java.lang.Object,boolean)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:comparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:first()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:headSet(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:last()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:subSet(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:tailSet(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedMultisets$NavigableElementSet:descendingIterator()": {
            "descendingSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:remove(java.lang.Object)": {
            "updateBackingRowMapField": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "safeRemove": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.22
            },
            "maintainEmptyInvariant": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row:clear()": {
            "updateBackingRowMapField": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "maintainEmptyInvariant": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.StandardRowSortedTable$RowSortedMap:headMap(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "rowMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.StandardRowSortedTable$RowSortedMap:subMap(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "rowMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.13
            }
        }
    },
    {
        "com.google.common.collect.StandardRowSortedTable$RowSortedMap:tailMap(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "rowMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.StandardRowSortedTable:rowKeySet()": {
            "rowMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable:rowMap()": {
            "rowMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:rowKeySet()": {
            "rowKeySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:navigableSet(java.util.NavigableSet,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:typePreservingSet(java.util.Set,java.lang.Object)": {
            "sortedSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMapValues:iterator()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:add(int,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:addAll(int,java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:get(int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:indexOf(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:lastIndexOf(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:listIterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:listIterator(int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:remove(int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:set(int,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:replaceAll(java.util.function.UnaryOperator)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:sort(java.util.Comparator)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:subList(int,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedList:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:count(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:add(java.lang.Object,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:remove(java.lang.Object,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:setCount(java.lang.Object,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:setCount(java.lang.Object,int,int)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:elementSet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:entrySet()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultiset:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedQueue:element()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedQueue:offer(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedQueue:peek()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedQueue:poll()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedQueue:remove()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSet:equals(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSet:hashCode()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSet:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedBiMap:values()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedBiMap:forcePut(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedAsMap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedMap:comparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedMap:firstKey()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedMap:lastKey()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedListMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedListMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSetMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSetMultimap:removeAll(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSetMultimap:entries()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Queues:synchronizedDeque(java.util.Deque)": {
            "deque": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:typePreservingCollection(java.util.Collection,java.lang.Object)": {
            "sortedSet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.2
            },
            "set": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "list": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "collection": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:rangeContains(java.lang.Object)": {
            "compare": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:rotateLeft()": {
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "recompute": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "recomputeHeight": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:rotateRight()": {
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "recompute": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "recomputeHeight": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:aggregateForEntries(com.google.common.collect.TreeMultiset$Aggregate)": {
            "get": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "hasLowerBound": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.4
            },
            "aggregateBelowRange": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "hasUpperBound": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.4
            },
            "aggregateAboveRange": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.escape.ArrayBasedCharEscaper:<init>(java.util.Map,char,char)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.escape.CharEscaperBuilder:toEscaper()": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.escape.ArrayBasedUnicodeEscaper:<init>(java.util.Map,int,int,java.lang.String)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:checkedConnections(java.lang.Object)": {
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:checkedConnections(java.lang.Object)": {
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:hasEdgeConnectingInternal(java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:edgeValueOrDefaultInternal(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Traverser$2:newTraversal()": {
            "inTree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:putBytesInternal(java.nio.ByteBuffer)": {
            "munchIfFull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "munch": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:putByte(byte)": {
            "munchIfFull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:putShort(short)": {
            "munchIfFull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:putChar(char)": {
            "munchIfFull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:putInt(int)": {
            "munchIfFull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:putLong(long)": {
            "munchIfFull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.FarmHashFingerprint64:fingerprint(byte[],int,int)": {
            "hashLength0to16": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "hashLength17to32": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "hashLength33To64": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "hashLength65Plus": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.hash.Fingerprint2011:fingerprint(byte[],int,int)": {
            "murmurHash64WithSeed": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "hashLength33To64": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "fullFingerprint": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "load64": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "hash128to64": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.3,
                "total_score": 0.47
            }
        }
    },
    {
        "com.google.common.hash.HashCode:fromBytes(byte[])": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromBytesNoCopy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.HashCode:fromString(java.lang.String)": {
            "checkArgument": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "decode": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "fromBytesNoCopy": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.27
            }
        }
    },
    {
        "com.google.common.hash.Hashing:combineOrdered(java.lang.Iterable)": {
            "checkArgument": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "fromBytesNoCopy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.hash.Hashing:combineUnordered(java.lang.Iterable)": {
            "checkArgument": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "fromBytesNoCopy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.hash.MacHashFunction$MacHasher:hash()": {
            "checkNotDone": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "fromBytesNoCopy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:hash()": {
            "checkNotDone": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "fromBytesNoCopy": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:makeHash()": {
            "fmix64": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "fromBytesNoCopy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.hash.Crc32cHashFunction$Crc32cHasher:makeHash()": {
            "processRemaining": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "fromInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction:fmix(int,int)": {
            "fromInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.ChecksumHashFunction$ChecksumHasher:hash()": {
            "fromInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "fromLong": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.hash.SipHashFunction$SipHasher:makeHash()": {
            "processM": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "sipRound": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "fromLong": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.hash.Hashing:hmacMd5(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "hmacMd5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.Hashing:hmacSha1(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "hmacSha1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.Hashing:hmacSha256(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "hmacSha256": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.hash.Hashing:hmacSha512(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "hmacSha512": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.ByteSource$EmptyByteSource:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteSource:wrap(byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base16Encoding:newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base64Encoding:newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:omitPadding()": {
            "newInstance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:withPadChar(char)": {
            "newInstance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource$EmptyCharSource:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.CharSource:wrap(java.lang.CharSequence)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.CharSource$AsByteSource:openStream()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.CharSink:writeLines(java.lang.Iterable)": {
            "writeLines": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSink:writeLines(java.util.stream.Stream)": {
            "writeLines": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.FileBackedOutputStream:write(byte[])": {
            "write": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ReaderInputStream:read(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "drain": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "clear": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.2
            },
            "startDraining": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "readMoreChars": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ConcatenatedByteSource:openStream()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.MultiInputStream:skip(long)": {
            "read": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource$ConcatenatedCharSource:openStream()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists$Partition:get(int)": {
            "size": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkElementIndex": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,long,double,com.google.common.hash.BloomFilter$Strategy)": {
            "checkNotNull": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            },
            "optimalNumOfBits": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:readFrom(java.io.InputStream,com.google.common.hash.Funnel)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toInt": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.15
            },
            "checkedMultiply": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.05
            },
            "putData": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:mean(java.lang.Iterable)": {
            "mean": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:log2(double,java.math.RoundingMode)": {
            "isFinite": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.28
            },
            "checkArgument": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "isNormal": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "isPowerOfTwo": {
                "count_score": 0.44,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.43
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.69,
                "total_score": 0.61
            },
            "scaleNormalize": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:roundIntermediate(double,java.math.RoundingMode)": {
            "isFinite": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.4
            },
            "isMathematicalInteger": {
                "count_score": 0.67,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.5
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:ensureTableCapacity(int)": {
            "chooseTableSize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "rebuildHashTable": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "maxRunBeforeFallback": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:hashFloodingDetected(java.lang.Object[])": {
            "maxRunBeforeFallback": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:offer(java.lang.Object)": {
            "uncheckedCastNullableTToT": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "trim": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:<init>(java.lang.String,char[])": {
            "decodabetFor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:ignoreCase()": {
            "checkState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:growIfNeeded()": {
            "calculateNewCapacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:least(int,java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:greatest(int,java.util.Comparator)": {
            "from": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.49
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$VerticalLinearTransformation:inverse()": {
            "createInverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$LinearTransformationBuilder:and(double,double)": {
            "isFinite": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.28
            },
            "checkArgument": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "withSlope": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.math.PairedStats:leastSquaresFit()": {
            "count": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "forNaN": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "sumOfSquaresOfDeltas": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.11
            },
            "mean": {
                "count_score": 0.27,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.43
            },
            "mapping": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "withSlope": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.07
            },
            "horizontal": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "vertical": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:leastSquaresFit()": {
            "count": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.1
            },
            "checkState": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "forNaN": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "sumOfSquaresOfDeltas": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.11
            },
            "mean": {
                "count_score": 0.27,
                "dataflow_score": 1.0,
                "indegree_score": 0.2,
                "total_score": 0.46
            },
            "mapping": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "withSlope": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.07
            },
            "horizontal": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "vertical": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.math.LinearTransformation$RegularLinearTransformation:inverse()": {
            "createInverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.LongMath:isPrime(long)": {
            "checkNonNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "test": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:log10(java.math.BigInteger,java.math.RoundingMode)": {
            "checkPositive": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.16
            },
            "fitsInLong": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.16
            },
            "log10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "log2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.26
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.math.LongMath:binomial(int,int)": {
            "checkNonNegative": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.47
            },
            "checkArgument": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "log2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.2
            },
            "multiplyFraction": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.math.PairedStats:toString()": {
            "count": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.3
            },
            "toStringHelper": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.43
            },
            "add": {
                "count_score": 0.31,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.5
            },
            "populationCovariance": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "toString": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.math.Stats:meanOf(java.lang.Iterable)": {
            "meanOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:add(double,double)": {
            "add": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "isFinite": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.2
            },
            "count": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "mean": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:addAll(java.lang.Iterable)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:addAll(java.util.Iterator)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:addAll(com.google.common.math.Stats)": {
            "count": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "mean": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.36
            },
            "sumOfSquaresOfDeltas": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.36
            },
            "min": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "max": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "merge": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.54
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:addAll(com.google.common.math.StatsAccumulator)": {
            "count": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "mean": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "sumOfSquaresOfDeltas": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.36
            },
            "min": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "max": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "merge": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.54
            }
        }
    },
    {
        "com.google.common.math.Quantiles:selectInPlace(int,double[],int,int)": {
            "swap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "partition": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(java.util.stream.DoubleStream)": {
            "saturatedCast": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "ensureRoomFor": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.61
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$Builder:addAll(java.lang.Iterable)": {
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:writeReplace()": {
            "trimmed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:contains(java.lang.Object)": {
            "indexOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$Builder:addAll(java.util.stream.IntStream)": {
            "saturatedCast": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "ensureRoomFor": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.61
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$Builder:addAll(java.lang.Iterable)": {
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:writeReplace()": {
            "trimmed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$Builder:addAll(java.util.stream.LongStream)": {
            "saturatedCast": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "ensureRoomFor": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.56
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicDoubleArray:readObject(java.io.ObjectInputStream)": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "add": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "toArray": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$Builder:addAll(java.lang.Iterable)": {
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:writeReplace()": {
            "trimmed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints:tryParse(java.lang.String)": {
            "tryParse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInteger:valueOf(java.lang.String)": {
            "valueOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:dividedBy(com.google.common.primitives.UnsignedLong)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "divide": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "fromLongBits": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.49
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:toString(long,int)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "divide": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.LongMath$MillerRabinTester$2:mulMod(long,long,long)": {
            "remainder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.LongMath$MillerRabinTester$2:squareMod(long,long)": {
            "remainder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:mod(com.google.common.primitives.UnsignedLong)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "remainder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "fromLongBits": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.47
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:valueOf(java.lang.String)": {
            "valueOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:standardEquals(java.lang.Object)": {
            "getKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:standardHashCode()": {
            "getKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMapEntry:standardToString()": {
            "getKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1:setValue(java.lang.Object)": {
            "checkArgument": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "setValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap$1:setValue(java.lang.Object)": {
            "setValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Row$2:setValue(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "setValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:equals(java.lang.Object)": {
            "getOwnerType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equals": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isArray()": {
            "getComponentType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getArraySupertype(java.lang.Class)": {
            "getComponentType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.22
            },
            "newArrayClassOrGenericArrayType": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:get()": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:listeningDecorator(java.util.concurrent.ExecutorService)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:listeningDecorator(java.util.concurrent.ScheduledExecutorService)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "checkArgument": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "newArrayListWithCapacity": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.15
            },
            "newLinkedBlockingQueue": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "submitAndAddQueueListener": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.39
            }
        }
    },
    {
        "com.google.common.util.concurrent.CollectionFuture$ListFuture:<init>(com.google.common.collect.ImmutableCollection,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$FutureCombiner:callAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$FutureCombiner:call(java.util.concurrent.Callable,java.util.concurrent.Executor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:processCompleted(com.google.common.collect.ImmutableCollection)": {
            "collectValueFromNonCancelledFuture": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "releaseResources": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:checkAcquiredLock(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)": {
            "getLockName": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.46
            },
            "checkState": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "getConflictingStackTrace": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "newIdentityHashSet": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "findPathTo": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            }
        }
    },
    {
        "com.google.common.cache.CacheLoader$1:reload(java.lang.Object,java.lang.Object)": {
            "create": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:<init>(com.google.common.util.concurrent.ListenableFuture)": {
            "from": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:offer(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:poll()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:remove()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:peek()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:element()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFuture:cancel(boolean)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFuture:isCancelled()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFuture:isDone()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFuture:get()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingFuture:get(long,java.util.concurrent.TimeUnit)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:statusFuture()": {
            "constant": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "directExecutor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nonCancellationPropagating": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.16
            }
        }
    },
    {
        "com.google.common.util.concurrent.ExecutionSequencer:submitAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "create": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.37
            },
            "nonCancellationPropagating": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "directExecutor": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked:getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator,java.util.concurrent.Future,java.lang.Class)": {
            "newWithCause": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wrapAndThrowExceptionOrError": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked:getChecked(java.util.concurrent.Future,java.lang.Class,long,java.util.concurrent.TimeUnit)": {
            "bestGetCheckedTypeValidator": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "newWithCause": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "wrapAndThrowExceptionOrError": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked:checkExceptionClassValidity(java.lang.Class)": {
            "isCheckedException": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "hasConstructorUsableByGetChecked": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:enqueueStartingEvent()": {
            "enqueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:enqueueRunningEvent()": {
            "enqueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:enqueueStoppingEvent(com.google.common.util.concurrent.Service$State)": {
            "enqueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:enqueueTerminatedEvent(com.google.common.util.concurrent.Service$State)": {
            "enqueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:enqueueFailedEvent(com.google.common.util.concurrent.Service$State,java.lang.Throwable)": {
            "enqueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:enqueueStoppedEvent()": {
            "enqueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:enqueueHealthyEvent()": {
            "enqueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:enqueueFailedEvent(com.google.common.util.concurrent.Service)": {
            "enqueue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:leave()": {
            "signalNextWaiter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:await(com.google.common.util.concurrent.Monitor$Guard,boolean)": {
            "signalNextWaiter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "beginWaitingFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "endWaitingFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:awaitUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,boolean)": {
            "signalNextWaiter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "beginWaitingFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "endWaitingFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:awaitNanos(com.google.common.util.concurrent.Monitor$Guard,long,boolean)": {
            "endWaitingFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "signalNextWaiter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "beginWaitingFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:withTimeout(com.google.common.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:scheduleAsync(com.google.common.util.concurrent.AsyncCallable,java.time.Duration,java.util.concurrent.ScheduledExecutorService)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "scheduleAsync": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Enums:getIfPresent(java.lang.Class,java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "getEnumIfPresent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Iterables:tryFind(java.lang.Iterable,com.google.common.base.Predicate)": {
            "tryFind": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$FilteredCollection:isEmpty()": {
            "any": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:anyMatch(com.google.common.base.Predicate)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "any": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:isEmpty()": {
            "any": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:precomputedPositive(int,java.util.BitSet,java.lang.String)": {
            "none": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "is": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "isEither": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "isSmall": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "from": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.base.Throwables:propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "propagateIfInstanceOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "propagateIfPossible": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.16
            }
        }
    },
    {
        "com.google.common.io.Closer:rethrow(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "propagateIfPossible": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.Closer:rethrow(java.lang.Throwable,java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "propagateIfPossible": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.Closer:close()": {
            "propagateIfPossible": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:newThread(java.lang.String,java.lang.Runnable)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "platformThreadFactory": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:removeCollectedEntry(com.google.common.cache.ReferenceEntry)": {
            "enqueueNotification": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "remove": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterKeys(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)": {
            "unfiltered": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "and": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "keyPredicateOnEntries": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.75,
                "total_score": 0.68
            },
            "filterFiltered": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterEntries(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "filterFiltered": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Parameter:getDeclaredAnnotation(java.lang.Class)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "from": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.24
            },
            "filter": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.16
            },
            "first": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.Iterators:mergeSorted(java.lang.Iterable,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:size()": {
            "entryIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$EntrySet:removeAll(java.util.Collection)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "removeAll": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "removeAllImpl": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.16
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap$AsMap:remove(java.lang.Object)": {
            "newArrayList": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "newLinkedHashSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Iterables:toArray(java.lang.Iterable,java.lang.Object[])": {
            "castOrCopyToCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterables:toArray(java.lang.Iterable)": {
            "castOrCopyToCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "getCopy": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "hasNext": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "next": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "set": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "remove": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "add": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:removeAll(java.lang.Object)": {
            "getCopy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAllNodes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AllEqualOrdering:sortedCopy(java.lang.Iterable)": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$OrderedPermutationIterator:<init>(java.util.List,java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "newArrayList": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Lists:newCopyOnWriteArrayList(java.lang.Iterable)": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:newCopyOnWriteArraySet(java.lang.Iterable)": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SortedLists:binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped:bulkGet(java.lang.Iterable)": {
            "newArrayList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesListMultimap:get(java.lang.Object)": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesListMultimap:removeAll(java.lang.Object)": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesMultimap:get(java.lang.Object)": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesMultimap:removeAll(java.lang.Object)": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:subMap(java.lang.Object,java.lang.Object)": {
            "backingSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:headMap(java.lang.Object)": {
            "backingSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$SortedAsMapView:tailMap(java.lang.Object)": {
            "backingSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:equals(java.lang.Object)": {
            "edgeIncidentNodesMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:hashCode()": {
            "edgeIncidentNodesMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:toString()": {
            "edgeIncidentNodesMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:equals(java.lang.Object)": {
            "edgeValueMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:hashCode()": {
            "edgeValueMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:toString()": {
            "edgeValueMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:navigableKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:navigableKeySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$NavigableAsMapView:descendingEntryIterator()": {
            "descendingMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesSortedMap:headMap(java.lang.Object)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesSortedMap:subMap(java.lang.Object,java.lang.Object)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesSortedMap:tailMap(java.lang.Object)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps:transformValues(java.util.SortedMap,com.google.common.base.Function)": {
            "transformEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableMultimap:asMap()": {
            "transformValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:row(java.lang.Object)": {
            "transformValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:column(java.lang.Object)": {
            "transformValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:rowMap()": {
            "transformValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$TransformedTable:columnMap()": {
            "transformValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:columnMap()": {
            "columnMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "transformValues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableTable:rowMap()": {
            "rowMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "transformValues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:add(java.lang.Object,int)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:add(java.lang.Object,int)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:remove(java.lang.Object,int)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:remove(java.lang.Object,int)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:contains(java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:get(java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:containsMapping(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBasedTable:contains(java.lang.Object,java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column$KeySet:contains(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$Column:containsKey(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:contains(java.lang.Object)": {
            "containsColumn": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:transformValues(com.google.common.collect.ListMultimap,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractMultiset:addAll(java.util.Collection)": {
            "addAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMultiset:standardAddAll(java.util.Collection)": {
            "addAllImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedMultimap:asMap()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedBiMap:inverse()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:<init>(java.util.NavigableMap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:sortedMap(java.util.SortedMap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:row(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:column(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:rowMap()": {
            "delegate": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "transformValues": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.62
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedTable:columnMap()": {
            "delegate": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "transformValues": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.62
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:listMultimap(com.google.common.collect.ListMultimap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:<init>(com.google.common.collect.SortedSetMultimap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:setMultimap(com.google.common.collect.SetMultimap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:synchronizedMultimap(com.google.common.collect.Multimap)": {
            "multimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables:synchronizedTable(com.google.common.collect.Table)": {
            "table": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.escape.UnicodeEscaper:escape(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nextEscapeIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.44
            },
            "escapeSlow": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableGraph:removeNode(java.lang.Object)": {
            "removeNode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableGraph:removeEdge(java.lang.Object,java.lang.Object)": {
            "removeEdge": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:removeEdge(com.google.common.graph.EndpointPair)": {
            "nodeU": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nodeV": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.49
            },
            "removeEdge": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:incidentNodes(java.lang.Object)": {
            "checkedReferenceNode": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "get": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.37
            }
        }
    },
    {
        "com.google.common.io.CharStreams:toStringBuilder(java.lang.Readable)": {
            "copyReaderToBuilder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "copy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeMappingIntrospector:visitParameterizedType(java.lang.reflect.ParameterizedType)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.14
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:catching(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:cancel(boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "complete": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:set(java.lang.Object)": {
            "complete": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:setException(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "complete": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:setFuture(com.google.common.util.concurrent.ListenableFuture)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getFutureValue": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "complete": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:incrementAndGet(java.lang.Object)": {
            "addAndGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:decrementAndGet(java.lang.Object)": {
            "addAndGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:getAndIncrement(java.lang.Object)": {
            "getAndAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:getAndDecrement(java.lang.Object)": {
            "getAndAdd": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AtomicLongMap:create(java.util.Map)": {
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "putAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:incidentEdgeOrder()": {
            "incidentEdgeOrder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:incidentEdgeOrder()": {
            "incidentEdgeOrder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:<init>(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:<init>(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "insertion": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "absent": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:<init>(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor)": {
            "addListener": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor)": {
            "addListener": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Converter:apply(java.lang.Object)": {
            "convert": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:createWithExpectedSize(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:<init>(int,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:createWithExpectedSize(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:newListMultimap(java.util.Map,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedKeySortedSetMultimap:<init>(java.util.SortedMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$CustomSortedSetMultimap:<init>(java.util.Map,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:newSetMultimap(java.util.Map,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableMultiset(java.util.function.Function,java.util.function.ToIntFunction)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "create": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:<init>()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:spliterator()": {
            "spliterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$1EntrySet:spliterator()": {
            "spliterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:spliterator()": {
            "spliterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Crc32cHashFunction:newHasher()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_128HashFunction:newHasher()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.SipHashFunction:newHasher()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.math.Stats:toString()": {
            "count": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.23
            },
            "toStringHelper": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.42
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.51
            },
            "populationStandardDeviation": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "toString": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.base.Converter:andThen(com.google.common.base.Converter)": {
            "doAndThen": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$CartesianSet:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$TypeVariableImpl:equals(java.lang.Object)": {
            "getName": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "getGenericDeclaration": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "equals": {
                "count_score": 0.56,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.87
            }
        }
    },
    {
        "com.google.common.reflect.Types$WildcardTypeImpl:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:appendTo(java.lang.StringBuilder,java.lang.Object[])": {
            "appendTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.Joiner:join(java.lang.Iterable)": {
            "join": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:create(com.google.common.collect.MapMaker)": {
            "getKeyStrength": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "getValueStrength": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "instance": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:createWithDummyValues(com.google.common.collect.MapMaker)": {
            "getKeyStrength": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "getValueStrength": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "instance": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:concat(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:toString()": {
            "isCancelled": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            },
            "isDone": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "addDoneString": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.25
            },
            "addPendingString": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:get(int)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:of()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:newConnections()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:acquire()": {
            "acquire": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enter(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "enter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterIf(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)": {
            "enter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:from(com.google.common.cache.CacheBuilderSpec)": {
            "toCacheBuilder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "lenientParsing": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Interners:newStrongInterner()": {
            "newBuilder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "strong": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.Interners:newWeakInterner()": {
            "newBuilder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "weak": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$ArrayMap:entrySpliterator()": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.68
            },
            "getEntry": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "indexed": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$Column:getValue(int)": {
            "at": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$Row:getValue(int)": {
            "at": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:get(java.lang.Object,java.lang.Object)": {
            "at": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:getValue(int)": {
            "at": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$Column:setValue(int,java.lang.Object)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable$Row:setValue(int,java.lang.Object)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:put(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "checkArgument": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.25
            },
            "set": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:erase(java.lang.Object,java.lang.Object)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:remove(int)": {
            "reverseIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:set(int,java.lang.Object)": {
            "reverseIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:get(int)": {
            "reverseIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:get(int)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:equals(java.lang.Object)": {
            "length": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "get": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "areEqual": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:get(int)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:equals(java.lang.Object)": {
            "length": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "get": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:get(int)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:equals(java.lang.Object)": {
            "length": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "get": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.base.CaseFormat:convert(com.google.common.base.CaseFormat,java.lang.String)": {
            "indexIn": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "normalizeFirstWord": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:indexIn(java.lang.CharSequence)": {
            "indexIn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType$Tokenizer:consumeTokenIfPresent(com.google.common.base.CharMatcher)": {
            "hasMore": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.08,
                "total_score": 0.45
            },
            "checkState": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "negate": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.16
            },
            "indexIn": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.AbstractIndexedListIterator:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:add(java.lang.Object)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap$AddRejectingList:addAll(java.util.Collection)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:add(int,java.lang.Object)": {
            "reversePosition": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:listIterator(int)": {
            "reversePosition": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:getTeredoInfo(java.net.Inet6Address)": {
            "isTeredoAddress": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.35,
                "total_score": 0.33
            },
            "toAddrString": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.46,
                "total_score": 0.38
            },
            "checkArgument": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "getInet4Address": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.27
            },
            "newDataInput": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Utf8:isWellFormed(byte[])": {
            "isWellFormed": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$KeySetView:toArray(java.lang.Object[])": {
            "needsAllocArrays": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.37
            },
            "delegateOrNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "toArrayImpl": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$ValuesView:toArray(java.lang.Object[])": {
            "needsAllocArrays": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.37
            },
            "delegateOrNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "toArrayImpl": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:toArray(java.lang.Object[])": {
            "needsAllocArrays": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "delegateOrNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "requireElements": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.72
            },
            "toArrayImpl": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$KeySetView:toArray()": {
            "needsAllocArrays": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.39
            },
            "delegateOrNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "copyAsObjectArray": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$ValuesView:toArray()": {
            "needsAllocArrays": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.39
            },
            "delegateOrNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "copyAsObjectArray": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.hash.AbstractHasher:putBytes(byte[])": {
            "putBytes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractHasher:putBytes(java.nio.ByteBuffer)": {
            "putBytes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "position": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.hash.Hasher:putBytes(byte[],int,int)": {
            "putBytes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.Hashing$ConcatenatedHashFunction:makeHash(com.google.common.hash.Hasher[])": {
            "bits": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "writeBytesTo": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "fromBytesNoCopy": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:encodeTo(java.lang.Appendable,byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.35
            },
            "encodeChunkTo": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding:encode(byte[])": {
            "encode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ByteArrayByteSource:toString()": {
            "base16": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "encode": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "truncate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:readFully(java.io.InputStream,byte[],int,int)": {
            "read": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:reverse(boolean[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:rotate(boolean[],int,int,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.29
            },
            "reverse": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:reverse(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:rotate(byte[],int,int,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "reverse": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.primitives.SignedBytes:sortDescending(byte[],int,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.Chars:sortDescending(char[],int,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.Chars:reverse(char[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Chars:rotate(char[],int,int,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "reverse": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:sortDescending(double[],int,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:reverse(double[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:rotate(double[],int,int,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "reverse": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.primitives.Floats:sortDescending(float[],int,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.Floats:reverse(float[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Floats:rotate(float[],int,int,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "reverse": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:subList(int,int)": {
            "subArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:subList(int,int)": {
            "subArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:subList(int,int)": {
            "subArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Ints:sortDescending(int[],int,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.Ints:reverse(int[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Ints:rotate(int[],int,int,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "reverse": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.primitives.Longs:sortDescending(long[],int,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.Longs:reverse(long[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Longs:rotate(long[],int,int,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "reverse": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:sortDescending(short[],int,int)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:reverse(short[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:rotate(short[],int,int,int)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "reverse": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:sort(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sort": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedBytes:sortDescending(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:sort(int[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sort": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedInts:sortDescending(int[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:sort(long[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sort": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:sortDescending(long[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap$Entries:delegate()": {
            "entryPredicate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:toString()": {
            "toStringHelper": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "instanceOf": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.43,
                "total_score": 0.37
            },
            "not": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.81,
                "total_score": 0.67
            },
            "filter": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.52
            },
            "add": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.81,
                "total_score": 0.52
            },
            "toString": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.base.Splitter:on(java.lang.String)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "on": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:withKeyValueSeparator(char)": {
            "on": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "withKeyValueSeparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$ComputingValueReference:<init>(com.google.common.cache.LocalCache$ValueReference)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch:createFromSystemTimer()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.internal.Finalizer:startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingSerializationProxy:<init>(com.google.common.cache.LocalCache)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multisets:unmodifiableMultiset(com.google.common.collect.Multiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:<init>(com.google.common.collect.SortedMultiset)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EvictingQueue:create(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingBlockingDeque:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ForwardingBlockingDeque:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap:get(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingNavigableSet:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$UnmodifiableNavigableSet:<init>(java.util.NavigableSet)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Maps:unmodifiableEntrySet(java.util.Set)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$SerializationProxy:<init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:unmodifiableNavigableMap(java.util.NavigableMap)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:descendingMap()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap$SerializedForm:readResolve()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:unmodifiableListMultimap(com.google.common.collect.ListMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:<init>(com.google.common.collect.SortedSetMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:unmodifiableSetMultimap(com.google.common.collect.SetMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Tables:unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask:<init>(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.ScheduledFuture)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.JdkFutureAdapters:listenInPoolThread(java.util.concurrent.Future)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$EntrySet:hashCode()": {
            "hashCode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:<init>(com.google.common.cache.CacheBuilder,com.google.common.cache.CacheLoader)": {
            "getConcurrencyLevel": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getKeyStrength": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.26
            },
            "getValueStrength": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.26
            },
            "getKeyEquivalence": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getValueEquivalence": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getMaximumWeight": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getWeigher": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getExpireAfterAccessNanos": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getExpireAfterWriteNanos": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getRefreshNanos": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getRemovalListener": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "discardingQueue": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.26
            },
            "recordsTime": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getTicker": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "usesAccessEntries": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "usesWriteEntries": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getFactory": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getStatsCounterSupplier": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "getInitialCapacity": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "evictsBySize": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "customWeigher": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.26
            },
            "newSegmentArray": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "createSegment": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:inDegree(java.lang.Object)": {
            "inDegree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:inDegree(java.lang.Object)": {
            "inDegree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractGraph:outDegree(java.lang.Object)": {
            "outDegree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph:outDegree(java.lang.Object)": {
            "outDegree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph$1:degree(java.lang.Object)": {
            "degree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.MoreFiles$PathByteSource:read()": {
            "toByteArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:<init>(java.lang.Class,java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:<init>(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:create()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:create(java.util.Comparator)": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractBiMap:putAll(java.util.Map)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:forcePut(java.lang.Object,java.lang.Object)": {
            "forcePut": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:navigableKeySet()": {
            "keySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractListMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "replaceValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "replaceValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedSetMultimap:removeAll(java.lang.Object)": {
            "removeAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:pollLast()": {
            "descendingIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "pollNext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:toString()": {
            "asMapOfRanges": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toString": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset$EntrySet:toArray()": {
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset$EntrySet:toArray(java.lang.Object[])": {
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:create(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayListMultimap:<init>(int,int)": {
            "newHashMapWithExpectedSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:<init>(int,int)": {
            "newHashMapWithExpectedSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:<init>(com.google.common.collect.Multimap)": {
            "newHashMapWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:readObject(java.io.ObjectInputStream)": {
            "readCount": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "newHashMapWithExpectedSize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "populateMultimap": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:<init>(int)": {
            "newHashMapWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Graphs:hasCycle(com.google.common.graph.Network)": {
            "hasCycle": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:create(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:<init>(int,int)": {
            "newLinkedHashMapWithExpectedSize": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "checkNonnegative": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "newHeader": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "succeedsInMultimap": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:readObject(java.io.ObjectInputStream)": {
            "newHeader": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "succeedsInMultimap": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "newLinkedHashMapWithExpectedSize": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "createCollection": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:<init>(com.google.common.graph.NetworkBuilder)": {
            "createMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:<init>(com.google.common.graph.AbstractGraphBuilder)": {
            "createMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:forceJdk()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl:copy()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:createCollection()": {
            "newHashSetWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$HashSetSupplier:get()": {
            "newHashSetWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:createCollection()": {
            "newLinkedHashSetWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:get()": {
            "newLinkedHashSetWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:pollFirstEntry()": {
            "pollFirstEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:pollLastEntry()": {
            "pollLastEntry": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:firstEntry()": {
            "getEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:lastEntry()": {
            "getEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:toArray()": {
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ConcurrentHashMultiset:toArray(java.lang.Object[])": {
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:createDescendingSet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:createDescendingSet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:comparator()": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$DescendingSet:comparator()": {
            "natural": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "reverse": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$Builder:put(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "cellOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$EntrySet:size()": {
            "elementSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap$Builder:put(java.lang.Class,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap$Builder:putAll(java.util.Map)": {
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:put(java.util.Map$Entry)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$Builder:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:put(java.lang.Class,java.lang.Object)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:put(com.google.common.reflect.TypeToken,java.lang.Object)": {
            "rejectTypeVariables": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:putAll(java.lang.Iterable)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:putAll(java.lang.Iterable)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:filter(java.util.NavigableSet,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.26
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.collect.Sets:filter(java.util.Set,com.google.common.base.Predicate)": {
            "filter": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "and": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.24
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$KeySetView:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "delegateOrNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.22
            },
            "firstEntryIndex": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "getSuccessor": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.04,
                "total_score": 0.39
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$ValuesView:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "delegateOrNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.22
            },
            "firstEntryIndex": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "getSuccessor": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.04,
                "total_score": 0.39
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:convertToHashFloodingResistantImplementation()": {
            "hashTableMask": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.38
            },
            "createHashFloodingResistantDelegate": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "firstEntryIndex": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.6
            },
            "key": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "value": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "getSuccessor": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.68
            },
            "incrementModCount": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:forEach(java.util.function.BiConsumer)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "delegateOrNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.19
            },
            "firstEntryIndex": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "key": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "value": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.08
            },
            "getSuccessor": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.04,
                "total_score": 0.37
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:convertToHashFloodingResistantImplementation()": {
            "hashTableMask": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "createHashFloodingResistantDelegate": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "firstEntryIndex": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "element": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.23
            },
            "getSuccessor": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "incrementModCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.35
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:forEach(java.util.function.Consumer)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "delegateOrNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.18
            },
            "firstEntryIndex": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "element": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.09
            },
            "getSuccessor": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:insertEntry(int,java.lang.Object,java.lang.Object,int,int)": {
            "insertEntry": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "setSucceeds": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:accessEntry(int)": {
            "getPredecessor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "getSuccessor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "setSucceeds": {
                "count_score": 0.6,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.88
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:moveLastEntry(int,int)": {
            "moveLastEntry": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "getPredecessor": {
                "count_score": 0.22,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "getSuccessor": {
                "count_score": 0.22,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "setSucceeds": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "setLink": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:<init>(com.google.common.collect.ImmutableMap,int,java.util.Comparator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "emptySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$Builder:buildOrThrow()": {
            "emptyMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:emptyMultiset(java.util.Comparator)": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:get(java.lang.Comparable)": {
            "getEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap$Builder:put(com.google.common.collect.Range,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "isEmpty": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.09
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.18
            },
            "immutableEntry": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$Builder:add(com.google.common.collect.Range)": {
            "isEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:entryIterator()": {
            "isEmpty": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.44
            },
            "emptyIterator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "firstNonNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:entryIterator()": {
            "isEmpty": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.3
            },
            "emptyIterator": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.18
            },
            "endpoint": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "lowerBoundType": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.07
            },
            "natural": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "belowValue": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.09,
                "total_score": 0.37
            },
            "min": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:descendingEntryIterator()": {
            "isEmpty": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.31
            },
            "emptyIterator": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.16
            },
            "natural": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "belowValue": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.09,
                "total_score": 0.38
            },
            "min": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.41
            },
            "endpoint": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:replaceRangeWithSameLowerBound(com.google.common.collect.Range)": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:complement()": {
            "all": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "equals": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.9,
                "total_score": 0.71
            },
            "of": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Range:readResolve()": {
            "equals": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "all": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$AsMapOfRanges:get(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:subRangeMap(com.google.common.collect.Range)": {
            "all": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "equals": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:size()": {
            "all": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "equals": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.4
            },
            "entryIterator": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "size": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:isEmpty()": {
            "all": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "equals": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.86,
                "total_score": 0.74
            },
            "entryIterator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:subRangeSet(com.google.common.collect.Range)": {
            "all": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "equals": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:containsKey(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:span()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$ComplementRanges:get(int)": {
            "checkElementIndex": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "belowAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "aboveAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "create": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:span()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Range:intersection(com.google.common.collect.Range)": {
            "compareTo": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "create": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.Range:gap(com.google.common.collect.Range)": {
            "compareTo": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "create": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.collect.Range:span(com.google.common.collect.Range)": {
            "compareTo": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Range:canonical(com.google.common.collect.DiscreteDomain)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "canonical": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "create": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.53
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:range(com.google.common.collect.BoundType,com.google.common.collect.BoundType)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$RangeMapEntry:<init>(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:span()": {
            "getUpperBound": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "compareTo": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "create": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:span()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:span()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$1:getCount()": {
            "getCount": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getElement": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "count": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:forEachEntry(java.util.function.ObjIntConsumer)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "firstNode": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "getElement": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.26
            },
            "tooHigh": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.11
            },
            "getCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.11
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:create()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:create(java.util.Map)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedNetworkConnections:of()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.UndirectedNetworkConnections:of()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:remove(java.lang.Object)": {
            "delegateOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeHelper": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.HashBiMap:replaceAll(java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "clear": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap:of(java.lang.Class,java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumMap:asImmutable(java.util.EnumMap)": {
            "of": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "getOnlyElement": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableTable:column(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "of": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableTable:columnMap()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableTable:rowMap()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:values()": {
            "inverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm:readResolve()": {
            "inverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedMultiset:getEntry(int)": {
            "reverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:asDescendingMapOfRanges()": {
            "of": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.34
            },
            "reverse": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.51
            },
            "rangeLexOrdering": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:asDescendingSetOfRanges()": {
            "of": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "reverse": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.45
            },
            "rangeLexOrdering": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:descendingMap()": {
            "comparator": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.49
            },
            "from": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "reverse": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.67
            },
            "emptyMap": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.49
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists:reverse(java.util.List)": {
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getForwardList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.13
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:descendingIterator()": {
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:createDescendingSet()": {
            "reverse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Lists$StringAsImmutableList:subList(int,int)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.47
            },
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "charactersOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:copyOf(java.lang.Object[])": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:asImmutableList(java.lang.Object[],int)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:subList(int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.34
            },
            "subListUnchecked": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:of(com.google.common.collect.Range,java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$SerializedForm:readResolve()": {
            "of": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.77
            },
            "all": {
                "count_score": 0.22,
                "dataflow_score": 0.5,
                "indegree_score": 0.19,
                "total_score": 0.29
            },
            "equals": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.14
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:of(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "isEmpty": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.14
            },
            "of": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            },
            "all": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "equals": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.13,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.01
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:of(java.util.Comparator,java.lang.Object,java.lang.Object)": {
            "of": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.26
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableSet:asList()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.TempFileCreator$JavaNioCreator:userPermissions()": {
            "value": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$TypeCollector:collectTypes(java.lang.Object)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "collectTypes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableEnumSet:asImmutable(java.util.EnumSet)": {
            "of": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "getOnlyElement": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.57,
                "total_score": 0.59
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:get(java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:build()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:copyOf(java.lang.Object[])": {
            "of": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableBiMap:createEntrySet()": {
            "immutableEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableBiMap:createKeySet()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableTable:createCellSet()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SingletonImmutableTable:createValues()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:adjacentEdges(java.lang.Object)": {
            "nodeU": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "nodeV": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.45
            },
            "union": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.13
            },
            "of": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.42
            },
            "difference": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$CachingAsList:iterator()": {
            "iterator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:containsAll(java.util.Collection)": {
            "hasSameComparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "iterator": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.reflect.Parameter:isAnnotationPresent(java.lang.Class)": {
            "getAnnotation": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:valuesBuilder(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:copyIfNecessary()": {
            "copy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:putAll(com.google.common.collect.Multimap)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:combine(com.google.common.collect.ImmutableMultimap$Builder)": {
            "combine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:combine(com.google.common.collect.ImmutableMultimap$Builder)": {
            "combine": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:putAll(com.google.common.collect.Multimap)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Iterators:concat(java.util.Iterator,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "concat": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Iterators:concat(java.util.Iterator,java.util.Iterator,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "concat": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.Iterators:concat(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            },
            "concat": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:getSubscribers(java.lang.Object)": {
            "flattenHierarchy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "newArrayListWithCapacity": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "concat": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.41
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:contains(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Peeker:getDone(com.google.common.util.concurrent.ClosingFuture)": {
            "checkState": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.46
            },
            "contains": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "getDone": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:put(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.46
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.28,
                "total_score": 0.32
            },
            "put": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:putIfAbsent(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.46
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.28,
                "total_score": 0.32
            },
            "put": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:replace(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.49
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.35,
                "total_score": 0.35
            },
            "replace": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:replace(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.49
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.35,
                "total_score": 0.35
            },
            "replace": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:remove(java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.77
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:remove(java.lang.Object,java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.77
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:get(java.lang.Object,int)": {
            "getLiveEntry": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "postReadCleanup": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "tryDrainReferenceQueues": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:containsKey(java.lang.Object,int)": {
            "getLiveEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "postReadCleanup": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$Segment:containsValue(java.lang.Object)": {
            "valueEquivalence": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.19
            },
            "equivalent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "postReadCleanup": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)": {
            "newEntry": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:put(java.lang.Class,java.lang.Object)": {
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:putAll(java.util.Map)": {
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "putAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardRemove(java.lang.Object)": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardClear()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "clear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardIsEmpty()": {
            "entrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingMap:standardHashCode()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "hashCodeImpl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.MutableTypeToInstanceMap:entrySet()": {
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps:difference(java.util.Map,java.util.Map)": {
            "difference": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "equals": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:crossOver(int,java.lang.Object)": {
            "findMinChild": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "elementData": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "crossOverUp": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:fillHoleAt(int)": {
            "findMinGrandChild": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "elementData": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableCollection:writeReplace()": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$5:headSet(java.lang.Object)": {
            "headSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$5:subSet(java.lang.Object,java.lang.Object)": {
            "subSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:standardContains(java.lang.Object)": {
            "tailSet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "comparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "unsafeCompare": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:standardRemove(java.lang.Object)": {
            "tailSet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "comparator": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "unsafeCompare": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSet:standardSubSet(java.lang.Object,java.lang.Object)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$5:tailSet(java.lang.Object)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable:rowKeySet()": {
            "rowKeySet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:navigableSet(java.util.NavigableSet)": {
            "navigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:addFirst(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:addLast(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:offerFirst(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:offerLast(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:removeFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:removeLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:pollFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:pollLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:getFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:getLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:peekFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:peekLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:removeFirstOccurrence(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:removeLastOccurrence(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:push(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:pop()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedDeque:descendingIterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:delegate()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSet:comparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSet:subSet(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSet:headSet(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSet:tailSet(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSet:first()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSet:last()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:ceilingEntry(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:ceilingKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:descendingKeySet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:firstEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:floorEntry(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:floorKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:higherEntry(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:higherKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:lastEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:lowerEntry(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:lowerKey(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:navigableKeySet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:pollFirstEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:pollLastEntry()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SetMultimap:removeAll(java.lang.Object)": {
            "removeAll": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:get(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:removeAll(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:valueComparator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:subMap(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "rangeContains": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.27
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:headMap(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "rangeContains": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.31
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:tailMap(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "rangeContains": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.31
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:containsKey(java.lang.Object)": {
            "rangeContains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "containsKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable$TreeRow:put(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "rangeContains": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.47
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.63,
                "total_score": 0.48
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:rebalance()": {
            "balanceFactor": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.11
            },
            "rotateRight": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "rotateLeft": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "recomputeHeight": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:size()": {
            "aggregateForEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "saturatedCast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:distinctElements()": {
            "aggregateForEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "saturatedCast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:incidentEdges(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:adjacentNodes(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:edgesConnecting(java.lang.Object,java.lang.Object)": {
            "checkedConnections": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.27
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.4
            },
            "containsNode": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:inEdges(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:outEdges(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:predecessors(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardNetwork:successors(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:adjacentNodes(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:predecessors(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:successors(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:incidentEdges(java.lang.Object)": {
            "checkedConnections": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "hasEdgeConnectingInternal": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "nodeU": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.39,
                "total_score": 0.38
            },
            "nodeV": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.38,
                "total_score": 0.38
            },
            "hasEdgeConnectingInternal": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:edgeValueOrDefault(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "edgeValueOrDefaultInternal": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.graph.StandardValueGraph:edgeValueOrDefault(com.google.common.graph.EndpointPair,java.lang.Object)": {
            "nodeU": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nodeV": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.49
            },
            "edgeValueOrDefaultInternal": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:putBytes(byte[],int,int)": {
            "putBytesInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.AbstractStreamingHasher:putBytes(java.nio.ByteBuffer)": {
            "putBytesInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.FarmHashFingerprint64:hashBytes(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "fingerprint": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "fromLong": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.53
            }
        }
    },
    {
        "com.google.common.hash.Fingerprint2011:hashBytes(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "fingerprint": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "fromLong": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.53
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction:hashInt(int)": {
            "mixK1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "mixH1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "fmix": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction:hashLong(long)": {
            "mixK1": {
                "count_score": 0.4,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "mixH1": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "fmix": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction:hashUnencodedChars(java.lang.CharSequence)": {
            "mixK1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "mixH1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "fmix": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction:hashString(java.lang.CharSequence,java.nio.charset.Charset)": {
            "mixK1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "mixH1": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.77
            },
            "charToTwoUtf8Bytes": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "charToThreeUtf8Bytes": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "codePointToFourUtf8Bytes": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "fmix": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction:hashBytes(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "getIntLittleEndian": {
                "count_score": 0.17,
                "dataflow_score": 0.6,
                "indegree_score": 0.0,
                "total_score": 0.23
            },
            "mixK1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "mixH1": {
                "count_score": 0.17,
                "dataflow_score": 0.4,
                "indegree_score": 0.38,
                "total_score": 0.32
            },
            "toInt": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.18
            },
            "fmix": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,long,double)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:roundToInt(double,java.math.RoundingMode)": {
            "roundIntermediate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkInRangeForRoundingInputs": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:roundToLong(double,java.math.RoundingMode)": {
            "roundIntermediate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkInRangeForRoundingInputs": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.DoubleMath:roundToBigInteger(double,java.math.RoundingMode)": {
            "roundIntermediate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getSignificand": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:insertInHashTable(java.lang.Object)": {
            "smear": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "ensureTableCapacity": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.27
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:review()": {
            "chooseTableSize": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.57
            },
            "rebuildHashTable": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.5,
                "total_score": 0.42
            },
            "maxRunBeforeFallback": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.79,
                "total_score": 0.54
            },
            "hashFloodingDetected": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:combine(com.google.common.collect.TopKSelector)": {
            "uncheckedCastNullableTToT": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "offer": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:offerAll(java.util.Iterator)": {
            "offer": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base16Encoding:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Base64Encoding:<init>(java.lang.String,java.lang.String,java.lang.Character)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:<init>(java.lang.String,java.lang.String,java.lang.Character)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:upperCase()": {
            "hasLowerCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "hasUpperCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkState": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "toUpperCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.12
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.15
            },
            "ignoreCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$Alphabet:lowerCase()": {
            "hasUpperCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "hasLowerCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkState": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "toLowerCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.15
            },
            "ignoreCase": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:ignoreCase()": {
            "ignoreCase": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "newInstance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:least(int)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "least": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:greatest(int)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "greatest": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.math.IntMath:isPrime(int)": {
            "isPrime": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:binomial(int,int)": {
            "checkNonNegative": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.49
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "binomial": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "log2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.math.Stats:of(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "snapshot": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.53
            }
        }
    },
    {
        "com.google.common.math.Stats:of(java.util.Iterator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "snapshot": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.53
            }
        }
    },
    {
        "com.google.common.math.PairedStatsAccumulator:addAll(com.google.common.math.PairedStats)": {
            "count": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "xStats": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.5,
                "total_score": 0.38
            },
            "addAll": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "sumOfProductsOfDeltas": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "mean": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "yStats": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.5,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.math.Stats:of(java.util.stream.DoubleStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            },
            "addAll": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.62
            }
        }
    },
    {
        "com.google.common.math.Stats:of(java.util.stream.IntStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            },
            "addAll": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.62
            }
        }
    },
    {
        "com.google.common.math.Stats:of(java.util.stream.LongStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            },
            "addAll": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "snapshot": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.62
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:addAll(java.util.stream.DoubleStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            },
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:addAll(java.util.stream.IntStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            },
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.StatsAccumulator:addAll(java.util.stream.LongStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            },
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.Quantiles:selectAllInPlace(int[],int,int,double[],int,int)": {
            "chooseNextSelection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "selectInPlace": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray:copyOf(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "addAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray:copyOf(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "addAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray:copyOf(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "addAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:toString(int)": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLongs:toString(long)": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Parameter:equals(java.lang.Object)": {
            "equals": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "invokeAnyImpl": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$FutureCombiner:run(java.lang.Runnable,java.util.concurrent.Executor)": {
            "call": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AggregateFuture:decrementCountAndMaybeComplete(com.google.common.collect.ImmutableCollection)": {
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "processCompleted": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.List)": {
            "checkAcquiredLock": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:from(com.google.common.util.concurrent.ListenableFuture)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:derive(com.google.common.util.concurrent.FluentFuture)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "becomeSubsumedInto": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:standardPoll()": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingQueue:standardPeek()": {
            "element": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ExecutionSequencer:submit(java.util.concurrent.Callable,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "submitAsync": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked:getChecked(java.util.concurrent.Future,java.lang.Class)": {
            "bestGetCheckedTypeValidator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getChecked": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:getChecked(java.util.concurrent.Future,java.lang.Class,long,java.util.concurrent.TimeUnit)": {
            "getChecked": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator:validateClass(java.lang.Class)": {
            "checkExceptionClassValidity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:notifyStopped()": {
            "enter": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.34
            },
            "state": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.74,
                "total_score": 0.66
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "enqueueTerminatedEvent": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "leave": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "dispatchListenerEvents": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:notifyFailed(java.lang.Throwable)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "enter": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.19
            },
            "state": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.35,
                "total_score": 0.49
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            },
            "enqueueFailedEvent": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "leave": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.23
            },
            "dispatchListenerEvents": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.14
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:tryStartTiming(com.google.common.util.concurrent.Service)": {
            "enter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.33
            },
            "createStarted": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "leave": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State)": {
            "checkNotNull": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "checkArgument": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "enter": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            },
            "leave": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.2
            },
            "dispatchListenerEvents": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "checkState": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.09
            },
            "createStarted": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.1
            },
            "isRunning": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.06
            },
            "stop": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.06
            },
            "enqueueFailedEvent": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "enqueueHealthyEvent": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "enqueueStoppedEvent": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterWhen(com.google.common.util.concurrent.Monitor$Guard)": {
            "await": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "leave": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:waitFor(com.google.common.util.concurrent.Monitor$Guard)": {
            "await": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard)": {
            "awaitUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "leave": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard)": {
            "awaitUninterruptibly": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterWhen(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)": {
            "toSafeNanos": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "initNanoTime": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "remainingNanos": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.56,
                "total_score": 0.44
            },
            "awaitNanos": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.29
            },
            "signalNextWaiter": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)": {
            "toSafeNanos": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "initNanoTime": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "remainingNanos": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.56,
                "total_score": 0.48
            },
            "awaitNanos": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:waitFor(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)": {
            "toSafeNanos": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "awaitNanos": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)": {
            "toSafeNanos": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "initNanoTime": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "awaitNanos": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.3
            },
            "remainingNanos": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:withTimeout(long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)": {
            "withTimeout": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:withTimeout(com.google.common.util.concurrent.ListenableFuture,java.time.Duration,java.util.concurrent.ScheduledExecutorService)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "withTimeout": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:firstMatch(com.google.common.base.Predicate)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "tryFind": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:precomputedInternal()": {
            "setBits": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "toString": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "precomputedPositive": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.io.Closer:rethrow(java.lang.Throwable,java.lang.Class,java.lang.Class)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "propagateIfPossible": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteSink:write(byte[])": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "create": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "register": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "rethrow": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.ByteSink:writeFrom(java.io.InputStream)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            },
            "register": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            },
            "copy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            },
            "rethrow": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            }
        }
    },
    {
        "com.google.common.io.ByteSource$SlicedByteSource:sliceStream(java.io.InputStream)": {
            "skipUpTo": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.18
            },
            "create": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "register": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "rethrow": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "close": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "limit": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.io.ByteSource:isEmpty()": {
            "sizeIfKnown": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "create": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "register": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "close": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "rethrow": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.io.ByteSource:size()": {
            "sizeIfKnown": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.26
            },
            "create": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "register": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "countBySkipping": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "close": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "exhaust": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "rethrow": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.io.ByteSource:copyTo(java.io.OutputStream)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            },
            "register": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.49
            },
            "copy": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "close": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            },
            "rethrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            }
        }
    },
    {
        "com.google.common.io.ByteSource:copyTo(com.google.common.io.ByteSink)": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "create": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            },
            "register": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.53
            },
            "copy": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "close": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            },
            "rethrow": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            }
        }
    },
    {
        "com.google.common.io.ByteSource:read()": {
            "create": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "register": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "sizeIfKnown": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.26
            },
            "toByteArray": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.37
            },
            "close": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "rethrow": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.io.ByteSource:read(com.google.common.io.ByteProcessor)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "register": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.53
            },
            "readBytes": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "close": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "rethrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.io.ByteSource:contentEquals(com.google.common.io.ByteSource)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "createBuffer": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.06
            },
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.21
            },
            "register": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.26
            },
            "read": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "close": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.21
            },
            "rethrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.io.CharSink:write(java.lang.CharSequence)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "create": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "register": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "rethrow": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.CharSink:writeFrom(java.lang.Readable)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.13
            },
            "register": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.13
            },
            "copy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.13
            },
            "rethrow": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.13
            }
        }
    },
    {
        "com.google.common.io.CharSource$StringCharSource:copyTo(com.google.common.io.CharSink)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "create": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "register": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "close": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "rethrow": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.io.CharSource:length()": {
            "lengthIfKnown": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.19
            },
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "register": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "countBySkipping": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "close": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "rethrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.io.CharSource:copyTo(java.lang.Appendable)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.18
            },
            "register": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.48
            },
            "copy": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "close": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.18
            },
            "rethrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.io.CharSource:copyTo(com.google.common.io.CharSink)": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "create": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.17
            },
            "register": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.52
            },
            "copy": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "close": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.17
            },
            "rethrow": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.io.CharSource:readFirstLine()": {
            "create": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "openBufferedStream": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "register": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "close": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "rethrow": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.io.CharSource:readLines(com.google.common.io.LineProcessor)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "register": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.53
            },
            "readLines": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "close": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "rethrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.io.CharSource:isEmpty()": {
            "lengthIfKnown": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "create": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "register": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "close": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "rethrow": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.io.Files$FileByteSource:read()": {
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "openStream": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "register": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "toByteArray": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.35,
                "total_score": 0.49
            },
            "close": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "rethrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.io.Files:mapInternal(java.io.File,java.nio.channels.FileChannel$MapMode,long)": {
            "checkNotNull": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "create": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "register": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "close": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "rethrow": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$Application:addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "newThread": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "addShutdownHook": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:expand()": {
            "newEntryArray": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "copyEntry": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "removeCollectedEntry": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:removeEntryFromChain(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry)": {
            "copyEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeCollectedEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterKeys(com.google.common.collect.Multimap,com.google.common.base.Predicate)": {
            "filterKeys": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "and": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "keyPredicateOnEntries": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.75,
                "total_score": 0.64
            },
            "filterFiltered": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:checkHealthy()": {
            "equalTo": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.53,
                "total_score": 0.46
            },
            "not": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "filterKeys": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.67,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterValues(com.google.common.collect.SetMultimap,com.google.common.base.Predicate)": {
            "valuePredicateOnEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterEntries(com.google.common.collect.Multimap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "filterFiltered": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable:createColumnKeyIterator()": {
            "columnComparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "transform": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "mergeSorted": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap$AsMap$1KeySetImpl:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompoundOrdering:<init>(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:copyOf(java.lang.Iterable)": {
            "toArray": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "of": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:copyOf(java.lang.Iterable)": {
            "toArray": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "of": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "com.google.common.collect.Iterables:toArray(java.lang.Iterable,java.lang.Class)": {
            "newArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Comparator,java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "hasSameComparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "toArray": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Ordering:sortedCopy(java.lang.Iterable)": {
            "toArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Collections2$OrderedPermutationCollection:iterator()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.SortedLists:binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)": {
            "transform": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "binarySearch": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ListMultimap:removeAll(java.lang.Object)": {
            "removeAll": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$TransformedEntriesMultimap:remove(java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.AbstractNavigableMap:keySet()": {
            "navigableKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$DescendingMap:keySet()": {
            "navigableKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:descendingMap()": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:headMap(java.lang.Object,boolean)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:tailMap(java.lang.Object,boolean)": {
            "fromMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps:transformValues(java.util.NavigableMap,com.google.common.base.Function)": {
            "transformEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Tables$UnmodifiableRowSortedMap:rowMap()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "transformValues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors$ImmutableTableCollectorState:put(java.lang.Object,java.lang.Object,java.lang.Object,java.util.function.BinaryOperator)": {
            "get": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "merge": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.StandardTable:removeMapping(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "containsMapping": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "remove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:remove(java.lang.Object)": {
            "contains": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:computeToString()": {
            "transformValues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "appendTo": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:navigableMap(java.util.NavigableMap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedMap:headMap(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortedMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedMap:subMap(java.lang.Object,java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortedMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedSortedMap:tailMap(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortedMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:synchronizedListMultimap(com.google.common.collect.ListMultimap)": {
            "listMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:sortedSetMultimap(com.google.common.collect.SortedSetMultimap,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:synchronizedSetMultimap(com.google.common.collect.SetMultimap)": {
            "setMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableGraph:removeEdge(com.google.common.graph.EndpointPair)": {
            "nodeU": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nodeV": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.49
            },
            "removeEdge": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:incidentNodes(java.lang.Object)": {
            "incidentNodes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.io.CharStreams:toString(java.lang.Readable)": {
            "toStringBuilder": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:catching(java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor)": {
            "catching": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:cancel(boolean)": {
            "cancel": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$InCompletionOrderFuture:cancel(boolean)": {
            "cancel": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures$InCompletionOrderState:recordInputCompletion(com.google.common.collect.ImmutableList,int)": {
            "setFuture": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "recordCompletion": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingValueReference:loadFuture(java.lang.Object,com.google.common.cache.CacheLoader)": {
            "start": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.2
            },
            "set": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.2
            },
            "immediateFuture": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.23
            },
            "reload": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "directExecutor": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "transform": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.42
            },
            "setException": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.12
            },
            "fullyFailedFuture": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:transform(com.google.common.base.Function,java.util.concurrent.Executor)": {
            "transform": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph$1:incidentEdgeOrder()": {
            "incidentEdgeOrder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:directed()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:undirected()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:from(com.google.common.graph.Graph)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "allowsSelfLoops": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.6
            },
            "nodeOrder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "incidentEdgeOrder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:copy()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:directed()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:undirected()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:from(com.google.common.graph.Network)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "allowsParallelEdges": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "allowsSelfLoops": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "nodeOrder": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "edgeOrder": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:directed()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:undirected()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:from(com.google.common.graph.ValueGraph)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "allowsSelfLoops": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "nodeOrder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "incidentEdgeOrder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:copy()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor)": {
            "addListener": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:create(java.util.Collection)": {
            "createWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:createWithExpectedSize(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:<init>(java.util.Comparator,java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:newSortedSetMultimap(java.util.Map,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:toImmutableMultiset()": {
            "toImmutableMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:toImmutableMultiset(java.util.function.Function,java.util.function.ToIntFunction)": {
            "toImmutableMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:builder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Joiner:join(java.lang.Object[])": {
            "join": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:join(com.google.common.base.Joiner)": {
            "join": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:simplifyPath(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "on": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            },
            "omitEmptyStrings": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "split": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.15
            },
            "join": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.Types$ParameterizedTypeImpl:toString()": {
            "jdkTypeDuplicatesOwnerName": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "typeName": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.3
            },
            "transform": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.6
            },
            "join": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            }
        }
    },
    {
        "com.google.thirdparty.publicsuffix.TrieParser:doParseTrieToBuilder(java.util.Deque,java.lang.CharSequence,int,com.google.common.collect.ImmutableMap$Builder)": {
            "reverse": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "join": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.6,
                "total_score": 0.46
            },
            "fromCode": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            }
        }
    },
    {
        "com.google.common.collect.MapMaker:makeMap()": {
            "getInitialCapacity": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getConcurrencyLevel": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Interners$InternerImpl:<init>(com.google.common.collect.MapMaker)": {
            "equals": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "keyEquivalence": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            },
            "createWithDummyValues": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:transformAndConcat(com.google.common.base.Function)": {
            "transform": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "concat": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterables:concat(java.lang.Iterable)": {
            "concat": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture:get(long,java.util.concurrent.TimeUnit)": {
            "getDoneValue": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.17
            },
            "parkNanos": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "toString": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "isDone": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:addNodeInternal(java.lang.Object)": {
            "newConnections": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.51
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterIf(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "enterIf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:valuesSpliterator()": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.73
            },
            "getValue": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "indexed": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableDoubleArray$AsList:equals(java.lang.Object)": {
            "equals": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "size": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableIntArray$AsList:equals(java.lang.Object)": {
            "equals": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "size": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.primitives.ImmutableLongArray$AsList:equals(java.lang.Object)": {
            "equals": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "size": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$1:convert(com.google.common.base.CaseFormat,java.lang.String)": {
            "toUpperCase": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "convert": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$2:convert(com.google.common.base.CaseFormat,java.lang.String)": {
            "toUpperCase": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "convert": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$5:convert(com.google.common.base.CaseFormat,java.lang.String)": {
            "toLowerCase": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "convert": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.CaseFormat:to(com.google.common.base.CaseFormat,java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "convert": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:matchesNoneOf(java.lang.CharSequence)": {
            "indexIn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:removeFrom(java.lang.CharSequence)": {
            "indexIn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:replaceFrom(java.lang.CharSequence,char)": {
            "indexIn": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType$Tokenizer:consumeToken(com.google.common.base.CharMatcher)": {
            "consumeTokenIfPresent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:getEmbeddedIPv4ClientAddress(java.net.Inet6Address)": {
            "isCompatIPv4Address": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.28
            },
            "getCompatIPv4Address": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "is6to4Address": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.28
            },
            "get6to4IPv4Address": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "isTeredoAddress": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.35
            },
            "getTeredoInfo": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "getClient": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "toAddrString": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.hash.AbstractHasher:putString(java.lang.CharSequence,java.nio.charset.Charset)": {
            "putBytes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.Hasher:putBytes(byte[])": {
            "putBytes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractCompositeHashFunction$1:putBytes(byte[],int,int)": {
            "putBytes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractHashFunction:hashBytes(byte[],int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "newHasher": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.13
            },
            "putBytes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.hash.HashingInputStream:read(byte[],int,int)": {
            "putBytes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.HashingOutputStream:write(byte[],int,int)": {
            "putBytes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteStreams:readFully(java.io.InputStream,byte[])": {
            "readFully": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readFully(byte[],int,int)": {
            "readFully": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Booleans:rotate(boolean[],int)": {
            "rotate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Bytes:rotate(byte[],int)": {
            "rotate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.SignedBytes:sortDescending(byte[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Chars:sortDescending(char[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Chars:rotate(char[],int)": {
            "rotate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:sortDescending(double[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Doubles:rotate(double[],int)": {
            "rotate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Floats:sortDescending(float[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Floats:rotate(float[],int)": {
            "rotate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Ints:sortDescending(int[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Ints:rotate(int[],int)": {
            "rotate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Longs:sortDescending(long[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Longs:rotate(long[],int)": {
            "rotate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:sortDescending(short[])": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortDescending": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.primitives.Shorts:rotate(short[],int)": {
            "rotate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:delegate()": {
            "delegate": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.base.Splitter:withKeyValueSeparator(java.lang.String)": {
            "on": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "withKeyValueSeparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:create(double)": {
            "createFromSystemTimer": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:create(double,long,java.util.concurrent.TimeUnit)": {
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "createFromSystemTimer": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.49
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalLoadingCache:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableMultimap:keys()": {
            "unmodifiableMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets:unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:descendingMultiset()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyListMultimap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeySetMultimap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$DescendingSet:<init>(java.util.NavigableSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$UnmodifiableNavigableSet:descendingSet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets:unmodifiableNavigableSet(java.util.NavigableSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$UnmodifiableSetMultimap:entries()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unmodifiableEntrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:unmodifiableEntries(java.util.Collection)": {
            "unmodifiableEntrySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:writeReplace()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "unmodifiableNavigableMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:headMap(java.lang.Object,boolean)": {
            "unmodifiableNavigableMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:tailMap(java.lang.Object,boolean)": {
            "unmodifiableNavigableMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:eventuallyClosing(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "nonCancellationPropagating": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.03
            },
            "directExecutor": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.41,
                "total_score": 0.54
            },
            "addCallback": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:addCallback(com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)": {
            "addCallback": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalLoadingCache:<init>(com.google.common.cache.CacheBuilder,com.google.common.cache.CacheLoader)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:<init>(com.google.common.cache.CacheBuilder)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph$1:inDegree(java.lang.Object)": {
            "inDegree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractValueGraph$1:outDegree(java.lang.Object)": {
            "outDegree": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:create(java.lang.Class,java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:create(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:create(java.lang.Iterable)": {
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset$Builder:<init>(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:putAll(java.util.Map)": {
            "putAll": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:putAll(java.util.Map)": {
            "putAll": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "replaceValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "replaceValues": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultiset:create(java.lang.Iterable)": {
            "inferDistinctElements": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.19
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "addAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.ArrayListMultimap:create(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayListMultimap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayListMultimap:<init>(com.google.common.collect.Multimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:create(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:create(com.google.common.collect.Multimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:create(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:<init>(com.google.common.collect.Multimap)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultiset:create(java.lang.Iterable)": {
            "inferDistinctElements": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "addAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:create(int,int)": {
            "capacity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableNetwork:<init>(com.google.common.graph.NetworkBuilder)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:<init>(com.google.common.graph.AbstractGraphBuilder)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "cast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$Builder:put(com.google.common.collect.Table$Cell)": {
            "checkNotNull": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:put(java.util.Map$Entry)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:putAll(java.lang.Iterable)": {
            "ensureCapacity": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$Builder:put(java.util.Map$Entry)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:descendingSet()": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:headSet(java.lang.Object,boolean)": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$FilteredNavigableSet:tailSet(java.lang.Object,boolean)": {
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap:filterCollection(java.util.Collection,com.google.common.base.Predicate)": {
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap:createKeySet()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryMap:<init>(java.util.Map,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredKeyMap:createEntrySet()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredKeyMap:createKeySet()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$FilteredMultiset:createElementSet()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multisets$FilteredMultiset:createEntrySet()": {
            "filter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:edgesConnecting(java.lang.Object,java.lang.Object)": {
            "connectedPredicate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "filter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:put(java.lang.Object,java.lang.Object)": {
            "needsAllocArrays": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.28
            },
            "allocArrays": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.08
            },
            "delegateOrNull": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.36
            },
            "requireEntries": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.25
            },
            "requireKeys": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.22
            },
            "requireValues": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.2
            },
            "smearedHash": {
                "count_score": 0.04,
                "dataflow_score": 0.44,
                "indegree_score": 0.81,
                "total_score": 0.47
            },
            "hashTableMask": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.42,
                "total_score": 0.48
            },
            "requireTable": {
                "count_score": 0.08,
                "dataflow_score": 0.22,
                "indegree_score": 0.47,
                "total_score": 0.28
            },
            "tableGet": {
                "count_score": 0.04,
                "dataflow_score": 0.11,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "newCapacity": {
                "count_score": 0.08,
                "dataflow_score": 0.44,
                "indegree_score": 0.18,
                "total_score": 0.23
            },
            "resizeTable": {
                "count_score": 0.08,
                "dataflow_score": 0.67,
                "indegree_score": 0.18,
                "total_score": 0.3
            },
            "tableSet": {
                "count_score": 0.04,
                "dataflow_score": 0.11,
                "indegree_score": 0.51,
                "total_score": 0.25
            },
            "getHashPrefix": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 0.51,
                "total_score": 0.33
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "accessEntry": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.08
            },
            "getNext": {
                "count_score": 0.04,
                "dataflow_score": 0.11,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "convertToHashFloodingResistantImplementation": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.08
            },
            "maskCombine": {
                "count_score": 0.04,
                "dataflow_score": 0.11,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "resizeMeMaybe": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "insertEntry": {
                "count_score": 0.04,
                "dataflow_score": 0.22,
                "indegree_score": 0.18,
                "total_score": 0.15
            },
            "incrementModCount": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:convertToHashFloodingResistantImplementation()": {
            "convertToHashFloodingResistantImplementation": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:add(java.lang.Object)": {
            "needsAllocArrays": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.24
            },
            "allocArrays": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "delegateOrNull": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.27
            },
            "requireEntries": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.25
            },
            "requireElements": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.25
            },
            "smearedHash": {
                "count_score": 0.04,
                "dataflow_score": 0.44,
                "indegree_score": 0.81,
                "total_score": 0.47
            },
            "hashTableMask": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.42,
                "total_score": 0.48
            },
            "requireTable": {
                "count_score": 0.09,
                "dataflow_score": 0.22,
                "indegree_score": 0.47,
                "total_score": 0.28
            },
            "tableGet": {
                "count_score": 0.04,
                "dataflow_score": 0.11,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "newCapacity": {
                "count_score": 0.09,
                "dataflow_score": 0.44,
                "indegree_score": 0.18,
                "total_score": 0.23
            },
            "resizeTable": {
                "count_score": 0.09,
                "dataflow_score": 0.67,
                "indegree_score": 0.18,
                "total_score": 0.3
            },
            "tableSet": {
                "count_score": 0.04,
                "dataflow_score": 0.11,
                "indegree_score": 0.51,
                "total_score": 0.25
            },
            "getHashPrefix": {
                "count_score": 0.09,
                "dataflow_score": 0.33,
                "indegree_score": 0.51,
                "total_score": 0.33
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getNext": {
                "count_score": 0.04,
                "dataflow_score": 0.11,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "convertToHashFloodingResistantImplementation": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "maskCombine": {
                "count_score": 0.04,
                "dataflow_score": 0.11,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "resizeMeMaybe": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "insertEntry": {
                "count_score": 0.04,
                "dataflow_score": 0.22,
                "indegree_score": 0.18,
                "total_score": 0.15
            },
            "incrementModCount": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:convertToHashFloodingResistantImplementation()": {
            "convertToHashFloodingResistantImplementation": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.EmptyImmutableSetMultimap:<init>()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:asMultimap()": {
            "isEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$Builder:build()": {
            "buildOrThrow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:descendingMultiset()": {
            "comparator": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.52
            },
            "from": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.88,
                "total_score": 0.73
            },
            "reverse": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "emptyMultiset": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.47
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:get(java.lang.Comparable)": {
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap$Builder:putAll(com.google.common.collect.RangeMap)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$Builder:addAll(java.lang.Iterable)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:size()": {
            "entryIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:add(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "isEmpty": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.2
            },
            "compareTo": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.26
            },
            "create": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.47
            },
            "replaceRangeWithSameLowerBound": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:remove(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "isEmpty": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.18
            },
            "compareTo": {
                "count_score": 0.23,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.2
            },
            "hasUpperBound": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            },
            "create": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.5
            },
            "replaceRangeWithSameLowerBound": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.37
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$AsMapOfRanges:containsKey(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:intersectRanges(com.google.common.collect.Range)": {
            "isEmpty": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.43
            },
            "span": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "encloses": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.79,
                "total_score": 0.65
            },
            "hasLowerBound": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.24
            },
            "hasUpperBound": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.26
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "hasLowerBound": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.12
            },
            "minValue": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.06
            },
            "intersection": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.21
            },
            "hasUpperBound": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.13
            },
            "maxValue": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.06
            },
            "isEmpty": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.18
            },
            "compareOrThrow": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:get(java.lang.Object)": {
            "encloses": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.23
            },
            "isEmpty": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "compareTo": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.23
            },
            "isConnected": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "intersection": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.4
            },
            "equals": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:getEntry(java.lang.Comparable)": {
            "contains": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "getEntry": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "intersection": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "immutableEntry": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.74
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:subRangeMap(com.google.common.collect.Range)": {
            "isConnected": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.48
            },
            "intersection": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "subRangeMap": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:subMap(com.google.common.collect.Range)": {
            "isConnected": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.47
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.22
            },
            "intersection": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:subMap(com.google.common.collect.Range)": {
            "isConnected": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.48
            },
            "intersection": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.29
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSet:encloses(com.google.common.collect.Range)": {
            "isEmpty": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "encloses": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "intersection": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSet:subRangeSet(com.google.common.collect.Range)": {
            "encloses": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.35
            },
            "isConnected": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "intersection": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:subMap(com.google.common.collect.Range)": {
            "isConnected": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.48
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.29
            },
            "intersection": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:get(java.lang.Object)": {
            "contains": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.37
            },
            "compareTo": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.46
            },
            "equals": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.23
            },
            "valueOrNull": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "intersection": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet:intersects(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "isConnected": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "intersection": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.1
            },
            "isEmpty": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.11
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:coalesce(com.google.common.collect.Range,java.lang.Object,java.util.Map$Entry)": {
            "isConnected": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "span": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:asSet(com.google.common.collect.DiscreteDomain)": {
            "checkNotNull": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "isEmpty": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.08
            },
            "of": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.08
            },
            "span": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "canonical": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "hasLowerBound": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.16
            },
            "hasUpperBound": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.17
            },
            "maxValue": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:range()": {
            "range": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:putRangeMapEntry(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableNetwork:newConnections()": {
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$Itr:remove()": {
            "checkForConcurrentModification": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.2
            },
            "checkRemove": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "incrementExpectedModCount": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "remove": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "adjustAfterRemove": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors$EnumMapAccumulator:toImmutableMap()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asImmutable": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:copyOfEnumMap(java.util.EnumMap)": {
            "checkEntryNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asImmutable": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps:immutableEnumMap(java.util.Map)": {
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkEntryNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.42
            },
            "asImmutable": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:rowMap()": {
            "rowMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap$2:asDescendingMapOfRanges()": {
            "asDescendingMapOfRanges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:subList(int,int)": {
            "size": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.46
            },
            "checkPositionIndexes": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "reversePosition": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.22
            },
            "reverse": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:descendingIterator()": {
            "descendingIterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$SerializedForm:readResolve()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Parameter:<init>(com.google.common.reflect.Invokable,int,com.google.common.reflect.TypeToken,java.lang.annotation.Annotation[],java.lang.Object)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types$TypeVariableImpl:<init>(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[])": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$Builder:build()": {
            "asImmutableList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:asImmutableList(java.lang.Object[])": {
            "asImmutableList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl:build()": {
            "of": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "asImmutableList": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet$Builder:build()": {
            "sortAndDedup": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "emptySet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.33
            },
            "asImmutableList": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.33
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableBiMap:create(int,java.util.Map$Entry[])": {
            "newHashMapWithExpectedSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "makeImmutable": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "asImmutableList": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMap:create(int,java.util.Map$Entry[],boolean)": {
            "newHashMapWithExpectedSize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "makeImmutable": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.24
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "asImmutableList": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.47
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$ReverseImmutableList:subList(int,int)": {
            "size": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.48
            },
            "checkPositionIndexes": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "reversePosition": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "subList": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.53
            },
            "reverse": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList$SubList:subList(int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:subRangeMap(com.google.common.collect.Range)": {
            "checkNotNull": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "isEmpty": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.25
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.16
            },
            "span": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "encloses": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.49
            },
            "subList": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:getSubSet(int,int)": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "subList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:findSuffixOfType(com.google.common.base.Optional)": {
            "subList": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "join": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "fromNullable": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.23
            },
            "matchesType": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "containsKey": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:fromEntries(java.util.Comparator,boolean,java.util.Map$Entry[],int)": {
            "emptyMap": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "of": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkEntryNotNull": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.33
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors$EnumSetAccumulator:toImmutableSet()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asImmutable": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:copyOfEnumSet(java.util.EnumSet)": {
            "asImmutable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:immutableEnumSet(java.lang.Iterable)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "asImmutable": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "addAll": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.26
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$SerializedForm:readResolve()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:createValues()": {
            "createValues": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:equals(java.lang.Object)": {
            "size": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "hasSameComparator": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.28
            },
            "iterator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.33
            },
            "containsAll": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:combine(com.google.common.collect.ImmutableSet$Builder)": {
            "copyIfNecessary": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractBaseGraph$2:iterator()": {
            "predecessors": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.08
            },
            "transform": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.28
            },
            "successors": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.17
            },
            "of": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "difference": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "concat": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "unmodifiableIterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:incidentEdgeIterator(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "predecessors": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "transform": {
                "count_score": 0.43,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.56
            },
            "successors": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "concat": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:post(java.lang.Object)": {
            "getSubscribers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:setValue(java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:putAll(java.util.Map)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Interners$InternerImpl:intern(java.lang.Object)": {
            "getEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "putIfAbsent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$HashIterator:remove()": {
            "checkRemove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "remove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$KeySet:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$EntrySet:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:get(java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.77
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "get": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap:containsKey(java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.77
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "containsKey": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.MutableClassToInstanceMap:putInstance(java.lang.Class,java.lang.Object)": {
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "cast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Heap:tryCrossOverAndBubbleUp(int,int,java.lang.Object)": {
            "crossOver": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "elementData": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "getParentIndex": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.6
            },
            "bubbleUpAlternatingLevels": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.42,
                "total_score": 0.53
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable:rowComparator()": {
            "rowKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets:synchronizedNavigableSet(java.util.NavigableSet)": {
            "navigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:ceiling(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:descendingIterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:descendingSet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:floor(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:headSet(java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:higher(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:lower(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:pollFirst()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:pollLast()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:tailSet(java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:keySet()": {
            "navigableKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSetMultimap:removeAll(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:add(java.util.Comparator,java.lang.Object,int,int[])": {
            "getElement": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.24
            },
            "addLeftChild": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "rebalance": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.21
            },
            "addRightChild": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "checkArgument": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:removeMin(com.google.common.collect.TreeMultiset$AvlNode)": {
            "rebalance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:removeMax(com.google.common.collect.TreeMultiset$AvlNode)": {
            "rebalance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:incidentEdges(java.lang.Object)": {
            "incidentEdges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:adjacentNodes(java.lang.Object)": {
            "adjacentNodes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:edgesConnecting(java.lang.Object,java.lang.Object)": {
            "edgesConnecting": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:inEdges(java.lang.Object)": {
            "inEdges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:outEdges(java.lang.Object)": {
            "outEdges": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:successors(java.lang.Object)": {
            "successors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:adjacentNodes(java.lang.Object)": {
            "adjacentNodes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:predecessors(java.lang.Object)": {
            "predecessors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:successors(java.lang.Object)": {
            "successors": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:incidentEdges(java.lang.Object)": {
            "incidentEdges": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:hasEdgeConnecting(java.lang.Object,java.lang.Object)": {
            "hasEdgeConnecting": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:hasEdgeConnecting(com.google.common.graph.EndpointPair)": {
            "hasEdgeConnecting": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:edgeValueOrDefault(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "edgeValueOrDefault": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:edgeValueOrDefault(com.google.common.graph.EndpointPair,java.lang.Object)": {
            "edgeValueOrDefault": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,int,double)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,long)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:approximateElementCount()": {
            "bitSize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "bitCount": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "roundToLong": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath$BigIntegerToDoubleRounder:toX(double,java.math.RoundingMode)": {
            "roundToBigInteger": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:sqrtApproxWithDoubles(java.math.BigInteger)": {
            "bigToDouble": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "roundToBigInteger": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl:add(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "ensureTableCapacity": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            },
            "insertInHashTable": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:build()": {
            "review": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Comparators:least(int,java.util.Comparator)": {
            "checkNonnegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.36
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "offer": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "topK": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.collect.Ordering:leastOf(java.util.Iterator,int)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "checkNonnegative": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.24
            },
            "newArrayList": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.18
            },
            "least": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "offerAll": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "topK": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.TopKSelector:offerAll(java.lang.Iterable)": {
            "offerAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:upperCase()": {
            "upperCase": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "newInstance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.BaseEncoding$StandardBaseEncoding:lowerCase()": {
            "lowerCase": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "newInstance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.primitives.UnsignedLong:toString()": {
            "toString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:aboutToAcquire(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)": {
            "checkAcquiredLocks": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:transform(com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "derive": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:transformAsync(com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "derive": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:catchingMoreGeneric(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "derive": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:catchingAsyncMoreGeneric(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "derive": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:getChecked(java.util.concurrent.Future,java.lang.Class)": {
            "getChecked": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:getChecked(java.util.concurrent.Future,java.lang.Class,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getChecked": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable:reschedule()": {
            "restoreInterruptIfIsInterruptedException": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "notifyFailed": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.37
            },
            "immediateCancelledFuture": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.21
            },
            "initializeOrUpdateCancellationDelegate": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:startAsync()": {
            "enterIf": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.21
            },
            "enqueueStartingEvent": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "leave": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "dispatchListenerEvents": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.26
            },
            "restoreInterruptIfIsInterruptedException": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.33
            },
            "notifyFailed": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.24
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:stopAsync()": {
            "enterIf": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.12
            },
            "state": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.15
            },
            "enqueueTerminatedEvent": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.12
            },
            "enqueueStoppingEvent": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "doCancelStart": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "leave": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "dispatchListenerEvents": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.24
            },
            "restoreInterruptIfIsInterruptedException": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.31
            },
            "notifyFailed": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:notifyStarted()": {
            "enter": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.37
            },
            "notifyFailed": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.25
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.21
            },
            "enqueueRunningEvent": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "leave": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "dispatchListenerEvents": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.27
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:startAsync()": {
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "checkState": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.52
            },
            "tryStartTiming": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceListener:starting()": {
            "transitionService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceListener:running()": {
            "transitionService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceListener:stopping(com.google.common.util.concurrent.Service$State)": {
            "transitionService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceListener:terminated(com.google.common.util.concurrent.Service$State)": {
            "transitionService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceListener:failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable)": {
            "transitionService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:awaitRunning()": {
            "enterWhenUninterruptibly": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkCurrentState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "leave": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:awaitTerminated()": {
            "enterWhenUninterruptibly": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkCurrentState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "leave": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:awaitStopped()": {
            "enterWhenUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "leave": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterWhen(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "enterWhen": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:awaitRunning(long,java.util.concurrent.TimeUnit)": {
            "enterWhenUninterruptibly": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkCurrentState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.16
            },
            "leave": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractService:awaitTerminated(long,java.util.concurrent.TimeUnit)": {
            "enterWhenUninterruptibly": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "checkCurrentState": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.14
            },
            "leave": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "state": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "enterWhenUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:waitFor(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "waitFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.Monitor:waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "waitForUninterruptibly": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:awaitStopped(long,java.util.concurrent.TimeUnit)": {
            "enter": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "waitForUninterruptibly": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "in": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.52,
                "total_score": 0.41
            },
            "not": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.52,
                "total_score": 0.56
            },
            "filterKeys": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.15,
                "total_score": 0.26
            },
            "leave": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.util.concurrent.FluentFuture:withTimeout(java.time.Duration,java.util.concurrent.ScheduledExecutorService)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "withTimeout": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.Platform:precomputeCharMatcher(com.google.common.base.CharMatcher)": {
            "precomputedInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:write(byte[],java.io.File)": {
            "write": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$SlicedByteSource:openStream()": {
            "sliceStream": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$SlicedByteSource:openBufferedStream()": {
            "openBufferedStream": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "sliceStream": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ConcatenatedByteSource:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$SlicedByteSource:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource$ConcatenatedByteSource:size()": {
            "size": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.ByteSource:hash(com.google.common.hash.HashFunction)": {
            "asOutputStream": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "copyTo": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.io.Files:copy(java.io.File,java.io.OutputStream)": {
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyTo": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Resources:copy(java.net.URL,java.io.OutputStream)": {
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyTo": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Files:copy(java.io.File,java.io.File)": {
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "asByteSource": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.34
            },
            "copyTo": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.ByteSource$AsCharSource:read()": {
            "read": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:toByteArray(java.io.File)": {
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "read": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Resources:toByteArray(java.net.URL)": {
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "read": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Files:readBytes(java.io.File,com.google.common.io.ByteProcessor)": {
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "read": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Files:equal(java.io.File,java.io.File)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "asByteSource": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.5
            },
            "contentEquals": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:equal(java.nio.file.Path,java.nio.file.Path)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "sizeIfKnown": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.19
            },
            "contentEquals": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.io.Files:write(java.lang.CharSequence,java.io.File,java.nio.charset.Charset)": {
            "write": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:append(java.lang.CharSequence,java.io.File,java.nio.charset.Charset)": {
            "write": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource$ConcatenatedCharSource:length()": {
            "length": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable)": {
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyTo": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Files:readFirstLine(java.io.File,java.nio.charset.Charset)": {
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "readFirstLine": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Files:readLines(java.io.File,java.nio.charset.Charset)": {
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "readLines": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.io.Files:readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor)": {
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "readLines": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Resources:readLines(java.net.URL,java.nio.charset.Charset,com.google.common.io.LineProcessor)": {
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "readLines": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.CharSource$ConcatenatedCharSource:isEmpty()": {
            "isEmpty": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:map(java.io.File,java.nio.channels.FileChannel$MapMode)": {
            "mapInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:map(java.io.File,java.nio.channels.FileChannel$MapMode,long)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "mapInternal": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$Application:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit)": {
            "addDelayedShutdownHook": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$Application:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit)": {
            "addDelayedShutdownHook": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)": {
            "addDelayedShutdownHook": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:removeValueFromChain(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object,int,java.lang.Object,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)": {
            "enqueueNotification": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.34
            },
            "removeEntryFromChain": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:removeLoadingValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference)": {
            "equivalent": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "isActive": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.14
            },
            "getOldValue": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "removeEntryFromChain": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.14
            },
            "postWriteCleanup": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.36
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:awaitHealthy()": {
            "enterWhenUninterruptibly": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.22
            },
            "checkHealthy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "leave": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:awaitHealthy(long,java.util.concurrent.TimeUnit)": {
            "enter": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.35
            },
            "waitForUninterruptibly": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.19
            },
            "of": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "in": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.69,
                "total_score": 0.62
            },
            "filterKeys": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.46,
                "total_score": 0.38
            },
            "checkHealthy": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "leave": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:filterValues(com.google.common.collect.Multimap,com.google.common.base.Predicate)": {
            "valuePredicateOnEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Ordering:compound(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:copyOf(java.util.Map)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:startupTimes()": {
            "enter": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.23
            },
            "newArrayListWithCapacity": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.17
            },
            "isRunning": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "elapsed": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.42
            },
            "immutableEntry": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.64,
                "total_score": 0.59
            },
            "leave": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.32
            },
            "natural": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "onResultOf": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.12
            },
            "copyOf": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:toArray(java.lang.Class)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Iterators:toArray(java.util.Iterator,java.lang.Class)": {
            "newArrayList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:toSortedSet(java.util.Comparator)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:copyOf(java.lang.Iterable)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Comparator,java.util.Collection)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:intersects(com.google.common.collect.Range)": {
            "natural": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "binarySearch": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "isConnected": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.31
            },
            "intersection": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.33
            },
            "isEmpty": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:encloses(com.google.common.collect.Range)": {
            "natural": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "binarySearch": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "encloses": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:rangeContaining(java.lang.Comparable)": {
            "belowValue": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.18,
                "total_score": 0.3
            },
            "natural": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "binarySearch": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "contains": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.collect.ForwardingListMultimap:removeAll(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedListMultimap:removeAll(java.lang.Object)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:headMap(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:subMap(java.lang.Object,java.lang.Object)": {
            "subMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$TransformedEntriesNavigableMap:tailMap(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RowSortedTable:rowMap()": {
            "rowMap": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors$ImmutableTableCollectorState:combine(com.google.common.collect.TableCollectors$ImmutableTableCollectorState,java.util.function.BinaryOperator)": {
            "getRowKey": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "getColumnKey": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "getValue": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.net.MediaType:toString()": {
            "computeToString": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:descendingMap()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:headMap(java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:tailMap(java.lang.Object,boolean)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "navigableMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized:navigableMap(java.util.NavigableMap)": {
            "navigableMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap)": {
            "sortedSetMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.CharSource:read()": {
            "create": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "register": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "toString": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "close": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "rethrow": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:loadAsync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader)": {
            "loadFuture": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "directExecutor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:createWithExpectedSize(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashSet:create(java.util.Collection)": {
            "createWithExpectedSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:create()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:create(java.util.Comparator,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:<init>(java.util.Comparator,java.util.Comparator,com.google.common.collect.Multimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$WildcardCapturer:captureAsTypeVariable(java.lang.reflect.Type[])": {
            "on": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "join": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$SerializationProxy:readObject(java.io.ObjectInputStream)": {
            "makeMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.02
            },
            "weakKeys": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "makeMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.util.concurrent.Striped$LargeLazyStriped:<init>(int,com.google.common.base.Supplier)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "weakValues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "makeMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.47
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractFuture$TrustedFuture:get(long,java.util.concurrent.TimeUnit)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:addNode(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addNodeInternal": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:putEdgeValue(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkArgument": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.42
            },
            "get": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.26
            },
            "addNodeInternal": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "checkPositive": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$StringConverter:doForward(java.lang.String)": {
            "to": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CaseFormat$StringConverter:doBackward(java.lang.String)": {
            "to": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher$Negated:matchesAllOf(java.lang.CharSequence)": {
            "matchesNoneOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:matchesAnyOf(java.lang.CharSequence)": {
            "matchesNoneOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:retainFrom(java.lang.CharSequence)": {
            "negate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeFrom": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:replaceFrom(java.lang.CharSequence,java.lang.CharSequence)": {
            "removeFrom": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "replaceFrom": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "indexIn": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:getCoercedIPv4Address(java.net.InetAddress)": {
            "hasEmbeddedIPv4ClientAddress": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "getEmbeddedIPv4ClientAddress": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "murmur3_32_fixed": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "toByteArray": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.51
            },
            "getInet4Address": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            }
        }
    },
    {
        "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:putString(java.lang.CharSequence,java.nio.charset.Charset)": {
            "update": {
                "count_score": 0.83,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "putString": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.hash.AbstractCompositeHashFunction$1:putBytes(byte[])": {
            "putBytes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.hash.AbstractHashFunction:hashBytes(byte[])": {
            "hashBytes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.LittleEndianDataInputStream:readFully(byte[])": {
            "readFully": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:iterator()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:size()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:removeAll(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:isEmpty()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:contains(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:add(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:remove(java.lang.Object)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:containsAll(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:addAll(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:retainAll(java.util.Collection)": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:clear()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:toArray()": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:toArray(java.lang.Object[])": {
            "delegate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.RateLimiter:create(double,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unmodifiableSortedMultiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unmodifiableSortedMultiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unmodifiableSortedMultiset": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedSetMultimap:unmodifiableCollectionSubclass(java.util.Collection)": {
            "unmodifiableNavigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:navigableKeySet()": {
            "unmodifiableNavigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:descendingKeySet()": {
            "unmodifiableNavigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$CustomMultimap:unmodifiableCollectionSubclass(java.util.Collection)": {
            "unmodifiableNavigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps$CustomSetMultimap:unmodifiableCollectionSubclass(java.util.Collection)": {
            "unmodifiableNavigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$UnmodifiableNavigableSet:subSet(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "unmodifiableNavigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$UnmodifiableNavigableSet:headSet(java.lang.Object,boolean)": {
            "unmodifiableNavigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Sets$UnmodifiableNavigableSet:tailSet(java.lang.Object,boolean)": {
            "unmodifiableNavigableSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.UnmodifiableSortedMultiset:createElementSet()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "unmodifiableNavigableSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.SetMultimap:entries()": {
            "entries": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:subMap(java.lang.Object,java.lang.Object)": {
            "subMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:headMap(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:tailMap(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningScheduledExecutorService:schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": {
            "schedule": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:build(com.google.common.cache.CacheLoader)": {
            "checkWeightWithWeigher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:build()": {
            "checkWeightWithWeigher": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkNonLoadingCache": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:orderedBy(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:reverseOrder()": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:naturalOrder()": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.EnumBiMap:create(java.util.Map)": {
            "inferKeyTypeOrObjectUnderJ2cl": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "inferValueTypeOrObjectUnderJ2cl": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "create": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "putAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.EnumHashBiMap:create(java.util.Map)": {
            "inferKeyTypeOrObjectUnderJ2cl": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "putAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.SortedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "replaceValues": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "replaceValues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Collections2:isPermutation(java.util.List,java.util.List)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:predecessorsMultiset()": {
            "getReference": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:successorsMultiset()": {
            "getReference": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:adjacentNodesMultiset()": {
            "getReference": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ArrayListMultimap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayListMultimap:create(com.google.common.collect.Multimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.HashMultimap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedListMultimap:create(com.google.common.collect.Multimap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.LinkedHashMultimap:create(com.google.common.collect.Multimap)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableGraph:<init>(com.google.common.graph.AbstractGraphBuilder)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$Builder:putAll(com.google.common.collect.Table)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:putAll(java.lang.Iterable)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:putAll(java.util.Map)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$Builder:putAll(java.lang.Iterable)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap$AsMap:get(java.lang.Object)": {
            "filterCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap:get(java.lang.Object)": {
            "filterCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap:createEntries()": {
            "filterCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap:removeEntriesIf(com.google.common.base.Predicate)": {
            "filterCollection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "immutableEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryBiMap:<init>(com.google.common.collect.BiMap,com.google.common.base.Predicate,com.google.common.collect.BiMap)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:<init>(java.util.NavigableMap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap:<init>(java.util.SortedMap,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:degree(java.lang.Object)": {
            "saturatedAdd": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "edgesConnecting": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:edgesConnecting(com.google.common.graph.EndpointPair)": {
            "validateEndpoints": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "nodeU": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "nodeV": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.97,
                "total_score": 0.61
            },
            "edgesConnecting": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:edgeConnectingOrNull(java.lang.Object,java.lang.Object)": {
            "edgesConnecting": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap$MapEntry:setValue(java.lang.Object)": {
            "delegateOrNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.44
            },
            "uncheckedCastNullableTToT": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "updateLastKnownIndex": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "unsafeNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.CompactHashMap:readObject(java.io.ObjectInputStream)": {
            "init": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactHashSet:readObject(java.io.ObjectInputStream)": {
            "init": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableSortedMap(java.util.Comparator,java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "descendingMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "descendingMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$Builder:addAll(com.google.common.collect.RangeSet)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$Builder:combine(com.google.common.collect.ImmutableRangeSet$Builder)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$Complement:remove(com.google.common.collect.Range)": {
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSet:add(com.google.common.collect.Range)": {
            "encloses": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.71
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$Complement:add(com.google.common.collect.Range)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSet:remove(com.google.common.collect.Range)": {
            "isConnected": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.46
            },
            "intersection": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSet:clear()": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:subRangeSet(com.google.common.collect.Range)": {
            "isEmpty": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.15
            },
            "span": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.4,
                "total_score": 0.51
            },
            "encloses": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.95,
                "total_score": 0.58
            },
            "isConnected": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "intersectRanges": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.26
            },
            "of": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.33
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:closed(int,int)": {
            "integers": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:closed(long,long)": {
            "longs": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:closedOpen(int,int)": {
            "integers": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ContiguousSet:closedOpen(long,long)": {
            "longs": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:size()": {
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.38
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "saturatedCast": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:indexOf(java.lang.Object)": {
            "contains": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.29
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.38
            },
            "create": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "saturatedCast": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:intersectionInCurrentDomain(com.google.common.collect.Range)": {
            "isConnected": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.45
            },
            "intersection": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.35,
                "total_score": 0.54
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:intersection(com.google.common.collect.ContiguousSet)": {
            "checkNotNull": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "checkArgument": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "natural": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.24
            },
            "first": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.04,
                "total_score": 0.37
            },
            "max": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "last": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "min": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.08,
                "total_score": 0.36
            },
            "create": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.04,
                "total_score": 0.02
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:containsKey(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "subMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:headMap(com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:tailMap(com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "subMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:headMap(com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$RangesByUpperBound:tailMap(com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "subMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:headMap(com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:tailMap(com.google.common.collect.Cut,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:containsKey(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:coalescedRange(com.google.common.collect.Range,java.lang.Object)": {
            "coalesce": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm:readResolve()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "asSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:remove(com.google.common.collect.Range)": {
            "isEmpty": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "getUpperBound": {
                "count_score": 0.38,
                "dataflow_score": 0.67,
                "indegree_score": 0.29,
                "total_score": 0.43
            },
            "compareTo": {
                "count_score": 0.23,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.4
            },
            "putRangeMapEntry": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.37
            },
            "getLowerBound": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 0.17,
                "total_score": 0.19
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:split(com.google.common.collect.Cut)": {
            "getUpperBound": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.36,
                "total_score": 0.39
            },
            "compareTo": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "getLowerBound": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.21,
                "total_score": 0.28
            },
            "putRangeMapEntry": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableNetwork:addNodeInternal(java.lang.Object)": {
            "newConnections": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.51
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableEnumMap(java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "toImmutableMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableEnumMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "toImmutableMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:copyOf(java.util.Map)": {
            "copyOfEnumMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:row(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "rowMap": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.6,
                "total_score": 0.62
            },
            "firstNonNull": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.76,
                "total_score": 0.68
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:rowKeySet()": {
            "rowMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Lists$ReverseList:removeRange(int,int)": {
            "subList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:iterator()": {
            "descendingIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:lower(java.lang.Object)": {
            "headSet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "descendingIterator": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "getNext": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:floor(java.lang.Object)": {
            "headSet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "descendingIterator": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "getNext": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:last()": {
            "descendingIterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Types:newTypeVariableImpl(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "newProxy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:copyOf(java.util.Iterator)": {
            "of": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.09
            },
            "add": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "addAll": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap$Builder:build()": {
            "rangeLexOrdering": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.18
            },
            "onKeys": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "isConnected": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.38
            },
            "intersection": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.41
            },
            "isEmpty": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "add": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.45
            },
            "build": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:copyOf(com.google.common.collect.RangeMap)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$Builder:build()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.18
            },
            "rangeLexOrdering": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.19
            },
            "peekingIterator": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.17
            },
            "isConnected": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.35
            },
            "intersection": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.38
            },
            "isEmpty": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.71
            },
            "checkArgument": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.72
            },
            "span": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "add": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.38
            },
            "build": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.91,
                "total_score": 0.68
            },
            "of": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.22
            },
            "getOnlyElement": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.47
            },
            "all": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.48
            },
            "equals": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.65,
                "total_score": 0.58
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:copyOfSortedEntries(java.util.Comparator,java.util.Collection)": {
            "emptyMultiset": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.graph.DirectedGraphConnections:ofImmutable(java.lang.Object,java.lang.Iterable,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "builder": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.12
            },
            "nodeU": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.21
            },
            "nodeV": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "add": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "checkArgument": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.27
            },
            "build": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:parseJavaClassPath()": {
            "builder": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.32
            },
            "value": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.49,
                "total_score": 0.57
            },
            "on": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "split": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.56,
                "total_score": 0.41
            },
            "add": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "build": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:getParameters()": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.37
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "add": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.45
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:getExceptionTypes()": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "add": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.77,
                "total_score": 0.68
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$TypeCollector$3:collectTypes(java.lang.Iterable)": {
            "builder": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "add": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "build": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.Types$JavaVersion:usedInGenericType(java.lang.reflect.Type[])": {
            "builder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:wrapTasks(java.util.Collection)": {
            "builder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:sortedCopyOf(java.lang.Iterable)": {
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asImmutableList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:sortedCopyOf(java.util.Comparator,java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "toArray": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "asImmutableList": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.15,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:<init>(com.google.common.collect.ImmutableMap,java.util.Map$Entry[])": {
            "asImmutableList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.JdkBackedImmutableMultiset:create(java.util.Collection)": {
            "newHashMapWithExpectedSize": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.19
            },
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "immutableEntry": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.34,
                "total_score": 0.51
            },
            "asImmutableList": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.19
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableAsList:<init>(com.google.common.collect.ImmutableCollection,java.lang.Object[])": {
            "asImmutableList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableSortedSet(java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "add": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet$SerializedForm:readResolve()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Comparator,java.util.Iterator)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap:fromEntryArray(int,java.util.Map$Entry[])": {
            "checkPositionIndex": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "closedTableSize": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.67,
                "total_score": 0.59
            },
            "createEntryArray": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.56
            },
            "checkEntryNotNull": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.39
            },
            "smear": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.4
            },
            "checkNoConflictInKeyBucket": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.14
            },
            "checkNoConflictInValueBucket": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "create": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "makeImmutable": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:buildJdkBacked()": {
            "checkState": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.34
            },
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:fromEntryArray(int,java.util.Map$Entry[],boolean)": {
            "checkPositionIndex": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "fromEntryArrayCheckingBucketOverflow": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap$2:subRangeMap(com.google.common.collect.Range)": {
            "isConnected": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.42
            },
            "intersection": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.79
            },
            "subRangeMap": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "of": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:getSubMap(int,int)": {
            "size": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "comparator": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "emptyMap": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "getSubSet": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "subList": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.29
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:getSubMultiset(int,int)": {
            "checkPositionIndexes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getSubSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:headSetImpl(java.lang.Object,boolean)": {
            "headIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getSubSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:tailSetImpl(java.lang.Object,boolean)": {
            "tailIndex": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.26
            },
            "size": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getSubSet": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:publicSuffixIndex()": {
            "absent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "findSuffixOfType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:registrySuffixIndex()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "findSuffixOfType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:fromEntries(java.util.Comparator,boolean,java.lang.Iterable)": {
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableEnumSetGeneric()": {
            "combine": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "toImmutableSet": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:copyOf(java.util.Collection)": {
            "copyOfEnumSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$EntrySet:contains(java.lang.Object)": {
            "get": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "valueEquivalence": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.29
            },
            "equivalent": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.MapMakerInternalMap$KeySet:contains(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:fillHole(int,java.lang.Object)": {
            "heapForIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.27
            },
            "fillHoleAt": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "bubbleUpAlternatingLevels": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.42,
                "total_score": 0.38
            },
            "tryCrossOverAndBubbleUp": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "elementData": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.collect.TreeBasedTable:create(com.google.common.collect.TreeBasedTable)": {
            "rowComparator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "columnComparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:headSet(java.lang.Object)": {
            "headSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:subSet(java.lang.Object,java.lang.Object)": {
            "subSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableSet:tailSet(java.lang.Object)": {
            "tailSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:add(java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.37
            },
            "count": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.13
            },
            "contains": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.46,
                "total_score": 0.28
            },
            "checkArgument": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "get": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.49,
                "total_score": 0.37
            },
            "comparator": {
                "count_score": 0.18,
                "dataflow_score": 0.5,
                "indegree_score": 0.56,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.1
            },
            "successor": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "checkAndSet": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.48
            },
            "add": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:deleteMe()": {
            "pred": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.52
            },
            "succ": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.52
            },
            "removeMax": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "rebalance": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "removeMin": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "com.google.common.hash.BloomFilter:create(com.google.common.hash.Funnel,int)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:sqrtFloor(java.math.BigInteger)": {
            "log2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "sqrtApproxWithDoubles": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$Builder:add(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "copyIfNecessary": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl:add(java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "add": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getRawTypes()": {
            "builder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.Comparators:greatest(int,java.util.Comparator)": {
            "least": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:leastOf(java.lang.Iterable,int)": {
            "leastOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:greatestOf(java.util.Iterator,int)": {
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "leastOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:catching(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor)": {
            "catchingMoreGeneric": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture:catchingAsync(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor)": {
            "catchingAsyncMoreGeneric": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable:call()": {
            "reschedule": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler:schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable)": {
            "reschedule": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:awaitStopped()": {
            "awaitStopped": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:awaitStopped(long,java.util.concurrent.TimeUnit)": {
            "awaitStopped": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.base.CharMatcher:precomputed()": {
            "precomputeCharMatcher": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:hash(java.io.File,com.google.common.hash.HashFunction)": {
            "asByteSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "hash": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Files:move(java.io.File,java.io.File)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.26
            },
            "copy": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.io.Resources:readLines(java.net.URL,java.nio.charset.Charset)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "readLines": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:map(java.io.File)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "map": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$Application:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)": {
            "getExitingExecutorService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit)": {
            "getExitingExecutorService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors$Application:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor)": {
            "getExitingScheduledExecutorService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit)": {
            "getExitingScheduledExecutorService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:addDelayedShutdownHook(java.util.concurrent.ExecutorService,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addDelayedShutdownHook": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:reclaimKey(com.google.common.cache.ReferenceEntry,int)": {
            "removeValueFromChain": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "postWriteCleanup": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:reclaimValue(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference)": {
            "equivalent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "removeValueFromChain": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "postWriteCleanup": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.26
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:removeEntry(com.google.common.cache.ReferenceEntry,int,com.google.common.cache.RemovalCause)": {
            "removeValueFromChain": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:awaitHealthy()": {
            "awaitHealthy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:awaitHealthy(long,java.util.concurrent.TimeUnit)": {
            "awaitHealthy": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedNetworkConnections:ofImmutable(java.util.Map,java.util.Map,int)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.UndirectedNetworkConnections:ofImmutable(java.util.Map)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:startupTimes()": {
            "startupTimes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.Parameter:getDeclaredAnnotationsByType(java.lang.Class)": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "filter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.3
            },
            "toArray": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Collection)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:headMap(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:subMap(java.lang.Object,java.lang.Object)": {
            "subMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Synchronized$SynchronizedNavigableMap:tailMap(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:synchronizedNavigableMap(java.util.NavigableMap)": {
            "navigableMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.io.Files:toString(java.io.File,java.nio.charset.Charset)": {
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "read": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.Resources:toString(java.net.URL,java.nio.charset.Charset)": {
            "asCharSource": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "read": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CompactLinkedHashMap:create()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeMultimap:create(com.google.common.collect.Multimap)": {
            "natural": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$WildcardCapturer$1:captureAsTypeVariable(java.lang.reflect.Type[])": {
            "captureAsTypeVariable": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:newReentrantLock(java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:newReentrantReadWriteLock(java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:createNodes(java.lang.Class)": {
            "newEnumMap": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "newArrayListWithCapacity": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "getLockName": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.25
            },
            "checkAcquiredLocks": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.27
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableGraph:addNode(java.lang.Object)": {
            "addNode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableGraph:putEdge(java.lang.Object,java.lang.Object)": {
            "putEdgeValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableValueGraph:putEdgeValue(com.google.common.graph.EndpointPair,java.lang.Object)": {
            "nodeU": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nodeV": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.49
            },
            "putEdgeValue": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:validatePart(java.lang.String,boolean)": {
            "ascii": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.44
            },
            "retainFrom": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "matchesAllOf": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.net.InetAddresses:coerceToInteger(java.net.InetAddress)": {
            "getCoercedIPv4Address": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "newDataInput": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardContains(java.lang.Object)": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "contains": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardRemove(java.lang.Object)": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "equal": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardRemoveAll(java.util.Collection)": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardRetainAll(java.util.Collection)": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "retainAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardClear()": {
            "iterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "clear": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardIsEmpty()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ForwardingCollection:standardToArray()": {
            "size": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.AbstractSortedSetMultimap:createUnmodifiableEmptyCollection()": {
            "unmodifiableCollectionSubclass": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$UnmodifiableNavigableMap:keySet()": {
            "navigableKeySet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntrySetMultimap:createEntries()": {
            "unfiltered": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "entries": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.6
            },
            "filter": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSetMultimap:entries()": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "entries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ListeningScheduledExecutorService:schedule(java.lang.Runnable,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "schedule": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LoadingSerializationProxy:readObject(java.io.ObjectInputStream)": {
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$ManualSerializationProxy:readObject(java.io.ObjectInputStream)": {
            "recreateCacheBuilder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ForwardingSortedSetMultimap:replaceValues(java.lang.Object,java.lang.Iterable)": {
            "delegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "replaceValues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:predecessors()": {
            "predecessorsMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:successors()": {
            "successorsMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:adjacentNodes()": {
            "adjacentNodesMultiset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:findAllSubscribers(java.lang.Object)": {
            "create": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "getAnnotatedMethods": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.graph.Graphs:inducedSubgraph(com.google.common.graph.Network,java.lang.Iterable)": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "expectedNodeCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "adjacentNode": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.graph.Graphs:copyOf(com.google.common.graph.Network)": {
            "from": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            },
            "expectedNodeCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "expectedEdgeCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            },
            "nodeU": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "nodeV": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork$Builder:<init>(com.google.common.graph.NetworkBuilder)": {
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Graphs:inducedSubgraph(com.google.common.graph.ValueGraph,java.lang.Iterable)": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "expectedNodeCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "successors": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.graph.Graphs:copyOf(com.google.common.graph.ValueGraph)": {
            "from": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.11
            },
            "expectedNodeCount": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.11
            },
            "nodeU": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "nodeV": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph$Builder:<init>(com.google.common.graph.ValueGraphBuilder)": {
            "copy": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "stable": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "incidentEdgeOrder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:putAll(java.util.Map)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap$Builder:putAll(java.util.Map)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap$AsMap:containsKey(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntrySetMultimap:get(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FilteredEntryMultimap$Keys$1:removeEntriesIf(com.google.common.base.Predicate)": {
            "removeEntriesIf": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryBiMap:<init>(com.google.common.collect.BiMap,com.google.common.base.Predicate)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "inversePredicate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap:headMap(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap:subMap(java.lang.Object,java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap:tailMap(java.lang.Object)": {
            "sortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "sortedMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.27
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterKeys(java.util.Map,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "keyPredicateOnEntries": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.5
            },
            "filterFiltered": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.42
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterEntries(java.util.Map,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "filterFiltered": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:inDegree(java.lang.Object)": {
            "degree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:outDegree(java.lang.Object)": {
            "degree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:edgeConnecting(java.lang.Object,java.lang.Object)": {
            "edgeConnectingOrNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:edgeConnectingOrNull(com.google.common.graph.EndpointPair)": {
            "validateEndpoints": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "nodeU": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "nodeV": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.98,
                "total_score": 0.62
            },
            "edgeConnectingOrNull": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:toImmutableSortedMap(java.util.Comparator,java.util.function.Function,java.util.function.Function)": {
            "toImmutableSortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:subSet(com.google.common.collect.Range)": {
            "subRangeSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:headSetImpl(java.lang.Comparable,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "intersectionInCurrentDomain": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.11
            },
            "forBoolean": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "intersectionInCurrentDomain": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:tailSetImpl(java.lang.Comparable,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "intersectionInCurrentDomain": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:get(java.lang.Object)": {
            "tailMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equals": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:remove(java.lang.Object)": {
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "remove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:removeEntryIf(com.google.common.base.Predicate)": {
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "entrySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "remove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:clear()": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:remove(com.google.common.collect.Range)": {
            "isConnected": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.45
            },
            "intersection": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:put(com.google.common.collect.Range,java.lang.Object)": {
            "isEmpty": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.25
            },
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableNetwork:addNode(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "addNodeInternal": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableNetwork:addEdge(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "of": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.37
            },
            "checkArgument": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.74
            },
            "get": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.18
            },
            "addNodeInternal": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "put": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.collect.Maps:toImmutableEnumMap(java.util.function.Function,java.util.function.Function)": {
            "toImmutableEnumMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:toImmutableEnumMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)": {
            "toImmutableEnumMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.AbstractCache:getAllPresent(java.lang.Iterable)": {
            "newLinkedHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.cache.AbstractLoadingCache:getAll(java.lang.Iterable)": {
            "newLinkedHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "copyOf": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.DenseImmutableTable:columnMap()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DenseImmutableTable:rowMap()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SparseImmutableTable:columnMap()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.SparseImmutableTable:rowMap()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.DirectedMultiNetworkConnections:ofImmutable(java.util.Map,java.util.Map,int)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.UndirectedGraphConnections:ofImmutable(java.util.Map)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.UndirectedMultiNetworkConnections:ofImmutable(java.util.Map)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeMappingIntrospector:getTypeMappings(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$SerializedForm:create(com.google.common.collect.ImmutableTable,int[],int[])": {
            "rowKeySet": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "columnKeySet": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "values": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "toArray": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:iterator()": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:higher(java.lang.Object)": {
            "lower": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:ceiling(java.lang.Object)": {
            "floor": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:lastKey()": {
            "keySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "last": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.ByteSource:concat(java.util.Iterator)": {
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "concat": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.CharSource$CharSequenceCharSource:readLines()": {
            "linesIterator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.CharSource:concat(java.util.Iterator)": {
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "concat": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableRangeMap(java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "builder": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap$SerializedForm:createRangeMap()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "entrySet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:copyOf(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "addAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:copyOf(java.util.Comparator,java.lang.Iterable)": {
            "comparator": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.07
            },
            "copyOfSortedEntries": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "newArrayList": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            },
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "create": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "addAll": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.49
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:copyOfSorted(com.google.common.collect.SortedMultiset)": {
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "copyOfSortedEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:getClassLoaderUrls(java.lang.ClassLoader)": {
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.3
            },
            "parseJavaClassPath": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.reflect.Types$ParameterizedTypeImpl:<init>(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.33
            },
            "usedInGenericType": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.reflect.Types$WildcardTypeImpl:<init>(java.lang.reflect.Type[],java.lang.reflect.Type[])": {
            "usedInGenericType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:invokeAll(java.util.Collection)": {
            "wrapTasks": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)": {
            "wrapTasks": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:invokeAny(java.util.Collection)": {
            "wrapTasks": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.WrappingExecutorService:invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)": {
            "wrapTasks": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Collections2$OrderedPermutationCollection:<init>(java.lang.Iterable,java.util.Comparator)": {
            "sortedCopyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "calculateSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Ordering:immutableSortedCopy(java.lang.Iterable)": {
            "sortedCopyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableBiMap:createEntrySet()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMap:createEntrySet()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:buildJdkBacked()": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableMultiset:create(java.util.Collection)": {
            "of": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.22
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "closedTableSize": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.13
            },
            "checkNotNull": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "smear": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.16
            },
            "hashFloodingDetected": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "asImmutableList": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.45
            },
            "create": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.38
            },
            "saturatedCast": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.collect.ImmutableCollection:asList()": {
            "of": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "toArray": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$CachingAsList:createAsList()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSet:createAsList()": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:toImmutableSortedSet(java.util.Comparator)": {
            "toImmutableSortedSet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:copyOf(java.util.Iterator)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:buildOrThrow()": {
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.22
            },
            "from": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "valueFunction": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.42
            },
            "onResultOf": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.48
            },
            "fromEntryArray": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:buildJdkBacked()": {
            "checkState": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.21
            },
            "fromEntryArray": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:build(boolean)": {
            "of": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.4
            },
            "lastEntryForEachKey": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "from": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "valueFunction": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.42,
                "total_score": 0.5
            },
            "onResultOf": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.54
            },
            "fromEntryArray": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:headMap(java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "headIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.15,
                "total_score": 0.46
            },
            "getSubMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:tailMap(java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "tailIndex": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.15,
                "total_score": 0.44
            },
            "size": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.12
            },
            "getSubMap": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:headMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "headIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.15,
                "total_score": 0.46
            },
            "getSubMultiset": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedMultiset:tailMultiset(java.lang.Object,com.google.common.collect.BoundType)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "tailIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.15,
                "total_score": 0.46
            },
            "getSubMultiset": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableSortedSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "tailSetImpl": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:isPublicSuffix()": {
            "publicSuffixIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:hasPublicSuffix()": {
            "publicSuffixIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:isUnderPublicSuffix()": {
            "publicSuffixIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:isTopPrivateDomain()": {
            "publicSuffixIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:isRegistrySuffix()": {
            "registrySuffixIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:hasRegistrySuffix()": {
            "registrySuffixIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:isUnderRegistrySuffix()": {
            "registrySuffixIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:isTopDomainUnderRegistrySuffix()": {
            "registrySuffixIndex": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:copyOf(java.lang.Iterable,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:copyOfSorted(java.util.SortedMap)": {
            "isPartialView": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "fromEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:copyOfInternal(java.util.Map,java.util.Comparator)": {
            "isPartialView": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "fromEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:valueSet(java.util.Comparator,java.util.Collection)": {
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets$CartesianSet:create(java.util.List)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "copyOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.62
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "add": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.75
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.Sets$SetView:immutableCopy()": {
            "copyOf": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$ClassSet:rawTypes()": {
            "classesOnly": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "collectTypes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$TypeSet:rawTypes()": {
            "collectTypes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:removeAt(int)": {
            "checkPositionIndex": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.41
            },
            "elementData": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "heapForIndex": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.26
            },
            "swapWithConceptuallyLastElement": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "fillHole": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:remove(java.util.Comparator,java.lang.Object,int,int[])": {
            "getElement": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "rebalance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.37
            },
            "deleteMe": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:setCount(java.util.Comparator,java.lang.Object,int,int[])": {
            "getElement": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "addLeftChild": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "rebalance": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "addRightChild": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "deleteMe": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset$AvlNode:setCount(java.util.Comparator,java.lang.Object,int,int,int[])": {
            "getElement": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "addLeftChild": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "rebalance": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "addRightChild": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "deleteMe": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.math.BigIntegerMath:sqrt(java.math.BigInteger,java.math.RoundingMode)": {
            "checkNonNegative": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "fitsInLong": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.16
            },
            "sqrt": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "sqrtFloor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "checkRoundingUnnecessary": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:copyOf(java.util.Iterator)": {
            "of": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.08
            },
            "add": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.3
            },
            "addAll": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$LocationInfo:scanJarFile(java.util.jar.JarFile,com.google.common.collect.ImmutableSet$Builder)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$LocationInfo:scanDirectory(java.io.File,java.lang.String,java.util.Set,com.google.common.collect.ImmutableSet$Builder)": {
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "add": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:getClassPathFromManifest(java.io.File,java.util.jar.Manifest)": {
            "of": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "builder": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.29
            },
            "split": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.29
            },
            "getClassPathEntry": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "toFile": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.43
            },
            "add": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.65,
                "total_score": 0.6
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getRawType()": {
            "getRawTypes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:someRawTypeIsSubclassOf(java.lang.Class)": {
            "getRawTypes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:greatestOf(java.lang.Iterable,int)": {
            "reverse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "leastOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:awaitStopped(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "awaitStopped": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)": {
            "getExitingExecutorService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getExitingExecutorService": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor)": {
            "getExitingScheduledExecutorService": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.MoreExecutors:getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getExitingScheduledExecutorService": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:reclaimKey(com.google.common.cache.ReferenceEntry)": {
            "segmentFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reclaimKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:reclaimValue(com.google.common.cache.LocalCache$ValueReference)": {
            "segmentFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "reclaimValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:expireEntries(long)": {
            "drainRecencyQueue": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "peek": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "isExpired": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "removeEntry": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:evictEntries(com.google.common.cache.ReferenceEntry)": {
            "evictsBySize": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "drainRecencyQueue": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "removeEntry": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "getNextEvictable": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:awaitHealthy(java.time.Duration)": {
            "toNanosSaturated": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "awaitHealthy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:startupDurations()": {
            "startupTimes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "transformValues": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.89,
                "total_score": 0.75
            },
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.reflect.Parameter:getAnnotationsByType(java.lang.Class)": {
            "getDeclaredAnnotationsByType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:newReentrantLock(java.lang.String)": {
            "newReentrantLock": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:newReentrantReadWriteLock(java.lang.String)": {
            "newReentrantReadWriteLock": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:getOrCreateNodes(java.lang.Class)": {
            "createNodes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableGraph:putEdge(com.google.common.graph.EndpointPair)": {
            "nodeU": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nodeV": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.49
            },
            "putEdge": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:validateSyntax(java.util.List)": {
            "validatePart": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:register(java.lang.Object)": {
            "findAllSubscribers": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "firstNonNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:unregister(java.lang.Object)": {
            "findAllSubscribers": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.NetworkBuilder:immutable()": {
            "cast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.Graphs:inducedSubgraph(com.google.common.graph.Graph,java.lang.Iterable)": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "expectedNodeCount": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "successors": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.graph.Graphs:copyOf(com.google.common.graph.Graph)": {
            "from": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.18
            },
            "expectedNodeCount": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "build": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.18
            },
            "nodeU": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "nodeV": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph$Builder:<init>(com.google.common.graph.GraphBuilder)": {
            "copy": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "stable": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "incidentEdgeOrder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.graph.ValueGraphBuilder:immutable()": {
            "cast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterFiltered(com.google.common.collect.Maps$FilteredEntryBiMap,com.google.common.base.Predicate)": {
            "and": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "unfiltered": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterEntries(java.util.NavigableMap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "filterFiltered": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:headSet(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:subSet(java.lang.Object,java.lang.Object)": {
            "subMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:tailSet(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterEntries(java.util.SortedMap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "filterFiltered": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.09
            }
        }
    },
    {
        "com.google.common.collect.FilteredKeyMultimap:createAsMap()": {
            "filterKeys": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterValues(java.util.Map,com.google.common.base.Predicate)": {
            "valuePredicateOnEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.AbstractNetwork:edgeConnecting(com.google.common.graph.EndpointPair)": {
            "validateEndpoints": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.22
            },
            "nodeU": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "nodeV": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.98,
                "total_score": 0.62
            },
            "edgeConnecting": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:headSetImpl(java.lang.Comparable,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean)": {
            "compareOrThrow": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "of": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "forBoolean": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "subSet": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:tailSetImpl(java.lang.Comparable,boolean)": {
            "forBoolean": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "subSet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:headSetImpl(java.lang.Object,boolean)": {
            "headSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "subSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularContiguousSet:tailSetImpl(java.lang.Object,boolean)": {
            "tailSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:containsKey(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:put(com.google.common.collect.Range,java.lang.Object)": {
            "encloses": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.74,
                "total_score": 0.7
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:putCoalescing(com.google.common.collect.Range,java.lang.Object)": {
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.21
            },
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "coalescedRange": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:putAll(com.google.common.collect.RangeMap)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableNetwork:addEdge(com.google.common.graph.EndpointPair,java.lang.Object)": {
            "nodeU": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nodeV": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.49
            },
            "addEdge": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:toImmutableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)": {
            "toImmutableMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:connectionsOf(com.google.common.graph.Graph,java.lang.Object)": {
            "constant": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "ofImmutable": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "asMap": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:connectionsOf(com.google.common.graph.ValueGraph,java.lang.Object)": {
            "ofImmutable": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "asMap": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:connectionsOf(com.google.common.graph.Network,java.lang.Object)": {
            "sourceNodeFn": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "asMap": {
                "count_score": 0.14,
                "dataflow_score": 0.57,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "targetNodeFn": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "ofImmutable": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "adjacentNodeFn": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            }
        }
    },
    {
        "com.google.common.collect.DescendingImmutableSortedSet:descendingIterator()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:first()": {
            "iterator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap:toImmutableRangeMap(java.util.function.Function,java.util.function.Function)": {
            "toImmutableRangeMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeMap$SerializedForm:readResolve()": {
            "isEmpty": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            },
            "createRangeMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:copyOf(java.lang.Iterable)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset$Builder:build()": {
            "copyOfSorted": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:getClassPathEntries(java.lang.ClassLoader)": {
            "newLinkedHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.28
            },
            "getClassLoaderUrls": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "toFile": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.19
            },
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:resolveWildcardType(java.lang.reflect.WildcardType)": {
            "resolveTypes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:canonicalizeWildcardType(java.lang.reflect.TypeVariable,java.lang.reflect.WildcardType)": {
            "any": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "isSubtypeOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.Types:subtypeOf(java.lang.reflect.Type)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Types:supertypeOf(java.lang.reflect.Type)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Collections2:orderedPermutations(java.lang.Iterable,java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:toSortedList(java.util.Comparator)": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.38
            },
            "getDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "immutableSortedCopy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:copyFromEntries(java.util.Collection)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableAsList$SerializedForm:readResolve()": {
            "asList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:copyOf(java.util.Collection)": {
            "asList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "asImmutableList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.SparseImmutableTable:getValue(int)": {
            "values": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "asList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet$CachingAsList:asList()": {
            "createAsList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap$Builder:build()": {
            "buildOrThrow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:buildOrThrow()": {
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:buildKeepingLast()": {
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:headMap(java.lang.Object)": {
            "headMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:lowerEntry(java.lang.Object)": {
            "headMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "lastEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:floorEntry(java.lang.Object)": {
            "headMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "lastEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "comparator": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "checkArgument": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.18
            },
            "headMap": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "tailMap": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:tailMap(java.lang.Object)": {
            "tailMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:ceilingEntry(java.lang.Object)": {
            "tailMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "firstEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:higherEntry(java.lang.Object)": {
            "tailMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "firstEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:copyOf(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableSortedMap(java.util.Comparator,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "copyOfSorted": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:copyOf(java.util.Map)": {
            "copyOfInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:copyOf(java.util.Map,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOfInternal": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets:cartesianProduct(java.util.List)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:removeExact(java.lang.Object)": {
            "removeAt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:removeAndGet(int)": {
            "elementData": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeAt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:remove(java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "count": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.16
            },
            "get": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.58,
                "total_score": 0.57
            },
            "contains": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.26
            },
            "comparator": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.66,
                "total_score": 0.61
            },
            "remove": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "checkAndSet": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:setCount(java.lang.Object,int)": {
            "checkNonnegative": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.38
            },
            "contains": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            },
            "checkArgument": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "get": {
                "count_score": 0.12,
                "dataflow_score": 0.33,
                "indegree_score": 0.49,
                "total_score": 0.33
            },
            "add": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "comparator": {
                "count_score": 0.12,
                "dataflow_score": 0.67,
                "indegree_score": 0.56,
                "total_score": 0.46
            },
            "setCount": {
                "count_score": 0.12,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.24
            },
            "checkAndSet": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.47
            }
        }
    },
    {
        "com.google.common.collect.TreeMultiset:setCount(java.lang.Object,int,int)": {
            "checkNonnegative": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.41
            },
            "contains": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.46,
                "total_score": 0.32
            },
            "checkArgument": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "get": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.49,
                "total_score": 0.33
            },
            "add": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "comparator": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.56,
                "total_score": 0.46
            },
            "setCount": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.23
            },
            "checkAndSet": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSet:copyOf(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$LocationInfo:scanDirectory(java.io.File,com.google.common.collect.ImmutableSet$Builder)": {
            "scanDirectory": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$LocationInfo:scanJar(java.io.File,java.util.Set,com.google.common.collect.ImmutableSet$Builder)": {
            "getClassPathFromManifest": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "scanJarFile": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:boundAsSuperclass(java.lang.reflect.Type)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getRawType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:boundsAsInterfaces(java.lang.reflect.Type[])": {
            "builder": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.14
            },
            "of": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "getRawType": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "add": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.82,
                "total_score": 0.69
            },
            "build": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.39
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:constructor(java.lang.reflect.Constructor)": {
            "getRawType": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isSubtypeOf(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "any": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.12
            },
            "isSupertypeOf": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "isSubtypeOf": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.12
            },
            "of": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.21
            },
            "isSupertypeOfArray": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "someRawTypeIsSubclassOf": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.11
            },
            "isSubtypeOfArrayType": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:method(java.lang.reflect.Method)": {
            "someRawTypeIsSubclassOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:drainKeyReferenceQueue()": {
            "reclaimKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:drainValueReferenceQueue()": {
            "reclaimValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:tryExpireEntries(long)": {
            "expireEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.CycleDetectingLockFactory:newInstanceWithExplicitOrdering(java.lang.Class,com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "getOrCreateNodes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:register(java.lang.Object)": {
            "register": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.eventbus.EventBus:unregister(java.lang.Object)": {
            "unregister": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.GraphBuilder:immutable()": {
            "cast": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterEntries(com.google.common.collect.BiMap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "filterFiltered": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:descendingMap()": {
            "filterEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:subMap(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "filterEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:headMap(java.lang.Object,boolean)": {
            "filterEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps$FilteredEntryNavigableMap:tailMap(java.lang.Object,boolean)": {
            "filterEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterKeys(java.util.NavigableMap,com.google.common.base.Predicate)": {
            "keyPredicateOnEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterValues(java.util.NavigableMap,com.google.common.base.Predicate)": {
            "valuePredicateOnEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterKeys(java.util.SortedMap,com.google.common.base.Predicate)": {
            "keyPredicateOnEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterValues(java.util.SortedMap,com.google.common.base.Predicate)": {
            "valuePredicateOnEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:headSetImpl(java.lang.Object,boolean)": {
            "headSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)": {
            "subSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet$AsSet:tailSetImpl(java.lang.Object,boolean)": {
            "tailSetImpl": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:putCoalescing(com.google.common.collect.Range,java.lang.Object)": {
            "encloses": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.22
            },
            "put": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "intersection": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.53
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:putAll(com.google.common.collect.RangeMap)": {
            "encloses": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.73
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "putAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:firstKey()": {
            "keySet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "first": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset$SerializedForm:readResolve()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "addCopies": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:copyOf(java.util.Comparator,java.util.Iterator)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.09
            },
            "addAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.14
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:locationsFrom(java.lang.ClassLoader)": {
            "builder": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.35
            },
            "getClassPathEntries": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "entrySet": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "add": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.38
            },
            "build": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.39
            }
        }
    },
    {
        "com.google.common.reflect.Types:subtypeOfComponentType(java.lang.reflect.Type[])": {
            "getComponentType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "subtypeOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.Types:newArrayType(java.lang.reflect.Type)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "supertypeOf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "subtypeOf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Collections2:orderedPermutations(java.lang.Iterable)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "orderedPermutations": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:copyOf(java.lang.Iterable)": {
            "create": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "entrySet": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.65
            },
            "copyFromEntries": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset:copyOf(java.util.Iterator)": {
            "create": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.18
            },
            "addAll": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "entrySet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "copyFromEntries": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.collect.Multisets:copyHighestCountFirst(com.google.common.collect.Multiset)": {
            "copyFromEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CartesianList:create(java.util.List)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "copyOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.76,
                "total_score": 0.68
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.46
            },
            "add": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.collect.Collections2$OrderedPermutationIterator:computeNext()": {
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "calculateNextPermutation": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Collections2$PermutationIterator:computeNext()": {
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "calculateNextPermutation": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Collections2:permutations(java.util.Collection)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableList:copyOf(java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "copyOf": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:copyOf(com.google.common.collect.RangeSet)": {
            "checkNotNull": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "of": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.15
            },
            "all": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.17
            },
            "isPartialView": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "copyOf": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.11
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedSet:copyOfSorted(java.util.SortedSet)": {
            "comparator": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.46
            },
            "emptySet": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.59,
                "total_score": 0.63
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.eventbus.SubscriberRegistry:getAnnotatedMethodsNotCached(java.lang.Class)": {
            "of": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "getTypes": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.26
            },
            "rawTypes": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "newHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.29
            },
            "checkArgument": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.18
            },
            "wrap": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.26
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "copyOf": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.graph.StandardMutableNetwork:removeNode(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "get": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.25
            },
            "copyOf": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.3
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.3
            },
            "removeEdge": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "remove": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.17
            }
        }
    },
    {
        "com.google.common.io.CharSource:readLines()": {
            "create": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "openBufferedStream": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "register": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.24
            },
            "copyOf": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.31
            },
            "close": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "rethrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableBiMap(java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap$Builder:build()": {
            "buildOrThrow": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "isEmpty": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.22
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:fromMapEntries(java.util.Collection,java.util.Comparator)": {
            "of": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.2
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "copyOf": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.66,
                "total_score": 0.48
            },
            "sortedCopyOf": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.27,
                "total_score": 0.32
            },
            "put": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "buildOrThrow": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.41
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:readObject(java.io.ObjectInputStream)": {
            "builder": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "add": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.38
            },
            "build": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.88,
                "total_score": 0.68
            },
            "put": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "buildOrThrow": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.38
            },
            "set": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$Builder:build()": {
            "buildOrThrow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$SerializedForm:legacyReadResolve()": {
            "makeBuilder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "buildOrThrow": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:fromMapEntries(java.util.Collection,java.util.Comparator)": {
            "of": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.13
            },
            "valueSet": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "buildOrThrow": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:readObject(java.io.ObjectInputStream)": {
            "builder": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.36
            },
            "valuesBuilder": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "add": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.28
            },
            "build": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.67,
                "total_score": 0.59
            },
            "put": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.72
            },
            "buildOrThrow": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.38
            },
            "set": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.45
            },
            "emptySet": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.41
            }
        }
    },
    {
        "com.google.common.collect.Maps:uniqueIndex(java.util.Iterator,com.google.common.base.Function,com.google.common.collect.ImmutableMap$Builder)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.13
            },
            "buildOrThrow": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Maps:fromProperties(java.util.Properties)": {
            "builder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "buildOrThrow": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            }
        }
    },
    {
        "com.google.common.collect.Maps:indexMap(java.util.Collection)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "buildOrThrow": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:getNodeConnections(com.google.common.graph.Graph)": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "connectionsOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "buildOrThrow": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:getNodeConnections(com.google.common.graph.Network)": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "connectionsOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "buildOrThrow": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:getEdgeToReferenceNode(com.google.common.graph.Network)": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "nodeU": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.62
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "buildOrThrow": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:getNodeConnections(com.google.common.graph.ValueGraph)": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "connectionsOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "buildOrThrow": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:build()": {
            "buildOrThrow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeTable:where(java.util.Map)": {
            "builder": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.33
            },
            "putAll": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.16
            },
            "equalsType": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "checkArgument": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "put": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.38
            },
            "buildOrThrow": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.thirdparty.publicsuffix.TrieParser:parseFullString(java.lang.String)": {
            "builder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.77
            },
            "newArrayDeque": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.09
            },
            "doParseTrieToBuilder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "buildOrThrow": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.Maps:toMap(java.util.Iterator,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.21
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.24
            },
            "buildKeepingLast": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:lowerKey(java.lang.Object)": {
            "lowerEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:floorKey(java.lang.Object)": {
            "floorEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:subMap(java.lang.Object,java.lang.Object)": {
            "subMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:ceilingKey(java.lang.Object)": {
            "ceilingEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:higherKey(java.lang.Object)": {
            "higherEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "keyOrNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMap:toImmutableSortedMap(java.util.Comparator,java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)": {
            "toImmutableSortedMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$QueueIterator:remove()": {
            "checkRemove": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.23
            },
            "checkModCount": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.14
            },
            "size": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.17
            },
            "removeAt": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.14
            },
            "foundAndRemovedExactReference": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "removeExact": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "checkState": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:poll()": {
            "removeAndGet": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:pollLast()": {
            "getMaxElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "removeAndGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:removeLast()": {
            "getMaxElementIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "removeAndGet": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:toSet()": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Traverser:validate(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$LocationInfo:scan(java.io.File,java.util.Set,com.google.common.collect.ImmutableSet$Builder)": {
            "scanDirectory": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "scanJar": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isSupertypeOf(com.google.common.reflect.TypeToken)": {
            "getType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "isSubtypeOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isSupertypeOf(java.lang.reflect.Type)": {
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getType": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "isSubtypeOf": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isSubtypeOf(com.google.common.reflect.TypeToken)": {
            "getType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "isSubtypeOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isOwnedBySubtypeOf(java.lang.reflect.Type)": {
            "getTypes": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.25
            },
            "getOwnerTypeIfPresent": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "isSubtypeOf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:drainReferenceQueues()": {
            "usesKeyReferences": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "drainKeyReferenceQueue": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "usesValueReferences": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "drainValueReferenceQueue": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterKeys(com.google.common.collect.BiMap,com.google.common.base.Predicate)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "keyPredicateOnEntries": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.49
            },
            "filterEntries": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.Maps:filterValues(com.google.common.collect.BiMap,com.google.common.base.Predicate)": {
            "valuePredicateOnEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "filterEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSortedMultiset:copyOf(java.util.Iterator)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$WildcardCapturer:capture(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "notForTypeVariable": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "newArrayType": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.12
            },
            "forTypeVariable": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "captureNullable": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "captureAsTypeVariable": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:resolveGenericArrayType(java.lang.reflect.GenericArrayType)": {
            "newArrayType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:canonicalizeWildcardsInType(java.lang.reflect.Type)": {
            "newArrayType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:toGenericType(java.lang.Class)": {
            "newArrayType": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "of": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.53
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:toMultiset()": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$Builder:build()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultiset$SerializedForm:readResolve()": {
            "create": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.6
            },
            "add": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.net.MediaType:parametersAsMap()": {
            "copyOf": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "transformValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.Lists:cartesianProduct(java.util.List)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec:parse(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "split": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.49,
                "total_score": 0.56
            },
            "copyOf": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.67,
                "total_score": 0.6
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.AllEqualOrdering:immutableSortedCopy(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:toList()": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:listFiles(java.nio.file.Path)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:<init>(java.lang.String)": {
            "replaceFrom": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.11
            },
            "toLowerCase": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.28
            },
            "checkArgument": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.51
            },
            "split": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.24
            },
            "copyOf": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.31
            },
            "validateSyntax": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner:<init>(boolean,java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:allAsList(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:whenAllComplete(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:whenAllSucceed(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:successfulAsList(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:gwtCompatibleToArray(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:unionOf(java.lang.Iterable)": {
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:intersection(com.google.common.collect.RangeSet)": {
            "create": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "removeAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:difference(com.google.common.collect.RangeSet)": {
            "create": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "removeAll": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.collect.ImmutableBiMap:toImmutableBiMap(java.util.function.Function,java.util.function.Function)": {
            "toImmutableBiMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableClassToInstanceMap:copyOf(java.util.Map)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "putAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:copyOf(com.google.common.collect.Multimap)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "fromMapEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap$Builder:build()": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "onKeys": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.18
            },
            "immutableSortedCopy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.18
            },
            "fromMapEntries": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableMap(java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.05
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.03
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap:merge(com.google.common.collect.Range,java.lang.Object,java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "isEmpty": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "split": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "builder": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.18
            },
            "getLowerBound": {
                "count_score": 0.13,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.4
            },
            "equals": {
                "count_score": 0.13,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            },
            "put": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.23
            },
            "getUpperBound": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.12
            },
            "build": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap$SerializedForm:readResolve()": {
            "legacyReadResolve": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "makeBuilder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.16
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "buildOrThrow": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap$Builder:build()": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "onKeys": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.18
            },
            "immutableSortedCopy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.18
            },
            "fromMapEntries": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:copyOf(com.google.common.collect.Multimap,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.13
            },
            "fromMapEntries": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.Maps:uniqueIndex(java.util.Iterator,com.google.common.base.Function)": {
            "builder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "uniqueIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:<init>(java.lang.Iterable,java.lang.Iterable)": {
            "copyOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.35
            },
            "checkArgument": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "indexMap": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.27
            },
            "eraseAll": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "com.google.common.collect.DenseImmutableTable:<init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "indexMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.collect.ExplicitOrdering:<init>(java.util.List)": {
            "indexMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets$PowerSet:<init>(java.util.Set)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "indexMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.Sets:combinations(java.util.Set,int)": {
            "indexMap": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "checkNonnegative": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "checkArgument": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "of": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.57,
                "total_score": 0.6
            },
            "keySet": {
                "count_score": 0.31,
                "dataflow_score": 0.33,
                "indegree_score": 0.6,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.collect.SparseImmutableTable:<init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.08
            },
            "indexMap": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "newLinkedHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.08
            },
            "copyOf": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.3
            },
            "put": {
                "count_score": 0.55,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.56
            },
            "buildOrThrow": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.37
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph:copyOf(com.google.common.graph.Graph)": {
            "from": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNodeConnections": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:<init>(com.google.common.graph.Network)": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getNodeConnections": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getEdgeToReferenceNode": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:<init>(com.google.common.graph.ValueGraph)": {
            "from": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNodeConnections": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:where(java.util.Map)": {
            "where": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Maps:toMap(java.lang.Iterable,com.google.common.base.Function)": {
            "toMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:pollFirst()": {
            "poll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:offer(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "growIfNeeded": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "heapForIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.14
            },
            "bubbleUp": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "pollLast": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:getAllClasses()": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "filter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "toSet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:getTopLevelClasses()": {
            "from": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "filter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.33
            },
            "isTopLevel": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "toSet": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$ClassSet:delegate()": {
            "classesOnly": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "collectTypes": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "from": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "filter": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.23
            },
            "toSet": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.27
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$InterfaceSet:delegate()": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "filter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "toSet": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.16
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$InterfaceSet:rawTypes()": {
            "collectTypes": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "from": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "filter": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.14
            },
            "toSet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.19
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$TypeSet:delegate()": {
            "collectTypes": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "from": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "filter": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.25
            },
            "toSet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.graph.Traverser:breadthFirst(java.lang.Iterable)": {
            "validate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Traverser:depthFirstPreOrder(java.lang.Iterable)": {
            "validate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.Traverser:depthFirstPostOrder(java.lang.Iterable)": {
            "validate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$LocationInfo:scanResources(java.util.Set)": {
            "builder": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.89,
                "total_score": 0.75
            },
            "scan": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:returning(com.google.common.reflect.TypeToken)": {
            "getReturnType": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "isSupertypeOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:tryDrainReferenceQueues()": {
            "drainReferenceQueues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:runLockedCleanup(long)": {
            "drainReferenceQueues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "expireEntries": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:resolveType(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "resolveGenericArrayType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:is(java.lang.reflect.Type,java.lang.reflect.TypeVariable)": {
            "canonicalizeWildcardType": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "every": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "isSubtypeOf": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "canonicalizeWildcardsInType": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:canonicalizeTypeArg(java.lang.reflect.TypeVariable,java.lang.reflect.Type)": {
            "canonicalizeWildcardType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "canonicalizeWildcardsInType": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.MediaType:equals(java.lang.Object)": {
            "parametersAsMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:hashCode()": {
            "parametersAsMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilder:from(java.lang.String)": {
            "parse": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "from": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.CacheBuilderSpec:disableCaching()": {
            "parse": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner:inputFutures()": {
            "from": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "transform": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.2
            },
            "toList": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:fileTreeChildren(java.nio.file.Path)": {
            "listFiles": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:from(java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.util.concurrent.Futures:inCompletionOrder(java.lang.Iterable)": {
            "gwtCompatibleToArray": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "builderWithExpectedSize": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "add": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.43
            },
            "build": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.43
            },
            "directExecutor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.collect.ImmutableRangeSet:union(com.google.common.collect.RangeSet)": {
            "asRanges": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "concat": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "unionOf": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:flatteningToImmutableListMultimap(java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "linkedHashKeys": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.09
            },
            "arrayListValues": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "flatteningToMultimap": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.11
            },
            "copyOf": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:copyOf(com.google.common.collect.Multimap)": {
            "isPartialView": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "copyOf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap$Builder:build()": {
            "build": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMap:toImmutableMap(java.util.function.Function,java.util.function.Function)": {
            "toImmutableMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TreeRangeMap$SubRangeMap:merge(com.google.common.collect.Range,java.lang.Object,java.util.function.BiFunction)": {
            "encloses": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.73
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "merge": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableSetMultimap(java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "builder": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.21
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.38
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.36
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.34
            },
            "put": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "build": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.33
            },
            "put": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.33
            },
            "put": {
                "count_score": 0.71,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:copyOf(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.13
            },
            "putAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:invert()": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.44
            },
            "entries": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.37
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:servicesByState()": {
            "builder": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.33
            },
            "enter": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.36
            },
            "entries": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.2
            },
            "put": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "leave": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.34
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:copyOf(com.google.common.collect.Multimap)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Maps:uniqueIndex(java.lang.Iterable,com.google.common.base.Function)": {
            "builderWithExpectedSize": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "uniqueIndex": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:create(java.lang.Iterable,java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:<init>(com.google.common.collect.Table)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Ordering:explicit(java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.Sets:powerSet(java.util.Set)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableTable:forOrderedComponents(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableGraph$Builder:build()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork:copyOf(com.google.common.graph.Network)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph:copyOf(com.google.common.graph.ValueGraph)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:covariantly(java.lang.reflect.Type)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getTypeMappings": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "where": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.76,
                "total_score": 0.75
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:invariantly(java.lang.reflect.Type)": {
            "capture": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getTypeMappings": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.57
            },
            "where": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.86,
                "total_score": 0.59
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:where(java.lang.reflect.Type,java.lang.reflect.Type)": {
            "newHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.11
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "populateTypeMappings": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "where": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.16
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:toMap(com.google.common.base.Function)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toMap": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Builder:create(java.lang.Iterable)": {
            "initialQueueSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "offer": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:add(java.lang.Object)": {
            "offer": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:addAll(java.util.Collection)": {
            "offer": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:getTopLevelClasses(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "builder": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.13
            },
            "getTopLevelClasses": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "getPackageName": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "add": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:getTopLevelClassesRecursive(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "builder": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.16
            },
            "getTopLevelClasses": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.09
            },
            "getName": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "add": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.17
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.graph.Traverser:breadthFirst(java.lang.Object)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "breadthFirst": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Traverser:depthFirstPreOrder(java.lang.Object)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "depthFirstPreOrder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Traverser:depthFirstPostOrder(java.lang.Object)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "depthFirstPostOrder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath$LocationInfo:scanResources()": {
            "scanResources": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.ClassPath:from(java.lang.ClassLoader)": {
            "locationsFrom": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "file": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "builder": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.4
            },
            "scanResources": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.48
            },
            "addAll": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.48
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.Invokable:returning(java.lang.Class)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "returning": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:getEntry(java.lang.Object,int)": {
            "getFirst": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "tryDrainReferenceQueues": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.23
            },
            "equivalent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:getLiveValue(com.google.common.cache.ReferenceEntry,long)": {
            "tryDrainReferenceQueues": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.3
            },
            "isExpired": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "tryExpireEntries": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:preWriteCleanup(long)": {
            "runLockedCleanup": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:cleanUp()": {
            "runLockedCleanup": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "runUnlockedCleanup": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeTable:resolveInternal(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "resolveType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:resolveTypesInPlace(java.lang.reflect.Type[])": {
            "resolveType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver:resolveParameterizedType(java.lang.reflect.ParameterizedType)": {
            "resolveType": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "resolveTypes": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$1:getGenericReturnType()": {
            "getGenericReturnType": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "resolveType": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$2:getGenericReturnType()": {
            "getGenericReturnType": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "resolveType": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:where(com.google.common.reflect.TypeParameter,com.google.common.reflect.TypeToken)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.79,
                "total_score": 0.72
            },
            "where": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.48
            },
            "resolveType": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:writeReplace()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "resolveType": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.57,
                "total_score": 0.68
            },
            "of": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner:futureCombiner()": {
            "inputFutures": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "whenAllSucceed": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "whenAllComplete": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.io.MoreFiles:fileTraverser()": {
            "fileTreeChildren": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "forTree": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "com.google.common.net.HostSpecifier:fromValid(java.lang.String)": {
            "fromString": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.14
            },
            "hasPort": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            },
            "checkArgument": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "getHost": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "forString": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "toUriString": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "from": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.33,
                "total_score": 0.31
            },
            "hasPublicSuffix": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "toString": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:ancestor(int)": {
            "subList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "join": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "from": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:child(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "from": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:isValid(java.lang.String)": {
            "from": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:flatteningToImmutableListMultimap(java.util.function.Function,java.util.function.Function)": {
            "flatteningToImmutableListMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:toImmutableListMultimap(java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "builder": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.24
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.25
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.31
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.28
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.27
            },
            "put": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "build": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.26
            },
            "put": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "builder": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.25
            },
            "put": {
                "count_score": 0.71,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:copyOf(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.11
            },
            "putAll": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "build": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:invert()": {
            "builder": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.31
            },
            "put": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "build": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:index(java.util.Iterator,com.google.common.base.Function)": {
            "checkNotNull": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "builder": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.06,
                "total_score": 0.06
            },
            "put": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.09
            }
        }
    },
    {
        "com.google.common.net.MediaType:withParameters(java.lang.String,java.lang.Iterable)": {
            "checkNotNull": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "normalizeToken": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "builder": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "put": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.47
            },
            "normalizeParameterValue": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "build": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.29,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.05
            },
            "firstNonNull": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.41,
                "total_score": 0.35
            }
        }
    },
    {
        "com.google.common.net.MediaType:create(java.lang.String,java.lang.String,com.google.common.collect.Multimap)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "normalizeToken": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "checkArgument": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "builder": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.14
            },
            "normalizeParameterValue": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "put": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.43
            },
            "build": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.29,
                "total_score": 0.29
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.05
            },
            "firstNonNull": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.41,
                "total_score": 0.34
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:toImmutableSetMultimap(java.util.function.Function,java.util.function.Function)": {
            "toImmutableSetMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:inverse()": {
            "invert": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager$ServiceManagerState:markReady()": {
            "enter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.38
            },
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.28
            },
            "servicesByState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "leave": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:servicesByState()": {
            "servicesByState": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.CollectCollectors:flatteningToImmutableSetMultimap(java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "linkedHashKeys": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.09
            },
            "linkedHashSetValues": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.09
            },
            "flatteningToMultimap": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.11
            },
            "copyOf": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:uniqueIndex(com.google.common.base.Function)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "uniqueIndex": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.ArrayTable:create(com.google.common.collect.Table)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$SerializedForm:readResolve()": {
            "of": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.3
            },
            "cellOf": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.27
            },
            "add": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "build": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "copyOf": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.3
            },
            "forOrderedComponents": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableTable:forCellsInternal(java.lang.Iterable,java.util.Comparator,java.util.Comparator)": {
            "copyOf": {
                "count_score": 0.38,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "sortedCopyOf": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.55,
                "total_score": 0.57
            },
            "forOrderedComponents": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "com.google.common.graph.ImmutableNetwork$Builder:build()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.graph.ImmutableValueGraph$Builder:build()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:<init>(java.lang.Class)": {
            "capture": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "covariantly": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.21
            },
            "resolveType": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getCovariantTypeResolver()": {
            "covariantly": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getInvariantTypeResolver()": {
            "invariantly": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue$Builder:create()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:create(java.lang.Iterable)": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs:reachableNodes(com.google.common.graph.Graph,java.lang.Object)": {
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "forGraph": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "breadthFirst": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "copyOf": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.49
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:getLiveEntry(java.lang.Object,int,long)": {
            "getEntry": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.55
            },
            "isExpired": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "tryExpireEntries": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:getEntry(java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.79,
                "total_score": 0.72
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getEntry": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:isLive(com.google.common.cache.ReferenceEntry,long)": {
            "segmentFor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getLiveValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:containsValue(java.lang.Object)": {
            "getLiveValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equivalent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:insertLoadingValueReference(java.lang.Object,int,boolean)": {
            "preWriteCleanup": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.31
            },
            "equivalent": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "postWriteCleanup": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "newEntry": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:put(java.lang.Object,int,java.lang.Object,boolean)": {
            "preWriteCleanup": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.25
            },
            "expand": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "equivalent": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "enqueueNotification": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.26
            },
            "setValue": {
                "count_score": 0.27,
                "dataflow_score": 0.5,
                "indegree_score": 0.25,
                "total_score": 0.33
            },
            "evictEntries": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.25,
                "total_score": 0.31
            },
            "postWriteCleanup": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.29
            },
            "recordLockedRead": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.08
            },
            "newEntry": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.4,
                "total_score": 0.48
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:replace(java.lang.Object,int,java.lang.Object,java.lang.Object)": {
            "preWriteCleanup": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.24
            },
            "equivalent": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "removeValueFromChain": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.18
            },
            "postWriteCleanup": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.28
            },
            "enqueueNotification": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            },
            "setValue": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.08
            },
            "evictEntries": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.08
            },
            "recordLockedRead": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:replace(java.lang.Object,int,java.lang.Object)": {
            "preWriteCleanup": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.22
            },
            "equivalent": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "removeValueFromChain": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "postWriteCleanup": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.27
            },
            "enqueueNotification": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.2
            },
            "setValue": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "evictEntries": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:remove(java.lang.Object,int)": {
            "preWriteCleanup": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.17
            },
            "equivalent": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "postWriteCleanup": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.24
            },
            "removeValueFromChain": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:remove(java.lang.Object,int,java.lang.Object)": {
            "preWriteCleanup": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.15
            },
            "equivalent": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "postWriteCleanup": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.22
            },
            "removeValueFromChain": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:storeLoadedValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,java.lang.Object)": {
            "preWriteCleanup": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.29
            },
            "expand": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.1
            },
            "equivalent": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "isActive": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.1
            },
            "getWeight": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "enqueueNotification": {
                "count_score": 0.15,
                "dataflow_score": 0.5,
                "indegree_score": 0.63,
                "total_score": 0.45
            },
            "setValue": {
                "count_score": 0.15,
                "dataflow_score": 0.5,
                "indegree_score": 0.4,
                "total_score": 0.36
            },
            "evictEntries": {
                "count_score": 0.15,
                "dataflow_score": 0.5,
                "indegree_score": 0.4,
                "total_score": 0.36
            },
            "postWriteCleanup": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.32
            },
            "newEntry": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.52,
                "total_score": 0.53
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:clear()": {
            "preWriteCleanup": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.4
            },
            "enqueueNotification": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.38
            },
            "clearReferenceQueues": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "clear": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "postWriteCleanup": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:postReadCleanup()": {
            "cleanUp": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:cleanUp()": {
            "cleanUp": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeTable$1:resolveInternal(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable)": {
            "resolveInternal": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "com.google.common.reflect.TypeResolver$TypeTable:resolve(java.lang.reflect.TypeVariable)": {
            "resolveInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$1:getGenericParameterTypes()": {
            "getGenericParameterTypes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "resolveTypesInPlace": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$1:getGenericExceptionTypes()": {
            "getGenericExceptionTypes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "resolveTypesInPlace": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$2:getGenericParameterTypes()": {
            "getGenericParameterTypes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "resolveTypesInPlace": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$2:getGenericExceptionTypes()": {
            "getGenericExceptionTypes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "resolveTypesInPlace": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:where(com.google.common.reflect.TypeParameter,java.lang.Class)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "where": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner:call(com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable,java.util.concurrent.Executor)": {
            "futureCombiner": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "call": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "directExecutor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "add": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.55,
                "total_score": 0.43
            }
        }
    },
    {
        "com.google.common.util.concurrent.ClosingFuture$Combiner:callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner$AsyncCombiningCallable,java.util.concurrent.Executor)": {
            "futureCombiner": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.15
            },
            "callAsync": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "directExecutor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "add": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.65,
                "total_score": 0.47
            }
        }
    },
    {
        "com.google.common.net.HostSpecifier:from(java.lang.String)": {
            "fromValid": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.HostSpecifier:isValid(java.lang.String)": {
            "fromValid": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:publicSuffix()": {
            "hasPublicSuffix": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "publicSuffixIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "ancestor": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.73
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:topPrivateDomain()": {
            "isTopPrivateDomain": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "isUnderPublicSuffix": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "checkState": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "publicSuffixIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.32
            },
            "ancestor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.29
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:registrySuffix()": {
            "hasRegistrySuffix": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "registrySuffixIndex": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "ancestor": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.9,
                "total_score": 0.76
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:topDomainUnderRegistrySuffix()": {
            "isTopDomainUnderRegistrySuffix": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "isUnderRegistrySuffix": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "checkState": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "registrySuffixIndex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.32
            },
            "ancestor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.29
            }
        }
    },
    {
        "com.google.common.net.InternetDomainName:parent()": {
            "hasParent": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "ancestor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:toImmutableListMultimap(java.util.function.Function,java.util.function.Function)": {
            "toImmutableListMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
            "of": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableMultimap:copyOf(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableListMultimap:inverse()": {
            "invert": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.Multimaps:index(java.lang.Iterable,com.google.common.base.Function)": {
            "index": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:withParameter(java.lang.String,java.lang.String)": {
            "of": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "withParameters": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.MediaType:withParameters(com.google.common.collect.Multimap)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:create(java.lang.String,java.lang.String)": {
            "of": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.51
            },
            "create": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "absent": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.net.MediaType:parse(java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "consumeToken": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.37
            },
            "consumeCharacter": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "builder": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.15
            },
            "hasMore": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.11
            },
            "consumeTokenIfPresent": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            },
            "previewChar": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "ascii": {
                "count_score": 0.04,
                "dataflow_score": 0.5,
                "indegree_score": 0.2,
                "total_score": 0.24
            },
            "put": {
                "count_score": 0.04,
                "dataflow_score": 0.5,
                "indegree_score": 0.34,
                "total_score": 0.3
            },
            "build": {
                "count_score": 0.04,
                "dataflow_score": 0.5,
                "indegree_score": 0.37,
                "total_score": 0.31
            },
            "create": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.38
            }
        }
    },
    {
        "com.google.common.util.concurrent.ServiceManager:<init>(java.lang.Iterable)": {
            "copyOf": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.33
            },
            "of": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.3
            },
            "directExecutor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.39
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "markReady": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "com.google.common.collect.ImmutableSetMultimap:flatteningToImmutableSetMultimap(java.util.function.Function,java.util.function.Function)": {
            "flatteningToImmutableSetMultimap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableTable:forCells(java.util.List,java.util.Comparator,java.util.Comparator)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "forCellsInternal": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.collect.RegularImmutableTable:forCells(java.lang.Iterable)": {
            "forCellsInternal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:resolveSupertype(java.lang.reflect.Type)": {
            "getCovariantTypeResolver": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "resolveType": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.73,
                "total_score": 0.69
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:isSubtypeOfParameterizedType(java.lang.reflect.ParameterizedType)": {
            "of": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.79
            },
            "getRawType": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.31
            },
            "someRawTypeIsSubclassOf": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.28,
                "total_score": 0.31
            },
            "getCovariantTypeResolver": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "resolveType": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.34
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:resolveType(java.lang.reflect.Type)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getInvariantTypeResolver": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "resolveType": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.52
            },
            "of": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.56
            }
        }
    },
    {
        "com.google.common.collect.MinMaxPriorityQueue:create()": {
            "natural": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.graph.Graphs:transitiveClosure(com.google.common.graph.Graph)": {
            "from": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "allowsSelfLoops": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.25
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "reachableNodes": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "limit": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Values:contains(java.lang.Object)": {
            "containsValue": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:refresh(java.lang.Object,int,com.google.common.cache.CacheLoader,boolean)": {
            "insertLoadingValueReference": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "loadAsync": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "getUninterruptibly": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:put(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.48
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.37,
                "total_score": 0.36
            },
            "put": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:putIfAbsent(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.48
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.37,
                "total_score": 0.36
            },
            "put": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:replace(java.lang.Object,java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.51
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.43,
                "total_score": 0.38
            },
            "replace": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:replace(java.lang.Object,java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.51
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.43,
                "total_score": 0.38
            },
            "replace": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:remove(java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.75
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:remove(java.lang.Object,java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.75
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:getAndRecordStats(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.util.concurrent.ListenableFuture)": {
            "getUninterruptibly": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.34
            },
            "elapsedNanos": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "storeLoadedValue": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "removeLoadingValue": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.23
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$HashIterator:advanceTo(com.google.common.cache.ReferenceEntry)": {
            "getLiveValue": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "postReadCleanup": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:containsKey(java.lang.Object,int)": {
            "getLiveEntry": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "postReadCleanup": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:containsValue(java.lang.Object)": {
            "getLiveValue": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "equivalent": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "postReadCleanup": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.14
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:cleanUp()": {
            "cleanUp": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken$2:toString()": {
            "on": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getGenericParameterTypes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "join": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.FluentIterable:index(com.google.common.base.Function)": {
            "getDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "index": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.net.MediaType:withCharset(java.nio.charset.Charset)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "withParameter": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            }
        }
    },
    {
        "com.google.common.net.MediaType:withoutParameters()": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:createApplicationType(java.lang.String)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:createAudioType(java.lang.String)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:createFontType(java.lang.String)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:createImageType(java.lang.String)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:createTextType(java.lang.String)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.net.MediaType:createVideoType(java.lang.String)": {
            "create": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$Builder:buildOrThrow()": {
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            },
            "getOnlyElement": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "forCells": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getGenericSuperclass()": {
            "boundAsSuperclass": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getRawType": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "resolveSupertype": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.59
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getGenericInterfaces()": {
            "boundsAsInterfaces": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "builder": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.36
            },
            "getRawType": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.33
            },
            "resolveSupertype": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.49
            },
            "add": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getSupertype(java.lang.Class)": {
            "someRawTypeIsSubclassOf": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.44,
                "total_score": 0.53
            },
            "checkArgument": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "getArraySupertype": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "toGenericType": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.15
            },
            "resolveSupertype": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:scheduleRefresh(com.google.common.cache.ReferenceEntry,java.lang.Object,int,java.lang.Object,long,com.google.common.cache.CacheLoader)": {
            "refreshes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "refresh": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:refresh(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "hash": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.5
            },
            "segmentFor": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "refresh": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:put(java.lang.Object,java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$WriteThroughEntry:setValue(java.lang.Object)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:loadAll(java.util.Set,com.google.common.cache.CacheLoader)": {
            "checkNotNull": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "createStarted": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.08
            },
            "loadAll": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "elapsed": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.17
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.05
            },
            "stop": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "put": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:putAll(java.util.Map)": {
            "put": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$HashIterator:remove()": {
            "checkState": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getKey": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "remove": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$KeySet:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:invalidate(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "remove": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:invalidateAll(java.lang.Iterable)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntrySet:remove(java.lang.Object)": {
            "remove": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:compute(java.lang.Object,int,java.util.function.BiFunction)": {
            "preWriteCleanup": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.29
            },
            "equivalent": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "isExpired": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "enqueueNotification": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "remove": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "newEntry": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "recordWrite": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.1
            },
            "postWriteCleanup": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.32
            },
            "immediateFuture": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.4,
                "total_score": 0.48
            },
            "getAndRecordStats": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.2,
                "total_score": 0.4
            },
            "removeLoadingValue": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.1
            },
            "removeEntry": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:loadSync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader)": {
            "loadFuture": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getAndRecordStats": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$AbstractCacheSet:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:invalidateAll()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Values:clear()": {
            "clear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$HashIterator:nextInChain()": {
            "advanceTo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:containsKey(java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.75
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "containsKey": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable$Builder:build()": {
            "buildOrThrow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getSupertypeFromUpperBounds(java.lang.Class,java.lang.reflect.Type[])": {
            "of": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "isSubtypeOf": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.25
            },
            "getSupertype": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:resolveTypeArgsForSubclass(java.lang.Class)": {
            "getRawType": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.84,
                "total_score": 0.58
            },
            "toGenericType": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.16
            },
            "getSupertype": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.28,
                "total_score": 0.31
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.26
            },
            "where": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "resolveType": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:get(java.lang.Object,int)": {
            "getLiveEntry": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "postReadCleanup": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "recordRead": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.44,
                "total_score": 0.39
            },
            "scheduleRefresh": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "tryDrainReferenceQueues": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.24
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalLoadingCache:refresh(java.lang.Object)": {
            "refresh": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:putAll(java.util.Map)": {
            "putAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:invalidateAll(java.lang.Iterable)": {
            "invalidateAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:compute(java.lang.Object,java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "hash": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.51
            },
            "segmentFor": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.43,
                "total_score": 0.38
            },
            "compute": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:lockedGetOrLoad(java.lang.Object,int,com.google.common.cache.CacheLoader)": {
            "preWriteCleanup": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.29
            },
            "equivalent": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "enqueueNotification": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "isExpired": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "recordLockedRead": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "postWriteCleanup": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.32
            },
            "remove": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.08
            },
            "newEntry": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "loadSync": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "waitForLoadingValue": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$HashIterator:nextInTable()": {
            "advanceTo": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "nextInChain": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$KeySet:contains(java.lang.Object)": {
            "containsKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:copyOf(java.lang.Iterable)": {
            "builder": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "put": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors:toImmutableTable(java.util.function.Function,java.util.function.Function,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.07
            },
            "combine": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "build": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.07
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getSubtype(java.lang.Class)": {
            "checkArgument": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "getSubtypeFromLowerBounds": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "isArray": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getRawType": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.29
            },
            "resolveTypeArgsForSubclass": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "of": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.99,
                "total_score": 0.72
            },
            "isSubtypeOf": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:get(java.lang.Object)": {
            "hash": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.73
            },
            "segmentFor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "get": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:getIfPresent(java.lang.Object)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "hash": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.5
            },
            "segmentFor": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "get": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:computeIfAbsent(java.lang.Object,java.util.function.Function)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "compute": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:computeIfPresent(java.lang.Object,java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "compute": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)": {
            "checkNotNull": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "compute": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Segment:get(java.lang.Object,int,com.google.common.cache.CacheLoader)": {
            "checkNotNull": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "getEntry": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.4
            },
            "getLiveValue": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.2,
                "total_score": 0.27
            },
            "recordRead": {
                "count_score": 0.11,
                "dataflow_score": 0.25,
                "indegree_score": 0.16,
                "total_score": 0.17
            },
            "scheduleRefresh": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.1,
                "total_score": 0.22
            },
            "postReadCleanup": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.13
            },
            "waitForLoadingValue": {
                "count_score": 0.11,
                "dataflow_score": 0.25,
                "indegree_score": 0.1,
                "total_score": 0.15
            },
            "lockedGetOrLoad": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.13
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$HashIterator:advance()": {
            "nextInChain": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "nextInTable": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:copyOf(com.google.common.collect.Table)": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.TableCollectors$ImmutableTableCollectorState:toTable()": {
            "copyOf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.collect.ImmutableTable:toImmutableTable(java.util.function.Function,java.util.function.Function,java.util.function.Function)": {
            "toImmutableTable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.reflect.TypeToken:getArraySubtype(java.lang.Class)": {
            "getComponentType": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.26
            },
            "getSubtype": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "newArrayClassOrGenericArrayType": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.15
            },
            "of": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntrySet:contains(java.lang.Object)": {
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "equivalent": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:getOrDefault(java.lang.Object,java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:getAllPresent(java.lang.Iterable)": {
            "builder": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "get": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.52
            },
            "put": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "buildKeepingLast": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:removeIf(java.util.function.BiPredicate)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "keySet": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "get": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.47
            },
            "remove": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.1,
                "total_score": 0.42
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:getIfPresent(java.lang.Object)": {
            "getIfPresent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:get(java.lang.Object,com.google.common.cache.CacheLoader)": {
            "checkNotNull": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "hash": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.53
            },
            "segmentFor": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.25
            },
            "get": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$HashIterator:nextEntry()": {
            "advance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:getAllPresent(java.lang.Iterable)": {
            "getAllPresent": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$EntrySet:removeIf(java.util.function.Predicate)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeIf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$Values:removeIf(java.util.function.Predicate)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "removeIf": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalManualCache:get(java.lang.Object,java.util.concurrent.Callable)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:getOrLoad(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache:getAll(java.lang.Iterable)": {
            "newLinkedHashMap": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.31
            },
            "newLinkedHashSet": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.16
            },
            "get": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.27
            },
            "loadAll": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.2
            },
            "copyOf": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalLoadingCache:get(java.lang.Object)": {
            "getOrLoad": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalLoadingCache:getAll(java.lang.Iterable)": {
            "getAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalLoadingCache:getUnchecked(java.lang.Object)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "com.google.common.cache.LocalCache$LocalLoadingCache:apply(java.lang.Object)": {
            "getUnchecked": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    }
]