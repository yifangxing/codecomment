1 Returns the revision number at the specified position. @param index the position @return the revision number @throws IndexOutOfBoundsException if the index is out of range
2 Returns the stroking color space. @return The stroking color space.
3 Constructor. @param a The action dictionary.
4 Transforms a width using the CTM. @param width the width to be transformed @return the transformed width
5 Returns the non-stroking color. @return The non-stroking color.
6 Returns the object at the specified position. @param index the position @return the object @throws IndexOutOfBoundsException if the index is out of range
7 Sets the stroking color. @param color The new stroking color.
8 Sets the non-stroking color. @param color The new non-stroking color.
9 Returns the stroking color. @return The stroking color.
10 Returns the size. @return the size
11 Returns the non-stroking color space. @return The non-stroking color space.
12 Get the value of the array as an integer, return the default if it does not exist. @param index The value of the array. @param defaultValue The value to return if the value is null. @return The value at the index or the defaultValue.
13 Parse the PNG structure into the PNGConverterState. If we can't handle something, this method will return null. @param imageData the byte array with the PNG data @return null or the converter state with all relevant chunks
14 @return Returns the textLineMatrix.
15 Constructor. @param a The action dictionary.
16 @param value The textLineMatrix to set.
17 Executes the instruction sequence. @param context the execution context
18 Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool. @param key The {@link COSObjectKey} a {@link COSBase} is registered for in this compression pool. @return The {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool, if such an object is contained.
19 Constructor. @param a The action dictionary.
20 Constructor @param a the action dictionary
21 This will parse the trailer from the stream and add it to the state. @return false on parsing error @throws IOException If an IO error occurs.
22 Add a source file to the list of files to merge. @param source Full path and file name of source document. @throws FileNotFoundException If the file doesn't exist
23 This will get the selected index. <p> A RadioButton might have multiple same value options which are not selected jointly if they are not set in unison {@link #isRadiosInUnison()}.</p> <p> The method will return the first selected index or -1 if no option is selected.</p> @return the first selected index or -1.
24 Creates a new soft mask. @param dictionary SMask @param resourceCache Resource cache, may be null. @return the newly created instance of PDSoftMask
25 This will get an encoding by name. May return null. @param name The name of the encoding to get. @return The encoding that matches the name.
26 @return Returns the textMatrix.
27 @param value The textMatrix to set.
28 {@inheritDoc}
29 Return the field tree representing all form fields @return the field tree representing all form fields
30 This will get the list of filters that are associated with this stream. @return A (possibly empty) list of all encoding filters to apply to this stream, never null.
31 Clones this object. @return cloned matrix as an object.
32 Creates a new soft mask. @param dictionary The soft mask dictionary.
33 Convenience method to create a scaled instance. Produces the following matrix: x 0 0 0 y 0 0 0 1 @param x The xscale operator. @param y The yscale operator. @return A new matrix with just the x/y scaling
34 Convenience method to create a translating instance. Produces the following matrix: 1 0 0 0 1 0 x y 1 @param x The x translating operator. @param y The y translating operator. @return A new matrix with just the x/y translating.
35 Convenience method to create a rotated instance. @param theta The angle of rotation measured in radians @param tx The x translation. @param ty The y translation. @return A new matrix with the rotation and the x/y translating.
36 Transforms the given vector by this matrix. @param vector 2D vector @return the transformed vector.
37 This will get the list of filters that are associated with this stream. The list is empty if there are none. @return A list of all encoding filters to apply to this stream.
38 Returns a new vector scaled by both x and y. @param sxy x and y scale @return a new vector scaled by both x and y
39 Get an entry in the array that is expected to be a COSName. @param index The index into the array. @param defaultValue The value to return if it is null. @return The value at the index or defaultValue if none is found.
40 This will return the index of the entry or -1 if it is not found. @param object The object to search for. @return The index of the object or -1.
41 Returns the z value of the tristimulus. @return the Z value
42 Constructor. @param acroForm The form that this field is part of. @param field the PDF object to represent as a field. @param parent the parent node of the node to be created
43 Constructor. @param acroForm The form that this field is part of. @param field the PDF object to represent as a field. @param parent the parent node of the node
44 Constructor. @param dictionary the corresponding dictionary
45 Performs exponential interpolation {@inheritDoc}
46 Create a graphics state from an existing dictionary. @param dictionary The existing graphics state.
47 Returns the list of filters.
48 Write the given {@link COSBoolean} to the given stream. @param output The stream, that shall be written to. @param cosBoolean The content, that shall be written.
49 Construct the text block from a single value. Constructs the text block from a single value splitting into individual {@link Paragraph} when a new line character is encountered. @param textValue the text block string.
50 Returns the y value of the tristimulus. @return the Y value
51 Constructor. @param a The action dictionary.
52 Whether the for control points are on a line. @param ctl an edge's control points, the size of ctl is 4 @return true when 4 control points are on a line, otherwise false
53 Constructor. @param a The action dictionary.
54 {@inheritDoc}
55 This is used to create/cache operators in the system. @param operator The operator for the system. @return The operator that matches the operator keyword.
56 Constructor #2. @param a The action dictionary.
57 Constructor. @param a The action dictionary.
58 Finds a suitable image raster reader for an image format. @param formatName The image format to search for. @param errorCause The probably cause if something goes wrong. @return The image reader for the format. @throws MissingImageReaderException if no image reader is found.
59 Finds a suitable image reader for an image format. @param formatName The image format to search for. @param errorCause The probably cause if something goes wrong. @return The image reader for the format. @throws MissingImageReaderException if no image reader is found.
60 Constructor. @param a The action dictionary.
61 Returns a new InputStream which reads the encoded PDF stream data. Experts only! @return InputStream containing raw, encoded PDF stream data. @throws IOException If the stream could not be read.
62 Constructor. @param a The action dictionary.
63 Constructor @param a the action dictionary
64 Returns the x value of the tristimulus. @return the X value
65 Returns the b value of the tristimulus. @return the B value
66 Writes a string to the content stream as ASCII. @param text the text to be added to the content stream @throws IOException If the underlying stream has a problem being written to.
67 Returns the g value of the tristimulus. @return the g value
68 Returns the r value of the tristimulus. @return the R value.
69 Constructor. @param a The action dictionary.
70 This will get the size of the font. @return The size of the font.
71 This will get the upper right x coordinate. @return The upper right x .
72 This will get the lower left y coordinate. @return The lower left y.
73 Notifies the user attribute object if the user property is changed. @param oldEntry old entry @param newEntry new entry
74 This will get the lower left x coordinate. @return The lower left x.
75 Constructor. @param a The action dictionary.
76 Constructor. @param a The action dictionary.
77 This will get the upper right y coordinate. @return The upper right y.
78 Whether a point is contained in this ShadedTriangle. @param p the target point @return false if p is outside of this triangle, otherwise true
79 This is a convenience method that will get the dictionary object that is expected to be a COSObject. Null is returned if the entry does not exist in the dictionary. @param key The key to the item in the dictionary. @return The COSObject.
80 Inserts the diacritic TextPosition to the str of this TextPosition and updates the widths array to include the extra character width. @param i current character @param diacritic The diacritic TextPosition
81 Constructor of class Line. @param p0 one end of a line @param p1 the other end of the line @param c0 color of point p0 @param c1 color of point p1
82 Creates a new soft mask paint. @param paint underlying paint. @param mask soft mask @param bboxDevice bbox of the soft mask in the underlying Graphics2D device space @param backdropColor the color to be used outside the transparency groupâ€™s bounding box; if null, black will be used. @param transferFunction the transfer function, may be null.
83 Computes backdrop removal. The backdrop removal equation is given in section 11.4.4 in the PDF 32000-1:2008 standard. It returns the final color <code>C</code> for each pixel in the group:<br> <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code><br> where<br> <code>Cn</code> is the group color including backdrop (read from <code>groupImage</code>),<br> <code>C0</code> is the backdrop color,<br> <code>alpha0</code> is the backdrop alpha,<br> <code>alphagn</code> is the group alpha excluding backdrop (read the alpha channel from <code>groupAlphaImage</code>)<br> <p> The alpha of the result is equal to <code>alphagn</code>, i.e., the alpha channel of <code>groupAlphaImage</code>. <p> The <code>backdrop</code> image may be much larger than <code>groupImage</code> if, for example, the current page is used as the backdrop. Only a specific rectangular region of <code>backdrop</code> is used in the backdrop removal: upper-left corner is at <code>(offsetX, offsetY)</code>; width and height are equal to those of <code>groupImage</code>. @param backdrop group backdrop @param offsetX backdrop left X coordinate @param offsetY backdrop upper Y coordinate
84 This will parse an XML stream and create a DOM document. @param is The stream to get the XML from. @return The DOM document. @throws IOException It there is an error creating the dom.
85 Constructor. @param aFloat The primitive float object that this object wraps. @throws IOException If aFloat is not a float.
86 Constructor from an existing destination array. @param arr The destination array.
87 Constructor from an existing destination array. @param arr The destination array.
88 Constructor from an existing destination array. @param arr The destination array.
89 Constructor from an existing destination array. @param arr The destination array.
90 Constructor from an existing destination array. @param arr The destination array.
91 Constructor.
92 Creates an encoding from the given FontBox encoding. @param encoding FontBox encoding @return the encoding created from the given FontBox encoding
93 Returns a COSInteger instance with the given value. @param val integer value @return COSInteger instance
94 Constructor. @param shading the shading resources @param matrix the pattern matrix concatenated with that of the parent content stream
95 Normalize certain Unicode characters. For example, convert the single "fi" ligature to "f" and "i". Also normalises Arabic and Hebrew presentation forms. @param word Word to normalize @return Normalized word
96 Draws the pattern stream to the requested context. @param g The graphics context to draw onto. @param pattern The tiling pattern to be used. @param colorSpace color space for this tiling. @param color color for this tiling. @param patternMatrix the pattern matrix @throws IOException If there is an IO error while drawing the page.
97 Creates a new GlyphList from a glyph list file. @param numberOfEntries number of expected values used to preallocate the correct amount of memory @param input glyph list in Adobe format @throws IOException if the glyph list could not be read
98 Creates a new GlyphList from multiple glyph list files. @param glyphList an existing glyph list to be copied @param input glyph list in Adobe format @throws IOException if the glyph list could not be read
99 Returns the GID for the given character code. @param code character code @return GID (glyph index) @throws IOException if the data could not be read
100 Maps a PostScript glyph name to the name in the underlying font, for example when using a TTF font we might map "W" to "uni0057".
101 Maps a PostScript glyph name to the name in the underlying font, for example when using a TTF font we might map "W" to "uni0057".
102 Lazy load the ICC profile, because it's slow. @throws IOException if the ICC profile could not be initialized
103 @param image The image to apply the mask to as alpha channel. @param mask A mask image in 8 bit Gray. Even for a stencil mask image due to {@link #getOpaqueImage()} and {@link SampledImageReader}'s {@code from1Bit()} special handling of DeviceGray. @param interpolateMask interpolation flag of the mask image. @param isSoft {@code true} if a soft mask. If not stencil mask, then alpha will be inverted by this method. @param matte an optional RGB matte if a soft mask. @return an ARGB image (can be the altered original image)
104 Calculate the color of a point. @param p the target point @return an array denotes the point's color
105 Modify the current clipping path by intersecting it with the given path. @param path path to intersect with the clipping path
106 Modify the current clipping path by intersecting it with the given path. @param area area to intersect with the clipping path
107 Transfer clip to the destination device. Override this if you want to avoid to do slow intersecting operations but want the destination device to do this (e.g. SVG). You can get the individual clippings via {@link PDGraphicsState#getCurrentClippingPaths()}. See <a href="https://issues.apache.org/jira/browse/PDFBOX-5258">PDFBOX-5258</a> for sample code. @param graphics graphics device
108 Constructor of CubicBezierCurve @param ctrlPnts 4 control points [p0, p1, p2, p3] @param l dividing level, if l = 0, one cubic Bezier curve is divided into 2^0 = 1 segments, if l = n, one cubic Bezier curve is divided into 2^n segments
109 Set the stroking color. <p> The command is only emitted if the color is not null and the number of components is &gt; 0. @param color The colorspace to write. @return true if the stroking color was set successfully @throws IOException If there is an error writing to the content stream. @see PDAbstractContentStream#setStrokingColor(PDColor)
110 This will write the fdf document. @param doc The document to write. @throws IOException If an error occurs while generating the data.
111 Write the given {@link COSInteger} to the given stream. @param output The stream, that shall be written to. @param cosInteger The content, that shall be written.
112 Compares this object with the specified object for order. Returns a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object. @param xReferenceEntry the object to be compared. @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object.
113 This will get the X scaling factor. This is dependent on the current transformation matrix (set by the "cm" operator), the text matrix (set by the "Tm" operator) and the font size (set by the "Tf" operator). @return The X scaling factor.
114 This will get the Y scaling factor. This is dependent on the current transformation matrix (set by the "cm" operator), the text matrix (set by the "Tm" operator) and the font size (set by the "Tf" operator). @return The Y scaling factor.
115 Returns a new OutputStream for writing encoded PDF data. Experts only! @return OutputStream for raw PDF stream data. @throws IOException If the output stream could not be created.
116 COSWriter constructor. @param outputStream The output stream to write the PDF. @param compressParameters The configuration for the document's compression.
117 COSWriter constructor for incremental updates. There must be a path of objects that have {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken care by PDFBox itself. @param outputStream output stream where the new PDF data will be written. @param inputData random access read containing source PDF data @throws IOException if something went wrong
118 Returns the content of this string as a PDF <i>text string</i>. @return the PDF string representation of the COSString
119 Default constructor.
120 Creates a new <i>text string</i> from a Java String. @param text The string value of the object. @param forceHex forces the hexadecimal presentation of the string if set to true
121 Creates a new instance. @param targetDoc the PDF document to modify
122 Write the given {@link COSArray} to the given stream. @param output The stream, that shall be written to. @param cosArray The content, that shall be written.
123 This is a special case of getItem that takes multiple keys, it will handle the situation where multiple keys could get the same value, ie if either CS or ColorSpace is used to get the colorspace. This will get an object from this dictionary. @param firstKey The first key to try. @param secondKey The second key to try. @return The object that matches the key.
124 Returns the number of recipients contained in the Recipients field of the dictionary. @return the number of recipients contained in the Recipients field.
125 returns the COSString contained in the Recipients field at position i. @param i the position in the Recipients field array. @return a COSString object containing information about the recipient number i.
126 @return the direction in which the specified transition effect shall move. It can be either a {@link COSInteger} or {@link COSName#NONE}. Default to {@link COSInteger#ZERO} @see PDTransitionDirection
127 This will get the keys of all metadata information fields for the document. @return all metadata key strings. @since Apache PDFBox 1.3.0
128 Gets the attribute names. @return the attribute names
129 Copy all Trailer Information to this file. @param trailerDict dictionary to be added as trailer info
130 Copy Constructor. This will make a shallow copy of this dictionary. @param dict The dictionary to copy.
131 Tell if the dictionary is an info dictionary. @param dictionary the dictionary to be checked @return true if the given dictionary is an info dictionary
132 Returns true if widths are present in the font descriptor. @return true if widths are present in the font descriptor
133 Returns true if the missing widths entry is present in the font descriptor. @return true if the missing widths entry is present in the font descriptor
134 This will tell if the AcroForm has XFA content. @return true if the AcroForm is an XFA form
135 {@inheritDoc}
136 This will output this string as a PDF object. @param output The stream to write to. @throws IOException If there is an error writing to the stream.
137 Uses the managed {@link #updateInfo} as the base object of a new {@link COSIncrement}. @return A {@link COSIncrement} based on the managed {@link #updateInfo}. @see COSUpdateInfo @see COSIncrement
138 Returns true if this font is one of the "Standard 14" fonts and receives special handling. @return true if this font is one of the "Standard 14" fonts
139 This will read a chunk of data. @param data The buffer to write data to. @param offset The offset into the data stream. @param len The number of byte to attempt to read. @return The number of bytes actually read. @throws IOException If there is an error reading data from the underlying stream.
140 Calculate the key to be used for RC4 and AES-128. @param objectNumber The data object number. @param genNumber The data generation number. @return the calculated key.
141 Create a new appearance stream. @param appearance The appearance stream to add to. @param outputStream The appearances output stream to write to.
142 Create a new appearance stream. Note that this is not actually a "page" content stream. @param doc The document the appearance is part of. @param appearance The appearance stream to add to. @param outputStream The appearances output stream to write to.
143 Transforms a point using the CTM. @param x the x-coordinate of the point to be transformed @param y the y-coordinate of the point to be transformed @return the transformed point
144 Not called in TexturePaint subclasses, which is why we wrap TexturePaint.
145 Concatenates (premultiplies) the given matrix to this matrix. @param matrix The matrix to concatenate.
146 Translates this matrix by the given amount. @param tx x-translation @param ty y-translation
147 Scales this matrix by the given factors. @param sx x-scale @param sy y-scale
148 This method multiplies this Matrix with the specified other Matrix, storing the product in a new instance. It is allowed to have (other == this). @param other the second operand Matrix in the multiplication; required @return the product of the two matrices.
149 Returns a new security handler for the given protection policy, or null none is available. @param policy the protection policy for which to create a security handler @return a new SecurityHandler instance, or null if none is available
150 Returns a new security handler for the given Filter name, or null none is available. @param name the Filter name from the PDF encryption dictionary @return a new SecurityHandler instance, or null if none is available
151 Parse all compressed objects. The stream is closed after parsing. @return a map containing all parsed objects using the object number as key @throws IOException if there is an error while parsing the stream
152 This will read the next byte from the stream. @return The next byte read from the stream. @throws IOException If there is an error reading from the wrapped stream.
153 This will read a chunk of data. @param data The buffer to write data to. @param offset The offset into the data stream. @param length The number of byte to attempt to read. @return The number of bytes actually read. @throws IOException If there is an error reading data from the underlying stream.
154 Read the image stream of the signature and set height and width. @param stream stream of your visible signature image @throws IOException If we can't read, flush, or close stream of image
155 Set the non stroking color. <p> The command is only emitted if the color is not null and the number of components is &gt; 0. @param color The colorspace to write. @return true if the non stroking color was set successfully @throws IOException If there is an error writing to the content stream. @see PDAbstractContentStream#setNonStrokingColor(PDColor)
156 We look which row encoding is the "best" one, ie. has the lowest sum. We don't implement anything fancier to choose the right row encoding. This is just the recommend algorithm in the spec. The get the perfect encoding you would need to do a brute force check how all the different encoded rows compress in the zip stream together. You have would have to check 5*image-height permutations... @return the "best" row encoding of the row encodings
157 Returns the base state represented by the given {@link COSName}. @param state the state name @return the state enum value
158 Returns the base state represented by the given {@link COSName}. @param state the state name @return the state enum value
159 Constructor. @param pdContentstream The content stream to parse. @throws IOException If there is an error initializing the stream.
160 Constructor. @param bytes the bytes to parse.
161 Search for/parse the object with the given object number. The stream is closed after parsing the object with the given number. @param objectNumber the number of the object to b e parsed @return the parsed object or null if the object with the given number can't be found @throws IOException if there is an error while parsing the stream
162 Read all object numbers from the compressed object stream. The stream is closed after reading the object numbers. @return a map off all object numbers and the corresponding offset within the object stream. @throws IOException if there is an error while parsing the stream
163 {@inheritDoc}
164 Constructor. @param shading the shading resources @param matrix the pattern matrix concatenated with that of the parent content stream
165 Ten bytes for the PANOSE classification number for the font. @see <a href="http://www.monotype.com/services/pan1">http://www.monotype.com/services/pan1</a> @return the PANOSE classification number
166 Constructor. @param shading the shading resources @param matrix the pattern matrix concatenated with that of the parent content stream
167 Adds a text position to the contents. @param text the text position
168 Adds a marked content to the contents. @param markedContent the marked content
169 Adds an XObject to the contents. @param xobject the XObject
170 Set if the user can print. <p> This method will have no effect if the object is in read only mode. @param allowPrinting A boolean determining if the user can print.
171 Set if the user can modify the document. <p> This method will have no effect if the object is in read only mode. @param allowModifications A boolean determining if the user can modify the document.
172 Set if the user can extract content from the document. <p> This method will have no effect if the object is in read only mode. @param allowExtraction A boolean determining if the user can extract content from the document.
173 Set if the user can add or modify text annotations and fill in interactive forms fields and, if {@link #canModify() canModify()} returns true, create or modify interactive form fields (including signature fields). Note that if {@link #canFillInForm() canFillInForm()} returns true, it is still possible to fill in interactive forms (including signature fields) even the parameter here is false. <p> This method will have no effect if the object is in read only mode. @param allowAnnotationModification A boolean determining the new setting.
174 Set if the user can fill in interactive form fields (including signature fields) even if {@link #canModifyAnnotations() canModifyAnnotations()} returns false. Therefore, if you want to prevent a user from filling in interactive form fields, you need to call {@link #setCanModifyAnnotations(boolean) setCanModifyAnnotations(false)} as well. <p> This method will have no effect if the object is in read only mode. @param allowFillingInForm A boolean determining if the user can fill in interactive forms.
175 Set if the user can extract content from the document for accessibility purposes. <p> This method will have no effect if the object is in read only mode. @param allowExtraction A boolean determining if the user can extract content from the document.
176 Set if the user can insert/rotate/delete pages. <p> This method will have no effect if the object is in read only mode. @param allowAssembly A boolean determining if the user can assemble the document.
177 Retrieve the glyph IDs for the characters in the specified word, after applying any relevant GSUB rules. The encoded glyph IDs are also written to the specified output stream. @param gsubWorker The GSUB worker which defines the GSUB transformations to apply. @param out The output stream to write the glyph IDs to. @param font The font whose cmap table will be used to map characters to glyph IDs. @param word The word which is being converted from characters to glyph IDs. @return The glyph IDs for the characters in the specified word, after applying any relevant GSUB rules. @throws IllegalStateException If we cannot find a glyph ID for any characters in the specified word.
178 Constructor that uses an existing document. The COSDocument that is passed in must be valid. @param doc The COSDocument that this document wraps. @param source input representing the pdf @param permission he access permissions of the pdf
179 Set if the user can print the document in a faithful format or in a degraded format (if print is enabled). The PDF version must be 1.5 or higher. <p> This method will have no effect if the object is in read only mode. @param canPrintFaithful A boolean determining if the user can print the document in a faithful format.
180 Constructor that uses an existing document. The COSDocument that is passed in must be valid. @param doc The COSDocument that this document wraps. @param source The source that will be closed when this document gets closed, can be null.
181 {@inheritDoc}
182 This will tell if the user can print. @return true If supplied with the user password they are allowed to print.
183 This will tell if the user can extract text and images from the PDF document. @return true If supplied with the user password they are allowed to extract content from the PDF document
184 Returns the font's glyph list.
185 Creates a PDColor containing the given color component values and pattern name. @param components array of color component values @param patternName the name of a pattern in a pattern dictionary @param colorSpace color space in which the pattern/components are defined
186 Convert this image to a COS object. @return The cos object that matches this image object.
187 This will tell if the user can add or modify text annotations and fill in interactive forms fields and, if {@link #canModify() canModify()} returns true, create or modify interactive form fields (including signature fields). Note that if {@link #canFillInForm() canFillInForm()} returns true, it is still possible to fill in interactive forms (including signature fields) even if this method here returns false. @return true If supplied with the user password they are allowed to modify annotations.
188 This will tell if the user can fill in interactive form fields (including signature fields) even if {@link #canModifyAnnotations() canModifyAnnotations()} returns false. @return true If supplied with the user password they are allowed to fill in form fields.
189 This will tell if the user can extract text and images from the PDF document for accessibility purposes. @return true If supplied with the user password they are allowed to extract content from the PDF document
190 This will tell if the user can insert/rotate/delete pages. @return true If supplied with the user password they are allowed to assemble the document.
191 This will tell if the user can print the document in a faithful format or in a degraded format (if print is enabled). @return true If supplied with the user password they are allowed to print the document in a faithful format.
192 This will reset the key to be used. @param key The RC4 key used during encryption.
193 This will encrypt and write the next byte. @param aByte The byte to encrypt. @param output The stream to write to. @throws IOException If there is an error writing to the output stream.
194 Return true if the given {@code codepoint} is a prohibited character as defined by <a href="https://tools.ietf.org/html/rfc4013#section-2.3">RFC 4013, Section 2.3</a>.
195 This will tell if the user can modify contents of the document. @return true If supplied with the user password they are allowed to modify the document
196 Computes the version number of the {@link SecurityHandler} based on the encryption key length. See PDF Spec 1.6 p 93 and <a href="https://www.adobe.com/content/dam/acom/en/devnet/pdf/adobe_supplement_iso32000.pdf">PDF 1.7 Supplement ExtensionLevel: 3</a> and <a href="http://intranet.pdfa.org/wp-content/uploads/2016/08/ISO_DIS_32000-2-DIS4.pdf">PDF Spec 2.0</a>. @return The computed version number.
197 Returns the CID for the given character code. If not found then CID 0 is returned. @param code character code @return CID
198 Returns the highest object number, that is registered in this compression pool. @return The highest object number, that is registered in this compression pool.
199 This will close the underlying COSDocument object. @throws IOException If there is an error releasing resources.
200 This will close the underlying COSDocument object. @throws IOException If there is an error releasing resources.
201 Returns the stream. @return The stream for this object.
202 Creates a new XObject from the given stream and subtype. @param stream The stream to read. @param subtype the subtype to be used for this XObject
203 Returns the stream. {@inheritDoc}
204 Returns the metadata stream for this object, or null if there is no metadata stream. @return the metadata stream, or null if there is none
205 Sets the metadata stream that is associated with this color space. @param metadata the new metadata stream
206 {@inheritDoc}
207 Constructor. @param shading the shading resources @param matrix the pattern matrix concatenated with that of the parent content stream
208 Decodes a hex String into a byte array. @param s A String with ASCII hex. @return decoded byte array.
209 This will set the BBox (bounding box) for this form. @param bbox The new BBox for this form.
210 Unchecks the check box. @throws IOException if the appearance couldn't be generated.
211 This will get the boolean value. @param value Parameter telling which boolean value to get. @return The single boolean instance that matches the parameter.
212 Return the direction/orientation of the string in this object based on its text matrix. Only angles of 0, 90, 180, or 270 are supported. To get other angles, use this code: <pre> TextPosition text = ... Matrix m = text.getTextMatrix().clone(); m.concatenate(text.getFont().getFontMatrix()); int angle = (int) Math.round(Math.toDegrees(Math.atan2(m.getShearY(), m.getScaleY()))); </pre> @return The direction of the text (0, 90, 180, or 270).
213 Get the update state for the COSWriter. This indicates whether an object is to be written when there is an incremental save. @return the update state.
214 {@inheritDoc}
215 Constructor. @param num The object number. @param gen The object generation number. @param index The index within a compressed object stream
216 This will tell if the next byte is a digit or not. @return true if the next byte in the stream is a digit. @throws IOException If there is an error reading from the stream.
217 Returns {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()} and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}. @return {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()} and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}. @see #originDocumentState @see COSDocumentState#isAcceptingUpdates()
218 This will write a single byte. @param b The byte to write. @throws IOException If there is an error writing to the stream.
219 This will flush the data to the stream. @throws IOException If there is an error writing the data to the stream.
220 Decodes a single line of data in-place. @param predictor Predictor value for the current line @param colors Number of color components, from decode parameters. @param bitsPerComponent Number of bits per components, from decode parameters. @param columns Number samples in a row, from decode parameters. @param actline Current (active) line to decode. Data will be decoded in-place, i.e. - the contents of this buffer will be modified. @param lastline The previous decoded line. When decoding the first line, this parameter should be an empty byte array of the same length as <code>actline</code>.
221 Returns the value for the first column of the crossreference stream entry. (The numeric representation of this entry's (The numeric representation of this entry's {@link XReferenceType}.) @return The value for the first column of the crossreference stream entry.
222 Returns the value for the third column of the crossreference stream entry. (This is the generation number of the set next free {@link COSObjectKey} - for entries of this type.) @return The value for the third column of the crossreference stream entry.
223 Returns a string representation of this crossreference stream entry. @return A string representation of this crossreference stream entry.
224 Returns the value for the second column of the crossreference stream entry. (This is byte offset of the {@link COSObject} in the PDF file - for entries of this type.) @return The value for the second column of the crossreference stream entry.
225 Returns the value for the third column of the crossreference stream entry. (This is the generation number of the set {@link COSObjectKey} - for entries of this type.) @return The value for the third column of the crossreference stream entry.
226 Returns a string representation of this crossreference stream entry. @return A string representation of this crossreference stream entry.
227 Returns the value for the second column of the crossreference stream entry. (This is object number from the {@link COSObjectKey} of the object stream, that is containing the object represented by this entry - for entries of this type..) @return The value for the second column of the crossreference stream entry.
228 Returns the value for the third column of the crossreference stream entry. (This is index of the {@link COSObject} in the containing object stream - for entries of this type.) @return The value for the third column of the crossreference stream entry.
229 Returns a string representation of this crossreference stream entry. @return A string representation of this crossreference stream entry.
230 This will write some byte to the stream. @param b The source byte array. @param off The offset into the array to start writing. @param len The number of bytes to write. @throws IOException If the underlying stream throws an exception.
231 This will write a single byte to the stream. @param b The byte to write to the stream. @throws IOException If there is an error writing to the underlying stream.
232 This will write an EOL to the stream. @throws IOException If there is an error writing to the stream
233 Returns true, if the resulting document shall be compressed. @return True, if the resulting document shall be compressed.
234 add an entry in the x ref table for later dump. @param entry The new entry to add.
235 Write the given {@link COSObjectKey} to the given stream. @param output The stream, that shall be written to. @param indirectReference The content, that shall be written.
236 Add an new entry to the XRef stream. @param entry new entry to be added
237 Checks if the next char is a space or a return. @return true if the next char is a space or a return @throws IOException if something went wrong
238 This will return the paint type. @return The type of object that this is.
239 Populate XRef HashMap of current XRef object. Will add an Xreftable entry that maps ObjectKeys to byte offsets in the file. @param objKey The objkey, with id and gen numbers @param offset The byte offset in this file
240 This will tell if the next byte is a space or not. @return true if the next byte in the stream is a space character. @throws IOException If there is an error reading from the stream.
241 Skip one line break, such as CR, LF or CRLF. @param linebreak the first character to be checked. @return true if a line break was found and removed. @throws IOException if something went wrong
242 This is really a bug in the Document creators code, but it caused a crash in PDFBox, the first bug was in this format: /Title ( (5) /Creator which was patched in 1 place. However it missed the case where the number of opening and closing parenthesis isn't balanced The second bug was in this format /Title (c:\) /Producer @param bracesParameter the number of braces currently open. @return the corrected value of the brace counter @throws IOException
243 This will tell if the next byte to be read is an end of line byte. @param c The character to check against end of line @return true if the next byte is 0x0A or 0x0D.
244 This method is used to read a token by the {@linkplain #readInt()} and the {@linkplain #readLong()} method. Valid delimiters are any non digit values. @return the token to parse as integer or long by the calling method. @throws IOException throws by the {@link #source} methods.
245 This will tell if the next byte is whitespace or not. @return true if the next byte in the stream is a whitespace character. @throws IOException If there is an error reading from the stream.
246 This will parse the startxref section from the stream. The startxref value is ignored. @return the startxref value or -1 on parsing error @throws IOException If an IO error occurs.
247 Brute force search for the last EOF marker. @throws IOException if something went wrong
248 Brute force search for all /XRef entries (streams). @throws IOException if something went wrong
249 Returns the resulting cross reference table. @return
250 Looks for and parses startxref. We first look for last '%%EOF' marker (within last {@link #DEFAULT_TRAIL_BYTECOUNT} bytes (or range set via {@link #setEOFLookupRange(int)}) and go back to find <code>startxref</code>. @return the offset of StartXref @throws IOException If something went wrong.
251 This method will read through the current stream object until we find the keyword "endstream" meaning we're at the end of this object. Some pdf files, however, forget to write some endstream tags and just close off objects with an "endobj" tag so we have to handle this case as well. This method is optimized using buffered IO and reduced number of byte compare operations. @param out stream we write out to. @throws IOException if something went wrong
252 Returns the default value, if any. @return A non-null string.
253 This will return the type. @return the type of object that this is
254 Brute force search for all xref entries (tables). @throws IOException if something went wrong
255 Private constructor. This will limit the number of COSName objects that are created. @param aName The name of the COSName object.
256 Constructor.
257 Creates a new PDF string from a byte array. This method can be used to read a string from an existing PDF file, or to create a new byte string. @param bytes The raw bytes of the PDF text string or byte string. @param forceHex forces the hexadecimal presentation of the string if set to true
258 Constructor.
259 Constructor. @param object The object that this encapsulates.
260 Constructor. @param object The object that this encapsulates. @param parser The parser to be used to load the object on demand
261 Constructor. @param key The object number of the encapsulated object. @param parser The parser to be used to load the object on demand
262 Constructs an instance specifying the region of the image that should be decoded. The actual region will be clipped to the dimensions of the image. @param x x-coordinate of the top-left corner of the region to be decoded @param y y-coordinate of the top-left corner of the region to be decoded @param width Width of the region to be decoded @param height Height of the region to be decoded
263 Sets the given {@link COSObjectKey} as a free reference in a PDF's crossreference stream ({@link PDFXRefStream}). @param key The key, that shall be set as the free reference of the document. @param nextFreeObject The object number of the next free object.
264 Prepares a object stream entry reference for the given {@link COSObject} in a PDF's crossreference stream ({@link PDFXRefStream}). @param objectStreamIndex The index of the {@link COSObject} in the containing object stream. @param key The {@link COSObjectKey}, that is represented by this entry. @param object The {@link COSObject}, that is represented by this entry. @param parentKey The {@link COSObjectKey} of the object stream, that is containing the object.
265 Default constructor.
266 Creates a new instance with a given COS dictionary. @param dictionary the dictionary
267 Creates a new attribute object with a given dictionary. @param dictionary the dictionary
268 Constructor. @param aValue The boolean value.
269 Creates a user property with a given dictionary. @param dictionary the dictionary @param userAttributeObject the user attribute object
270 @param dict The dictionary storage.
271 Constructor. @param dic The COS dictionary.
272 Constructor. @param a An existing FDF Annotation.
273 Constructor. @param a An existing FDF Annotation.
274 Constructor. @param a An existing FDF Annotation.
275 Constructor. @param a An existing FDF Annotation.
276 Creates a blend composite @param blendMode Desired blend mode @param constantAlpha Constant alpha, must be in the inclusive range [0.0...1.0] or it will be clipped. @return a blend composite. @throws IllegalArgumentException if blendMode is null.
277 Returns the transparency group attributes dictionary. @return the transparency group attributes dictionary, never null.
278 Creates a new shading pattern from the given COS dictionary. @param resourceDictionary The COSDictionary for this pattern resource.
279 Creates a new tiling pattern from the given COS dictionary. @param dictionary The COSDictionary for this pattern. @param resourceCache The resource cache, may be null
280 Constructor using the given shading dictionary. @param shadingDictionary the dictionary for this shading
281 Constructor using the given shading dictionary. @param shadingDictionary the dictionary for this shading
282 Constructor. @param shadingType2 the shading resources @param matrix the pattern matrix concatenated with that of the parent content stream
283 Constructor. @param shading the shading resources @param matrix the pattern matrix concatenated with that of the parent content stream
284 Constructor. @param shading the shading resources @param matrix the pattern matrix concatenated with that of the parent content stream
285 Constructor. @param a An existing FDF Annotation.
286 Constructor. @param a An existing FDF Annotation.
287 Constructor. @param a An existing FDF Annotation.
288 Constructor. @param a An existing FDF Annotation.
289 Constructor. @param dic The COS dictionary.
290 Constructor. @param dic The COS dictionary.
291 Constructor. @param dic The COS dictionary.
292 Create a child node object. @param dic The dictionary for the child node object to refer to. @return The new child node object.
293 Constructor. This will <b>not</b> set up the /Type and /Subtype entries. @param str The stream parameter.
294 Constructor. @param str The stream parameter.
295 {@inheritDoc}
296 Constructor. @param function The function stream.
297 Creates a new XObject from the given stream and subtype. @param stream The stream to read. @param subtype the subtype to be used for this XObject
298 creates a new transition for an existing dictionary @param dictionary the dictionary to be used for the new transition
299 Constructor for an existing structure element. @param dic The existing dictionary.
300 Constructor for an existing structure element. @param dic The existing dictionary.
301 Constructor.
302 Constructor. @param a An existing FDF Annotation.
303 Constructor. @param a An existing FDF Annotation.
304 Constructor. @param a An existing FDF Annotation.
305 Constructor. @param a An existing FDF Annotation.
306 Constructor. @param a An existing FDF Annotation.
307 Constructor. @param a An existing FDF Annotation.
308 Write something (if defined) at the start of a paragraph. @throws IOException if something went wrong
309 Write the line separator value to the output stream. @throws IOException If there is a problem writing out the line separator to the document.
310 Write the word separator value to the output stream. @throws IOException If there is a problem writing out the word separator to the document.
311 Write something (if defined) at the start of a page. @throws IOException if something went wrong
312 Write something (if defined) at the end of a page. @throws IOException if something went wrong
313 Same as {@link #getUnicode()} except that returned text is ensured to be visually ordered (i.e. same order you would see them displayed on screen when looking from left to right). This is important for Arabic/Hebrew where several unicode characters can be composed in one glyph with logical order (the order in which it would be normally typed from right to left). @return The string on the screen in visual order.
314 @return True if the current character is a diacritic char.
315 Returns a hex string of the given byte. @param b the byte to be converted @return the hex string representing the given byte
316 Returns a hex string of the given byte array. @param bytes the bytes to be converted @return the hex string representing the given bytes
317 Returns the bytes corresponding to the ASCII hex encoding of the given byte. @param b the byte to be converted @return the ASCII hex encoding of the given byte
318 Returns the bytes corresponding to the ASCII hex encoding of the given bytes. @param bytes the bytey to be converted @return the ASCII hex encoding of the given bytes
319 Writes the given byte as hex value to the given output stream. @param b the byte to be written @param output the output stream to be written to @throws IOException exception if anything went wrong
320 Fast variant to format a floating point value to a ASCII-string. The format will fail if the value is greater than {@link Long#MAX_VALUE}, smaller or equal to {@link Long#MIN_VALUE}, is {@link Float#NaN}, infinite or the number of requested fraction digits is greater than {@link #MAX_FRACTION_DIGITS}. When the number contains more fractional digits than {@code maxFractionDigits} the value will be rounded. Rounding is done to the nearest possible value, with the tie breaking rule of rounding away from zero. @param value The float value to format @param maxFractionDigits The maximum number of fraction digits used @param asciiBuffer The output buffer to write the formatted value to @return The number of bytes used in the buffer or {@code -1} if formatting failed
321 Return the most specific value stored for this byte sequence. If not found, returns <code>null</code> or a default values as specified by calling {@link ByteTrie#setDefaultValue}. @param bytes @return
322 End an article. Default implementation is to do nothing. Subclasses may provide additional information. @throws IOException If there is any error writing to the stream.
323 Start a new article, which is typically defined as a column on a single page (also referred to as a bead). Default implementation is to do nothing. Subclasses may provide additional information. @param isLTR true if primary direction of text is left to right. @throws IOException If there is any error writing to the stream.
324 Show the string data for this text position. @return A human readable form of this object.
325 Write the string in TextPosition to the output stream. @param text The text to write to the stream. @throws IOException If there is an error when writing the text.
326 @return template height
327 @param node @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next sibling)
328 Return the X starting coordinate of the text, adjusted by the given rotation amount. The rotation adjusts where the 0,0 location is relative to the text. @param rotation Rotation to apply (0, 90, 180, or 270). 0 will perform no adjustments. @return X coordinate
329 This will get the y position of the character with 0,0 in lower left. This will be adjusted by the given rotation. @param rotation Rotation to apply to text to adjust the 0,0 location (0,90,180,270) @return The y coordinate of the text
330 Get the length or width of the text, based on a given rotation. @param rotation Rotation that was used to determine coordinates (0,90,180,270) @return Width of text in display units
331 @param x - x coordinate @param y - y coordinate @return Visible Signature Configuration Object
332 Creates a new marked content object. @param tag the tag @param properties the properties
