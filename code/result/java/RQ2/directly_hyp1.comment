1 Constructs a PDExtendedGraphicsState from a COSDictionary. @param dictionary the graphics state dictionary
2 Constructs a PlainText object from a given text value. @param textValue the input text to be processed
3 Constructs a PDActionImportData instance. @param a COSDictionary containing action data
4 Retrieves a COSObject by key. @param key the key to look up @return COSObject if found, otherwise null
5 Constructs a PDActionURI from a COSDictionary. @param a dictionary representing the URI action
6 Constructs a PDActionSubmitForm from a COSDictionary. @param a dictionary containing action attributes
7 Constructs a PDActionSound from a COSDictionary. @param a COSDictionary representing the sound action
8 Constructs a PDActionHide from a COSDictionary. @param a dictionary representing the action
9 Constructs a PDActionMovie from a COSDictionary. @param a dictionary containing movie action details
10 Constructs a PDActionLaunch from a dictionary. @param a the COS dictionary representing the action
11 Constructs a PDActionResetForm from a COSDictionary. @param a dictionary representing the action
12 Creates a new PDActionRemoteGoTo from a dictionary. @param a COSDictionary containing action properties
13 Constructs a PDActionGoTo from a dictionary. @param a the COS dictionary representing the action
14 Constructs a PDActionEmbeddedGoTo from a COS dictionary. @param a the COS dictionary
15 Constructs a PDActionNamed from a COSDictionary. @param a dictionary representing the action
16 Constructs a PDActionThread from a COSDictionary. @param a dictionary containing action data
17 Constructs a PDActionJavaScript from an existing dictionary. @param a COSDictionary representing the action
18 Creates a raw input stream for reading. @throws IOException if I/O error occurs or no data has been written
19 Finds an image reader for the specified format. @param formatName name of the image format @param errorCause reason for failure to find a reader @return ImageReader instance if found, throws MissingImageReaderException otherwise
20 Finds an ImageReader capable of reading raster images for a given format. @param formatName the name of the image format @param errorCause additional information about the error @return an ImageReader that can read rasters @throws MissingImageReaderException if no suitable reader is found
21 Retrieves or creates an Operator instance based on the given name. @param operator operator name as a String @return Operator object corresponding to the name
22 Returns string representation of COSArrayList. @return formatted string including internal array details
23 Checks if an edge is a line based on control points. @param ctl array of control points @return true if edge is a line, false otherwise
24 Retrieves the x-coordinate of the lower-left corner. @return float value representing the x-coordinate
25 Retrieves the y-coordinate of the lower-left corner. @return y-coordinate value as a float
26 Retrieves the X-coordinate of the upper-right corner. @return float value representing the X-coordinate
27 Retrieves the y-coordinate of the upper-right corner. @return y-coordinate as a float
28 Retrieves font size from font settings. @return font size as a float value
29 Retrieves the first value as a float. @return The float value of the first element in values list.
30 Retrieves the second value as a float. @return float value of the second item in values list
31 Returns the third value as a float. @return float representation of the third value
32 Returns the X coordinate value. @return float representing the X coordinate
33 Retrieves the Y coordinate value. @return Y coordinate as a float
34 Retrieves the current stroking color space from the graphics state. @return PDColorSpace object representing the stroking color space
35 Sets the stroking color in the graphics state. @param color PDColor object to set as the stroking color
36 Retrieves the stroking color from the graphics state. @return PDColor object representing the current stroking color
37 Returns an Encoding instance based on the provided COSName. @param name the encoding type as a COSName @return Encoding object or null if not recognized
38 Creates a PDSoftMask from a given COSBase. @param dictionary the COSBase dictionary or name @param resourceCache the ResourceCache instance @return PDSoftMask object or null if invalid
39 Returns the index of the first selected annotation widget. @return Index of the selected widget or -1 if none is selected
40 Parses PNG chunks from image data. @param imageData byte array containing PNG data @return PNGConverterState object or null if parsing fails
41 Adds a file source to the system. @param source path to the file @throws FileNotFoundException if the file is not found
42 Parses the PDF trailer and updates the XRef resolver. @return true if parsing is successful, false otherwise @throws IOException if an I/O error occurs
43 Retrieves the Z coordinate value. @return Z coordinate as a float
44 Retrieves an object from the pool by its key. @param key unique identifier of the object @return COSBase object or null if not found
45 Retrieves the current text line matrix. @return Matrix representing the current text line transformation
46 Sets the text line matrix in graphics state. @param value new text line matrix to apply
47 Retrieves the current text matrix. @return Text matrix representing transformation applied to text
48 Transforms width based on current transformation matrix. @param width original width value @return transformed width accounting for scaling and shearing
49 Retrieves the non-stroking color from graphics state. @return PDColor object representing the current non-stroking color
50 Sets the non-stroking color in the graphics context. @param color PDColor object representing the new color
51 Retrieves the non-stroking color space from the graphics state. @return PDColorSpace object representing the current non-stroking color space
52 Executes a sequence of instructions within the given context. @param context execution environment containing operators and stack
53 Retrieves an integer from the list at the specified index. @param index position of the element to retrieve @param defaultValue value to return if element is not a COSNumber or out of bounds @return integer value of the element or default value
54 Retrieves the revision number at the specified index. @param index position of the revision number in the list @return revision number at the given index
55 Writes a COSBoolean to the output stream. @param output target OutputStream for writing @param cosBoolean COSBoolean object to write @throws IOException if an I/O error occurs
56 Creates a deep copy of the matrix. @return A new Matrix object with cloned data
57 Initializes a new instance of PDRectlinearMeasureDictionary. @param dictionary underlying COSDictionary
58 Constructs a PDTerminalField. @param acroForm the form containing this field @param field the dictionary representing this field @param parent the parent field if any
59 Constructs a non-terminal PDF form field. @param acroForm parent AcroForm containing the field @param field dictionary representing the field @param parent parent non-terminal field
60 Notifies of user property change if entries differ. @param oldEntry previous entry value @param newEntry current entry value
61 Returns the number of key-value mappings in this map. @return the number of entries in the map
62 Writes text to output stream in ASCII encoding. @param text string to be written @throws IOException if an I/O error occurs
63 Creates a translation matrix. @param x horizontal translation @param y vertical translation @return Matrix representing the translation
64 Returns the number of objects in the collection. @return size of the object collection
65 Retrieves an object by index. @param index position of the object in the list @return object at the specified index or throws IndexOutOfBoundsException if invalid
66 Returns a field tree for the document. @return PDFieldTree object representing the document's fields
67 Retrieves name from list by index. @param index position in the list @param defaultValue default value if index is out of bounds or not a COSName @return name as String or defaultValue
68 Finds the index of a given COSBase object. @param object the COSBase object to search for @return index of the object or -1 if not found
69 Retrieves a list of filters. @return List of Filter objects @throws IOException if an invalid type is found in the filter array
70 Creates a scaling matrix. @param x scale factor on X-axis @param y scale factor on Y-axis @return Matrix object representing the scaling transformation
71 Retrieves a list of filters from the stream. @return List of COSName filters or empty list if none found
72 Retrieves file filters from a PDF stream. @return List of filter names or empty list if none found
73 Scales vector by a factor. @param sxy scaling factor for both x and y components @return new Vector with scaled components
74 Transforms a 2D vector using a given transformation matrix. @param vector the input vector to be transformed @return the transformed vector
75 Creates a rotation matrix with translation. @param theta angle of rotation in radians @param tx horizontal translation @param ty vertical translation @return Rotation matrix with translation applied
76 Evaluates input using exponential interpolation. @param input array of floats, first element used for exponentiation @return interpolated float array clipped to range
77 Sets the text matrix in the graphics state. @param value the new text matrix to apply
78 Compares this entry with another based on referenced key. @param xReferenceEntry the other XReferenceEntry to compare @return negative if less, positive if greater, zero if equal
79 Returns the number of recipients in the dictionary. @return size of the recipients array
80 Constructs a Type7ShadingPaint object. @param shading PDShadingType7 instance representing the shading @param matrix transformation matrix for the shading
81 Scales the matrix by given factors. @param sx scale factor for x-axis @param sy scale factor for y-axis
82 Multiplies this matrix by another. @param other the matrix to multiply with @return a new Matrix representing the product
83 Creates a SecurityHandler for a given ProtectionPolicy. @param policy the ProtectionPolicy to handle @return SecurityHandler instance or null if no handler is found
84 Creates a new SecurityHandler for a given filter name. @param name the name of the security filter @return SecurityHandler instance or null if not found
85 Sets stroking color on demand. @param color PDColor object to be set @return true if color is successfully set, false otherwise
86 Sets non-stroking color on demand. @param color PDColor object to be set @return true if color is successfully set, false otherwise @throws IOException if an I/O error occurs
87 Applies translation to a 3x3 transformation matrix. @param tx horizontal translation factor @param ty vertical translation factor
88 Retrieves the font name for a given character. @param name character to find in font @return font name or ".notdef" if not found @throws IOException if an I/O error occurs
89 Initializes CMYK color conversion settings. @throws IOException if default CMYK profile cannot be loaded
90 Applies a mask to an image. @param image source image @param mask mask image @param interpolateMask true for smooth scaling @param isSoft true if soft mask effect is applied @param matte color adjustment array @return masked image
91 Initializes a cubic Bezier curve with given control points. @param ctrlPnts array of 4 control points defining the curve @param l recursion level for curve approximation
92 Checks if a point is within a polygon. @param p Point to check @return true if point is inside or on the boundary of the polygon, false otherwise
93 Calculates color at a given point using different interpolation methods. @param p the Point2D where color is calculated @return float array representing the color components
94 Intersects current clipping path with another. @param path the path to intersect with
95 Draws a tiling pattern using the provided parameters. @param g Graphics2D context for drawing @param pattern PDTilingPattern to be drawn @param colorSpace PDColorSpace used for coloring @param color PDColor for the pattern @param patternMatrix Matrix defining the transformation of the pattern @throws IOException if an I/O error occurs during processing
96 Intersects the current clipping path with another area. @param area the area to intersect with the clipping path
97 Transfers the current clipping path to a Graphics2D object. @param graphics the Graphics2D object to apply the clipping path to
98 Retrieves the font representation of a given name. @param name the original character name @return the font name or ".notdef" if not found @throws IOException if an I/O error occurs
99 Inserts a diacritic at a specified position in the text. @param i index where to insert the diacritic @param diacritic TextPosition object representing the diacritic
100 Converts a character code to a glyph ID. @param code character encoding code @return glyph ID or 0 if not found @throws IOException if an I/O error occurs
101 Initializes glyph list from input stream. @param input InputStream containing glyph data @param numberOfEntries Expected number of entries in the list @throws IOException if an I/O error occurs
102 Initializes a Line object with two points and their colors. @param p0 starting Point of the line @param p1 ending Point of the line @param c0 color array for point0 @param c1 color array for point1
103 Normalizes a word by handling specific Unicode ranges and font issues. @param word the input string to normalize @return normalized string with corrections for certain Unicode characters
104 Initializes a SoftMask with specified parameters. @param paint the painting object @param mask the alpha mask image @param bboxDevice the device bounding box @param backdropColor the background color @param transferFunction the color transfer function
105 Removes a backdrop from an image by adjusting pixel colors. @param backdrop the backdrop image to remove @param offsetX horizontal offset of backdrop relative to groupImage @param offsetY vertical offset of backdrop relative to groupImage
106 Creates a GlyphList by copying from another GlyphList and loading additional data from an InputStream. @param glyphList existing GlyphList to copy mappings from @param input stream containing additional glyph data @throws IOException if there is an error reading the input stream
107 Concatenates this matrix with another. @param matrix the other Matrix to concatenate
108 Parses an InputStream into a Document. @param is input stream containing XML data @return parsed Document object @throws IOException if an I/O error occurs
109 Writes a COSInteger to an OutputStream. @param output the OutputStream to write to @param cosInteger the COSInteger to write @throws IOException if an I/O error occurs
110 Retrieves the horizontal scaling factor. @return The X-axis scaling factor as a float.
111 Retrieves the vertical scaling factor. @return Y-axis scaling factor as a float
112 Creates a raw output stream for writing. Throws IllegalStateException if already writing or closed. Updates LENGTH field upon closing the stream.
113 Initializes COSWriter with output stream and compression parameters. @param outputStream destination for writing data @param compressParameters configuration for data compression
114 Initializes a COSWriter with output and input streams. @param outputStream destination for writing data @param inputData source of input data @throws IOException if an I/O error occurs
115 Converts byte array to string using UTF-16BE or PDFDocEncoding. @return String representation of bytes
116 Constructs a COSString from text with optional hexadecimal encoding. @param text the input string to encode @param forceHex if true, forces hexadecimal encoding regardless of content
117 Retrieves or creates a COSInteger for the given value. @param val the integer value to represent @return a COSInteger instance
118 Writes FDF document to output. @param doc FDFDocument to write @throws IOException if I/O error occurs
119 Checks if the font is part of the Adobe Standard 14 fonts. @return true if it's a Standard 14 font, false otherwise
120 Initializes LayerUtility with a target document. @param targetDoc the PDDocument to manipulate
121 Retrieves recipient string at specified index. @param i index of the recipient in the recipients list @return COSString representing the recipient or null if index is out of bounds
122 Retrieves the direction property. @return COSBase object representing direction or COSInteger.ZERO if not set
123 Retrieves metadata keys from a PDF document. @return Sorted set of metadata keys
124 Retrieves attribute names from COS object. @return List of attribute names excluding 'O'
125 Adds trailer info to the stream. @param trailerDict dictionary containing trailer information
126 Creates a new COSDictionary by copying entries from another dictionary. @param dict The source dictionary to copy entries from
127 Checks if a dictionary contains document info keys. @param dictionary PDF COSDictionary to check @return true if dictionary contains document info keys, false otherwise
128 Checks if dictionary contains width keys. @return true if WIDTHS or MISSING_WIDTH is present
129 Checks if the dictionary contains a missing width attribute. @return true if missing width is present, false otherwise
130 Checks if the PDF document contains XFA. @return true if XFA is present, false otherwise
131 Returns string representation of COSFloat. @return formatted string with float value
132 Writes formatted string to PDF. @param output stream to write PDF content @throws IOException if writing fails
133 Writes a COSArray to the output stream. @param output the OutputStream to write to @param cosArray the COSArray to be written @throws IOException if an I/O error occurs
134 Creates and returns a new COSIncrement instance. @param updateInfo information used for incrementing @return COSIncrement object initialized with updateInfo
135 Constructs a new DefaultResourceCache with default settings. @param enableCaching whether to enable caching functionality
136 Reads bytes from the input stream into a buffer. @param data byte array to store read data @param offset starting index in the data array @param len number of bytes to read @return actual number of bytes read or -1 if end of stream @throws IOException if an I/O error occurs
137 Reads object numbers from a source. @return Map of object IDs to their counts @throws IOException if an I/O error occurs
138 Parses all objects from a PDF source. @return Map of COSObjectKey to COSBase representing parsed objects @throws IOException if an I/O error occurs during parsing
139 Creates a PDPageFitWidthDestination from a COSArray. @param arr array representing the destination
140 Initializes a PDPageFitRectangleDestination with a given COSArray. @param arr COSArray containing destination parameters
141 Calculates the final encryption key. @param objectNumber PDF object number @param genNumber generation number @return derived encryption key bytes
142 Constructs a PDPageFitHeightDestination from a COSArray. @param arr array representing the destination
143 Initializes a new PDPageFitDestination from a COSArray. @param arr the COSArray representing the destination
144 Initializes a new PD Appearances content stream. @param appearance PDF appearance stream @param outputStream output stream to write to
145 Constructs a COSFloat from a string. @param aFloat string representation of the float @throws IOException if parsing fails
146 Constructs a content stream for an appearance stream. @param doc PDF document containing the appearance @param appearance appearance stream to write to @param outputStream output stream for the content
147 Transforms a point using the current transformation matrix. @param x original x-coordinate @param y original y-coordinate @return transformed Point2D.Float object
148 Creates a PaintContext with applied pattern transformation. @param cm ColorModel for the context @param deviceBounds device space bounding box @param userBounds user space bounding box @param xform current AffineTransform @param hints rendering hints @return PaintContext with pattern applied
149 Parses a PDF object by number. @param objectNumber the object's identifier @return COSBase object or null if not found @throws IOException on I/O errors
150 Initializes a PDF stream parser with byte array. @param bytes PDF content as a byte array
151 Initializes a PDF stream parser. @param pdContentstream content stream to parse @throws IOException if an I/O error occurs
152 Converts FontBox Encoding to Type1Encoding. @param encoding FontBox Encoding object @return Type1Encoding object
153 Initializes MacOSRomanEncoding with custom entries.
154 Constructs a PDPageXYZDestination from a COSArray. @param arr array representing the destination
155 Retrieves item by two keys. @param firstKey primary key to search @param secondKey secondary key if first not found @return COSBase object or null if both keys are invalid
156 Reads the next byte from the input stream. @return the next byte as an integer, or -1 if end of stream is reached @throws IOException if an I/O error occurs
157 Reads data from the input stream into a byte array. @param data destination buffer @param offset start position in the buffer @param length maximum number of bytes to read @return number of bytes actually read, or -1 if end of stream is reached @throws IOException if an I/O error occurs
158 Reads an image from the input stream and sets it. @param stream InputStream containing image data @throws IOException if reading fails
159 Encodes input stream data using LZW compression. @param rawData the raw input data stream to encode @param encoded the output stream for encoded data @param parameters encoding parameters (not used)
160 Selects the best data row for writing based on compression estimates. @return byte array of the selected row with highest compression estimate
161 Converts COSName to corresponding RenderState. @param state COSName representing the render state @return RenderState object or null if state is null
162 Converts COSName to corresponding BaseState. @param state COSName representing the state @return BaseState object or ON if state is null
163 Constructs a new Type6ShadingPaint. @param shading PDShadingType6 object representing the shading pattern @param matrix transformation matrix for the shading
164 Constructs a PDSoftMask from a COSDictionary. @param dictionary the COSDictionary containing mask information
165 Constructs a Type4ShadingPaint. @param shading PDShadingType4 object representing the shading @param matrix transformation matrix for the shading
166 Adds a TextPosition to the contents. @param text TextPosition object to be added
167 Adds marked content to the document. @param markedContent the content to be added
168 Sets printing permission. @param allowPrinting flag to enable or disable printing
169 Sets modification permission. @param allowModifications flag to enable or disable modifications
170 Sets content extraction permission. @param allowExtraction flag to enable or disable extraction
171 Sets permission to modify annotations. @param allowAnnotationModification flag indicating modification permission
172 Adds an XObject to the contents list. @param xobject the XObject to be added
173 Sets permission to fill in form. @param allowFillingInForm flag indicating if filling in the form is allowed
174 Retrieves the highest cross-reference object number. @return The highest XRef object number from the pool.
175 Applies GSUB rules to a word, converting it to glyph IDs and writing to output. @param gsubWorker worker for applying GSUB transformations @param out output stream to write encoded glyphs @param font font containing cmap lookup @param word input string to process @return list of glyph IDs after applying GSUB rules
176 Constructs a new PDF document. @param doc the COSDocument representing the PDF structure @param source the RandomAccessRead source of the PDF data @param permission the AccessPermission for accessing the document
177 Initializes an FDFDocument with a COSDocument and source. @param doc the underlying COSDocument @param source the source of data for the FDF document
178 Returns a string representation of FunctionType2. @return formatted string with C0, C1, and N values
179 Sets permission to extract content for accessibility. @param allowExtraction flag indicating extraction permission
180 Sets permission to print faithfully. @param canPrintFaithful flag indicating print permission
181 Retrieves the Adobe glyph list. @return GlyphList object containing Adobe glyphs
182 Initializes a PDColor with components, pattern name, and color space. @param components color components array @param patternName name of the pattern @param colorSpace associated color space
183 Sets permission to assemble documents. @param allowAssembly true to allow, false to disallow
184 Checks if print permission is enabled. @return true if print permission is granted, false otherwise
185 Checks if modification permission is granted. @return true if modification is allowed, false otherwise
186 Checks if content extraction permission is enabled. @return true if extraction is allowed, false otherwise
187 Checks if annotations can be modified. @return true if modification permission is enabled, false otherwise
188 Checks if permission to fill in form is granted. @return true if permission is enabled, false otherwise
189 Checks if the extract for accessibility permission is enabled. @return true if permission is granted, false otherwise
190 Checks if document assembly permission is granted. @return true if permission is enabled, false otherwise
191 Checks if the user has permission to print faithfully. @return true if permission is granted, false otherwise
192 Sets the encryption key. @param key byte array representing the key (1 to 32 bytes)
193 Checks if a Unicode code point is prohibited. @param codepoint Unicode code point to check @return true if the code point is prohibited, false otherwise
194 Computes version number based on key length and policy. @return computed version number
195 Converts character code to CID. @param code character code to convert @return CID corresponding to the character code
196 Writes a byte to the output stream after applying XOR encryption. @param aByte the byte to write @param output the OutputStream to write to @throws IOException if an I/O error occurs
197 Writes object reference to the given OutputStream. @param output the OutputStream to write to @param indirectReference the COSObjectKey representing the object reference @throws IOException if an I/O error occurs during writing
198 Checks if compression is enabled. @return true if compression parameters are set and enabled, false otherwise
199 Checks if the update state indicates an update is needed. @return true if updated, false otherwise
200 Checks equality with another object. @param o object to compare @return true if objects are equal, false otherwise
201 Constructs a COSObjectKey with specified object and generation numbers. @param num the object number (must be non-negative) @param gen the generation number (must be non-negative) @param index the stream index
202 Checks if the document is accepting updates. @return true if updates are accepted, false otherwise
203 Writes a byte to the output stream and processes it for ASCII85 encoding. @param b the byte to write @throws IOException if an I/O error occurs
204 Flushes ASCII85 encoded data to output. Handles padding, transformation, and line breaks.
205 Determines text direction based on transformation matrix. @return Direction in degrees (0, 90, 180, 270)
206 Decodes a predictor row for PNG image data. @param predictor prediction algorithm identifier @param colors number of color components per pixel @param bitsPerComponent bits per color component @param columns number of columns in the image @param actline current active line to decode @param lastline previous line used for prediction
207 Sets the bounding box for a PDF object. @param bbox PDRectangle representing the bounding box or null to remove it
208 Decodes a hexadecimal string to a byte array. @param s hexadecimal string input @return decoded byte array or empty if invalid characters found
209 Closes all resources and releases IO resources.
210 Closes the document and associated streams. Logs exceptions during closure.
211 Converts Boolean to COSBoolean. @param value Boolean object to convert @return COSBoolean representation of the input
212 Initializes a new PDMarkedContent instance. @param tag the content tag name @param properties dictionary of content properties
213 Constructs a Type5ShadingPaint. @param shading PDShadingType5 object representing the shading @param matrix transformation matrix for the shading
214 Returns the type name for patterns. @return "Pattern" as the type name
215 Returns the type of shading. @return The string representation of the shading type
216 Retrieves the default value of an attribute. @return String representation of the default value or empty string if none
217 Sets the value to "Off" and throws an IOException.
218 Adds an XReferenceEntry to the list of cross-reference entries. @param entry the XReferenceEntry to be added
219 Initializes a PDXObject with a given stream and subtype. @param stream PDF stream containing the object data @param subtype type of the XObject
220 Reads the startxref offset from a PDF file. @return The offset of the startxref in the file. @throws IOException If an I/O error occurs or required markers are missing.
221 Reads from stream until "endstream" or "endobj" is found. @param out stream to filter content @return length of filtered content @throws IOException if an I/O error occurs
222 Checks if the next character in the source is a space or return. @return true if next character is space or return, false otherwise @throws IOException if an I/O error occurs
223 Adds an XReferenceEntry to the stream data. @param entry the entry to add
224 Returns the numeric value of the column type. @return long representing the numeric value of the column type
225 Retrieves the generation value from the referenced key. @return the generation value as a long
226 Retrieves the cross-reference table. @return Map of COSObjectKey to Long representing object offsets
227 Returns a string representation of the FreeReference. @return formatted String with key, nextFreeObject, and type information
228 Returns the generation value of the referenced key. @return long representing the generation value
229 Returns a string representation of the reference. @return String describing the reference type and details
230 Retrieves the value from the second column. @return numeric value of the parent key
231 Returns the value of the third column. @return long value representing the third column index
232 Returns string representation of ObjectStreamEntry. @return formatted String with key, type, index, and parent details
233 Writes bytes to the output stream. @param b byte array containing data to write @param off offset within the byte array @param len number of bytes to write @throws IOException if an I/O error occurs
234 Writes a single byte to output stream. @param b byte to be written @throws IOException if an I/O error occurs
235 Writes an end-of-line character if not already on a new line.
236 Returns the byte offset value. @return long representing the byte offset
237 Returns the COS object associated with the function. @return COSDictionary representing the function's COS object
238 Searches for XRef streams in a PDF file. @return List of offsets for XRef streams or empty list if none found
239 Searches for the last EOF marker in the PDF file. @return Position of the last EOF marker or Long.MAX_VALUE if not found @throws IOException if an I/O error occurs
240 Retrieves the underlying COSStream. @return COSStream object
241 Retrieves metadata from the PDF document. @return COSStream containing metadata or null if not present
242 Sets metadata to the COSStream. @param metadata the metadata to be set
243 Compares this annotation with another for equality. @param o the object to compare with @return true if both annotations are equal, false otherwise
244 Searches for XRef tables in a PDF. @return List of offsets where XRef tables are found @throws IOException if an I/O error occurs
245 Checks if the next character in source is a digit. @return true if the next character is a digit, false otherwise @throws IOException if an I/O error occurs
246 Adds an XRef entry for a given object key and offset. @param objKey the COSObjectKey to add @param offset the file offset of the object
247 Checks if the next character in the source is a space. @return true if the next character is a space, false otherwise @throws IOException if an I/O error occurs while reading from the source
248 Determines if a line break should be skipped. @param linebreak the character code of the line break @return true if the line break is skipped, false otherwise
249 Checks for end of string indicators in PDF content. @param bracesParameter current brace count @return updated brace count or 0 if end indicator found @throws IOException on read error
250 Checks if character is end-of-line. @param c character to check @return true if character is line feed or carriage return, false otherwise
251 Reads a numeric string from the input source. @return StringBuilder containing the numeric string or empty if no digits found @throws IOException if an I/O error occurs or number exceeds MAX_LENGTH_LONG
252 Checks if the next character in the source is whitespace. @return true if the next character is whitespace, false otherwise @throws IOException if an I/O error occurs while reading from the source
253 Parses startxref from PDF. @return byte offset of the first object or -1 if not found
254 Retrieves the underlying COS dictionary. @return COSDictionary instance
255 Constructs a COSBoolean with the specified boolean value. @param aValue the boolean value to set
256 Constructs a COSName with the given name. @param aName the name of the COSName
257 Private constructor to restrict instantiation.
258 Constructs a COSString from byte array. @param bytes input byte array @param forceHex true to force hexadecimal representation
259 Initializes a new COSDictionary with an update state.
260 Initializes a COSObject with a given base object. @param object the COSBase object to encapsulate
261 Initializes a COSObject with a base object and parser. @param object the underlying COSBase object @param parser the ICOSParser instance
262 Initializes a COSObject with a given key and parser. @param key unique identifier for the COSObject @param parser used to parse the object
263 Initializes a free XReference. @param key object key for the XReference @param nextFreeObject reference to the next free object
264 Initializes an ObjectStreamXReference. @param objectStreamIndex index in the object stream @param key unique identifier for the COSObject @param object underlying COSBase object @param parentKey key of the parent COSObject
265 Constructs a new instance with caching enabled.
266 Initializes a new instance with the given COSDictionary. @param dictionary the underlying COSDictionary to wrap
267 Initializes a PDAttributeObject with a given COSDictionary. @param dictionary the COSDictionary to initialize with
268 Constructs a PDShadingType2 from a COSDictionary. @param shadingDictionary PDF dictionary containing shading details
269 Initializes a new PDUserProperty with given dictionary and attribute object. @param dictionary COSDictionary containing user properties @param userAttributeObject PDUserAttributeObject associated with the user
270 Constructs a PDOutlineNode from a COSDictionary. @param dict dictionary representing the outline node
271 Constructs an FDFAnnotationLink from a COSDictionary. @param a dictionary representing the annotation link
272 Constructs a polygon annotation from a COS dictionary. @param a dictionary containing annotation properties
273 Constructs a new FDFAnnotationPolyline from a COSDictionary. @param a dictionary containing annotation properties
274 Constructs an FDF annotation sound. @param a COSDictionary containing sound properties
275 Constructs a square annotation from a COS dictionary. @param a COS dictionary representing the annotation
276 Constructs a stamp annotation from a COS dictionary. @param a the COS dictionary representing the annotation
277 Constructs an FDFAnnotationText from a COSDictionary. @param a dictionary containing annotation properties
278 Constructs a text markup annotation from a COS dictionary. @param a COS dictionary representing the annotation
279 Constructs a PDShadingType1 from a COSDictionary. @param shadingDictionary dictionary containing shading details
280 Constructs an FDF annotation line from a COS dictionary. @param a COS dictionary representing the annotation
281 Constructs a PDTilingPattern from a COSDictionary and a ResourceCache. @param dictionary PDF dictionary containing tiling pattern information @param resourceCache cache for resources used in the pattern
282 Retrieves the transparency group attributes. @return PDTransparencyGroupAttributes object or null if not found
283 Creates a Composite instance based on blend mode and alpha. @param blendMode blending mode to apply @param constantAlpha opacity level (0-1) @return Composite object for rendering
284 Retrieves Panose classification from byte array. @return PDPanoseClassification object containing font classification data
285 Creates a new PDShadingPattern from a COSDictionary. @param resourceDictionary dictionary containing shading pattern details
286 Constructs an FDF annotation ink from a COS dictionary. @param a COS dictionary representing the annotation
287 Constructs a FDFAnnotationFreeText from a COSDictionary. @param a dictionary representing the annotation
288 Constructs an FDFAnnotationFileAttachment from a COSDictionary. @param a dictionary representing the annotation
289 Constructs a PDTransition from a COSDictionary. @param dictionary underlying COSDictionary
290 Constructs a PDDestinationNameTreeNode from a dictionary. @param dic dictionary containing node data
291 Constructs a PDEmbeddedFilesNameTreeNode from a dictionary. @param dic the COSDictionary to initialize with
292 Constructs a PDJavascriptNameTreeNode from a dictionary. @param dic COSDictionary containing node data
293 Constructs a PDStructureElementNameTreeNode from a dictionary. @param dic COSDictionary representing the node's data
294 Creates a child node with the given dictionary. @param dic dictionary to initialize the node @return PDNumberTreeNode instance initialized with the dictionary and valueType
295 Constructs a PDMetadata object from a COSStream. @param str the COSStream to initialize the metadata with
296 Constructs a PDObjectStream from a COSStream. @param str COS stream to be wrapped
297 Constructs a PDEmbeddedFile from a COSStream. @param str COS stream containing embedded file data
298 Initializes a PDFunction with a given COSBase. @param function the COSBase object representing the function
299 Initializes a PDXObject with a given stream and subtype. @param stream the underlying COSStream @param subtype the subtype of the XObject
300 Constructs a PDStructureElement from a COSDictionary. @param dic dictionary representing the structure element
301 Constructs a PDStructureTreeRoot from a COSDictionary. @param dic dictionary representing the structure tree root
302 Constructor for SecurityHandler.
303 Constructs an FDF annotation caret from a COS dictionary. @param a COS dictionary representing the annotation
304 Constructs a FDF annotation circle from a COS dictionary. @param a COS dictionary containing annotation properties
305 Initializes DecodeOptions with specified rectangle dimensions. @param x top-left corner x-coordinate @param y top-left corner y-coordinate @param width rectangle width @param height rectangle height
306 Checks and reverses Unicode string if it contains RTL characters. @return Reversed string if RTL characters are present, otherwise original string
307 Converts a single byte to its hexadecimal byte representation. @param b input byte @return byte array containing high and low nibble as hex bytes
308 Converts byte array to ASCII representation. @param bytes input byte array @return ASCII byte array representing input bytes in hexadecimal format
309 Writes a byte as two hexadecimal characters to the output stream. @param b byte to be written @param output OutputStream to write to @throws IOException if an I/O error occurs
310 Formats a float value into an ASCII buffer. @param value the float to format @param maxFractionDigits maximum number of fraction digits @param asciiBuffer buffer to store formatted result @return length of formatted string or -1 if formatting fails
311 Constructs an axial shading paint. @param shadingType2 the shading type @param matrix transformation matrix for the shading
312 Constructs a RadialShadingPaint object. @param shading PDShadingType3 instance representing radial shading @param matrix transformation matrix for the shading
313 Searches for a value by byte array key in a trie. @param bytes the byte array representing the key @return the associated value or null if not found
314 Returns the Unicode representation of the object. @return Unicode string
315 Converts byte array to hexadecimal string. @param bytes input byte array @return hexadecimal representation of the byte array
316 Converts byte to hex string. @param b input byte @return two-character hex representation of the byte
317 Starts article output. @param isLTR true if text direction is left-to-right @throws IOException if an I/O error occurs
318 Calculates the width of a rotated element. @param rotation angle of rotation in degrees @return absolute width based on rotation
319 Writes article end tag to output. @throws IOException if an I/O error occurs
320 Calculates the y-coordinate of the lower-left corner after rotation. @param rotation angle in degrees (0, 90, 180, 270) @return y-coordinate based on rotation
321 Writes a line separator to the output stream. @throws IOException if an I/O error occurs
322 Calculates X-axis rotation based on given angle. @param rotation angle of rotation in degrees @return calculated X-axis translation
323 Writes word separator to output. @throws IOException if an I/O error occurs
324 Starts a new paragraph. Ends current paragraph if one is open. @throws IOException if an I/O error occurs
325 Writes the start of a page to the output. @throws IOException if an I/O error occurs
326 Writes the end of the page to the output. @throws IOException if an I/O error occurs
327 Sets sign coordinates. @param x horizontal position @param y vertical position @return PDVisibleSignDesigner instance
328 Checks if a character is a diacritic. @return true if the character is a diacritic, false otherwise
329 Ensures a node has no siblings. @param node the PDOutlineItem to check
330 Constructs a Type1ShadingPaint. @param shading PDShadingType1 object representing the shading @param matrix transformation matrix for the paint
331 Writes characters from TextPosition to output. @param text TextPosition containing Unicode characters @throws IOException if an I/O error occurs
332 Returns the height of the template. @return page height as a float
