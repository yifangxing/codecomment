1 Cancels a token by removing it from the SQL database. This will call the corresponding method in {@link AbstractDelegationTokenSecretManager} to perform validation and remove the token from the cache. @return Identifier of the canceled token
2 Get unix groups (parent) and netgroups for given user @param user get groups and netgroups for this user @return groups and netgroups for user
3 Given a Tar File as input it will untar the file in a the untar directory passed as the second parameter This utility will untar ".tar" files and ".tar.gz","tgz" files. @param inFile The tar file as input. @param untarDir The untar directory where to untar the tar file. @throws IOException an exception occurred.
4 Change the permissions on a filename. @param filename the name of the file to change @param perm the permission string @return the exit code from the command @throws IOException raised on errors performing I/O. @throws InterruptedException command interrupted.
5 Platform independent implementation for {@link File#setReadable(boolean)} File#setReadable does not work as expected on Windows. @param f input file @param readable readable. @return true on success, false otherwise
6 Platform independent implementation for {@link File#setWritable(boolean)} File#setWritable does not work as expected on Windows. @param f input file @param writable writable. @return true on success, false otherwise
7 Platform independent implementation for {@link File#setExecutable(boolean)} File#setExecutable does not work as expected on Windows. Note: revoking execute permission on folders does not have the same behavior on Windows as on Unix platforms. Creating, deleting or renaming a file within that folder will still succeed on Windows. @param f input file @param executable executable. @return true on success, false otherwise
8 Load file permission information (UNIX symbol rwxrwxrwx, sticky bit info). To improve peformance, give priority to native stat() call. First try get permission information by using native JNI call then fall back to use non native (ProcessBuilder) call in case native lib is not loaded or native call is not successful
9 Use the command chown to set owner.
10 Set permissions to the required value. Uses the java primitives instead of forking if group == other. @param f the file to change @param permission the new permissions @throws IOException raised on errors performing I/O.
11 Add a group to cache, only netgroups are cached @param groups list of group names to add to cache
12 Dump all tokens of a UGI. @param ugi UGI to examine
13 Log current UGI and token information into specified log. @param ugi - UGI @param log log. @param caption caption.
14 Create the local directory if necessary, check permissions and also ensure it can be read from and written into. @param localFS local filesystem @param dir directory @param expected permission @throws DiskErrorException disk problem. @throws IOException raised on errors performing I/O.
15 Create the local directory if necessary, also ensure permissions allow it to be read from and written into. Perform some diskIO to ensure that the disk is usable for writes. @param localFS local filesystem @param dir directory @param expected permission @throws DiskErrorException disk problem. @throws IOException raised on errors performing I/O.
16 See {@link #listStatus(Path[], PathFilter)} @param files files. @throws AccessControlException If access is denied. @throws FileNotFoundException If <code>files</code> does not exist. @throws IOException If an I/O error occurred. @return file status array.
17 Return the total size of all files under "/", if {@link Constants#CONFIG_VIEWFS_LINK_MERGE_SLASH} is supported and is a valid mount point. Else, throw NotInMountpointException. @throws IOException raised on errors performing I/O.
18 Get block locations from the underlying fs and fix their offsets and lengths. @param file the input file status to get block locations @param start the start of the desired range in the contained file @param len the length of the desired range @return block locations for this segment of file @throws IOException raised on errors performing I/O.
19 Returns a har input stream which fakes end of file. It reads the index files to get the part file name and the size and start of the file.
20 Opens an FSDataInputStream at the indicated Path. @param f the file name to open @param bufferSize the size of the buffer to be used.
21 Opens an FSDataInputStream at the indicated Path. @param f the file name to open @param bufferSize the size of the buffer to be used. @throws IOException if an I/O error occurs.
22 Rename files/dirs.
23 Renames Path src to Path dst <ul> <li>Fails if src is a file and dst is a directory. <li>Fails if src is a directory and dst is a file. <li>Fails if the parent of dst does not exist or is a file. </ul> <p> If OVERWRITE option is not passed as an argument, rename fails if the dst already exists. <p> If OVERWRITE option is passed as an argument, rename overwrites the dst if it is a file or an empty directory. Rename fails if dst is a non-empty directory. <p> Note that atomicity of rename is dependent on the file system implementation. Please refer to the file system documentation for details <p> @param src path to be renamed @param dst new path after rename @param options rename options. @throws AccessControlException If access is denied @throws FileAlreadyExistsException If <code>dst</code> already exists and <code>options</code> has {@link Options.Rename#OVERWRITE} option false. @throws FileNotFoundException If <code>src</code> does not exist @throws ParentNotDirectoryException If parent of <code>dst</code> is not a directory @throws UnsupportedFileSystemException If file system for <code>src</code> and <code>dst</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
24 Get filestatuses of all the children of a given directory. This just reads through index file and reads line by line to get all statuses for children of a directory. Its a brute force way of getting all such filestatuses @param parent the parent path directory @param statuses the list to add the children filestatuses to
25 return the filestatus of files in har archive. The permission returned are that of the archive index files. The permissions are not persisted while creating a hadoop archive. @param f the path in har filesystem @return filestatus. @throws IOException raised on errors performing I/O.
26 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
27 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
28 Construct the system but not initializing (read config etc.) it.
29 Constructor for {@link MutableRollingAverages}. @param metricValueName input metricValueName.
30 This method is for testing only to replace the scheduledTask.
31 Check the current state of the service, and join the election if it should be in the election.
32 We failed to become active. Re-join the election, but sleep for a few seconds after terminating our existing session, so that other nodes have a chance to become active. The failure to become active is already logged inside becomeActive().
33 interface implementation of Zookeeper watch events (connection and node), proxied by {@link WatcherWithClientRef}.
34 Util method to build socket addr from either. {@literal <host>} {@literal <host>:<port>} {@literal <fs>://<host>:<port>/<path>} @param target target. @param defaultPort default port. @return socket addr.
35 This method is overridden to restrict HTTP authentication schemes available for delegation token management functionality. The authentication schemes to be used for delegation token management are configured using {@link DELEGATION_TOKEN_SCHEMES_PROPERTY} The basic logic here is to check if the current request is for delegation token management. If yes then check if the request contains an "Authorization" header. If it is missing, then return the HTTP 401 response with WWW-Authenticate header for each scheme configured for delegation token management. It is also possible for a client to preemptively send Authorization header for a scheme not configured for delegation token management. We detect this case and return the HTTP 401 response with WWW-Authenticate header for each scheme configured for delegation token management. If a client has sent a request with "Authorization" header for a scheme configured for delegation token management, then it is forwarded to underlying {@link MultiSchemeAuthenticationHandler} for actual authentication. Finally all other requests (excluding delegation token management) are forwarded to underlying {@link MultiSchemeAuthenticationHandler} for actual authentication.
36 Return existence of the <code>name</code> property, but only for names which have no valid value, usually non-existent or commented out in XML. @param name the property name @return true if the property <code>name</code> exists without value
37 Get the value of the <code>name</code> property, without doing <a href="#VariableExpansion">variable expansion</a>.If the key is deprecated, it returns the value of the first key which replaces the deprecated key and is not null. @param name the property name. @return the value of the <code>name</code> property or its replacing property and null if no such property exists.
38 Set the <code>value</code> of the <code>name</code> property. If <code>name</code> is deprecated, it also sets the <code>value</code> to the keys that replace the deprecated key. Name will be trimmed before put into configuration. @param name property name. @param value property value. @param source the place that this configuration value came from (For debugging). @throws IllegalArgumentException when the value or name is null.
39 Unset a previously set property. @param name the property name
40 {@inheritDoc}
41 {@inheritDoc}
42 {@inheritDoc}
43 {@inheritDoc}
44 {@inheritDoc}
45 {@inheritDoc}
46 {@inheritDoc}
47 {@inheritDoc}
48 {@inheritDoc}
49 {@inheritDoc}
50 {@inheritDoc}
51 Refresh the netgroup cache
52 Update FsStatus for the given the mount point. @param viewFileSystem @param mountPointMap @param mountPoint @param path
53 liststatus returns the children of a directory after looking up the index files.
54 Public {@link FileStatus} methods delegate to this function, which in turn either call the new {@link Stat} based implementation or the deprecated methods based on platform support. @param f Path to stat @param dereference whether to dereference the final path component if a symlink @return FileStatus of f @throws IOException
55 {@inheritDoc} If the given path is a symlink(mount link), the path will be resolved to a target path and it will get the resolved path's FileStatus object. It will not be represented as a symlink and isDirectory API returns true if the resolved path is a directory, false otherwise.
56 {@inheritDoc} Note: listStatus considers listing from fallbackLink if available. If the same directory path is present in configured mount path as well as in fallback fs, then only the fallback path will be listed in the returned result except for link. If any of the the immediate children of the given path f is a symlink(mount link), the returned FileStatus object of that children would be represented as a symlink. It will not be resolved to the target path and will not get the target path FileStatus object. The target path will be available via getSymlink on that children's FileStatus object. Since it represents as symlink, isDirectory on that children's FileStatus will return false. This behavior can be changed by setting an advanced configuration fs.viewfs.mount.links.as.symlinks to false. In this case, mount points will be represented as non-symlinks and all the file/directory attributes like permissions, isDirectory etc will be assigned from it's resolved target directory/file. If you want to get the FileStatus of target path for that children, you may want to use GetFileStatus API with that children's symlink path. Please see {@link ViewFs#getFileStatus(Path f)} Note: In ViewFs, by default the mount links are represented as symlinks.
57 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @throws IOException
58 Convert the file information in LsEntry to a {@link FileStatus} object. * @param sftpFile @param parentPath @return file status @throws IOException
59 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @throws IOException
60 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @throws IOException on IO problems other than FileNotFoundException
61 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
62 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
63 Constructs a new CBZip2InputStream which decompresses bytes read from the specified stream. <p> Although BZip2 headers are marked with the magic <tt>"Bz"</tt> this constructor expects the next byte in the stream to be the first one after the magic. Thus callers have to skip the first two bytes. Otherwise this constructor will throw an exception. </p> @param in in. @param readMode READ_MODE. @throws IOException if the stream content is malformed or an I/O error occurs. @throws NullPointerException if <tt>in == null</tt>
64 Returns the number of bytes between the current stream position and the immediate next BZip2 block marker. @param in The InputStream @return long Number of bytes between current stream position and the next BZip2 block start marker. @throws IOException raised on errors performing I/O.
65 interface implementation of Zookeeper callback for create
66 interface implementation of Zookeeper callback for monitor (exists)
67 Util method to build socket addr from either. {@literal <host>:<port>} {@literal <fs>://<host>:<port>/<path>} @param target target. @return socket addr.
68 Parses a space and/or comma separated sequence of server specifications of the form <i>hostname</i> or <i>hostname:port</i>. If the specs string is null, defaults to localhost:defaultPort. @param specs server specs (see description) @param defaultPort the default port if not specified @return a list of InetSocketAddress objects.
69 create the service name for a Delegation token @param uri of the service @param defPort is used if the uri lacks a port @return the token service, or null if no authority @see #buildTokenService(InetSocketAddress)
70 Return the XML DOM corresponding to this Configuration.
71 Attempts to repeatedly expand the value {@code expr} by replacing the left-most substring of the form "${var}" in the following precedence order <ol> <li>by the value of the environment variable "var" if defined</li> <li>by the value of the Java system property "var" if defined</li> <li>by the value of the configuration key "var" if defined</li> </ol> If var is unbounded the current state of expansion "prefix${var}suffix" is returned. <p> This function also detects self-referential substitutions, i.e. <pre> {@code foo.bar = ${foo.bar} } </pre> If a cycle is detected then the original expr is returned. Loops involving multiple substitutions are not detected. In order not to introduce breaking changes (as Oozie for example contains a method with the same name and same signature) do not make this method public, use substituteCommonVariables in this case. @param expr the literal value of a config key @return null if expr is null, otherwise the value resulting from expanding expr using the algorithm above. @throws IllegalArgumentException when more than {@link Configuration#MAX_SUBST} replacements are required
72 Apply configuratio changes after admin has approved them.
73 Set the <code>value</code> of the <code>name</code> property. If <code>name</code> is deprecated or there is a deprecated name associated to it, it sets the value to both names. Name will be trimmed before put into configuration. @param name property name. @param value property value.
74 See {@link Configuration#set(String, String, String)}.
75 Delete a directory and all its contents. If we return false, the directory may be partially-deleted. (1) If dir is symlink to a file, the symlink is deleted. The file pointed to by the symlink is not deleted. (2) If dir is symlink to a directory, symlink is deleted. The directory pointed to by symlink is not deleted. (3) If dir is a normal file, it is deleted. (4) If dir is a normal directory, then dir and all its contents recursively are deleted. @param dir the file or directory to be deleted @param tryGrantPermissions true if permissions should be modified to delete a file. @return true on success false on failure.
76 {@inheritDoc}
77 Get FsStatus for all ViewFsMountPoints matching path for the given ViewFileSystem. Say ViewFileSystem has following mount points configured (1) hdfs://NN0_host:port/sales mounted on /dept/sales (2) hdfs://NN1_host:port/marketing mounted on /dept/marketing (3) hdfs://NN2_host:port/eng_usa mounted on /dept/eng/usa (4) hdfs://NN3_host:port/eng_asia mounted on /dept/eng/asia For the above config, here is a sample list of paths and their matching mount points while getting FsStatus Path Description Matching MountPoint "/" Root ViewFileSystem lists all (1), (2), (3), (4) mount points. "/dept" Not a mount point, but a valid (1), (2), (3), (4) internal dir in the mount tree and resolved down to "/" path. "/dept/sales" Matches a mount point (1) "/dept/sales/india" Path is over a valid mount point (1) and resolved down to "/dept/sales" "/dept/eng" Not a mount point, but a valid (1), (2), (3), (4) internal dir in the mount tree and resolved down to "/" path. "/erp" Doesn't match or leads to or over any valid mount points None @param fileSystem - ViewFileSystem on which mount point exists @param path - URI for which FsStatus is requested @return Map of ViewFsMountPoint and FsStatus @throws IOException raised on errors performing I/O.
78 Return a FileStatus representing the given path. If the path refers to a symlink return a FileStatus representing the link rather than the object the link refers to.
79 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @param channel @param src @param dst @return rename successful? @throws IOException
80 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
81 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
82 <p>Return all the files that match filePattern and are not checksum files. Results are sorted by their names. <p> A filename pattern is composed of <i>regular</i> characters and <i>special pattern matching</i> characters, which are: <dl> <dd> <dl> <dt> <tt> ? </tt> <dd> Matches any single character. <dt> <tt> * </tt> <dd> Matches zero or more characters. <dt> <tt> [<i>abc</i>] </tt> <dd> Matches a single character from character set <tt>{<i>a,b,c</i>}</tt>. <dt> <tt> [<i>a</i>-<i>b</i>] </tt> <dd> Matches a single character from the character range <tt>{<i>a...b</i>}</tt>. Note: character <tt><i>a</i></tt> must be lexicographically less than or equal to character <tt><i>b</i></tt>. <dt> <tt> [^<i>a</i>] </tt> <dd> Matches a single char that is not from character set or range <tt>{<i>a</i>}</tt>. Note that the <tt>^</tt> character must occur immediately to the right of the opening bracket. <dt> <tt> \<i>c</i> </tt> <dd> Removes (escapes) any special meaning of character <i>c</i>. <dt> <tt> {ab,cd} </tt> <dd> Matches a string from the string set <tt>{<i>ab, cd</i>} </tt> <dt> <tt> {ab,c{de,fh}} </tt> <dd> Matches a string from string set <tt>{<i>ab, cde, cfh</i>}</tt> </dl> </dd> </dl> @param pathPattern a glob specifying a path pattern @return an array of paths that match the path pattern @throws AccessControlException If access is denied @throws UnsupportedFileSystemException If file system for <code>pathPattern</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
83 Return an array of FileStatus objects whose path names match pathPattern and is accepted by the user-supplied path filter. Results are sorted by their path names. Return null if pathPattern has no glob and the path does not exist. Return an empty array if pathPattern has a glob and no path matches it. @param pathPattern glob specifying the path pattern @param filter user-supplied path filter @return an array of FileStatus objects @throws AccessControlException If access is denied @throws UnsupportedFileSystemException If file system for <code>pathPattern</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
84 <p>Return all the files that match filePattern and are not checksum files. Results are sorted by their names. <p> A filename pattern is composed of <i>regular</i> characters and <i>special pattern matching</i> characters, which are: <dl> <dd> <dl> <dt> <tt> ? </tt> <dd> Matches any single character. <dt> <tt> * </tt> <dd> Matches zero or more characters. <dt> <tt> [<i>abc</i>] </tt> <dd> Matches a single character from character set <tt>{<i>a,b,c</i>}</tt>. <dt> <tt> [<i>a</i>-<i>b</i>] </tt> <dd> Matches a single character from the character range <tt>{<i>a...b</i>}</tt>. Note that character <tt><i>a</i></tt> must be lexicographically less than or equal to character <tt><i>b</i></tt>. <dt> <tt> [^<i>a</i>] </tt> <dd> Matches a single character that is not from character set or range <tt>{<i>a</i>}</tt>. Note that the <tt>^</tt> character must occur immediately to the right of the opening bracket. <dt> <tt> \<i>c</i> </tt> <dd> Removes (escapes) any special meaning of character <i>c</i>. <dt> <tt> {ab,cd} </tt> <dd> Matches a string from the string set <tt>{<i>ab, cd</i>} </tt> <dt> <tt> {ab,c{de,fh}} </tt> <dd> Matches a string from the string set <tt>{<i>ab, cde, cfh</i>}</tt> </dl> </dd> </dl> @param pathPattern a glob specifying a path pattern @return an array of paths that match the path pattern @throws IOException IO failure
85 Return an array of {@link FileStatus} objects whose path names match {@code pathPattern} and is accepted by the user-supplied path filter. Results are sorted by their path names. @param pathPattern a glob specifying the path pattern @param filter a user-supplied path filter @return null if {@code pathPattern} has no glob and the path does not exist an empty array if {@code pathPattern} has a glob and no path matches it else an array of {@link FileStatus} objects matching the pattern @throws IOException if any I/O error occurs when fetching file status
86 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @param client @param src @param dst @return @throws IOException
87 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
88 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
89 Attempt to normalize the given string to "host:port" if it like "ip:port". @param ipPort maybe lik ip:port or host:port. @return host:port
90 Decode the given token's service field into an InetAddress @param token from which to obtain the service @return InetAddress for the service
91 Construct the service key for a token @param uri of remote connection with a token @return "ip:port" or "host:port" depending on the value of hadoop.security.token.service.use_ip
92 Get a canonical service name for this FileSystem. The token cache is the only user of the canonical service name, and uses it to lookup this FileSystem's service tokens. If the file system provides a token of its own then it must have a canonical name, otherwise the canonical name can be null. Default implementation: If the FileSystem has child file systems (such as an embedded file system) then it is assumed that the FS has no tokens of its own and hence returns a null name; otherwise a service name is built using Uri and port. @return a service string that uniquely identifies this file system, null if the filesystem does not implement tokens @see SecurityUtil#buildDTServiceName(URI, int)
93 Get a canonical name for this file system. @return a URI string that uniquely identifies this file system
94 Provides a public wrapper over substituteVars in order to avoid compatibility issues. See HADOOP-18021 for further details. @param expr the literal value of a config key @return null if expr is null, otherwise the value resulting from expanding expr using the algorithm above. @throws IllegalArgumentException when more than {@link Configuration#MAX_SUBST} replacements are required
95 Get the value of the <code>name</code> property, <code>null</code> if no such property exists. If the key is deprecated, it returns the value of the first key which replaces the deprecated key and is not null. Values are processed for <a href="#VariableExpansion">variable expansion</a> before being returned. As a side effect get loads the properties from the sources if called for the first time as a lazy init. @param name the property name, will be trimmed before get value. @return the value of the <code>name</code> or its replacing property, or null if no such property exists.
96 Get the value of the <code>name</code>. If the key is deprecated, it returns the value of the first key which replaces the deprecated key and is not null. If no such property exists, then <code>defaultValue</code> is returned. @param name property name, will be trimmed before get value. @param defaultValue default value. @return property value, or <code>defaultValue</code> if the property doesn't exist.
97 Set optional Builder parameter.
98 Set mandatory option to the Builder. If the option is not supported or unavailable on the {@link FileSystem}, the client should expect {@link #build()} throws IllegalArgumentException.
99 Set the default FileSystem URI in a configuration. @param conf the configuration to alter @param uri the new default filesystem uri
100 Add a link to the config for the specified mount table @param conf - add the link to this conf @param mountTableName mountTable. @param src - the src path name @param target - the target URI link
101 Add a LinkMergeSlash to the config for the specified mount table. @param conf configuration. @param mountTableName mountTable. @param target target.
102 Add a LinkFallback to the config for the specified mount table. @param conf configuration. @param mountTableName mountTable. @param target targets.
103 Add a LinkMerge to the config for the specified mount table. @param conf configuration. @param mountTableName mountTable. @param targets targets.
104 Add nfly link to configuration for the given mount table. @param conf configuration. @param mountTableName mount table. @param src src. @param settings settings. @param targets targets.
105 Add a LinkRegex to the config for the specified mount table. @param conf - get mountable config from this conf @param mountTableName - the mountable name of the regex config item @param srcRegex - the src path regex expression that applies to this config @param targetStr - the string of target path @param interceptorSettings - the serialized interceptor string to be applied while resolving the mapping
106 Add config variable for homedir the specified mount table @param conf - add to this conf @param homedir - the home dir path starting with slash @param mountTableName - the mount table.
107 Set the user file creation mask (umask) @param conf configuration. @param umask umask.
108 Sets a list of codec classes in the configuration. In addition to any classes specified using this method, {@link CompressionCodec} classes on the classpath are discovered using a Java ServiceLoader. @param conf the configuration to modify @param classes the list of classes to set
109 Set the default compression type for sequence files. @param job the configuration to modify @param val the new compression type (none, block, record)
110 Returns the proxyuser configuration. All returned properties must start with <code>proxyuser.</code>' <p> Subclasses may override this method if the proxyuser configuration is read from other place than the filter init parameters. @param filterConfig filter configuration object @return the proxyuser configuration properties. @throws ServletException thrown if the configuration could not be created.
111 Parse the command line arguments and initialize the data. <pre> % hadoop credential create alias [-provider providerPath] % hadoop credential list [-provider providerPath] % hadoop credential check alias [-provider providerPath] % hadoop credential delete alias [-provider providerPath] [-f] </pre> @param args args. @return 0 if the argument(s) were recognized, 1 otherwise @throws IOException raised on errors performing I/O.
112 Set the value of the <code>name</code> property to an <code>int</code>. @param name property name. @param value <code>int</code> value of the property.
113 Set the value of the <code>name</code> property to a <code>long</code>. @param name property name. @param value <code>long</code> value of the property.
114 Set the value of the <code>name</code> property to a <code>float</code>. @param name property name. @param value property value.
115 Set the value of the <code>name</code> property to a <code>double</code>. @param name property name. @param value property value.
116 Set the value of the <code>name</code> property to a <code>boolean</code>. @param name property name. @param value <code>boolean</code> value of the property.
117 Set the value of <code>name</code> to the given time duration. This is equivalent to <code>set(&lt;name&gt;, value + &lt;time suffix&gt;)</code>. @param name Property name @param value Time duration @param unit Unit of time
118 Sets Storage Size for the specified key. @param name - Key to set. @param value - The numeric value to set. @param unit - Storage Unit to be used.
119 Set the given property to <code>Pattern</code>. If the pattern is passed as null, sets the empty pattern which results in further calls to getPattern(...) returning the default value. @param name property name @param pattern new value
120 Set the array of string values for the <code>name</code> property as as comma delimited values. @param name property name. @param values The values
121 Set the socket address for the <code>name</code> property as a <code>host:port</code>. @param name property name. @param addr inetSocketAddress addr.
122 Set the value of the <code>name</code> property to the name of a <code>theClass</code> implementing the given interface <code>xface</code>. An exception is thrown if <code>theClass</code> does not implement the interface <code>xface</code>. @param name property name. @param theClass property value. @param xface the interface implemented by the named class.
123 Delete a directory and all its contents. If we return false, the directory may be partially-deleted. (1) If dir is symlink to a file, the symlink is deleted. The file pointed to by the symlink is not deleted. (2) If dir is symlink to a directory, symlink is deleted. The directory pointed to by symlink is not deleted. (3) If dir is a normal file, it is deleted. (4) If dir is a normal directory, then dir and all its contents recursively are deleted. @param dir dir. @return fully delete status.
124 Delete the contents of a directory, not the directory itself. If we return false, the directory may be partially-deleted. If dir is a symlink to a directory, all the contents of the actual directory pointed to by dir will be deleted. @param dir dir. @param tryGrantPermissions if 'true', try grant +rwx permissions to this and all the underlying directories before trying to delete their contents. @return fully delete contents status.
125 {@inheritDoc} (<b>Note</b>: Returned list is not sorted in any given order, due to reliance on Java's {@link File#list()} API.)
126 Deprecated. Remains for legacy support. Should be removed when {@link Stat} gains support for Windows and other operating systems.
127 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
128 Creates CompressionInputStream to be used to read off uncompressed data in one of the two reading modes. i.e. Continuous or Blocked reading modes @param seekableIn The InputStream @param start The start offset into the compressed stream @param end The end offset into the compressed stream @param readMode Controls whether progress is reported continuously or only at block boundaries. @return CompressionInputStream for BZip2 aligned at block boundaries
129 Change the declared field {@code field} in {@code source} Object to {@link MutableMetric}
130 Get the configured values for different StorageType. @param conf - absolute or fully qualified path @param t - the StorageType @param name - the sub-name of key @return the file system of the path
131 Set FTP's transfer mode based on configuration. Valid values are STREAM_TRANSFER_MODE, BLOCK_TRANSFER_MODE and COMPRESSED_TRANSFER_MODE. <p> Defaults to BLOCK_TRANSFER_MODE. @param conf @return
132 Set the FTPClient's data connection mode based on configuration. Valid values are ACTIVE_LOCAL_DATA_CONNECTION_MODE, PASSIVE_LOCAL_DATA_CONNECTION_MODE and PASSIVE_REMOTE_DATA_CONNECTION_MODE. <p> Defaults to ACTIVE_LOCAL_DATA_CONNECTION_MODE. @param client @param conf @throws IOException
133 Get the value of the home dir conf value for specified mount table @param conf - from this conf @param mountTableName - the mount table @return home dir value, null if variable is not in conf
134 Get the user file creation mask (umask) {@code UMASK_LABEL} config param has umask value that is either symbolic or octal. Symbolic umask is applied relative to file mode creation mask; the permission op characters '+' clears the corresponding bit in the mask, '-' sets bits in the mask. Octal umask, the specified bits are set in the file mode creation mask. @param conf configuration. @return FsPermission UMask.
135 Get the list of codecs discovered via a Java ServiceLoader, or listed in the configuration. Codecs specified in configuration come later in the returned list, and are considered to override those from the ServiceLoader. @param conf the configuration to look in @return a list of the {@link CompressionCodec} classes
136 Get the compression type for the reduce outputs @param job the job config to look in @return the kind of compression to use
137 Turn a security property into a nicely formatted set of <i>name=value</i> strings, allowing for either the property or the configuration not to be set. @param property the property to stringify @return the stringified property
138 Validate that hadoop.token.files (if specified) exist and are valid. @throws ClassNotFoundException @throws SecurityException @throws NoSuchMethodException @throws KerberosDiagsFailure
139 Open up and initialize the keyStore. @throws IOException If there is a problem reading the password file or a problem reading the keystore.
140 Retrieve the name of the current host. Multihomed hosts may restrict the hostname lookup to a specific interface and nameserver with {@link org.apache.hadoop.fs.CommonConfigurationKeysPublic#HADOOP_SECURITY_DNS_INTERFACE_KEY} and {@link org.apache.hadoop.fs.CommonConfigurationKeysPublic#HADOOP_SECURITY_DNS_NAMESERVER_KEY} @param conf Configuration object. May be null. @return @throws UnknownHostException
141 Look up the client principal for a given protocol. It searches all known SecurityInfo providers. @param protocol the protocol class to get the information for @param conf configuration object @return client principal or null if it has no client principal defined.
142 Get the value of the <code>name</code> property as a trimmed <code>String</code>, <code>null</code> if no such property exists. If the key is deprecated, it returns the value of the first key which replaces the deprecated key and is not null Values are processed for <a href="#VariableExpansion">variable expansion</a> before being returned. @param name the property name. @return the value of the <code>name</code> or its replacing property, or null if no such property exists.
143 Sets a property if it is currently unset. @param name the property name @param value the new value
144 Return time duration in the given time unit. Valid units are encoded in properties as suffixes: nanoseconds (ns), microseconds (us), milliseconds (ms), seconds (s), minutes (m), hours (h), and days (d). If no unit is provided, the default unit is applied. @param name Property name @param defaultValue Value returned if no mapping exists. @param defaultUnit Default time unit if no valid suffix is provided. @param returnUnit The unit used for the returned value. @throws NumberFormatException If the property stripped of its unit is not a number @return time duration in given time unit
145 Gets the Storage Size from the config, or returns the defaultValue. The unit of return value is specified in target unit. @param name - Key Name @param defaultValue - Default Value -- e.g. 100MB @param targetUnit - The units that we want result to be in. @return double -- formatted in target Units
146 Gets storage size from a config file. @param name - Key to read. @param defaultValue - The default value to return in case the key is not present. @param targetUnit - The Storage unit that should be used for the return value. @return - double value in the Storage Unit specified.
147 Get the value of the <code>name</code> property as a <code>Pattern</code>. If no such property is specified, or if the specified value is not a valid <code>Pattern</code>, then <code>DefaultValue</code> is returned. Note that the returned value is NOT trimmed by this method. @param name property name @param defaultValue default value @return property value as a compiled Pattern, or defaultValue
148 Get the comma delimited values of the <code>name</code> property as a collection of <code>String</code>s. If no such property is specified then empty collection is returned. <p> This is an optimized version of {@link #getStrings(String)} @param name property name. @return property value as a collection of <code>String</code>s.
149 Get the comma delimited values of the <code>name</code> property as an array of <code>String</code>s. If no such property is specified then <code>null</code> is returned. @param name property name. @return property value as an array of <code>String</code>s, or <code>null</code>.
150 Get the comma delimited values of the <code>name</code> property as an array of <code>String</code>s. If no such property is specified then default value is returned. @param name property name. @param defaultValue The default value @return property value as an array of <code>String</code>s, or default value.
151 Get the comma delimited values of the <code>name</code> property as a collection of <code>String</code>s, trimmed of the leading and trailing whitespace. If no such property is specified then empty <code>Collection</code> is returned. @param name property name. @return property value as a collection of <code>String</code>s, or empty <code>Collection</code>
152 Get the comma delimited values of the <code>name</code> property as an array of <code>String</code>s, trimmed of the leading and trailing whitespace. If no such property is specified then an empty array is returned. @param name property name. @return property value as an array of trimmed <code>String</code>s, or empty array.
153 Get the comma delimited values of the <code>name</code> property as an array of <code>String</code>s, trimmed of the leading and trailing whitespace. If no such property is specified then default value is returned. @param name property name. @param defaultValue The default value @return property value as an array of trimmed <code>String</code>s, or default value.
154 Constructs a mapping of configuration and includes all properties that start with the specified configuration prefix. Property names in the mapping are trimmed to remove the configuration prefix. @param confPrefix configuration prefix @return mapping of configuration properties with prefix stripped
155 Write property and its attributes as json format to given {@link JsonGenerator}. @param jsonGen json writer @param config configuration @param name property name @throws IOException raised on errors performing I/O.
156 {@inheritDoc} This method makes the change to this objects {@link Configuration} and calls reconfigurePropertyImpl to update internal data structures. This method cannot be overridden, subclasses should instead override reconfigurePropertyImpl.
157 See {@link Configuration#get(String)}.
158 Get the name of the default mount table to use. If {@link Constants#CONFIG_VIEWFS_DEFAULT_MOUNT_TABLE_NAME_KEY} is specified, it's value is returned. Otherwise, {@link Constants#CONFIG_VIEWFS_DEFAULT_MOUNT_TABLE} is returned. @param conf Configuration to use. @return the name of the default mount table to use.
159 Check if native-bzip2 code is loaded &amp; initialized correctly and can be loaded for this job. @param conf configuration @return <code>true</code> if native-bzip2 is loaded &amp; initialized and can be loaded for this job, else <code>false</code>
160 Get the default socket factory as specified by the configuration parameter <tt>hadoop.rpc.socket.factory.default</tt> @param conf the configuration @return the default socket factory as specified in the configuration or the JVM default socket factory if the configuration does not contain a default socket factory property.
161 Retrieve the static username from the configuration.
162 Print a configuration option, or {@link #UNSET} if unset. @param option option to print
163 Configuration for the ZooKeeper connection when SSL/TLS is enabled. When a value is not configured, ensure that empty string is set instead of null. @param conf ZooKeeper Client configuration
164 Spawn a thread to do periodic renewals of kerberos credentials. NEVER directly call this method. This method should only be used for ticket cache based kerberos credentials. @param force - used by tests to forcibly spawn thread
165 Constructor. @param conf configuration for the provider
166 Utility method to fetch the ZK ACLs from the configuration. @param conf configuration. @throws java.io.IOException if the Zookeeper ACLs configuration file cannot be read @return acl list.
167 This utility method converts the name of the configured hash type to a symbolic constant. @param conf configuration @return one of the predefined constants
168 Build an enumset from a comma separated list of values. Case independent. Special handling of "*" meaning: all values. @param key key to look for @param enumClass class of enum @param ignoreUnknown should unknown values raise an exception? @return a mutable set of the identified enum values declared in the configuration @param <E> enumeration type @throws IllegalArgumentException if one of the entries was unknown and ignoreUnknown is false, or there are two entries in the enum which differ only by case.
169 Parse the given attribute as a set of integer ranges. @param name the attribute name @param defaultValue the default value if it is not set @return a new set of ranges from the configured value
170 See {@link Configuration#get(String, String)}.
171 Set optional boolean parameter for the Builder. @see #opt(String, String)
172 Set optional double parameter for the Builder. @see #opt(String, String)
173 Set mandatory boolean option. @see #must(String, String)
174 Set optional double parameter for the Builder. @see #opt(String, String)
175 Set the default FileSystem URI in a configuration. @param conf the configuration to alter @param uri the new default filesystem uri
176 Add nfly link to configuration for the given mount table. @param conf configuration. @param mountTableName mount table. @param src src. @param settings settings. @param targets targets.
177 Sets the index interval and stores it in conf. @see #getIndexInterval() @param conf configuration. @param interval interval.
178 set the ping interval value in configuration @param conf Configuration @param pingInterval the ping interval
179 set the connection timeout value in configuration @param conf Configuration @param timeout the socket connect timeout value
180 Set the bool value isNestedMountPointSupported in config. @param conf - from this conf @param isNestedMountPointSupported - whether nested mount point is supported
181 Set an array of string values as optional parameter for the Builder. @see #opt(String, String)
182 Set a string array as mandatory option. @see #must(String, String)
183 Set the socket address a client can use to connect for the <code>name</code> property as a <code>host:port</code>. The wildcard address is replaced with the local host's address. @param name property name. @param addr InetSocketAddress of a listener to store in the given property @return InetSocketAddress for clients to connect
184 Set a protocol to use a non-default RpcEngine if one is not specified in the configuration. @param conf configuration to use @param protocol the protocol interface @param engine the RpcEngine impl
185 Delete the given path to a file or directory. @param p the path to delete @param recursive to delete sub-directories @return true if the file or directory and all its contents were deleted @throws IOException if p is non-empty and recursive is false
186 Delete the contents of a directory, not the directory itself. If we return false, the directory may be partially-deleted. If dir is a symlink to a directory, all the contents of the actual directory pointed to by dir will be deleted. @param dir dir. @return fullyDeleteContents Status.
187 {@inheritDoc} If the given path is a symlink(mount link), the path will be resolved to a target path and it will get the resolved path's FileStatus object. It will not be represented as a symlink and isDirectory API returns true if the resolved path is a directory, false otherwise.
188 {@inheritDoc} Note: listStatus considers listing from fallbackLink if available. If the same directory path is present in configured mount path as well as in fallback fs, then only the fallback path will be listed in the returned result except for link. If any of the the immediate children of the given path f is a symlink(mount link), the returned FileStatus object of that children would be represented as a symlink. It will not be resolved to the target path and will not get the target path FileStatus object. The target path will be available via getSymlink on that children's FileStatus object. Since it represents as symlink, isDirectory on that children's FileStatus will return false. This behavior can be changed by setting an advanced configuration fs.viewfs.mount.links.as.symlinks to false. In this case, mount points will be represented as non-symlinks and all the file/directory attributes like permissions, isDirectory etc will be assigned from it's resolved target directory/file. If you want to get the FileStatus of target path for that children, you may want to use GetFileStatus API with that children's symlink path. Please see {@link ViewFileSystem#getFileStatus(Path f)} Note: In ViewFileSystem, by default the mount links are represented as symlinks.
189 Create an FSDataOutputStream at the indicated Path with write-progress reporting. @param f the file name to open @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @param replication required block replication for the file. @param blockSize the size of the buffer to be used. @param progress to report progress. @throws IOException IO failure @return output stream.
190 @return the umask of this FileContext
191 Create a factory. @param keyToBufferDir Key to buffer directory config for a FS. @param configuration factory configurations. @param name factory name -the option from {@link CommonConfigurationKeys}. @return the factory, ready to be initialized. @throws IllegalArgumentException if the name is unknown.
192 Find the codecs specified in the config value io.compression.codecs and register them. Defaults to gzip and deflate. @param conf configuration.
193 Get the value of the <code>name</code> property as a trimmed <code>String</code>, <code>defaultValue</code> if no such property exists. See @{Configuration#getTrimmed} for more details. @param name the property name. @param defaultValue the property default value. @return the value of the <code>name</code> or defaultValue if it is not set.
194 Get the value of the <code>name</code> property as an <code>int</code>. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>int</code>, then an error is thrown. @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as an <code>int</code>, or <code>defaultValue</code>.
195 Get the value of the <code>name</code> property as a <code>long</code>. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>long</code>, then an error is thrown. @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as a <code>long</code>, or <code>defaultValue</code>.
196 Get the value of the <code>name</code> property as a <code>long</code> or human readable format. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>long</code> or human readable format, then an error is thrown. You can use the following suffix (case insensitive): k(kilo), m(mega), g(giga), t(tera), p(peta), e(exa) @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as a <code>long</code>, or <code>defaultValue</code>.
197 Get the value of the <code>name</code> property as a <code>float</code>. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>float</code>, then an error is thrown. @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as a <code>float</code>, or <code>defaultValue</code>.
198 Get the value of the <code>name</code> property as a <code>double</code>. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>double</code>, then an error is thrown. @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as a <code>double</code>, or <code>defaultValue</code>.
199 Get the value of the <code>name</code> property as a <code>boolean</code>. If no such property is specified, or if the specified value is not a valid <code>boolean</code>, then <code>defaultValue</code> is returned. @param name property name. @param defaultValue default value. @return property value as a <code>boolean</code>, or <code>defaultValue</code>.
200 Get the value of the <code>name</code> property as a <code>Class</code>. If no such property is specified, then <code>defaultValue</code> is returned. @param name the conf key name. @param defaultValue default value. @return property value as a <code>Class</code>, or <code>defaultValue</code>.
201 Set the given property, if it is currently unset. @param name property name @param value new value
202 Return time duration in the given time unit. Valid units are encoded in properties as suffixes: nanoseconds (ns), microseconds (us), milliseconds (ms), seconds (s), minutes (m), hours (h), and days (d). @param name Property name @param defaultValue Value returned if no mapping exists. @param unit Unit to convert the stored property, if it exists. @throws NumberFormatException If the property stripped of its unit is not a number @return time duration in given time unit
203 A util function to retrieve specific additional sasl property from config. Used by subclasses to read sasl properties used by themselves. @param conf the configuration @param configKey the config key to look for @param defaultQOP the default QOP if the key is missing @return sasl property associated with the given key
204 Get the value of the <code>name</code> property as a set of comma-delimited <code>int</code> values. If no such property exists, an empty array is returned. @param name property name @return property value interpreted as an array of comma-delimited <code>int</code> values
205 Get the value of the <code>name</code> property as an array of <code>Class</code>. The value of the property specifies a list of comma separated class names. If no such property is specified, then <code>defaultValue</code> is returned. @param name the property name. @param defaultValue default value. @return property value as a <code>Class[]</code>, or <code>defaultValue</code>.
206 Get a local file name under a directory named in <i>dirsProp</i> with the given <i>path</i>. If <i>dirsProp</i> contains multiple directories, then one is chosen based on <i>path</i>'s hash code. If the selected directory does not exist, an attempt is made to create it. @param dirsProp directory in which to locate the file. @param path file-path. @return local file under the directory with the given path. @throws IOException raised on errors performing I/O.
207 <p> Serializations are found by reading the <code>io.serializations</code> property from <code>conf</code>, which is a comma-delimited list of classnames. </p> @param conf configuration.
208 Constructs a mapping of configuration properties to be used for filter initialization. The mapping includes all properties that start with the specified configuration prefix. Property names in the mapping are trimmed to remove the configuration prefix. @param conf configuration to read @param confPrefix configuration prefix @return mapping of configuration properties to be used for filter initialization
209 Constructs a mapping of configuration properties to be used for filter initialization. The mapping includes all properties that start with the specified configuration prefix. Property names in the mapping are trimmed to remove the configuration prefix. @param conf configuration to read @param confPrefix configuration prefix @return mapping of configuration properties to be used for filter initialization
210 Propagate options to any builder, converting everything with the prefix to an option where, if there were 2+ dot-separated elements, it is converted to a schema. <pre> fs.example.s3a.option becomes "s3a.option" fs.example.fs.io.policy becomes "fs.io.policy" fs.example.something becomes "something" </pre> @param builder builder to modify @param conf configuration to read @param prefix prefix to scan/strip @param mandatory are the options to be mandatory or optional?
211 Print configuration options that can be changed.
212 Add a link to the config for the default mount table @param conf - add the link to this conf @param src - the src path name @param target - the target URI link
213 Add a LinkMergeSlash to the config for the default mount table. @param conf configuration. @param target targets.
214 Add a LinkFallback to the config for the default mount table. @param conf configuration. @param target targets.
215 Add a LinkMerge to the config for the default mount table. @param conf configuration. @param targets targets array.
216 Add config variable for homedir for default mount table @param conf - add to this conf @param homedir - the home dir path starting with slash
217 Get the value of the home dir conf value for default mount table @param conf - from this conf @return home dir value, null if variable is not in conf
218 Create encoder corresponding to given codec. @param options Erasure codec options @param conf configuration. @return erasure encoder
219 Create decoder corresponding to given codec. @param options Erasure codec options @param conf configuration. @return erasure decoder
220 Return the appropriate type of the bzip2 compressor. @param conf configuration @return the appropriate type of the bzip2 compressor.
221 Return the appropriate type of the bzip2 decompressor. @param conf configuration @return the appropriate type of the bzip2 decompressor.
222 Return the appropriate implementation of the bzip2 decompressor. @param conf configuration @return the appropriate implementation of the bzip2 decompressor.
223 Get the socket factory for the given class according to its configuration parameter <tt>hadoop.rpc.socket.factory.class.&lt;ClassName&gt;</tt>. When no such parameter exists then fall back on the default socket factory as configured by <tt>hadoop.rpc.socket.factory.class.default</tt>. If this default socket factory is not configured, then fall back on the JVM default socket factory. @param conf the configuration @param clazz the class (usually a {@link VersionedProtocol}) @return a socket factory
224 Constructor for the helper class to configure the ZooKeeper client connection. @param zkPrincipal Optional. @param kerberosPrincipal Optional. Use along with kerberosKeytab. @param kerberosKeytab Optional. Use along with kerberosPrincipal.
225 Initializes the factory. @throws GeneralSecurityException thrown if an SSL initialization error happened. @throws IOException thrown if an IO error happened while reading the SSL configuration.
226 Is the authentication method of this configuration "simple"? @param conf configuration to check @return true if auth is simple (i.e. not kerberos)
227 Set the static configuration to get and evaluate the rules. <p> IMPORTANT: This method does a NOP if the rules have been set already. If there is a need to reset the rules, the {@link KerberosName#setRules(String)} method should be invoked directly. @param conf the new configuration @throws IOException raised on errors performing I/O.
228 Get crypto codec for specified algorithm/mode/padding. @param conf the configuration @param cipherSuite algorithm/mode/padding @return CryptoCodec the codec object. Null value will be returned if no crypto codec classes with cipher suite configured.
229 Get a singleton instance of hash function of a type defined in the configuration. @param conf current configuration @return defined hash type, or null if type is invalid
230 Build a FlagSet from a comma separated list of values. Case independent. Special handling of "*" meaning: all values. @param enumClass class of enum @param conf configuration @param key key to look for @param ignoreUnknown should unknown values raise an exception? @param <E> enumeration type @return a mutable FlagSet @throws IllegalArgumentException if one of the entries was unknown and ignoreUnknown is false, or there are two entries in the enum which differ only by case.
231 Write out the non-default properties in this configuration to the given {@link Writer}. <ul> <li> When property name is not empty and the property exists in the configuration, this method writes the property and its attributes to the {@link Writer}. </li> <li> When property name is null or empty, this method writes all the configuration properties and their attributes to the {@link Writer}. </li> <li> When property name is not empty but the property doesn't exist in the configuration, this method throws an {@link IllegalArgumentException}. </li> </ul> @param propertyName xml property name. @param out the writer to write to. @param config configuration. @throws IOException raised on errors performing I/O.
232 Writes out all properties and their attributes (final and resource) to the given {@link Writer}, the format of the output would be, <pre> { "properties" : [ { key : "key1", value : "value1", isFinal : "key1.isFinal", resource : "key1.resource" }, { key : "key2", value : "value2", isFinal : "ke2.isFinal", resource : "key2.resource" } ] } </pre> It does not output the properties of the configuration object which is loaded from an input stream. <p> @param config the configuration @param out the Writer to write to @throws IOException raised on errors performing I/O.
233 Set optional int parameter for the Builder. @see #opt(String, String)
234 Set optional float parameter for the Builder. @see #opt(String, String)
235 Set optional double parameter for the Builder. @see #opt(String, String)
236 Set mandatory int option. @see #must(String, String)
237 Make an metrics source from an annotated object. @param source the annotated object. @return a metrics source
238 Create an FSDataOutputStream at the indicated Path. @param f the file name to open @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @param replication required block replication for the file. @param blockSize the size of the buffer to be used. @throws IOException IO failure @return output stream.
239 Create or overwrite file on indicated path and returns an output stream for writing into the file. @param f the file name to open @param createFlag gives the semantics of create; see {@link CreateFlag} @param opts file creation options; see {@link Options.CreateOpts}. <ul> <li>Progress - to report progress on the operation - default null <li>Permission - umask is applied against permission: default is FsPermissions:getDefault() <li>CreateParent - create missing parent path; default is to not to create parents <li>The defaults for the following are SS defaults of the file server implementing the target path. Not all parameters make sense for all kinds of file system - eg. localFS ignores Blocksize, replication, checksum <ul> <li>BufferSize - buffersize used in FSDataOutputStream <li>Blocksize - block size for file blocks <li>ReplicationFactor - replication for blocks <li>ChecksumParam - Checksum parameters. server default is used if not specified. </ul> </ul> @return {@link FSDataOutputStream} for created file @throws AccessControlException If access is denied @throws FileAlreadyExistsException If file <code>f</code> already exists @throws FileNotFoundException If parent of <code>f</code> does not exist and <code>createParent</code> is false @throws ParentNotDirectoryException If parent of <code>f</code> is not a directory. @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>f</code> is not valid
240 Make(create) a directory and all the non-existent parents. @param dir - the dir to make @param permission - permissions is set permission{@literal &~}umask @param createParent - if true then missing parent dirs are created if false then parent must exist @throws AccessControlException If access is denied @throws FileAlreadyExistsException If directory <code>dir</code> already exists @throws FileNotFoundException If parent of <code>dir</code> does not exist and <code>createParent</code> is false @throws ParentNotDirectoryException If parent of <code>dir</code> is not a directory @throws UnsupportedFileSystemException If file system for <code>dir</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>dir</code> is not valid
241 A little test program. @param args arguments. @throws Exception exception.
242 Convert Kerberos principal name pattern to valid Kerberos principal names. It replaces hostname pattern with hostname, which should be fully-qualified domain name. If hostname is null or "0.0.0.0", it uses dynamically looked-up fqdn of the current host instead. @param principalConfig the Kerberos principal name conf value to convert @param hostname the fully-qualified domain name used for substitution @return converted Kerberos principal name @throws IOException if the client address cannot be determined
243 Convert Kerberos principal name pattern to valid Kerberos principal names. This method is similar to {@link #getServerPrincipal(String, String)}, except 1) the reverse DNS lookup from addr to hostname is done only when necessary, 2) param addr can't be null (no default behavior of using local hostname when addr is null). @param principalConfig Kerberos principal name pattern to convert @param addr InetAddress of the host used for substitution @return converted Kerberos principal name @throws IOException if the client address cannot be determined
244 Add a protocol to the existing server. @param rpcKind - input rpcKind @param protocolClass - the protocol class @param protocolImpl - the impl of the protocol that will be called @return the server (for convenience)
245 Creates a new KeyProvider from the given Configuration and configuration key name. @param conf Configuration @param configKeyName The configuration key name @return new KeyProvider, or null if no provider was found. @throws IOException if the KeyProvider is improperly specified in the Configuration
246 Get the default FileSystem URI from a configuration. @param conf the configuration to use @return the uri of the default filesystem
247 A cursory look at the {@code kinit} executable. If it is an absolute path: it must exist with a size > 0. If it is just a command, it has to be on the path. There's no check for that -but the PATH is printed out.
248 Get the socket address for <code>name</code> property as a <code>InetSocketAddress</code>. @param name property name. @param defaultAddress the default value @param defaultPort the default port @return InetSocketAddress
249 Set the socket address a client can use to connect for the <code>name</code> property as a <code>host:port</code>. The wildcard address is replaced with the local host's address. If the host and address properties are configured the host component of the address will be combined with the port component of the addr to generate the address. This is to allow optional control over which host name is used in multi-home bind-host cases where a host can have multiple names @param hostProperty the bind-host configuration name @param addressProperty the service address configuration name @param defaultAddressValue the service default address configuration value @param addr InetSocketAddress of the service listener @return InetSocketAddress for clients to connect
250 Perform the open operation. @return a future to the input stream. @throws IOException early failure to open @throws UnsupportedOperationException if the specific operation is not supported. @throws IllegalArgumentException if the parameters are not valid.
251 Perform the open operation. Returns a future which, when get() or a chained completion operation is invoked, will supply the input stream of the file referenced by the path/path handle. @return a future to the input stream. @throws IOException early failure to open @throws UnsupportedOperationException if the specific operation is not supported. @throws IllegalArgumentException if the parameters are not valid.
252 Set configuration from UI. @param uri @param conf @throws IOException
253 Connecting by using configuration parameters. @return An FTPClient instance @throws IOException
254 Initialize from a filesystem.
255 Opens an FSDataInputStream at the indicated Path. @param f the file to open @throws IOException IO failure @return input stream.
256 Open an FSDataInputStream matching the PathHandle instance. The implementation may encode metadata in PathHandle to address the resource directly and verify that the resource referenced satisfies constraints specified at its construciton. @param fd PathHandle object returned by the FS authority. @throws InvalidPathHandleException If {@link PathHandle} constraints are not satisfied @throws IOException IO failure @throws UnsupportedOperationException If {@link #open(PathHandle, int)} not overridden by subclass @return input stream.
257 Append to an existing file (optional operation). Same as {@code append(f, getConf().getInt(IO_FILE_BUFFER_SIZE_KEY, IO_FILE_BUFFER_SIZE_DEFAULT), null)} @param f the existing file to be appended. @throws IOException IO failure @throws UnsupportedOperationException if the operation is unsupported (default). @return output stream.
258 Append to an existing file (optional operation). @param f the existing file to be appended. @param appendToNewBlock whether to append data to a new block instead of the end of the last partial block @throws IOException IO failure @throws UnsupportedOperationException if the operation is unsupported (default). @return output stream.
259 Instantiate. The configuration is used to read the count of permits issued for concurrent creation of filesystem instances. @param conf configuration
260 Sort and merge using an arbitrary {@link RawComparator}. @param fs input FileSystem. @param comparator input RawComparator. @param keyClass input keyClass. @param valClass input valClass. @param conf input Configuration. @param metadata input metadata.
261 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream} with the given {@link Compressor}. @param out the location for the final output stream @param compressor compressor to use @return a stream the user can write uncompressed data to have it compressed @throws IOException raised on errors performing I/O.
262 Create a {@link CompressionInputStream} that will read from the given {@link InputStream} with the given {@link Decompressor}. @param in the stream to read compressed bytes from @param decompressor decompressor to use @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
263 Create a new {@link Decompressor} for use by this {@link CompressionCodec}. @return a new decompressor for use by this codec
264 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream} with the given {@link Compressor}. @param out the location for the final output stream @param compressor compressor to use @return a stream the user can write uncompressed data to, to have it compressed @throws IOException raised on errors performing I/O.
265 Create a {@link CompressionInputStream} that will read from the given {@link InputStream} with the given {@link Decompressor}, and return a stream for uncompressed data. @param in the stream to read compressed bytes from @param decompressor decompressor to use @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
266 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream} with the given {@link Compressor}. @param out the location for the final output stream @param compressor compressor to use @return a stream the user can write uncompressed data to have it compressed @throws IOException raised on errors performing I/O.
267 Create a new {@link Compressor} for use by this {@link CompressionCodec}. @return a new compressor for use by this codec
268 Create a {@link CompressionInputStream} that will read from the given {@link InputStream} with the given {@link Decompressor}. @param in the stream to read compressed bytes from @param decompressor decompressor to use @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
269 Create a new {@link Decompressor} for use by this {@link CompressionCodec}. @return a new decompressor for use by this codec
270 Copies from one stream to another. <strong>closes the input and output streams at the end</strong>. @param in InputStrem to read from @param out OutputStream to write to @param conf the Configuration object. @throws IOException raised on errors performing I/O.
271 Copies from one stream to another. @param in InputStream to read from @param out OutputStream to write to @param conf the Configuration object @param close whether or not close the InputStream and OutputStream at the end. The streams are closed in the finally clause. @throws IOException raised on errors performing I/O.
272 Get the configured buffer size
273 Set the configuration and extract the configuration parameters of interest @param conf the new configuration
274 Read crypto buffer size. @param conf configuration. @return hadoop.security.crypto.buffer.size.
275 Read the number of levels from the configuration. This will affect the FairCallQueue's overall capacity. @throws IllegalArgumentException on invalid queue count
276 Get the RPC time from configuration; If not set in the configuration, return the default value. @param conf Configuration @return the RPC timeout (ms)
277 Get the ping interval from configuration; If not set in the configuration, return the default value. @param conf Configuration @return the ping interval
278 The time after which a RPC will timeout. @param conf Configuration @return the timeout period in milliseconds.
279 Create a line reader that reads from the given stream using the <code>io.file.buffer.size</code> specified in the given <code>Configuration</code>. @param in input stream @param conf configuration @throws IOException raised on errors performing I/O.
280 Create a line reader that reads from the given stream using the <code>io.file.buffer.size</code> specified in the given <code>Configuration</code>, and using a custom delimiter of array of bytes. @param in input stream @param conf configuration @param recordDelimiterBytes The delimiter @throws IOException raised on errors performing I/O.
281 See {@link Configuration#getInt(String, int)}.
282 Set the FTPClient's timeout based on configuration. FS_FTP_TIMEOUT is set as timeout (defaults to DEFAULT_TIMEOUT).
283 Get a long value with resilience to unparseable values. @param key key to log @param defVal default value @return long value
284 Return the number of bytes that large input files should be optimally be split into to minimize I/O time. @deprecated use {@link #getDefaultBlockSize(Path)} instead @return default block size.
285 See {@link Configuration#getLong(String, long)}.
286 See {@link Configuration#getFloat(String, float)}.
287 @deprecated Use {@link #initialize(Configuration, FileSystem)} instead.
288 Check the bool config whether nested mount point is supported. Default: true @param conf - from this conf @return whether nested mount point is supported
289 Create a new {@link Compressor} for use by this {@link CompressionCodec}. @return a new compressor for use by this codec
290 Return the MultipleLinearRandomRetry policy specified in the conf, or null if the feature is disabled. If the policy is specified in the conf but the policy cannot be parsed, the default policy is returned. Retry policy spec: N pairs of sleep-time and number-of-retries "s1,n1,s2,n2,..." @param conf configuration. @param retryPolicyEnabledKey conf property key for enabling retry @param defaultRetryPolicyEnabled default retryPolicyEnabledKey conf value @param retryPolicySpecKey conf property key for retry policy spec @param defaultRetryPolicySpec default retryPolicySpecKey conf value @return the MultipleLinearRandomRetry policy specified in the conf, or null if the feature is disabled.
291 Add default apps. @param parent contexthandlercollection. @param appDir The application directory @param conf configuration. @throws IOException raised on errors performing I/O.
292 Add default servlets. @param configuration the hadoop configuration
293 Return boolean value configured by property 'ipc.<port>.callqueue.overflow.trigger.failover' if it is present. If the config is not present, default config (without port) is used to derive class i.e 'ipc.callqueue.overflow.trigger.failover', and derived value is returned if configured. Otherwise, default value {@link CommonConfigurationKeys#IPC_CALLQUEUE_SERVER_FAILOVER_ENABLE_DEFAULT} is returned. @param namespace Namespace "ipc" + "." + Server's listener port. @param conf Configuration properties. @return Value returned based on configuration.
294 Construct an IPC client whose values are of the given {@link Writable} class. @param valueClass input valueClass. @param conf input configuration. @param factory input factory.
295 Get from config if client backoff is enabled on that port.
296 Return boolean value configured by property 'ipc.<port>.backoff.enable' if it is present. If the config is not present, default config (without port) is used to derive class i.e 'ipc.backoff.enable', and derived value is returned if configured. Otherwise, default value {@link CommonConfigurationKeys#IPC_BACKOFF_ENABLE_DEFAULT} is returned. @param namespace Namespace "ipc". @param port Server's listener port. @param conf Configuration properties. @return Value returned based on configuration.
297 Fallback to clear text passwords in configuration. @param name the property name. @return clear text password or null
298 See {@link Configuration#getBoolean(String, boolean)}.
299 Get the FileSystem implementation class of a filesystem. This triggers a scan and load of all FileSystem implementations listed as services and discovered via the {@link ServiceLoader} @param scheme URL scheme of FS @param conf configuration: can be null, in which case the check for a filesystem binding declaration in the configuration is skipped. @return the filesystem @throws UnsupportedFileSystemException if there was no known implementation for the scheme. @throws IOException if the filesystem could not be loaded
300 Create a file system instance for the specified uri using the conf. The conf is used to find the class name that implements the file system. The conf is also passed to the file system for its configuration. @param uri URI of the file system @param conf Configuration for the file system @return Returns the file system for the given URI @throws UnsupportedFileSystemException file system for <code>uri</code> is not found
301 Return class configured by property 'ipc.<port>.callqueue.impl' if it is present. If the config is not present, default config (without port) is used to derive class i.e 'ipc.callqueue.impl', and derived class is returned if class value is present and valid. If default config is also not present, default class {@link LinkedBlockingQueue} is returned. @param namespace Namespace "ipc". @param port Server's listener port. @param conf Configuration properties. @return Class returned based on configuration.
302 Return class configured by property 'ipc.<port>.scheduler.impl' if it is present. If the config is not present, and if property 'ipc.<port>.callqueue.impl' represents FairCallQueue class, return DecayRpcScheduler. If config 'ipc.<port>.callqueue.impl' does not have value FairCallQueue, default config (without port) is used to derive class i.e 'ipc.scheduler.impl'. If default config is also not present, default class {@link DefaultRpcScheduler} is returned. @param namespace Namespace "ipc". @param port Server's listener port. @param conf Configuration properties. @return Class returned based on configuration.
303 Get the value of the <code>name</code> property as a <code>Class</code> implementing the interface specified by <code>xface</code>. If no such property is specified, then <code>defaultValue</code> is returned. An exception is thrown if the returned class does not implement the named interface. @param name the conf key name. @param defaultValue default value. @param xface the interface implemented by the named class. @param <U> Interface class type. @return property value as a <code>Class</code>, or <code>defaultValue</code>.
304 Get the FS instance if the key maps to an instance, creating and initializing the FS if it is not found. If this is the first entry in the map and the JVM is not shutting down, this registers a shutdown hook to close filesystems, and adds this FS to the {@code toAutoClose} set if {@code "fs.automatic.close"} is set in the configuration (default: true). @param uri filesystem URI @param conf configuration @param key key to store/retrieve this FileSystem in the cache @return a cached or newly instantiated FileSystem. @throws IOException If an I/O error occurred.
305 Get the shutdown timeout in seconds, from the supplied configuration. @param conf configuration to use. @return a timeout, always greater than or equal to {@link #TIMEOUT_MINIMUM}
306 Try and resolve the provided element name as a credential provider alias. @param name alias of the provisioned credential @return password or null if not found @throws IOException when error in fetching password
307 Read the weights of capacity in callqueue and pass the value to callqueue constructions.
308 Get an array of FilterConfiguration specified in the conf
309 Get the value of the <code>name</code> property as a <code>List</code> of objects implementing the interface specified by <code>xface</code>. An exception is thrown if any of the classes does not exist, or if it does not implement the named interface. @param name the property name. @param xface the interface implemented by the classes named by <code>name</code>. @param <U> Interface class type. @return a <code>List</code> of objects implementing <code>xface</code>.
310 Initialize.
311 Propagate options to any builder. {@link FutureIO#propagateOptions(FSBuilder, Configuration, String, boolean)} @param builder builder to modify @param conf configuration to read @param prefix prefix to scan/strip @param mandatory are the options to be mandatory or optional?
312 Propagate options to any builder, converting everything with the prefix to an option where, if there were 2+ dot-separated elements, it is converted to a schema. See {@link #propagateOptions(FSBuilder, Configuration, String, boolean)}. @param builder builder to modify @param conf configuration to read @param optionalPrefix prefix for optional settings @param mandatoryPrefix prefix for mandatory settings @param <T> type of result @param <U> type of builder @return the builder passed in.
313 A tool to test native library availability. @param args args.
314 Get the type of {@link Compressor} needed by this {@link CompressionCodec}. @return the type of compressor needed by this codec.
315 Get the type of {@link Decompressor} needed by this {@link CompressionCodec}. @return the type of decompressor needed by this codec.
316 Create a new {@link Decompressor} for use by this {@link CompressionCodec}. @return a new decompressor for use by this codec
317 Constructor for the helper class to configure the ZooKeeper client connection. @param zkPrincipal Optional.
318 Perform the second query to get the groups of the user. If posixGroups is enabled, use use posix gid/uid to find. Otherwise, use the general group member attribute to find it. @param result the result object returned from the prior user lookup. @param c the context object of the LDAP connection. @return a list of strings representing group names of the user. @throws NamingException if unable to find group names
319 Get crypto codec for algorithm/mode/padding in config value hadoop.security.crypto.cipher.suite @param conf the configuration @return CryptoCodec the codec object Null value will be returned if no crypto codec classes with cipher suite configured.
320 A convenience method to bind to a given address and report better exceptions if the address is not a valid host. @param socket the socket to bind @param address the address to bind to @param backlog the number of connections allowed in the queue @throws BindException if the address can't be bound @throws UnknownHostException if the address isn't a valid host name @throws IOException other random errors from bind
321 Writes properties and their attributes (final and resource) to the given {@link Writer}. <ul> <li> When propertyName is not empty, and the property exists in the configuration, the format of the output would be, <pre> { "property": { "key" : "key1", "value" : "value1", "isFinal" : "key1.isFinal", "resource" : "key1.resource" } } </pre> </li> <li> When propertyName is null or empty, it behaves same as {@link #dumpConfiguration(Configuration, Writer)}, the output would be, <pre> { "properties" : [ { key : "key1", value : "value1", isFinal : "key1.isFinal", resource : "key1.resource" }, { key : "key2", value : "value2", isFinal : "ke2.isFinal", resource : "key2.resource" } ] } </pre> </li> <li> When propertyName is not empty, and the property is not found in the configuration, this method will throw an {@link IllegalArgumentException}. </li> </ul> <p> @param config the configuration @param propertyName property name @param out the Writer to write to @throws IOException raised on errors performing I/O. @throws IllegalArgumentException when property name is not empty and the property is not found in configuration
322 Creates the specified directory hierarchy. Does not treat existence as an error.
323 Get the remote server's principal. The value will be obtained from the config and cross-checked against the server's advertised principal. @param authType of the SASL client @return String of the server's principal @throws IOException - error determining configured principal
324 decode the raw URI to get the underlying URI @param rawURI raw Har URI @return filtered URI of the underlying fileSystem
325 Returns the configured FileSystem implementation. @param conf the configuration to use @return FileSystem. @throws IOException If an I/O error occurred.
326 Initialize a FileSystem. Called after the new FileSystem instance is constructed, and before it is ready for use. FileSystem implementations overriding this method MUST forward it to their superclass, though the order in which it is done, and whether to alter the configuration before the invocation are options of the subclass. @param name a URI whose authority section names the host, port, etc. for this FileSystem @param conf the configuration @throws IOException on any failure to initialize this instance. @throws IllegalArgumentException if the URI is considered invalid.
327 Returns a unique configured FileSystem implementation for the default filesystem of the supplied configuration. This always returns a new FileSystem object. @param conf the configuration to use @return the new FS instance @throws IOException FS creation or initialization failure.
328 Check that a Path belongs to this FileSystem. The base implementation performs case insensitive equality checks of the URIs' schemes and authorities. Subclasses may implement slightly different checks. @param path to check @throws IllegalArgumentException if the path is not considered to be part of this FileSystem.
329 Get the socket address for <code>hostProperty</code> as a <code>InetSocketAddress</code>. If <code>hostProperty</code> is <code>null</code>, <code>addressProperty</code> will be used. This is useful for cases where we want to differentiate between host bind address and address clients should use to establish connection. @param hostProperty bind host property name. @param addressProperty address property name. @param defaultAddressValue the default value @param defaultPort the default port @return InetSocketAddress
330 A stream obtained via this call must be closed before using other APIs of this class or else the invocation will block.
331 Constructor. @param fileSystem owner FS. @param path path
332 Constructor with PathHandle. @param fileSystem owner FS. @param pathHandle path handle
333 Open a file. <p> If the WrappedIO class is found, uses {@link #fileSystem_openFile(FileSystem, Path, String, FileStatus, Long, Map)} with {@link #PARQUET_READ_POLICIES} as the list of read policies and passing down the file status. <p> If not, falls back to the classic {@code fs.open(Path)} call. @param instance dynamic wrapped IO instance. @param fs filesystem @param status file status @param readPolicies read policy to use @return the input stream @throws IOException any IO failure.
334 Test whether the file system supports append and return the answer. @param fs the target file system
335 Sort and merge using an arbitrary {@link RawComparator}. @param fs input FileSystem. @param comparator input RawComparator. @param keyClass input keyClass. @param valClass input valClass. @param conf input Configuration.
336 Creates a new compressor, taking settings from the configuration. @param conf configuration.
337 Prepare the compressor to be used in a new stream with settings defined in the given Configuration. It will reset the compressor's block size and and work factor. @param conf Configuration storing new settings
338 Initialize the {@link Reader} @param tmpReader <code>true</code> if we are constructing a temporary reader {@link SequenceFile.Sorter.cloneFileAttributes}, and hence do not initialize every component; <code>false</code> otherwise. @throws IOException
339 Prepare the compressor to be used in a new stream with settings defined in the given Configuration. It will reset the compressor's compression level and compression strategy. @param conf Configuration storing new settings
340 Obtain an output stream for writing a value into TFile. This may only be called right after a key appending operation (the key append stream must be closed). @param length The expected length of the value. If length of the value is not known, set length = -1. Otherwise, the application must write exactly as many bytes as specified here before calling close on the returned output stream. Advertising the value size up-front guarantees that the value is encoded in one chunk, and avoids intermediate chunk buffering. @throws IOException raised on errors performing I/O. @return DataOutputStream.
341 @param compressionAlgo The compression algorithm to be used to for compression. @throws IOException
342 {@inheritDoc}. <p> This will get called in the superclass constructor, so a check is needed to ensure that the raw mapping is defined before trying to relaying a null configuration. </p> @param conf input Configuration.
343 Set the configuration and extract the configuration parameters of interest @param conf the new configuration
344 A helper function to create an options object. @param conf the configuration to use @return a new options object
345 The time after which a RPC will timeout. If ping is not enabled (via ipc.client.ping), then the timeout value is the same as the pingInterval. If ping is enabled, then there is no timeout value. @param conf Configuration @return the timeout period in milliseconds. -1 if no timeout value is set @deprecated use {@link #getRpcTimeout(Configuration)} instead
346 Connect to the FTP server using configuration parameters * @return An FTPClient instance @throws IOException
347 Get a long value with resilience to unparseable values. Negative values are replaced with the default. @param key key to log @param defVal default value @return long value
348 Return a set of server default configuration values. @return server default configuration values @throws IOException IO failure @deprecated use {@link #getServerDefaults(Path)} instead
349 Return the number of bytes that large input files should be optimally be split into to minimize I/O time. The given path will be used to locate the actual filesystem. The full path does not have to exist. @param f path of file @return the default block size for the path's filesystem
350 Moves files to a bad file directory on the same device, so that their storage will not be reused.
351 This is the constructor used by the builder. All overriding classes should implement this. @param builder builder. @throws IOException raised on errors performing I/O.
352 @deprecated Call {@link #nextRaw(DataOutputBuffer,SequenceFile.ValueBytes)}.
353 Return the default retry policy set in conf. If the value retryPolicyEnabledKey is set to false in conf, use TRY_ONCE_THEN_FAIL. Otherwise, get the MultipleLinearRandomRetry policy specified in the conf and then (1) use multipleLinearRandomRetry for - remoteExceptionToRetry, or - IOException other than RemoteException, or - ServiceException; and (2) use TRY_ONCE_THEN_FAIL for - non-remoteExceptionToRetry RemoteException, or - non-IOException. @param conf configuration. @param retryPolicyEnabledKey conf property key for enabling retry @param defaultRetryPolicyEnabled default retryPolicyEnabledKey conf value @param retryPolicySpecKey conf property key for retry policy spec @param defaultRetryPolicySpec default retryPolicySpecKey conf value @param remoteExceptionToRetry The particular RemoteException to retry @return the default retry policy.
354 Construct an IPC client with the default SocketFactory. @param valueClass input valueClass. @param conf input Configuration.
355 Construct &amp; cache an IPC client with the user-provided SocketFactory if no cached client exists. @param conf Configuration @param factory SocketFactory for client socket @param valueClass Class of the expected response @return an IPC client
356 There are certain integrations of the credential provider API in which a recursive dependency between the provider and the hadoop filesystem abstraction causes a problem. These integration points need to leverage this utility method to remove problematic provider types from the existing provider path within the configuration. @param config the existing configuration with provider path @param fileSystemClass the class which providers must be compatible @return Configuration clone with new provider path @throws IOException raised on errors performing I/O.
357 The main factory method for creating a file system. Get a file system for the URI's scheme and authority. The scheme of the <code>uri</code> determines a configuration property name, <tt>fs.AbstractFileSystem.<i>scheme</i>.impl</tt> whose value names the AbstractFileSystem class. The entire URI and conf is passed to the AbstractFileSystem factory method. @param uri for the file system to be created. @param conf which is passed to the file system impl. @return file system for the given URI. @throws UnsupportedFileSystemException if the file system for <code>uri</code> is not supported.
358 @return Build the RPC Server. @throws IOException on error @throws HadoopIllegalArgumentException when mandatory fields are not set
359 Get an instance of the configured TrashPolicy based on the value of the configuration parameter fs.trash.classname. @param conf the configuration to be used @param fs the file system to be used @param home the home directory @return an instance of TrashPolicy @deprecated Use {@link #getInstance(Configuration, FileSystem)} instead.
360 Get an instance of the configured TrashPolicy based on the value of the configuration parameter fs.trash.classname. @param conf the configuration to be used @param fs the file system to be used @return an instance of TrashPolicy
361 This function gets the instance based on the config. @param conf Configuration @param configKey config key name. @return Domain name resolver.
362 Returns an instance of SaslPropertiesResolver. Looks up the configuration to see if there is custom class specified. Constructs the instance by passing the configuration directly to the constructor to achieve thread safety using final fields. @param conf configuration. @return SaslPropertiesResolver
363 Try to load the SASL resolver. @param saslPropsResolverKey key for the SASL resolver
364 Returns an instance of ImpersonationProvider. Looks up the configuration to see if there is custom class specified. @param conf @return ImpersonationProvider
365 Shutdown the executor thread itself. @param conf the configuration containing the shutdown timeout setting.
366 Get the value for a known password configuration element. In order to enable the elimination of clear text passwords in config, this method attempts to resolve the property name as an alias through the CredentialProvider API and conditionally fallsback to config. @param name property name @return password @throws IOException when error in fetching password
367 Create RS raw encoder according to configuration. @param conf configuration @param coderOptions coder options that's used to create the coder @param codec the codec to use. If null, will use the default codec @return raw encoder
368 Create RS raw decoder according to configuration. @param conf configuration @param coderOptions coder options that's used to create the coder @param codec the codec to use. If null, will use the default codec @return raw decoder
369 Replaces active queue with the newly requested one and transfers all calls to the newQ before returning. @param schedulerClass input schedulerClass. @param queueClassToUse input queueClassToUse. @param maxSize input maxSize. @param ns input ns. @param conf input configuration.
370 Create a FairCallQueue. @param priorityLevels the total size of all multi-level queue priority policies @param capacity the total size of all sub-queues @param ns the prefix to use for configuration @param capacityWeights the weights array for capacity allocation among subqueues @param serverFailOverEnabled whether or not to enable callqueue overflow trigger failover for stateless servers when RPC call queue is filled @param conf the configuration to read from Notes: Each sub-queue has a capacity of `capacity / numSubqueues`. The first or the highest priority sub-queue has an excess capacity of `capacity % numSubqueues`
371 Stores the item in the configuration with the given keyName. @param <K> the class of the item @param conf the configuration to store @param item the object to be stored @param keyName the name of the key to use @throws IOException : forwards Exceptions from the underlying {@link Serialization} classes.
372 Restores the object from the configuration. @param <K> the class of the item @param conf the configuration to use @param keyName the name of the key to use @param itemClass the class of the item @return restored object @throws IOException : forwards Exceptions from the underlying {@link Serialization} classes.
373 Stores the array of items in the configuration with the given keyName. @param <K> the class of the item @param conf the configuration to use @param items the objects to be stored @param keyName the name of the key to use @throws IndexOutOfBoundsException if the items array is empty @throws IOException : forwards Exceptions from the underlying {@link Serialization} classes.
374 Restores the array of objects from the configuration. @param <K> the class of the item @param conf the configuration to use @param keyName the name of the key to use @param itemClass the class of the item @return restored object @throws IOException : forwards Exceptions from the underlying {@link Serialization} classes.
375 Create the named file with write-progress reporter. @deprecated Use {@link SequenceFile#createWriter(Configuration, Writer.Option...)} instead. @param fs input filesystem. @param conf input configuration. @param name input name. @param keyClass input keyClass. @param valClass input valClass. @param bufferSize input bufferSize. @param replication input replication. @param blockSize input blockSize. @param progress input progress. @param metadata input metadata. @throws IOException raised on errors performing I/O.
376 Make a copy of the writable object using serialization to a buffer. @param src the object to copy from @param dst the object to copy into, which is destroyed @param <T> Generics Type. @param conf configuration. @return dst param (the copy) @throws IOException raised on errors performing I/O.
377 Propagate options to any builder. {@link FutureIO#propagateOptions(FSBuilder, Configuration, String, String)} @param builder builder to modify @param conf configuration to read @param optionalPrefix prefix for optional settings @param mandatoryPrefix prefix for mandatory settings @param <T> type of result @param <U> type of builder @return the builder passed in.
378 Perform LDAP queries to get group names of a user. Perform the first LDAP query to get the user object using the user's name. If one-query is enabled, retrieve the group names from the user object. If one-query is disabled, or if it failed, perform the second query to get the groups. @param user user name @return a list of group names for the user. If the user can not be found, return an empty string array. @throws NamingException if unable to get group names
379 Guts of the servlet - extracted for easy testing.
380 Initializes hadoop-auth AuthenticationFilter. <p> Propagates to hadoop-auth AuthenticationFilter configuration all Hadoop configuration properties prefixed with "hadoop.http.authentication." @param container The filter container @param conf Configuration for run-time parameters
381 Try to create a SaslClient for an authentication type. May return null if the type isn't supported or the client lacks the required credentials. @param authType - the requested authentication method @return SaslClient for the authType or null @throws SaslException - error instantiating client @throws IOException - misc errors
382 Create and initialize a new instance of a FileSystem. @param uri URI containing the FS schema and FS details @param conf configuration to use to look for the FS instance declaration and to pass to the {@link FileSystem#initialize(URI, Configuration)}. @return the initialized filesystem. @throws IOException problems loading or initializing the FileSystem
383 Called after a new FileSystem instance is constructed. @param theUri a uri whose authority section names the host, port, etc. for this FileSystem @param conf the configuration
384 Called after a new FileSystem instance is constructed. @param name a uri whose authority section names the host, port, etc. for this FileSystem @param conf the configuration
385 Qualify a path to one which uses this FileSystem and, if relative, made absolute. @param path to qualify. @return this path if it contains a scheme and authority and is absolute, or a new path that includes a path and authority and is fully qualified @see Path#makeQualified(URI, Path) @throws IllegalArgumentException if the path has a schema/URI different from this FileSystem.
386 Return the fully-qualified path of path, resolving the path through any symlinks or mount point. @param p path to be resolved @return fully qualified path @throws FileNotFoundException if the path is not present @throws IOException for any other error
387 Check that a Path belongs to this FileSystem.
388 Construct given a {@link FileContext} and a {@link Path}. @param fc filecontext. @param p the path. @throws IOException If an I/O error occurred.
389 Copy from src to dst, optionally deleting src and overwriting dst. @param src src. @param dst dst. @param deleteSource - delete src if true @param overwrite overwrite dst if true; throw IOException if dst exists and overwrite is false. @return true if copy is successful @throws AccessControlException If access is denied @throws FileAlreadyExistsException If <code>dst</code> already exists @throws FileNotFoundException If <code>src</code> does not exist @throws ParentNotDirectoryException If parent of <code>dst</code> is not a directory @throws UnsupportedFileSystemException If file system for <code>src</code> or <code>dst</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>dst</code> is invalid
390 Path Constructor. @param fileSystem owner @param path path to open.
391 Construct from a path handle. @param fileSystem owner @param pathHandle path handle of file to open.
392 Open a file. <p> If the WrappedIO class is found, use it. <p> If not, falls back to the classic {@code fs.open(Path)} call. @param fs filesystem @param status file status @param readPolicies read policy to use @return the input stream @throws IOException any IO failure.
393 Try loading from the user specified path, else load from the backup path in case Exception is not due to bad/wrong password. @param path Actual path to load from @param backupPath Backup path (_OLD) @return The permissions of the loaded file @throws NoSuchAlgorithmException @throws CertificateException @throws IOException
394 Sort and merge files containing the named classes. @param fs input FileSystem. @param keyClass input keyClass. @param valClass input valClass. @param conf input Configuration.
395 Return the appropriate implementation of the bzip2 compressor. @param conf configuration @return the appropriate implementation of the bzip2 compressor.
396 Common work of the constructors.
397 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream} with the given {@link Compressor}. @param out the location for the final output stream @param compressor compressor to use @return a stream the user can write uncompressed data to have compressed @throws IOException raised on errors performing I/O.
398 Create a new {@link Compressor} for use by this {@link CompressionCodec}. @return a new compressor for use by this codec
399 Create a {@link CompressionInputStream} that will read from the given {@link InputStream} with the given {@link Decompressor}. @param in the stream to read compressed bytes from @param decompressor decompressor to use @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
400 Create a new {@link Decompressor} for use by this {@link CompressionCodec}. @return a new decompressor for use by this codec
401 Create a Data Block and obtain an output stream for adding data into the block. There can only be one BlockAppender stream active at any time. Data Blocks may not be created after the first Meta Blocks. The caller must call BlockAppender.close() to conclude the block creation. @return The BlockAppender stream @throws IOException
402 Create an instance from the given configuration @param conf configuration
403 {@inheritDoc}. <p> This will get called in the superclass constructor, so a check is needed to ensure that the raw mapping is defined before trying to relaying a null configuration. </p> @param conf input Configuration.
404 Parse the command line arguments and initialize the data. <pre> % hadoop key create keyName [-size size] [-cipher algorithm] [-provider providerPath] % hadoop key roll keyName [-provider providerPath] % hadoop key list [-provider providerPath] % hadoop key delete keyName [-provider providerPath] [-i] % hadoop key invalidateCache keyName [-provider providerPath] </pre> @param args Command line arguments. @return 0 on success, 1 on failure. @throws IOException raised on errors performing I/O.
405 Returns a ConnectionId object. @param addr Remote address for the connection. @param protocol Protocol for RPC. @param ticket UGI @param rpcTimeout timeout @param conf Configuration object @return A ConnectionId instance @throws IOException
406 A stream obtained via this call must be closed before using other APIs of this class or else the invocation will block.
407 Return a set of server default configuration values. @param p path is used to identify an FS since an FS could have another FS that it could be delegating the call to @return server default configuration values @throws IOException IO failure
408 Create an FSDataOutputStream at the indicated Path. @param f the file to create @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an exception will be thrown. @throws IOException IO failure @return output stream.
409 Create an FSDataOutputStream at the indicated Path with write-progress reporting. Files are overwritten by default. @param f the file to create @param progress to report progress @throws IOException IO failure @return output stream.
410 Create an FSDataOutputStream at the indicated Path. Files are overwritten by default. @param f the file to create @param replication the replication factor @throws IOException IO failure @return output stream1
411 Create an FSDataOutputStream at the indicated Path with write-progress reporting. Files are overwritten by default. @param f the file to create @param replication the replication factor @param progress to report progress @throws IOException IO failure @return output stream.
412 Create an FSDataOutputStream at the indicated Path. @param f the file to create @param overwrite if a path with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @throws IOException IO failure @return output stream.
413 Create an {@link FSDataOutputStream} at the indicated Path with write-progress reporting. The frequency of callbacks is implementation-specific; it may be "none". @param f the path of the file to open @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @param progress to report progress. @throws IOException IO failure @return output stream.
414 Constructor. @param fileSystem file system. @param p the path.
415 @return Read the next key in the file into <code>key</code>, skipping its value.True if another entry exists, and false at end of file. @param key key. @throws IOException raised on errors performing I/O.
416 Read the next key in the file, skipping its value. @param key input Object key. @throws IOException raised on errors performing I/O. @return Return null at end of file.
417 This constructor takes a connectionId, instead of creating a new one. @param protocol input protocol. @param connId input connId. @param conf input Configuration. @param factory input factory. @param alignmentContext Alignment context
418 Construct &amp; cache an IPC client with the default SocketFactory and default valueClass if no cached client exists. @param conf Configuration @return an IPC client
419 Construct &amp; cache an IPC client with the user-provided SocketFactory if no cached client exists. Default response type is ObjectWritable. @param conf Configuration @param factory SocketFactory for client socket @return an IPC client
420 This constructor takes a connectionId, instead of creating a new one. @param protocol input protocol. @param connId input connId. @param conf input Configuration. @param factory input factory. @param alignmentContext Alignment context
421 Returns whether the given method is supported or not. The protocol signatures are fetched and cached. The connection id for the proxy provided is re-used. @param rpcProxy Proxy which provides an existing connection id. @param protocol Protocol for which the method check is required. @param rpcKind The RpcKind for which the method check is required. @param version The version at the client. @param methodName Name of the method. @return true if the method is supported, false otherwise. @throws IOException raised on errors performing I/O.
422 Construct a trash can accessor for the FileSystem provided. @param fs the FileSystem @param conf a Configuration @throws IOException raised on errors performing I/O.
423 Get an instance of NetworkTopology based on the value of the configuration parameter net.topology.impl. @param conf the configuration to be used @return an instance of NetworkTopology
424 Create a SaslRpcClient that can be used by a RPC client to negotiate SASL authentication with a RPC server @param ugi - connecting user @param protocol - RPC protocol @param serverAddr - InetSocketAddress of remote server @param conf - Configuration
425 Refreshes configuration using the specified Proxy user prefix for properties. @param conf configuration @param proxyUserPrefix proxy user configuration prefix
426 Adds a shutdownHook with a priority, the higher the priority the earlier will run. ShutdownHooks with same priority run in a non-deterministic order. @param shutdownHook shutdownHook <code>Runnable</code> @param priority priority of the shutdownHook.
427 A wrapper of {@link Configuration#getPassword(String)}. It returns <code>String</code> instead of <code>char[]</code>. @param conf the configuration @param name the property name @return the password string or null
428 Passwords should not be stored in configuration. Use {@link #getPasswordFromCredentialProviders( Configuration, String, String)} to avoid reading passwords from a configuration file.
429 Utility method to fetch ZK auth info from the configuration. @param conf configuration. @param configKey config key. @throws java.io.IOException if the Zookeeper ACLs configuration file cannot be read @throws ZKUtil.BadAuthFormatException if the auth format is invalid @return ZKAuthInfo List.
430 Create a decay scheduler. @param numLevels number of priority levels @param ns config prefix, so that we can configure multiple schedulers in a single instance. @param conf configuration to use.
431 Make a copy of a writable object using serialization to a buffer. @param <T> Generics Type T. @param orig The object to copy @param conf input Configuration. @return The copied object
432 Write out the non-default properties in this configuration to the given {@link OutputStream} using UTF-8 encoding. @param out the output stream to write to. @throws IOException raised on errors performing I/O.
433 Instantiate a sasl client for the first supported auth type in the given list. The auth type must be defined, enabled, and the user must possess the required credentials, else the next auth is tried. @param authTypes to attempt in the given order @return SaslAuth of instantiated client @throws AccessControlException - client doesn't support any of the auths @throws IOException - misc errors
434 This constructor has the signature needed by {@link AbstractFileSystem#createFileSystem(URI, Configuration)}. @param theUri which must be that of localFs @param conf @throws IOException @throws URISyntaxException
435 This constructor has the signature needed by {@link AbstractFileSystem#createFileSystem(URI, Configuration)}. @param theUri which must be that of localFs @param conf @throws IOException @throws URISyntaxException
436 Called after a new FileSystem instance is constructed. @param name a uri whose authority section names the host, port, etc. for this FileSystem @param conf the configuration
437 Constructor. @param fileSystem fileSystem. @param p path.
438 Creates an object to wrap the given parameters as fields. The string used to create the path will be recorded since the Path object does not return exactly the same string used to initialize it. @param fs the FileSystem @param pathString a String of the path @param stat the FileStatus (may be null if the path doesn't exist)
439 The base FileSystem implementation generally has no knowledge of the capabilities of actual implementations. Unless it has a way to explicitly determine the capabilities, this method returns false. {@inheritDoc}
440 Return path of the enclosing root for a given path. The enclosing root path is a common ancestor that should be used for temp and staging dirs as well as within encryption zones and other restricted directories. Call makeQualified on the param path to ensure its part of the correct filesystem. @param path file path to find the enclosing root path for @return a path to the enclosing root @throws IOException early checks like failure to resolve path cause IO failures
441 Make sure that a path specifies a FileSystem.
442 Returns the {@link FileStatus} from the {@link PathData} item. If the current options require links to be followed then the returned file status is that of the linked file. @param item PathData @param depth current depth in the process directories @return FileStatus @throws IOException raised on errors performing I/O.
443 @param path @return full path including the chroot
444 Copy file from src to dest. See {@link #copy(Path, Path, boolean, boolean)} @param src src. @param dst dst. @throws AccessControlException If access is denied. @throws FileAlreadyExistsException If file <code>src</code> already exists. @throws FileNotFoundException if next file does not exist any more. @throws ParentNotDirectoryException If parent of <code>src</code> is not a directory. @throws UnsupportedFileSystemException If file system for <code>src/dst</code> is not supported. @throws IOException If an I/O error occurred. @return if success copy true, not false.
445 Create instance of the standard {@link FSDataInputStreamBuilder} for the given filesystem and path. @param fileSystem owner @param path path to read @return a builder.
446 Create instance of the standard {@link FSDataInputStreamBuilder} for the given filesystem and path handle. @param fileSystem owner @param pathHandle path handle of file to open. @return a builder.
447 The KeyStore might have gone down during a flush, In which case either the _NEW or _OLD files might exists. This method tries to load the KeyStore from one of these intermediate files. @param oldPath the _OLD file created during flush @param newPath the _NEW file created during flush @return The permissions of the loaded file @throws IOException @throws NoSuchAlgorithmException @throws CertificateException
448 Create a new {@link Compressor} for use by this {@link CompressionCodec}. @return a new compressor for use by this codec
449 Stream access to a Meta Block. @param name meta block name @return BlockReader input stream for reading the meta block. @throws IOException @throws MetaBlockDoesNotExist The Meta Block with the given name does not exist.
450 Stream access to a Data Block. @param blockIndex 0-based data block index. @return BlockReader input stream for reading the data block. @throws IOException
451 Close the BCFile Writer. Attempting to use the Writer after calling <code>close</code> is not allowed and may lead to undetermined results.
452 Create a Meta Block and obtain an output stream for adding data into the block. There can only be one BlockAppender stream active at any time. Regular Blocks may not be created after the first Meta Blocks. The caller must call BlockAppender.close() to conclude the block creation. @param name The name of the Meta Block. The name must not conflict with existing Meta Blocks. @param compressionName The name of the compression algorithm to be used. @return The BlockAppender stream @throws IOException @throws MetaBlockAlreadyExists If the meta block with the name already exists.
453 Create a Meta Block and obtain an output stream for adding data into the block. The Meta Block will be compressed with the same compression algorithm as data blocks. There can only be one BlockAppender stream active at any time. Regular Blocks may not be created after the first Meta Blocks. The caller must call BlockAppender.close() to conclude the block creation. @param name The name of the Meta Block. The name must not conflict with existing Meta Blocks. @return The BlockAppender stream @throws MetaBlockAlreadyExists If the meta block with the name already exists. @throws IOException
454 Check if we need to start a new data block. @throws IOException
455 Create an FSDataOutputStream at the indicated Path. Files are overwritten by default. @param f the file to create @throws IOException IO failure @return output stream.
456 Create a new log file and return the {@link FSDataOutputStream}. If a file with the specified path already exists, add a suffix, starting with 1 and try again. Keep incrementing the suffix until a nonexistent target path is found. Once the file is open, update {@link #currentFSOutStream}, {@link #currentOutStream}, and {@#link #currentFilePath} are set appropriately. @param initial the target path @throws IOException thrown if the call to see if the exists fails
457 Create a new log file and return the {@link FSDataOutputStream}. If a file with the specified path already exists, open the file for append instead. Once the file is open, update {@link #currentFSOutStream}, {@link #currentOutStream}, and {@#link #currentFilePath}. @param initial the target path @throws IOException thrown if the call to see the append operation fails.
458 Save to a Hadoop filesystem. @param fs filesystem @param path path @param overwrite should any existing file be overwritten @param instance instance @throws IOException IO exception.
459 Create the named file with write-progress reporter. @deprecated Use {@link SequenceFile#createWriter(Configuration, Writer.Option...)} instead. @param fs input filesystem. @param conf input configuration. @param name input name. @param keyClass input keyClass. @param valClass input valClass. @param progress input progress. @param metadata input metadata. @throws IOException raised on errors performing I/O.
460 Creates the given Path as a brand-new zero-length file. If create fails, or if it already existed, return false. <i>Important: the default implementation is not atomic</i> @param f path to use for create @throws IOException IO failure @return if create new file success true,not false.
461 Constructor. @param fileSystem owner @param p path to create
462 Read the next key/value pair in the file into <code>key</code> and <code>val</code>. @return Returns true if such a pair exists and false when at end of file. @param key input key. @param val input val. @throws IOException raised on errors performing I/O.
463 Construct a trash can accessor. @param conf a Configuration @throws IOException raised on errors performing I/O.
464 Create a domain name resolver to convert the domain name in the config to the actual IP addresses of the Namenode/Router/RM. @param conf Configuration to get the resolver from. @param uri the url that the resolver will be used against @param configKey The config key name suffixed with the nameservice/yarnservice. @return Domain name resolver.
465 Get the groups being used to map user-to-groups. @param conf configuration. @return the groups being used to map user-to-groups.
466 Create new groups used to map user-to-groups with loaded configuration. @param conf configuration. @return the groups being used to map user-to-groups.
467 Refreshes configuration using the default Proxy user prefix for properties. @param conf configuration
468 Mark a path to be deleted on JVM shutdown. @param f the existing path to delete. @return true if deleteOnExit is successful, otherwise false. @throws AccessControlException If access is denied @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
469 Register the service for shutdown with Hadoop's {@link ShutdownHookManager}. @param priority shutdown hook priority
470 Print a log message for starting up and shutting down @param clazz the class of the server @param args arguments @param log the target log object
471 Load SSL properties from the SSL configuration.
472 Implements logic of initializing the KeyManagers with the options to reload keystores. @param mode client or server @param keystoreType The keystore type. @param storesReloadInterval The interval to check if the keystore certificates file has changed.
473 Utility method to fetch ZK auth info from the configuration. @param conf configuration. @throws java.io.IOException if the Zookeeper ACLs configuration file cannot be read @throws ZKUtil.BadAuthFormatException if the auth format is invalid @return ZKAuthInfo List.
474 Returns list of groups for a user. The LdapCtx which underlies the DirContext object is not thread-safe, so we need to block around this whole method. The caching infrastructure will ensure that performance stays in an acceptable range. @param user get groups for this user @return list of groups for a given user
475 For debugging. List non-default properties to the terminal and exit. @param args the argument to be parsed. @throws Exception exception.
476 Do client side SASL authentication with server via the given IpcStreams. @param ipcStreams ipcStreams. @return AuthMethod used to negotiate the connection @throws IOException raised on errors performing I/O.
477 Looks up the file status for a path. If the path doesn't exist, then the status will be null @param fs the FileSystem for the path @param pathString a string for a path @throws IOException if anything goes wrong
478 Returns a list of PathData objects of the items contained in the given directory. @return list of PathData objects for its children @throws IOException if anything else goes wrong...
479 Method to call after a FNFE has been raised on a treewalk, so as to decide whether to throw the exception (default), or, if the FS supports inconsistent directory listings, to log and ignore it. If this returns then the caller should ignore the failure and continue. @param fs filesystem @param path path @param e exception caught @throws FileNotFoundException the exception passed in, if rethrown.
480 Declare that this filesystem connector is always read only. {@inheritDoc}
481 Reject the concat operation; forward the rest to the viewed FS. @param path path to query the capability of. @param capability string to query the stream support for. @return the capability @throws IOException if there is no resolved FS, or it raises an IOE.
482 Return path of the enclosing root for a given path. The enclosing root path is a common ancestor that should be used for temp and staging dirs as well as within encryption zones and other restricted directories. @param fs filesystem @param path file path to find the enclosing root path for @return a path to the enclosing root @throws IOException early checks like failure to resolve path cause IO failures
483 Open a file for reading through a builder API. Ultimately calls {@link #open(Path, int)} unless a subclass executes the open command differently. The semantics of this call are therefore the same as that of {@link #open(Path, int)} with one special point: it is in {@code FSDataInputStreamBuilder.build()} in which the open operation takes place -it is there where all preconditions to the operation are checked. @param path file path @return a FSDataInputStreamBuilder object to build the input stream @throws IOException if some early checks cause IO failures. @throws UnsupportedOperationException if support is checked early.
484 Open a file for reading through a builder API. Ultimately calls {@link #open(PathHandle, int)} unless a subclass executes the open command differently. If PathHandles are unsupported, this may fail in the {@code FSDataInputStreamBuilder.build()} command, rather than in this {@code openFile()} operation. @param pathHandle path handle. @return a FSDataInputStreamBuilder object to build the input stream @throws IOException if some early checks cause IO failures. @throws UnsupportedOperationException if support is checked early.
485 Open up and initialize the keyStore. @throws IOException If there is a problem reading the password file or a problem reading the keystore.
486 Lazily loading the TFile index. @throws IOException
487 Stream access to a meta block.`` @param name The name of the meta block. @return The input stream. @throws IOException on I/O error. @throws MetaBlockDoesNotExist If the meta block with the name does not exist.
488 Constructor @param fin FS input stream. @param fileLength Length of the corresponding file @throws IOException
489 Obtain an output stream for creating a meta block. This function may not be called when there is a key append stream or value append stream active. No more key-value insertion is allowed after a meta data block has been added to TFile. @param name Name of the meta block. @param compressName Name of the compression algorithm to be used. Must be one of the strings returned by {@link TFile#getSupportedCompressionAlgorithms()}. @return A DataOutputStream that can be used to write Meta Block data. Closing the stream would signal the ending of the block. @throws IOException raised on errors performing I/O. @throws MetaBlockAlreadyExists the Meta Block with the same name already exists.
490 Close the Writer. Resources will be released regardless of the exceptions being thrown. Future close calls will have no effect. The underlying FSDataOutputStream is not closed.
491 Obtain an output stream for creating a meta block. This function may not be called when there is a key append stream or value append stream active. No more key-value insertion is allowed after a meta data block has been added to TFile. Data will be compressed using the default compressor as defined in Writer's constructor. @param name Name of the meta block. @return A DataOutputStream that can be used to write Meta Block data. Closing the stream would signal the ending of the block. @throws IOException raised on errors performing I/O. @throws MetaBlockAlreadyExists the Meta Block with the same name already exists.
492 Obtain an output stream for writing a key into TFile. This may only be called when there is no active Key appending stream or value appending stream. @param length The expected length of the key. If length of the key is not known, set length = -1. Otherwise, the application must write exactly as many bytes as specified here before calling close on the returned output stream. @return The key appending output stream. @throws IOException raised on errors performing I/O.
493 Copy local files to a FileSystem. @param src src. @param dstFS dstFs. @param dst dst. @param deleteSource delete source. @param conf configuration. @throws IOException raised on errors performing I/O. @return true if the operation succeeded.
494 The upload complete operation. @param multipartUploadId the ID of the upload @param filePath path @param handleMap map of handles @return the path handle @throws IOException failure
495 Create a file with the provided permission. The permission of the file is set to be the provided permission as in setPermission, not permission{@literal &~}umask The HDFS implementation is implemented using two RPCs. It is understood that it is inefficient, but the implementation is thread-safe. The other option is to change the value of umask in configuration to be 0, but it is not thread-safe. @param fs FileSystem @param file the name of the file to be created @param permission the permission of the file @return an output stream @throws IOException IO failure
496 Create the named file. @deprecated Use {@link SequenceFile#createWriter(Configuration, Writer.Option...)} instead. @param fs input filesystem. @param conf input configuration. @param name input name. @param keyClass input keyClass. @param valClass input valClass. @throws IOException raised on errors performing I/O.
497 Create a new directory based on the current interval and a new log file in that directory. @throws IOException thrown if an error occurs while creating the new directory or new log file
498 Read the next key/value pair in the map into <code>key</code> and <code>val</code>. Returns true if such a pair exists and false when at the end of the map. @param key WritableComparable. @param val Writable. @return if such a pair exists true,not false. @throws IOException raised on errors performing I/O.
499 Construct a client-side proxy object that implements the named protocol, talking to a server at the named address. @param <T> Generics Type. @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param ticket input ticket. @param conf input configuration. @param factory input factory. @param rpcTimeout input rpcTimeout. @param connectionRetryPolicy input connectionRetryPolicy. @param fallbackToSimpleAuth input fallbackToSimpleAuth. @param alignmentContext input alignmentContext. @return ProtocolProxy.
500 Get the groups being used to map user-to-groups. @return the groups being used to map user-to-groups.
501 Initialize UGI and related classes. @param conf the configuration to use
502 This constructor exists primarily for AccessControlList to be Writable.
503 Construct a new ACL from a String representation of the same. The String is a a comma separated list of users and groups. The user list comes first and is separated by a space followed by the group list. For e.g. "user1,user2 group1,group2" @param aclString String representation of the ACL
504 Construct a new ACL from String representation of users and groups The arguments are comma separated lists @param users comma separated list of users @param groups comma separated list of groups
505 refresh Impersonation rules
506 Initializes the keystores of the factory. @param mode if the keystores are to be used in client or server mode. @throws IOException thrown if the keystores could not be initialized due to an IO error. @throws GeneralSecurityException thrown if the keystores could not be initialized due to a security error.
507 Start the connection to the ZooKeeper ensemble. @param authInfos List of authentication keys. @param sslEnabled If the connection should be SSL/TLS encrypted. @throws IOException If the connection cannot be started.
508 Returns list of groups for a user. This calls {@link LdapGroupsMapping}'s getGroups and applies the configured rules on group names before returning. @param user get groups for this user @return list of groups for a given user
509 Initialized the metrics system with a prefix. @param prefix the system will look for configs with the prefix @return the metrics system object itself
510 Returns a new PathData with the given extension. @param extension for the suffix @return PathData @throws IOException shouldn't happen
511 Creates a new object for a child entry in this directory @param child the basename will be appended to this object's path @return PathData for the child @throws IOException if this object does not exist or is not a directory
512 Gets the directory listing for a path and invokes {@link #processPaths(PathData, PathData...)} @param item {@link PathData} for directory to recurse into @throws IOException if anything goes wrong...
513 Declare that this filesystem connector is always read only. {@inheritDoc}
514 Declare that this filesystem connector is always read only. {@inheritDoc}
515 Disable those operations which the checksummed FS blocks. {@inheritDoc}
516 Returns the closest non-failing destination's result. @param f given path @return array of file statuses according to nfly modes @throws FileNotFoundException @throws IOException
517 Copy a file/directory tree within/between filesystems. <p> returns true if the operation succeeded. When deleteSource is true, this means "after the copy, delete(source) returned true" If the destination is a directory, and mkdirs (dest) fails, the operation will return false rather than raise any exception. </p> The overwrite flag is about overwriting files; it has no effect about handing an attempt to copy a file atop a directory (expect an IOException), or a directory over a path which contains a file (mkdir will fail, so "false"). <p> The operation is recursive, and the deleteSource operation takes place as each subdirectory is copied. Therefore, if an operation fails partway through, the source tree may be partially deleted. </p> @param srcFS source filesystem @param srcStatus status of source @param dstFS destination filesystem @param dst path of source @param deleteSource delete the source? @param overwrite overwrite files at destination? @param conf configuration to use when opening files @return true if the operation succeeded. @throws IOException failure
518 Copy FileSystem files to local files.
519 Open a file. @param policy fadvise policy. @return an input stream @throws IOException failure
520 Override this method to specialize the type of {@link FSDataInputStream} returned. @param fs The file system used to open the file. @param file The file being read. @param bufferSize The buffer size used to read the file. @param length The length being read if it is {@literal >=} 0. Otherwise, the length is not available. @return The opened stream. @throws IOException raised on errors performing I/O.
521 Load from a Hadoop filesystem. If a file status is supplied, it's passed in to the openFile() call so that FS implementations can optimize their opening. @param fs filesystem @param path path @param status status of the file to open. @return a loaded object @throws PathIOException JSON parse problem @throws EOFException file status references an empty file @throws IOException IO problems
522 Get the first key in the TFile. @return The first key in the TFile. @throws IOException raised on errors performing I/O.
523 Get the last key in the TFile. @return The last key in the TFile. @throws IOException raised on errors performing I/O.
524 if greater is true then returns the beginning location of the block containing the key strictly greater than input key. if greater is false then returns the beginning location of the block greater than equal to the input key @param key the input key @param greater boolean flag @return @throws IOException
525 Get a sample key that is within a block whose starting offset is greater than or equal to the specified offset. @param offset The file offset. @return the key that fits the requirement; or null if no such key exists (which could happen if the offset is close to the end of the TFile). @throws IOException raised on errors performing I/O.
526 Constructor @param fsdis FS input stream of the TFile. @param fileLength The length of TFile. This is required because we have no easy way of knowing the actual size of the input file through the File input stream. @param conf configuration. @throws IOException raised on errors performing I/O.
527 Load a compressed block for reading. Expecting blockIndex is valid. @throws IOException
528 Adding a new key-value pair to TFile. @param key buffer for key. @param koff offset in key buffer. @param klen length of key. @param value buffer for value. @param voff offset in value buffer. @param vlen length of value. @throws IOException Upon IO errors. <p> If an exception is thrown, the TFile will be in an inconsistent state. The only legitimate call after that would be close
529 Get the key at approximately the middle of the file. Or null if the file is empty. @throws IOException raised on errors performing I/O. @return WritableComparable.
530 Reads the final key from the file. @param key key to read into @throws IOException raised on errors performing I/O.
531 Positions the reader at the named key, or if none such exists, at the key that falls just before or just after dependent on how the <code>before</code> parameter is set. @param before - IF true, and <code>key</code> does not exist, position file at entry that falls just before <code>key</code>. Otherwise, position file at record that sorts just after. @return 0 - exact match found < 0 - positioned at next record 1 - no more records in file
532 Merge all input files to output map file.<br> 1. Read first key/value from all input files to keys/values array. <br> 2. Select the least key and corresponding value. <br> 3. Write the selected key and value to output file. <br> 4. Replace the already written key/value in keys/values arrays with the next key/value from the selected input <br> 5. Repeat step 2-4 till all keys are read. <br>
533 Construct a client-side proxy object that implements the named protocol, talking to a server at the named address. @param <T> Generics Type T @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param ticket input ticket. @param conf input configuration. @param factory input factory. @param rpcTimeout input rpcTimeout. @param connectionRetryPolicy input connectionRetryPolicy. @throws IOException raised on errors performing I/O.
534 Construct a client-side proxy object with a ConnectionId. @param <T> Generics Type T. @param protocol input protocol. @param clientVersion input clientVersion. @param connId input ConnectionId. @param conf input Configuration. @param factory input factory. @param alignmentContext Alignment context @throws IOException raised on errors performing I/O. @return ProtocolProxy.
535 Returns the Trash object associated with this shell. @return Path to the trash @throws IOException upon error
536 Returns the current trash location for the path specified @param path to be deleted @return path to the trash @throws IOException raised on errors performing I/O.
537 A method to initialize the fields that depend on a configuration. Must be called before useKerberos or groups is used.
538 Set the static configuration for UGI. In particular, set the security authentication mechanism and the group look up service. @param conf the configuration to use
539 Launch a service catching all exceptions and downgrading them to exit codes after logging. Sets {@link #serviceException} to this value. @param conf configuration to use @param instance optional instance of the service. @param processedArgs command line after the launcher-specific arguments have been stripped out. @param addShutdownHook should a shutdown hook be added to terminate this service on shutdown. Tests should set this to false. @param execute execute/wait for the service to stop. @return an exit exception, which will have a status code of 0 if it worked
540 Start the connection to the ZooKeeper ensemble. @param authInfos List of authentication keys. @throws IOException If the connection cannot be started.
541 This constructor has the signature needed by {@link AbstractFileSystem#createFileSystem(URI, Configuration)}. @param theUri which must be that of localFs @param conf @throws IOException @throws URISyntaxException
542 If direct write is disabled ,copies the stream contents to a temporary file "target._COPYING_". If the copy is successful, the temporary file will be renamed to the real path, else the temporary file will be deleted. if direct write is enabled , then creation temporary file is skipped. @param in the input stream for the copy @param target where to store the contents of the stream @throws IOException if copy fails
543 Copy files between FileSystems. @param srcFS srcFs. @param src src. @param dstFS dstFs. @param dst dst. @param deleteSource delete source. @param overwrite overwrite. @param conf configuration. @throws IOException raised on errors performing I/O. @return true if the operation succeeded.
544 Iterate all available nodes in the proximity order to attempt repair of all FileNotFound nodes. @param mrNodes work set copy of nodes @param f path to repair and open @param bufferSize buffer size for read RPC @return the closest/most recent replica stream AFTER repair
545 Copy FileSystem files to local files. @param srcFS srcFs. @param src src. @param dst dst. @param deleteSource delete source. @param conf configuration. @throws IOException raised on errors performing I/O. @return true if the operation succeeded.
546 Open a file for sequential IO. <p> This uses FileSystem.openFile() to request sequential IO; the file status is also passed in. Filesystems may use to optimize their IO. </p> @return an input stream @throws IOException failure
547 Load from a Hadoop filesystem. @param fs filesystem @param path path @return a loaded object @throws PathIOException JSON parse problem @throws IOException IO problems
548 Get the RecordNum for the first key-value pair in a compressed block whose byte offset in the TFile is greater than or equal to the specified offset. @param offset the user supplied offset. @return the RecordNum to the corresponding entry. If no such entry exists, it returns the total entry count. @throws IOException raised on errors performing I/O.
549 Get the RecordNum corresponding to the entry pointed by the cursor. @return The RecordNum corresponding to the entry pointed by the cursor. @throws IOException raised on errors performing I/O.
550 Constructor @param reader The TFile reader object. @param begin Begin location of the scan. @param end End location of the scan. @throws IOException
551 Move the cursor to the new location. The entry returned by the previous entry() call will be invalid. @param l new cursor location. It must fall between the begin and end location of the scanner. @throws IOException
552 Move the cursor to the next key-value pair. The entry returned by the previous entry() call will be invalid. @return true if the cursor successfully moves. False when cursor is already at the end location and cannot be advanced. @throws IOException raised on errors performing I/O.
553 Adding a new key-value pair to the TFile. This is synonymous to append(key, 0, key.length, value, 0, value.length) @param key Buffer for key. @param value Buffer for value. @throws IOException raised on errors performing I/O.
554 Positions the reader at the named key, or if none such exists, at the first entry after the named key. @return 0 - exact match found < 0 - positioned at next record 1 - no more records in file
555 Finds the record that is the closest match to the specified key. @param key - key that we're trying to find @param val - data value if key is found @param before - IF true, and <code>key</code> does not exist, return the first entry that falls just before the <code>key</code>. Otherwise, return the record that sorts just after. @return - the key that was the closest match or null if eof. @throws IOException raised on errors performing I/O.
556 Create a UGI for testing HDFS and MapReduce @param user the full user principal name @param userGroups the names of the groups that the user belongs to @return a fake user for running unit tests
557 Create a proxy user UGI for testing HDFS and MapReduce @param user the full user principal name for effective user @param realUser UGI of the real user @param userGroups the names of the groups that the user belongs to @return a fake user for running unit tests
558 Get the group names for this user. {@link #getGroupsSet()} is less expensive alternative when checking for a contained element. @return the list of users with the primary group first. If the command fails, it returns an empty list. @deprecated Use {@link #getGroupsSet()} instead.
559 Get the groups names for the user as a Set. @return the set of users with the primary group first. If the command fails, it returns an empty set.
560 Login a subject with the given parameters. If the subject is null, the login context used to create the subject will be attached. @param subject to login, null for new subject. @param params for login, null for externally managed ugi. @return UserGroupInformation for subject @throws IOException
561 Refresh the service authorization ACL for the service handled by this server using the specified Configuration. @param conf input Configuration. @param provider input provider.
562 Authorize the superuser which is doing doAs. {@link #authorize(UserGroupInformation, InetAddress)} should be preferred to avoid possibly re-resolving the ip address. @param user ugi of the effective or proxy user which contains a real user @param remoteAddress the ip address of client @throws AuthorizationException Authorization Exception.
563 Authorize the superuser which is doing doAs. @param user ugi of the effective or proxy user which contains a real user @param remoteAddress the inet address of client @throws AuthorizationException Authorization Exception.
564 Launch a service catching all exceptions and downgrading them to exit codes after logging. Sets {@link #serviceException} to this value. @param conf configuration to use @param processedArgs command line after the launcher-specific arguments have been stripped out. @param addShutdownHook should a shutdown hook be added to terminate this service on shutdown. Tests should set this to false. @param execute execute/wait for the service to stop. @return an exit exception, which will have a status code of 0 if it worked
565 Start the connection to the ZooKeeper ensemble. @throws IOException If the connection cannot be started.
566 Copies the source file to the target. @param src item to copy @param target where to copy the item @throws IOException if copy fails
567 Copy files between FileSystems. @param srcFS src fs. @param src src. @param dstFS dst fs. @param dst dst. @param deleteSource delete source. @param conf configuration. @return if copy success true, not false. @throws IOException raised on errors performing I/O.
568 Category: READ. @param f the file name to open @param bufferSize the size of the buffer to be used. @return input stream according to nfly flags (closest, most recent) @throws IOException @throws FileNotFoundException iff all destinations generate this exception
569 Get a scanner than can scan the whole TFile. @return The scanner object. A valid Scanner is always returned even if the TFile is empty. @throws IOException raised on errors performing I/O.
570 Create a scanner that covers a range of records. @param beginRecNum The RecordNum for the first record (inclusive). @param endRecNum The RecordNum for the last record (exclusive). To scan the whole file, either specify endRecNum==-1 or endRecNum==getEntryCount(). @return The TFile scanner that covers the specified range of records. @throws IOException raised on errors performing I/O.
571 Constructor @param reader The TFile reader object. @param offBegin Begin byte-offset of the scan. @param offEnd End byte-offset of the scan. @throws IOException The offsets will be rounded to the beginning of a compressed block whose offset is greater than or equal to the specified offset.
572 Rewind to the first entry in the scanner. The entry returned by the previous entry() call will be invalid. @throws IOException raised on errors performing I/O.
573 Positions the reader at the named key, or if none such exists, at the first entry after the named key. Returns true iff the named key exists in this map. @param key key. @throws IOException raised on errors performing I/O. @return if the named key exists in this map true, not false.
574 Finds the record that is the closest match to the specified key. Returns <code>key</code> or if it does not exist, at the first entry after the named key. @param key key that we're trying to find. @param val data value if key is found. @return the key that was the closest match or null if eof. @throws IOException raised on errors performing I/O.
575 Determine if UserGroupInformation is using Kerberos to determine user identities or is relying on simple authentication @return true if UGI is working in a secure environment
576 Log the current user out who previously logged in using keytab. This method assumes that the user logged in by calling {@link #loginUserFromKeytab(String, String)}. @throws IOException raised on errors performing I/O. @throws KerberosAuthException if a failure occurred in logout, or if the user did not log in by invoking loginUserFromKeyTab() before.
577 Get the group names for this user. {@link #getGroupsSet()} is less expensive alternative when checking for a contained element. @return the list of users with the primary group first. If the command fails, it returns an empty list.
578 Checks if a user represented by the provided {@link UserGroupInformation} is a member of the Access Control List. If user was proxied and USE_REAL_ACLS + the real user name is in the control list, then treat this case as if user were in the ACL list. @param ugi UserGroupInformation to check if contained in the ACL @return true if ugi is member of the list or if USE_REAL_ACLS + real user is in the list
579 Create a UserGroupInformation from a Subject with Kerberos principal. @param subject The KerberosPrincipal to use in UGI. The creator of subject is responsible for renewing credentials. @throws IOException raised on errors performing I/O. @throws KerberosAuthException if the kerberos login fails @return UserGroupInformation
580 This function is kept to provide backward compatibility. @param user user. @param remoteAddress remote address. @param conf configuration. @throws AuthorizationException Authorization Exception. @deprecated use {@link #authorize(UserGroupInformation, String)} instead.
581 Authorize proxy users to access this server @throws RpcServerException - user is not allowed to proxy
582 Called with a source and target destination pair @param src for the operation @param dst for the operation @throws IOException if anything goes wrong
583 copies the file in the har filesystem to a local file.
584 The src file is under FS, and the dst is on the local disk. Copy it from FS control to the local dst name.
585 Get a scanner that covers a portion of TFile based on byte offsets. @param offset The beginning byte offset in the TFile. @param length The length of the region. @return The actual coverage of the returned scanner tries to match the specified byte-region but always round up to the compression block boundaries. It is possible that the returned scanner contains zero key-value pairs even if length is positive. @throws IOException raised on errors performing I/O.
586 Constructor @param reader The TFile reader object. @param beginKey Begin key of the scan. If null, scan from the first &lt;K, V&gt; entry of the TFile. @param endKey End key of the scan. If null, scan up to the last &lt;K, V&gt; entry of the TFile. @throws IOException raised on errors performing I/O.
587 Move the cursor to the first entry whose key is greater than or equal to the input key. The entry returned by the previous entry() call will be invalid. @param key The input key @param keyOffset offset in the key buffer. @param keyLen key buffer length. @return true if we find an equal key; false otherwise. @throws IOException raised on errors performing I/O.
588 Move the cursor to the first entry whose key is greater than or equal to the input key. The entry returned by the previous entry() call will be invalid. @param key The input key @param keyOffset offset in the key buffer. @param keyLen key buffer length. @throws IOException raised on errors performing I/O.
589 Move the cursor to the first entry whose key is strictly greater than the input key. The entry returned by the previous entry() call will be invalid. @param key The input key @param keyOffset offset in the key buffer. @param keyLen key buffer length. @throws IOException raised on errors performing I/O.
590 Return the value for the named key, or null if none exists. @param key key. @param val val. @return Writable if such a pair exists true,not false. @throws IOException raised on errors performing I/O.
591 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T @param protocol protocol class @param clientVersion client's version @param connId client connection identifier @param conf configuration @param factory socket factory @param alignmentContext StateID alignment context @return the protocol proxy @throws IOException if the far end through a RemoteException
592 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T. @param protocol protocol @param clientVersion client's version @param addr server address @param ticket security ticket @param conf configuration @param factory socket factory @param rpcTimeout max time for each rpc; 0 means no timeout @param connectionRetryPolicy retry policy @param fallbackToSimpleAuth set to true or false during calls to indicate if a secure client falls back to simple auth @return the proxy @throws IOException if any error occurs
593 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param protocol protocol @param clientVersion client's version @param addr server address @param ticket security ticket @param conf configuration @param factory socket factory @param rpcTimeout max time for each rpc; 0 means no timeout @param connectionRetryPolicy retry policy @param fallbackToSimpleAuth set to true or false during calls to indicate if a secure client falls back to simple auth @param alignmentContext state alignment context @param <T> Generics Type T. @return the proxy @throws IOException if any error occurs
594 @return Same as openForRandomRead except that it will run even if security is off. This is used by unit tests. @param f input f. @param mode input mode. @param expectedOwner input expectedOwner. @param expectedGroup input expectedGroup. @throws IOException raised on errors performing I/O.
595 Same as openFSDataInputStream except that it will run even if security is off. This is used by unit tests. @param file input file. @param expectedOwner input expectedOwner. @param expectedGroup input expectedGroup. @throws IOException raised on errors performing I/O. @return FSDataInputStream.
596 @return Same as openForRead() except that it will run even if security is off. This is used by unit tests. @param f input f. @param expectedOwner input expectedOwner. @param expectedGroup input expectedGroup. @throws IOException raised on errors performing I/O.
597 Dump a UGI. @param title title of this section @param ugi UGI to dump @throws IOException
598 Get the currently logged in user. If no explicit login has occurred, the user will automatically be logged in with either kerberos credentials if available, or as the local OS user, based on security settings. @return the logged in user @throws IOException if login fails
599 Log in a user using the given subject @param subject the subject to use when logging in a user, or null to create a new subject. If subject is not null, the creator of subject is responsible for renewing credentials. @throws IOException if login fails
600 Reads the connection context following the connection header @throws RpcServerException - if the header cannot be deserialized, or the user is not authorized
601 Get a scanner that covers a specific key range. @param beginKey Begin key of the scan (inclusive). If null, scan from the first key-value entry of the TFile. @param endKey End key of the scan (exclusive). If null, scan up to the last key-value entry of the TFile. @return The actual coverage of the returned scanner will cover all keys greater than or equal to the beginKey and less than the endKey. @throws IOException raised on errors performing I/O.
602 Move the cursor to the first entry whose key is greater than or equal to the input key. Synonymous to seekTo(key, 0, key.length). The entry returned by the previous entry() call will be invalid. @param key The input key @return true if we find an equal key. @throws IOException raised on errors performing I/O.
603 Move the cursor to the first entry whose key is greater than or equal to the input key. Synonymous to lowerBound(key, 0, key.length). The entry returned by the previous entry() call will be invalid. @param key The input key @throws IOException raised on errors performing I/O.
604 Move the cursor to the first entry whose key is strictly greater than the input key. Synonymous to upperBound(key, 0, key.length). The entry returned by the previous entry() call will be invalid. @param key The input key @throws IOException raised on errors performing I/O.
605 Read the matching key from a set into <code>key</code>. @param key input key. @return Returns <code>key</code>, or null if no match exists. @throws IOException raised on errors performing I/O.
606 Fast version of the {@link MapFile.Reader#get(WritableComparable, Writable)} method. First it checks the Bloom filter for the existence of the key, and only if present it performs the real get operation. This yields significant performance improvements for get operations on sparsely populated files.
607 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T @param protocol protocol class @param clientVersion client's version @param connId client connection identifier @param conf configuration @param factory socket factory @return the protocol proxy @throws IOException if the far end through a RemoteException
608 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T. @param protocol protocol @param clientVersion client's version @param addr server address @param ticket security ticket @param conf configuration @param factory socket factory @param rpcTimeout max time for each rpc; 0 means no timeout @param connectionRetryPolicy retry policy @return the proxy @throws IOException if any error occurs
609 Connect to the server and set up the I/O streams. It then sends a header to the server and starts the connection thread that waits for responses.
610 @return Open the given File for random read access, verifying the expected user/ group constraints if security is enabled. Note that this function provides no additional security checks if hadoop security is disabled, since doing the checks would be too expensive when native libraries are not available. @param f file that we are trying to open @param mode mode in which we want to open the random access file @param expectedOwner the expected user owner for the file @param expectedGroup the expected group owner for the file @throws IOException if an IO error occurred or if the user/group does not match when security is enabled.
611 Opens the {@link FSDataInputStream} on the requested file on local file system, verifying the expected user/group constraints if security is enabled. @param file absolute path of the file @param expectedOwner the expected user owner for the file @param expectedGroup the expected group owner for the file @throws IOException if an IO Error occurred or the user/group does not match if security is enabled @return FSDataInputStream.
612 Open the given File for read access, verifying the expected user/group constraints if security is enabled. @return Note that this function provides no additional checks if Hadoop security is disabled, since doing the checks would be too expensive when native libraries are not available. @param f the file that we are trying to open @param expectedOwner the expected user owner for the file @param expectedGroup the expected group owner for the file @throws IOException if an IO Error occurred, or security is enabled and the user/group does not match
613 Get the admin ACLs from the given ServletContext and check if the given user is in the ACL. @param servletContext the context containing the admin ACL. @param remoteUser the remote user to check for. @return true if the user is present in the ACL, false if no ACL is set or the user is not present
614 Authorize the user to access the protocol being used. @param user user accessing the service @param protocol service being accessed @param conf configuration to use @param addr InetAddress of the client @throws AuthorizationException on authorization failure
615 Return the current user, including any doAs in the current stack. @return the current user @throws IOException if login fails
616 Did the login happen via keytab. @return true or false @throws IOException raised on errors performing I/O.
617 Did the login happen via ticket cache. @return true or false @throws IOException raised on errors performing I/O.
618 Perform the given action as the daemon's login user. If the login user cannot be determined, this will log a FATAL error and exit the whole JVM. @param action action. @param <T> generic type T. @return generic type T.
619 Perform the given action as the daemon's login user. If an InterruptedException is thrown, it is converted to an IOException. @param action the action to perform @param <T> Generics Type T. @return the result of the action @throws IOException in the event of error
620 Request from graceful failover to cede active role. Causes this ZKFC to transition its local node to standby, then quit the election for the specified period of time, after which it will rejoin iff it is healthy.
621 Coordinate a graceful failover to this node. @throws ServiceFailedException if the node fails to become active @throws IOException some other error occurs
622 Get a scanner that covers a portion of TFile based on keys. @param beginKey Begin key of the scan (inclusive). If null, scan from the first key-value entry of the TFile. @param endKey End key of the scan (exclusive). If null, scan up to the last key-value entry of the TFile. @return The actual coverage of the returned scanner will cover all keys greater than or equal to the beginKey and less than the endKey. @throws IOException raised on errors performing I/O.
623 Get a scanner that covers a specific key range. @param beginKey Begin key of the scan (inclusive). If null, scan from the first key-value entry of the TFile. @param endKey End key of the scan (exclusive). If null, scan up to the last key-value entry of the TFile. @return The actual coverage of the returned scanner will cover all keys greater than or equal to the beginKey and less than the endKey. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createScannerByKey(RawComparable, RawComparable)} instead.
624 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param ticket user group information @param conf configuration to use @param factory socket factory @return the protocol proxy @throws IOException if the far end through a RemoteException
625 Construct a client-side proxy that implements the named protocol, talking to a server at the named address. @param <T> Generics Type T. @param protocol protocol @param clientVersion client's version @param addr server address @param ticket security ticket @param conf configuration @param factory socket factory @param rpcTimeout max time for each rpc; 0 means no timeout @return the proxy @throws IOException if any error occurs
626 Does the user sending the HttpServletRequest has the administrator ACLs? If it isn't the case, response will be modified to send an error to the user. @param servletContext servletContext. @param request request. @param response used to send the error response if user does not have admin access. @return true if admin-authorized, false otherwise @throws IOException raised on errors performing I/O.
627 Authorize the incoming client connection. @param user client user @param protocolName - the protocol @param addr InetAddress of incoming connection @throws AuthorizationException when the client isn't authorized to talk the protocol
628 Return the current user's home directory in this FileSystem. The default implementation returns {@code "/user/$USER/"}. @return the path.
629 This method provides the default implementation of {@link #access(Path, FsAction)}. @param stat FileStatus to check @param mode type of access to check @throws AccessControlException if access is denied @throws IOException for any error
630 This is the constructor with the signature needed by {@link FileSystem#createFileSystem(URI, Configuration)} After this constructor is called initialize() is called. @throws IOException raised on errors performing I/O.
631 This constructor has the signature needed by {@link AbstractFileSystem#createFileSystem(URI, Configuration)}. @param theUri which must be that of ViewFs @param conf @throws IOException @throws URISyntaxException
632 Create Inode Tree from the specified mount-table specified in Config. @param config the mount table keys are prefixed with FsConstants.CONFIG_VIEWFS_PREFIX. @param viewName the name of the mount table if null use defaultMT name. @param theUri heUri. @param initingUriAsFallbackOnNoMounts initingUriAsFallbackOnNoMounts. @throws UnsupportedFileSystemException file system for <code>uri</code> is not found. @throws URISyntaxException if the URI does not have an authority it is badly formed. @throws FileAlreadyExistsException there is a file at the path specified or is discovered on one of its ancestors. @throws IOException raised on errors performing I/O.
633 Return the current user's home directory in this file system. The default implementation returns "/user/$USER/". @return current user's home directory.
634 Returns an authenticated {@link HttpURLConnection}. If the Delegation Token is present, it will be used taking precedence over the configured <code>Authenticator</code>. If the <code>doAs</code> parameter is not NULL, the request will be done on behalf of the specified <code>doAs</code> user. @param url the URL to connect to. Only HTTP/S URLs are supported. @param token the authentication token being used for the user. @param doAs user to do the the request on behalf of, if NULL the request is as self. @return an authenticated {@link HttpURLConnection}. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
635 Find the most appropriate UserGroupInformation to use @param ticketCachePath The Kerberos ticket cache path, or NULL if none is specfied @param user The user name, or NULL if none is specified. @return The most appropriate UserGroupInformation @throws IOException raised on errors performing I/O.
636 Log a user in from a keytab file. Loads a user identity from a keytab file and login them in. This new user does not affect the currently logged-in user. @param user the principal name to load from the keytab @param path the path to the keytab file @throws IOException if the keytab file can't be read @return UserGroupInformation.
637 Log all (current, real, login) UGI and token info into specified log. @param ugi - UGI @param log - log. @throws IOException raised on errors performing I/O.
638 Perform the given action as the daemon's current user. If an InterruptedException is thrown, it is converted to an IOException. @param action the action to perform @param <T> generic type T. @return the result of the action @throws IOException in the event of error
639 Get the doAs user name. 'actualUGI' is the UGI of the user creating the client It is possible that the creator of the KMSClientProvier calls this method on behalf of a proxyUser (the doAsUser). In which case this call has to be made as the proxy user. @return the doAs user name. @throws IOException
640 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param rpcTimeout timeout for each RPC @param connectionRetryPolicy input connectionRetryPolicy. @param timeout time in milliseconds before giving up @return the proxy @throws IOException if the far end through a RemoteException.
641 Get a scanner that covers a portion of TFile based on keys. @param beginKey Begin key of the scan (inclusive). If null, scan from the first key-value entry of the TFile. @param endKey End key of the scan (exclusive). If null, scan up to the last key-value entry of the TFile. @return The actual coverage of the returned scanner will cover all keys greater than or equal to the beginKey and less than the endKey. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createScannerByKey(byte[], byte[])} instead.
642 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param factory socket factory @return the protocol proxy @throws IOException if the far end through a RemoteException
643 Construct a client-side proxy object that implements the named protocol, talking to a server at the named address. @param <T> Generics Type T. @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param ticket input tocket. @param conf input conf. @param factory input factory. @return the protocol proxy. @throws IOException raised on errors performing I/O.
644 Checks the user has privileges to access to instrumentation servlets. <p> If <code>hadoop.security.instrumentation.requires.admin</code> is set to FALSE (default value) it always returns TRUE. <p> If <code>hadoop.security.instrumentation.requires.admin</code> is set to TRUE it will check that if the current user is in the admin ACLS. If the user is in the admin ACLs it returns TRUE, otherwise it returns FALSE. @param servletContext the servlet context. @param request the servlet request. @param response the servlet response. @return TRUE/FALSE based on the logic decribed above. @throws IOException raised on errors performing I/O.
645 Get the root directory of Trash for current user when the path specified is deleted. @param path the trash root of the path to be determined. @return the default implementation returns {@code /user/$USER/.Trash}
646 Get all the trash roots for current user or all users. @param allUsers return trash roots for all users if true. @return all the trash root directories. Default FileSystem returns .Trash under users' home directories if {@code /user/$USER/.Trash} exists.
647 Checks if the user can access a path. The mode specifies which access checks to perform. If the requested permissions are granted, then the method returns normally. If access is denied, then the method throws an {@link AccessControlException}. <p> The default implementation calls {@link #getFileStatus(Path)} and checks the returned permissions against the requested permissions. Note that the {@link #getFileStatus(Path)} call will be subject to authorization checks. Typically, this requires search (execute) permissions on each directory in the path's prefix, but this is implementation-defined. Any file system that provides a richer authorization model (such as ACLs) may override the default implementation so that it checks against that model instead. <p> In general, applications should avoid using this method, due to the risk of time-of-check/time-of-use race conditions. The permissions on a file may change immediately after the access call returns. Most applications should prefer running specific file system actions as the desired user represented by a {@link UserGroupInformation}. @param path Path to check @param mode type of access to check @throws AccessControlException if access is denied @throws FileNotFoundException if the path does not exist @throws IOException see specific implementation
648 The specification of this method matches that of {@link FileContext#access(Path, FsAction)} except that an UnresolvedLinkException may be thrown if a symlink is encountered in the path. @param path the path. @param mode fsaction mode. @throws AccessControlException access control exception. @throws FileNotFoundException file not found exception. @throws UnresolvedLinkException unresolved link exception. @throws IOException raised on errors performing I/O.
649 Convenience Constructor for apps to call directly. @param theUri which must be that of ViewFileSystem @param conf conf configuration. @throws IOException raised on errors performing I/O.
650 The objects inserted into the cache using this method are all unique.
651 Return the current user's home directory in this file system. The default implementation returns "/user/$USER/". @return the home directory
652 Returns an authenticated {@link HttpURLConnection}, it uses a Delegation Token only if the given auth token is an instance of {@link Token} and it contains a Delegation Token, otherwise use the configured {@link DelegationTokenAuthenticator} to authenticate the connection. @param url the URL to connect to. Only HTTP/S URLs are supported. @param token the authentication token being used for the user. @return an authenticated {@link HttpURLConnection}. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
653 Get a FileSystem instance based on the uri, the passed in configuration and the user. @param uri of the filesystem @param conf the configuration to use @param user to perform the get as @return the filesystem instance @throws IOException failure to load @throws InterruptedException If the {@code UGI.doAs()} call was somehow interrupted.
654 Returns the FileSystem for this URI's scheme and authority and the given user. Internally invokes {@link #newInstance(URI, Configuration)} @param uri uri of the filesystem. @param conf the configuration to use @param user to perform the get as @return filesystem instance @throws IOException if the FileSystem cannot be instantiated. @throws InterruptedException If the {@code UGI.doAs()} call was somehow interrupted.
655 Create a UserGroupInformation from a Kerberos ticket cache. @param user The principal name to load from the ticket cache @param ticketCache the path to the ticket cache file @throws IOException if the kerberos login fails @return UserGroupInformation.
656 Log in from a keytab, dump the UGI, validate it, then try and log in again. That second-time login catches JVM/Hadoop compatibility problems. @throws IOException Keytab loading problems
657 Log a user in from a keytab file. Loads a user identity from a keytab file and logs them in. They become the currently logged-in user. @param user the principal name to load from the keytab @param path the path to the keytab file @throws IOException raised on errors performing I/O. @throws KerberosAuthException if it's a kerberos login exception.
658 Log all (current, real, login) UGI and token info into UGI debug log. @param ugi - UGI @throws IOException raised on errors performing I/O.
659 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param connTimeout time in milliseconds before giving up @return the protocol proxy @throws IOException if the far end through a RemoteException
660 Get a proxy connection to a remote server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param rpcTimeout timeout for each RPC @param timeout time in milliseconds before giving up @return the proxy @throws IOException if the far end through a RemoteException
661 Construct a client-side proxy object that implements the named protocol, talking to a server at the named address. @param <T> Generics Type T. @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param conf input Configuration. @param factory input factory. @throws IOException raised on errors performing I/O. @return proxy.
662 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param conf input configuration. @param <T> Generics Type T. @return a protocol proxy @throws IOException if the thread is interrupted.
663 Get a client of the {@link GetUserMappingsProtocol}. @return A {@link GetUserMappingsProtocol} client proxy. @throws IOException raised on errors performing I/O.
664 @return a proxy to the ZKFC which is associated with this HA service. @param conf configuration. @param timeoutMs timeout in milliseconds. @throws IOException raised on errors performing I/O.
665 Get the trash root directory for current user when the path specified is deleted. If FORCE_INSIDE_MOUNT_POINT flag is not set, return the default trash root from targetFS. When FORCE_INSIDE_MOUNT_POINT is set to true, <ol> <li> If the trash root for path p is in the same mount point as path p, and one of: <ol> <li>The mount point isn't at the top of the target fs.</li> <li>The resolved path of path is root (in fallback FS).</li> <li>The trash isn't in user's target fs home directory get the corresponding viewFS path for the trash root and return it. </li> </ol> </li> <li> else, return the trash root under the root of the mount point (/{mntpoint}/.Trash/{user}). </li> </ol> These conditions handle several different important cases: <ul> <li>File systems may need to have more local trash roots, such as encryption zones or snapshot roots.</li> <li>The fallback mount should use the user's home directory.</li> <li>Cloud storage systems should not use trash in an implicity defined home directory, per a container, unless it is the fallback fs.</li> </ul> @param path the trash root of the path to be determined. @return the trash root path.
666 Get all the trash roots for current user or all users. When FORCE_INSIDE_MOUNT_POINT is set to true, we also return trash roots under the root of each mount point, with their viewFS paths. @param allUsers return trash roots for all users if true. @return all Trash root directories.
667 Convenience Constructor for apps to call directly. @param conf configuration. @throws IOException raised on errors performing I/O.
668 This method adds a FileSystem instance to the cache so that it can be retrieved later. It is only for testing. @param uri the uri to store it under @param conf the configuration to store it under @param fs the FileSystem to store @throws IOException if the current user cannot be determined.
669 Returns the FileSystem for this URI's scheme and authority. The entire URI is passed to the FileSystem instance's initialize method. This always returns a new FileSystem object. @param uri FS URI @param config configuration to use @return the new FS instance @throws IOException FS creation or initialization failure.
670 Create a FileContext with specified FS as default using the specified config. @param defFS default fs. @param aConf configutration. @return new FileContext with specified FS as default.
671 Returns an authenticated {@link HttpURLConnection}, it uses a Delegation Token only if the given auth token is an instance of {@link Token} and it contains a Delegation Token, otherwise use the configured {@link DelegationTokenAuthenticator} to authenticate the connection. @param url the URL to connect to. Only HTTP/S URLs are supported. @param token the authentication token being used for the user. @return an authenticated {@link HttpURLConnection}. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
672 Execute diagnostics. <p> Things it would be nice if UGI made accessible <ol> <li>A way to enable JAAS debug programatically</li> <li>Access to the TGT</li> </ol> @return true if security was enabled and all probes were successful @throws KerberosDiagsFailure explicitly raised failure @throws Exception other security problems
673 Parse arguments looking for Kerberos keytab/principal. If both are found: remove both from the argument list and attempt login. If only one of the two is found: remove it from argument list, log warning and do not attempt login. If neither is found: return original args array, doing nothing. Return the pruned args array if either flag is present.
674 A test method to print out the current user's UGI. @param args if there are two arguments, read the user from the keytab and print it out. @throws Exception Exception.
675 Login as a principal specified in config. Substitute $host in user's Kerberos principal name with hostname. If non-secure mode - return. If no keytab available - bail out with an exception @param conf conf to use @param keytabFileKey the key to look for keytab file in conf @param userNameKey the key to look for user's Kerberos principal name in conf @param hostname hostname to use for substitution @throws IOException if the config doesn't specify a keytab
676 Constructs a server listening on the named port and address. Parameters passed must be of the named class. The <code>handlerCount</code> determines the number of handler threads that will be used to process calls. If queueSizePerHandler or numReaders are not -1 they will be used instead of parameters from configuration. Otherwise the configuration will be picked up. If rpcRequestClass is null then the rpcRequestClass must have been registered via {@link #registerProtocolEngine(RPC.RpcKind, Class, RPC.RpcInvoker)} This parameter has been retained for compatibility with existing tests and usage. @param bindAddress input bindAddress. @param port input port. @param rpcRequestClass input rpcRequestClass. @param handlerCount input handlerCount. @param numReaders input numReaders. @param queueSizePerHandler input queueSizePerHandler. @param conf input Configuration. @param serverName input serverName. @param secretManager input secretManager. @param portRangeConfig input portRangeConfig. @throws IOException raised on errors performing I/O.
677 Process the Sasl's Negotiate request, including the optimization of accelerating token negotiation. @return the response to Negotiate request - the list of enabled authMethods and challenge if the TOKENS are supported. @throws SaslException - if attempt to generate challenge fails. @throws IOException - if it fails to create the SASL server for Tokens
678 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @return the protocol proxy @throws IOException if the far end through a RemoteException
679 Get a proxy connection to a remote server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param connTimeout time in milliseconds before giving up @return the proxy @throws IOException if the far end through a RemoteException
680 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param in InputStream to deserialize the object from. @param name the name of the resource because InputStream.toString is not very descriptive some times.
681 Construct a client-side proxy object with the default SocketFactory. @param <T> Generics Type T. @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param conf input Configuration. @return a proxy instance @throws IOException if the thread is interrupted.
682 Get the groups for the users given and print formatted output to the {@link PrintStream} configured earlier.
683 Initiate a graceful failover by talking to the target node's ZKFC. This sends an RPC to the ZKFC, which coordinates the failover. @param toNode the node to fail to @return status code (0 for success) @throws IOException if failover does not succeed
684 Ask the remote zkfc to cede its active status and wait for the specified timeout before attempting to claim leader status. @param remote node to ask @param timeout amount of time to cede @return the {@link ZKFCProtocol} used to talk to the ndoe @throws IOException
685 Process a GET request for the specified resource. @param request The servlet request we are processing @param response The servlet response we are creating
686 Get a FileSystem for this URI's scheme and authority. <ol> <li> If the configuration has the property {@code "fs.$SCHEME.impl.disable.cache"} set to true, a new instance will be created, initialized with the supplied URI and configuration, then returned without being cached. </li> <li> If the there is a cached FS instance matching the same URI, it will be returned. </li> <li> Otherwise: a new FS instance will be created, initialized with the configuration and URI, cached and returned to the caller. </li> </ol> @param uri uri of the filesystem. @param conf configrution. @return filesystem instance. @throws IOException if the FileSystem cannot be instantiated.
687 Get a unique local FileSystem object. @param conf the configuration to configure the FileSystem with @return a new LocalFileSystem object. @throws IOException FS creation or initialization failure.
688 Gets new file system instance of given uri. @param uri uri. @param conf configuration. @throws IOException raised on errors performing I/O. @return file system.
689 Create a FileContext for specified file system using the default config. @param defaultFS default fs. @return a FileContext with the specified AbstractFileSystem as the default FS.
690 Create a FileContext for specified default URI using the specified config. @param defaultFsUri defaultFsUri. @param aConf configrution. @return new FileContext for specified uri @throws UnsupportedFileSystemException If the file system with specified is not supported @throws RuntimeException If the file system specified is supported but could not be instantiated, or if login fails.
691 Parse the command line arguments and initialize subcommand. Also will attempt to perform Kerberos login if both -principal and -keytab flags are passed in args array. @param args args. @return 0 if the argument(s) were recognized, 1 otherwise @throws Exception Exception.
692 Login as a principal specified in config. Substitute $host in user's Kerberos principal name with a dynamically looked-up fully-qualified domain name of the current host. @param conf conf to use @param keytabFileKey the key to look for keytab file in conf @param userNameKey the key to look for user's Kerberos principal name in conf @throws IOException if login fails
693 Process a saslMessge. @param saslMessage received SASL message @return the sasl response to send back to client @throws SaslException if authentication or generating response fails, or SASL protocol mixup @throws IOException if a SaslServer cannot be created @throws AccessControlException if the requested authentication type is not supported or trying to re-attempt negotiation. @throws InterruptedException
694 Get a proxy connection to a remote server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @return the proxy @throws IOException if the far end through a RemoteException
695 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param name resource to be added, the classpath is examined for a file with that name.
696 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param url url of the resource to be added, the local filesystem is examined directly to find the resource, without referring to the classpath.
697 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param file file-path of resource to be added, the local filesystem is examined directly to find the resource, without referring to the classpath.
698 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. WARNING: The contents of the InputStream will be cached, by this method. So use this sparingly because it does increase the memory consumption. @param in InputStream to deserialize the object from. In will be read from when a get or set is called next. After it is read the stream will be closed.
699 Coordinate a graceful failover. This proceeds in several phases: 1) Pre-flight checks: ensure that the local node is healthy, and thus a candidate for failover. 2a) Determine the current active node. If it is the local node, no need to failover - return success. 2b) Get the other nodes 3a) Ask the other nodes to yield from election for a number of seconds 3b) Ask the active node to yield from the election for a number of seconds. 4) Allow the normal election path to run in other threads. Wait until we either become unhealthy or we see an election attempt recorded by the normal code path. 5) Allow the old active to rejoin the election, so a future failback is possible.
700 Connect to the service to be monitored. Stubbed out for easier testing. @throws IOException raised on errors performing I/O. @return HAServiceProtocol.
701 Returns a proxy to connect to the target HA service for health monitoring. If {@link #getHealthMonitorAddress()} is implemented to return a non-null address, then this proxy will connect to that address. Otherwise, the returned proxy defaults to using {@link #getAddress()}, which means this method's behavior is identical to {@link #getProxy(Configuration, int)}. @param conf configuration. @param timeoutMs timeout in milliseconds @return a proxy to connect to the target HA service for health monitoring @throws IOException if there is an error
702 @return a proxy to connect to the target HA Service. @param timeoutMs timeout in milliseconds. @param conf Configuration. @throws IOException raised on errors performing I/O.
703 Initialize a Har filesystem per har archive. The archive home directory is the top level directory in the filesystem that contains the HAR archive. Be careful with this method, you do not want to go on creating new Filesystem instances per call to path.getFileSystem(). the uri of Har is har://underlyingfsscheme-host:port/archivepath. or har:///archivepath. This assumes the underlying filesystem to be used in case not specified.
704 In case of the symlinks or mount points, one has to move the appropriate trashbin in the actual volume of the path p being deleted. Hence we get the file system of the fully-qualified resolved-path and then move the path p to the trashbin in that volume, @param fs - the filesystem of path p @param p - the path being deleted - to be moved to trash @param conf - configuration @return false if the item is already in the trash or trash is disabled @throws IOException on error
705 Creates an object to wrap the given parameters as fields. The string used to create the path will be recorded since the Path object does not return exactly the same string used to initialize it @param pathString a string for a path @param conf the configuration file @throws IOException if anything goes wrong...
706 @deprecated call {@link #get(URI, Configuration)} instead. @param name name. @param conf configuration. @return file system. @throws IOException If an I/O error occurred.
707 Get the local FileSystem. @param conf the configuration to configure the FileSystem with if it is newly instantiated. @return a LocalFileSystem @throws IOException if somehow the local FS cannot be instantiated.
708 Constructor. @param uri base file system @param conf configuration @throws IOException
709 Gets file system instance of given uri. @param uri uri. @param conf configuration. @throws IOException raised on errors performing I/O. @return FileSystem.
710 When ViewFileSystemOverloadScheme scheme and target uri scheme are matching, it will not take advantage of FileSystem cache as it will create instance directly. For caching needs please set "fs.viewfs.enable.inner.cache" to true.
711 Return the FileSystem that owns this Path. @param conf the configuration to use when resolving the FileSystem @return the FileSystem that owns this Path @throws java.io.IOException thrown if there's an issue resolving the FileSystem
712 Return the supplied file system for testing or otherwise get a new file system. @return the file system to use @throws MetricsException thrown if the file system could not be retrieved
713 {@inheritDoc} Note: listStatus on root("/") considers listing from fallbackLink if available. If the same directory name is present in configured mount path as well as in fallback link, then only the configured mount path will be listed in the returned result.
714 Create a FileContext for specified URI using the default config. @param defaultFsUri defaultFsUri. @return a FileContext with the specified URI as the default FS. @throws UnsupportedFileSystemException If the file system for <code>defaultFsUri</code> is not supported
715 Create a FileContext using the passed config. Generally it is better to use {@link #getFileContext(URI, Configuration)} instead of this one. @param aConf configration. @return new FileContext @throws UnsupportedFileSystemException If file system in the config is not supported
716 @param aConf - from which the FileContext is configured @return a FileContext for the local file system using the specified config. @throws UnsupportedFileSystemException If default file system in the config is not supported
717 Construct an RPC server. @param protocolClass the class of protocol @param protocolImpl the protocolImpl whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param numReaders number of read threads @param queueSizePerHandler the size of the queue contained in each Handler @param verbose whether each call should be logged @param secretManager the server-side secret manager for each token type @param portRangeConfig A config parameter that can be used to restrict the range of ports used when port is 0 (an ephemeral port) @param alignmentContext provides server state info on client responses @throws IOException raised on errors performing I/O.
718 Construct an RPC server. @param protocolClass - the protocol being registered can be null for compatibility with old usage (see below for details) @param protocolImpl the protocol impl that will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param verbose whether each call should be logged @param alignmentContext provides server state info on client responses @param numReaders input numReaders. @param portRangeConfig input portRangeConfig. @param queueSizePerHandler input queueSizePerHandler. @param secretManager input secretManager. @throws IOException raised on errors performing I/O.
719 Process saslMessage and send saslResponse back @param saslMessage received SASL message @throws RpcServerException setup failed due to SASL negotiation failure, premature or invalid connection context, or other state errors. This exception needs to be sent to the client. This exception will wrap {@link RetriableException}, {@link InvalidToken}, {@link StandbyException} or {@link SaslException}. @throws IOException if sending reply fails @throws InterruptedException
720 Loads the mount-table configuration from hadoop compatible file system and add the configuration items to given configuration. Mount-table configuration format should be suffixed with version number. Format: {@literal mount-table.<versionNumber>.xml} Example: mount-table.1.xml When user wants to update mount-table, the expectation is to upload new mount-table configuration file with monotonically increasing integer as version number. This API loads the highest version number file. We can also configure single file path directly. @param mountTableConfigPath : A directory path where mount-table files stored or a mount-table file path. We recommend to configure directory with the mount-table version files. @param conf : to add the mount table as resource.
721 Checks whether other target node is active or not @param targetNodeToActivate @return true if other target node is active or some other exception occurred and forceActive was set otherwise false @throws IOException
722 Perform pre-failover checks on the given service we plan to failover to, eg to prevent failing over to a service (eg due to it being inaccessible, already active, not healthy, etc). An option to ignore toSvc if it claims it is not ready to become active is provided in case performing a failover will allow it to become active, eg because it triggers a log roll so the standby can learn about new blocks and leave safemode. @param from currently active service @param target service to make active @param forceActive ignore toSvc if it reports that it is not ready @throws FailoverFailedException if we should avoid failover
723 Try to get the HA state of the node at the given address. This function is guaranteed to be "quick" -- ie it has a short timeout and no retries. Its only purpose is to avoid fencing a node that has already restarted.
724 Attempt calling overridden {@link #doCall(Path)} method with specified {@link FileSystem} and {@link Path}. If the call fails with an UnresolvedLinkException, it will try to resolve the path and retry the call by calling {@link #next(FileSystem, Path)}. @param filesys FileSystem with which to try call @param path Path with which to try call @return Generic type determined by implementation @throws IOException raised on errors performing I/O.
725 Creates an object to wrap the given parameters as fields. The string used to create the path will be recorded since the Path object does not return exactly the same string used to initialize it @param localPath a local URI @param conf the configuration file @throws IOException if anything goes wrong...
726 The src files are on the local disk. Add it to the filesystem at the given dst name. delSrc indicates if the source should be removed @param delSrc whether to delete the src @param overwrite whether to overwrite an existing file @param srcs array of paths which are source @param dst path @throws IOException IO failure
727 The src file is on the local disk. Add it to the filesystem at the given dst name. delSrc indicates if the source should be removed @param delSrc whether to delete the src @param overwrite whether to overwrite an existing file @param src path @param dst path @throws IOException IO failure
728 The src file is under this filesystem, and the dst is on the local disk. Copy it from the remote filesystem to the local dst name. delSrc indicates if the src will be removed or not. useRawLocalFileSystem indicates whether to use RawLocalFileSystem as the local file system or not. RawLocalFileSystem is non checksumming, So, It will not create any crc files at local. @param delSrc whether to delete the src @param src path @param dst path @param useRawLocalFileSystem whether to use RawLocalFileSystem as local file system or not. @throws IOException for any IO error
729 This method gets called everytime before any read/write to make sure that any change to localDirs is reflected immediately.
730 Get a local file under a directory named by <i>dirsProp</i> with the given <i>path</i>. If <i>dirsProp</i> contains multiple directories, then one is chosen based on <i>path</i>'s hash code. If the selected directory does not exist, an attempt is made to create it. @param dirsProp directory in which to locate the file. @param path file-path. @return local file under the directory with the given path. @throws IOException raised on errors performing I/O.
731 This is an admin only API to give access to its child raw file system, if the path is link. If the given path is an internal directory(path is from mount paths tree), it will initialize the file system of given path uri directly. If path cannot be resolved to any internal directory or link, it will throw NotInMountpointException. Please note, this API will not return chrooted file system. Instead, this API will get actual raw file system instances. @param path - fs uri path @param conf - configuration @throws IOException raised on errors performing I/O. @return file system.
732 Gets the mount path info, which contains the target file system and remaining path to pass to the target file system. @param path the path. @param conf configuration. @return mount path info. @throws IOException raised on errors performing I/O.
733 Expand the given path as a glob pattern. Non-existent paths do not throw an exception because creation commands like touch and mkdir need to create them. The "stat" field will be null if the path does not exist. @param pattern the pattern to expand as a glob @param conf the hadoop configuration @return list of {@link PathData} objects. if the pattern is not a glob, and does not exist, the list will contain a single PathData with a null stat @throws IOException anything else goes wrong...
734 Dump information about TFile. @param file Path string of the TFile @param out PrintStream to output the information. @param conf The configuration object. @throws IOException
735 Convenience method for reading a token storage file and loading its Tokens. @param filename filename. @param conf configuration. @throws IOException raised on errors performing I/O. @return Credentials.
736 If libjars are set in the conf, parse the libjars. @param conf input Configuration. @return libjar urls @throws IOException raised on errors performing I/O.
737 Initialize the connection to HDFS and create the base directory. Also launch the flush thread.
738 @return a FileContext for the local file system using the default config. @throws UnsupportedFileSystemException If the file system for {@link FsConstants#LOCAL_FS_URI} is not supported.
739 Create a FileContext using the default config read from the $HADOOP_CONFIG/core.xml, Unspecified key-values for config are defaulted from core-defaults.xml in the release jar. @throws UnsupportedFileSystemException If the file system from the default configuration is not supported @return file context.
740 Construct an RPC server. @param protocolClass the class of protocol @param protocolImpl the protocolImpl whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param verbose whether each call should be logged @param portRangeConfig A config parameter that can be used to restrict the range of ports used when port is 0 (an ephemeral port) @param alignmentContext provides server state info on client responses @param secretManager input secretManager. @param queueSizePerHandler input queueSizePerHandler. @param numReaders input numReaders. @throws IOException raised on errors performing I/O.
741 Construct an RPC server. @param protocolClass - the protocol being registered can be null for compatibility with old usage (see below for details) @param protocolImpl the protocol impl that will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param verbose whether each call should be logged @param secretManager input secretManager. @param queueSizePerHandler input queueSizePerHandler. @param portRangeConfig input portRangeConfig. @param numReaders input numReaders. @deprecated use Server#Server(Class, Object, Configuration, String, int, int, int, int, boolean, SecretManager) @throws IOException raised on errors performing I/O.
742 Creates an SSLFactory. @param mode SSLFactory mode, client or server. @param conf Hadoop configuration from where the SSLFactory configuration will be read.
743 Refresh the service authorization ACL for the service handled by this server. @param conf input Configuration. @param provider input PolicyProvider.
744 Failover from service 1 to service 2. If the failover fails then try to failback. @param fromSvc currently active service @param toSvc service to make active @param forceFence to fence fromSvc even if not strictly necessary @param forceActive try to make toSvc active even if it is not ready @throws FailoverFailedException if the failover fails
745 The last arg is expected to be a local path, if only one argument is given then the destination will be the current directory @param args is the list of arguments @throws IOException raised on errors performing I/O.
746 The src files is on the local disk. Add it to filesystem at the given dst name, removing the source afterwards. @param srcs source paths @param dst path @throws IOException IO failure
747 The src files are on the local disk. Add it to FS at the given dst name. delSrc indicates if the source should be removed
748 The src file is on the local disk. Add it to the filesystem at the given dst name. delSrc indicates if the source should be removed @param delSrc whether to delete the src @param src path @param dst path @throws IOException IO failure.
749 The src file is on the local disk. Add it to FS at the given dst name. delSrc indicates if the source should be removed
750 Copy it a file from a remote filesystem to the local one. delSrc indicates if the src will be removed or not. @param delSrc whether to delete the src @param src path src file in the remote filesystem @param dst path local destination @throws IOException IO failure
751 Get a path from the local FS. If size is known, we go round-robin over the set of disks (via the configured dirs) and return the first complete path which has enough space. If size is not known, use roulette selection -- pick directories with probability proportional to their available space.
752 Get a path from the local FS for reading. We search through all the configured dirs for the file's existence and return the complete path to the file when we find one
753 Get all of the paths that currently exist in the working directories. @param pathStr the path underneath the roots @param conf the configuration to look up the roots in @return all of the paths that exist under any of the roots @throws IOException
754 Creates a new Nfly instance. @param uris the list of uris in the mount point @param conf configuration object @param minReplication minimum copies to commit a write op @param nflyFlags modes such readMostRecent @param fsGetter to get the file system instance with the given uri @throws IOException
755 For each source path, execute the command @return 0 if it runs successfully; -1 if it fails
756 Expand the given argument into a list of {@link PathData} objects. The default behavior is to expand globs. Commands may override to perform other expansions on an argument. @param arg string pattern to expand @return list of {@link PathData} objects @throws IOException if anything goes wrong...
757 The last arg is expected to be a remote path, if only one argument is given then the destination will be the remote user's directory @param args is the list of arguments @throws PathIOException if path doesn't exist or matches too many times
758 Construct a reader by opening a file from the given file system. @param fs The file system used to open the file. @param file The file being read. @param conf Configuration @throws IOException raised on errors performing I/O. @deprecated Use Reader(Configuration, Option...) instead.
759 Construct a reader by the given input stream. @param in An input stream. @param buffersize unused @param start The starting position. @param length The length being read. @param conf Configuration @throws IOException raised on errors performing I/O. @deprecated Use Reader(Configuration, Reader.Option...) instead.
760 Override this method to specialize the type of {@link SequenceFile.Reader} returned. @param dataFile data file. @param conf configuration. @param options options. @throws IOException raised on errors performing I/O. @return SequenceFile.Reader.
761 Fills up the rawKey object with the key returned by the Reader. @return true if there is a key returned; false, otherwise @throws IOException raised on errors performing I/O.
762 Construct a uncompressed writer from a set of options. @param conf the configuration to use @param opts the options used when creating the writer @throws IOException if it fails
763 Dumping the TFile information. @param args A list of TFile paths.
764 Write out a Credentials object as a local file. @param f a local File object. @param format a string equal to FORMAT_PB or FORMAT_JAVA. @param creds the Credentials object to be written out. @param conf a Configuration object passed along. @throws IOException raised on errors performing I/O.
765 Check the current directory against the time stamp. If they're not the same, create a new directory and a new log file in that directory. @throws MetricsException thrown if an error occurs while creating the new directory or new log file
766 Returns all jars that are in the directory. It is useful in expanding a wildcard path to return all jars from the directory to use in a classpath. @param path the path to the directory. The path may include the wildcard. @param useLocal use local. @return the list of jars as URLs, or an empty list if there are no jars, or the directory does not exist
767 Construct an RPC server. @param protocolClass class @param protocolImpl the instance whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @throws IOException raised on errors performing I/O.
768 Construct an RPC server. @param protocolImpl the instance whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param verbose whether each call should be logged @param numReaders input numberReaders. @param queueSizePerHandler input queueSizePerHandler. @param secretManager input secretManager. @deprecated use Server#Server(Class, Object, Configuration, String, int, int, int, int, boolean, SecretManager) @throws IOException raised on errors performing I/O.
769 Establish RPC connection setup by negotiating SASL if required, then reading and authorizing the connection header @param header - RPC header @param buffer - stream to request payload @throws RpcServerException - setup failed due to SASL negotiation failure, premature or invalid connection context, or other state errors. This exception needs to be sent to the client. @throws IOException - failed to send a response back to the client @throws InterruptedException
770 Connect to the URL. Supports HTTP/HTTPS and supports SPNEGO authentication. It falls back to simple authentication if it fails to initiate SPNEGO. @param url the URL address of the daemon servlet @return a connected connection @throws Exception if it can not establish a connection.
771 The src file is on the local disk. Add it to filesystem at the given dst name and the source is kept intact afterwards @param src path @param dst path @throws IOException IO failure
772 The src file is on the local disk. Add it to the filesystem at the given dst name, removing the source afterwards. @param src local path @param dst path @throws IOException IO failure
773 The src file is on the local disk. Add it to FS at the given dst name. delSrc indicates if the source should be removed
774 Copy it a file from the remote filesystem to the local one. @param src path src file in the remote filesystem @param dst path local destination @throws IOException IO failure
775 Copy a file to the local filesystem, then delete it from the remote filesystem (if successfully copied). @param src path src file in the remote filesystem @param dst path local destination @throws IOException IO failure
776 The src file is under FS, and the dst is on the local disk. Copy it from FS control to the local dst name. delSrc indicates if the src will be removed or not.
777 Get a path from the local FS. Pass size as SIZE_UNKNOWN if not known apriori. We round-robin over the set of disks (via the configured dirs) and return the first complete path which has enough space @param pathStr the requested path (this will be created on the first available disk) @param size the size of the file that is going to be written @param conf the Configuration object @param checkWrite ensure that the path is writable @return the complete path to the file on a local disk @throws IOException raised on errors performing I/O.
778 Creates a file on the local FS. Pass size as {@link LocalDirAllocator.SIZE_UNKNOWN} if not known apriori. We round-robin over the set of disks (via the configured dirs) and return a file on the first path which has enough space. The file is guaranteed to go away when the JVM exits.
779 Get a path from the local FS for reading. We search through all the configured dirs for the file's existence and return the complete path to the file when we find one @param pathStr the requested file (this will be searched) @param conf the Configuration object @return the complete path to the file on a local disk @throws IOException raised on errors performing I/O.
780 Get all of the paths that currently exist in the working directories. @param pathStr the path underneath the roots @param conf the configuration to look up the roots in @return all of the paths that exist under any of the roots @throws IOException raised on errors performing I/O.
781 Creates a new Nfly instance. @param uris the list of uris in the mount point @param conf configuration object @param minReplication minimum copies to commit a write op @param nflyFlags modes such readMostRecent @throws IOException
782 Initializes an nfly mountpoint in viewfs. @param uris destinations to replicate writes to @param conf file system configuration @param settings comma-separated list of k=v pairs. @return an Nfly filesystem @throws IOException
783 Expands a list of arguments into {@link PathData} objects. The default behavior is to call {@link #expandArgument(String)} on each element which by default globs the argument. The loop catches IOExceptions, increments the error count, and displays the exception. @param args strings to expand into {@link PathData} objects @return list of all {@link PathData} objects the arguments @throws IOException if anything goes wrong...
784 Fetch a token from a service and save to file in the local filesystem. @param tokenFile a local File object to hold the output. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param alias overwrite service field of fetched token with this text. @param service use a DtFetcher implementation matching this service text. @param url pass this URL to fetcher after stripping any http/s prefix. @param renewer pass this renewer to the fetcher. @param conf Configuration object passed along. @throws IOException raised on errors performing I/O.
785 Alias a token from a file and save back to file in the local filesystem. @param tokenFile a local File object to hold the input and output. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param alias overwrite service field of fetched token with this text. @param service only apply alias to tokens matching this service text. @param conf Configuration object passed along. @throws IOException raised on errors performing I/O.
786 Append tokens from list of files in local filesystem, saving to last file. @param tokenFiles list of local File objects. Last file holds the output. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param conf Configuration object passed along. @throws IOException raised on errors performing I/O.
787 Remove a token from a file in the local filesystem, matching alias. @param cancel cancel token as well as remove from file. @param tokenFile a local File object. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param alias remove only tokens matching alias; null matches all. @param conf Configuration object passed along. @throws IOException raised on errors performing I/O. @throws InterruptedException if the thread is interrupted.
788 Renew a token from a file in the local filesystem, matching alias. @param tokenFile a local File object. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param alias renew only tokens matching alias; null matches all. @param conf Configuration object passed along. @throws IOException raised on errors performing I/O. @throws InterruptedException if the thread is interrupted.
789 Import a token from a base64 encoding into the local filesystem. @param tokenFile A local File object. @param fileFormat A string equal to FORMAT_PB or FORMAT_JAVA, for output. @param alias overwrite Service field of fetched token with this text. @param base64 urlString Encoding of the token to import. @param conf Configuration object passed along. @throws IOException Error to import the token into the file.
790 Returns all jars that are in the directory. It is useful in expanding a wildcard path to return all jars from the directory to use in a classpath. It operates only on local paths. @param path the path to the directory. The path may include the wildcard. @return the list of jars as URLs, or an empty list if there are no jars, or the directory does not exist locally
791 Construct an RPC server. @param instance the instance whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @deprecated Use #Server(Class, Object, Configuration, String, int) @throws IOException raised on errors performing I/O.
792 Process one RPC Request from buffer read from socket stream - decode rpc in a rpc-Call - handle out-of-band RPC requests such as the initial connectionContext - A successfully decoded RpcCall will be deposited in RPC-Q and its response will be sent later when the request is processed. Prior to this call the connectionHeader ("hrpc...") has been handled and if SASL then SASL has been established and the buf we are passed has been unwrapped from SASL. @param bb - contains the RPC request header and the rpc request @throws IOException - internal error that should not be returned to client, typically failure to respond to client @throws InterruptedException
793 Configures the client to send HTTP/HTTPS request to the URL. Supports SPENGO for authentication. @param urlString URL and query string to the daemon's web UI @throws Exception if unable to connect
794 Called when we're all done writing to the target. A local FS will do nothing, because we've written to exactly the right place. A remote FS will copy the contents of tmpLocalFile to the correct target at fsOutputFile. @param fsOutputFile path of output file @param tmpLocalFile path to local tmp file @throws IOException IO failure
795 The src file is under FS, and the dst is on the local disk. Copy it from FS control to the local dst name. If src and dst are directories, the copyCrc parameter determines whether to copy CRC files. @param src src path. @param dst dst path. @param copyCrc copy csc flag. @throws IOException if an I/O error occurs.
796 Get a path from the local FS. Pass size as SIZE_UNKNOWN if not known apriori. We round-robin over the set of disks (via the configured dirs) and return the first complete path which has enough space @param pathStr the requested path (this will be created on the first available disk) @param size the size of the file that is going to be written @param conf the Configuration object @return the complete path to the file on a local disk @throws IOException raised on errors performing I/O.
797 Creates a temporary file in the local FS. Pass size as -1 if not known apriori. We round-robin over the set of disks (via the configured dirs) and select the first complete path which has enough space. A file is created on this directory. The file is guaranteed to go away when the JVM exits. @param pathStr prefix for the temporary file @param size the size of the file that is going to be written @param conf the Configuration object @return a unique temporary file @throws IOException raised on errors performing I/O.
798 Allows commands that don't use paths to handle the raw arguments. Default behavior is to expand the arguments via {@link #expandArguments(LinkedList)} and pass the resulting list to {@link #processArguments(LinkedList)} @param args the list of argument strings @throws IOException raised on errors performing I/O.
799 Create a new Writer with the given options. @param conf the configuration to use @param opts the options to create the file with @return a new Writer @throws IOException raised on errors performing I/O.
800 Create a jar file at the given path, containing a manifest with a classpath that references all specified entries. Some platforms may have an upper limit on command line length. For example, the maximum command line length on Windows is 8191 characters, but the length of the classpath may exceed this. To work around this limitation, use this method to create a small intermediate jar with a manifest that contains the full classpath. It returns the absolute path to the new jar, which the caller may set as the classpath for a new process. Environment variable evaluation is not supported within a jar manifest, so this method expands environment variables before inserting classpath entries to the manifest. The method parses environment variables according to platform-specific syntax (%VAR% on Windows, or $VAR otherwise). On Windows, environment variables are case-insensitive. For example, %VAR% and %var% evaluate to the same value. Specifying the classpath in a jar manifest does not support wildcards, so this method expands wildcards internally. Any classpath entry that ends with * is translated to all files at that path with extension .jar or .JAR. @param inputClassPath String input classpath to bundle into the jar manifest @param pwd Path to working directory to save jar @param targetDir path to where the jar execution will have its working dir @param callerEnv Map {@literal <}String, String{@literal >} caller's environment variables to use for expansion @return String[] with absolute path to new jar in position 0 and unexpanded wild card entry path in position 1 @throws IOException if there is an I/O error while writing the jar file
801 takes input as a comma separated list of files and verifies if they exist. It defaults for file:/// if the files specified do not have a scheme. it returns the paths uri converted defaulting to file:///. So an input of /home/user/file1,/home/user/file2 would return file:///home/user/file1,file:///home/user/file2. @param files the input files argument @param expandWildcard whether a wildcard entry is allowed and expanded. If true, any directory followed by a wildcard is a valid entry and is replaced with the list of jars in that directory. It is used to support the wildcard notation in a classpath. @return a comma-separated list of validated and qualified paths, or null if the input files argument is null
802 This method reads in a non-blocking fashion from the channel: this method is called repeatedly when data is present in the channel; when it has enough data to process one rpc it processes that rpc. On the first pass, it processes the connectionHeader, connectionContext (an outOfBand RPC) and at most one RPC request that follows that. On future passes it will process at most one RPC request. Quirky things: dataLengthBuffer (4 bytes) is used to read "hrpc" OR rpc request length. @return -1 in case of error, else num bytes read so far @throws IOException - internal error that should not be returned to client, typically failure to respond to client @throws InterruptedException - if the thread is interrupted.
803 Process a wrapped RPC Request - unwrap the SASL packet and process each embedded RPC request @param inBuf - SASL wrapped request of one or more RPCs @throws IOException - SASL packet cannot be unwrapped @throws InterruptedException
804 Send HTTP/HTTPS request to get log level. @throws HadoopIllegalArgumentException if arguments are invalid. @throws Exception if unable to connect
805 Send HTTP/HTTPS request to set log level. @throws HadoopIllegalArgumentException if arguments are invalid. @throws Exception if unable to connect
806 This provider expects URIs in the following form : {@literal kms://<PROTO>@<AUTHORITY>/<PATH>} where : - PROTO = http or https - AUTHORITY = {@literal <HOSTS>[:<PORT>]} - HOSTS = {@literal <HOSTNAME>[;<HOSTS>]} - HOSTNAME = string - PORT = integer This will always create a {@link LoadBalancingKMSClientProvider} if the uri is correct.
807 Called when we're all done writing to the target. A local FS will do nothing, because we've written to exactly the right place. A remote FS will copy the contents of tmpLocalFile to the correct target at fsOutputFile.
808 Demand create the directory allocator, then create a temporary file. This does not mark the file for deletion when a process exits. {@link LocalDirAllocator#createTmpFileForWrite(String, long, Configuration)}. @param pathStr prefix for the temporary file. @param size the size of the file that is going to be written. @param conf the Configuration object. @return a unique temporary file. @throws IOException IO problems
809 Get a path from the local FS. This method should be used if the size of the file is not known apriori. We go round-robin over the set of disks (via the configured dirs) and return the first complete path where we could create the parent directory of the passed path. @param pathStr the requested path (this will be created on the first available disk) @param conf the Configuration object @return the complete path to the file on a local disk @throws IOException raised on errors performing I/O.
810 Invokes the command handler. The default behavior is to process options, expand arguments, and then process each argument. <pre> run |{@literal ->} {@link #processOptions(LinkedList)} \{@literal ->} {@link #processRawArguments(LinkedList)} |{@literal ->} {@link #expandArguments(LinkedList)} | \{@literal ->} {@link #expandArgument(String)}* \{@literal ->} {@link #processArguments(LinkedList)} |{@literal ->} {@link #processArgument(PathData)}* | |{@literal ->} {@link #processPathArgument(PathData)} | \{@literal ->} {@link #processPaths(PathData, PathData...)} | \{@literal ->} {@link #processPath(PathData)}* \{@literal ->} {@link #processNonexistentPath(PathData)} </pre> Most commands will chose to implement just {@link #processOptions(LinkedList)} and {@link #processPath(PathData)} @param argv the list of command line arguments @return the exit code for the command @throws IllegalArgumentException if called with invalid arguments
811 Construct an array reader for the named file. @param fs FileSystem. @param file file. @param conf configuration. @throws IOException raised on errors performing I/O.
812 Construct a set reader for the named set using the named comparator. @param fs input FileSystem. @param dirName input dirName. @param comparator input comparator. @param conf input Configuration. @throws IOException raised on errors performing I/O.
813 Construct a map reader for the named map. @deprecated @param fs FileSystem. @param dirName dirName. @param conf configuration. @throws IOException raised on errors performing I/O.
814 Construct a map reader for the named map using the named comparator. @deprecated @param fs FileSystem. @param dirName dirName. @param comparator WritableComparator. @param conf Configuration. @throws IOException raised on errors performing I/O.
815 Clones the attributes (like compression of the input file and creates a corresponding Writer @param inputFile the path of the input file whose attributes should be cloned @param outputFile the path of the output file @param prog the Progressable to report status during the file write @return Writer @throws IOException raised on errors performing I/O.
816 This method attempts to fix a corrupt MapFile by re-creating its index. @param fs filesystem @param dir directory containing the MapFile data and index @param keyClass key class (has to be a subclass of Writable) @param valueClass value class (has to be a subclass of Writable) @param dryrun do not perform any changes, just report what needs to be done @param conf configuration. @return number of valid entries in this MapFile, or -1 if no fixing was needed @throws Exception Exception.
817 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
818 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
819 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param progress The Progressable object to track progress. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
820 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
821 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @param progress The Progressable object to track progress. @param metadata The metadata of the file. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
822 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param bufferSize buffer size for the underlaying outputstream. @param replication replication factor for the file. @param blockSize block size for the file. @param compressionType The compression type. @param codec The compression codec. @param progress The Progressable object to track progress. @param metadata The metadata of the file. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
823 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @param progress The Progressable object to track progress. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
824 Construct the preferred type of 'raw' SequenceFile Writer. @param conf The configuration. @param out The stream on top which the writer is to be constructed. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @param metadata The metadata of the file. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
825 Construct the preferred type of 'raw' SequenceFile Writer. @param conf The configuration. @param out The stream on top which the writer is to be constructed. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
826 Takes input as a comma separated list of files and verifies if they exist. It defaults for file:/// if the files specified do not have a scheme. it returns the paths uri converted defaulting to file:///. So an input of /home/user/file1,/home/user/file2 would return file:///home/user/file1,file:///home/user/file2. This method does not recognize wildcards. @param files the input files argument @return a comma-separated list of validated and qualified paths, or null if the input files argument is null
827 Send HTTP/HTTPS request to the daemon. @throws HadoopIllegalArgumentException if arguments are invalid. @throws Exception if unable to connect
828 Create a temp file and a {@link DiskBlock} instance to manage it. @param index block index. @param limit limit of the block. @param statistics statistics to update. @return the new block. @throws IOException IO problems
829 Create temporary file based on the file path retrieved from local dir allocator instance. The file is created with .bin suffix. The created file has been granted posix file permissions available in TEMP_FILE_ATTRS. @param conf the configuration. @param localDirAllocator the local dir allocator instance. @return path of the file created. @throws IOException if IO error occurs while local dir allocator tries to retrieve path from local FS or file creation fails or permission set fails.
830 run
831 Construct a set reader for the named set. @param fs input FileSystem. @param dirName input dirName. @param conf input Configuration. @throws IOException raised on errors performing I/O.
832 This is the single level merge that is called multiple times depending on the factor size and the number of segments @return RawKeyValueIterator @throws IOException
833 Create a set naming the element comparator and compression type. @param conf input Configuration. @param fs input FileSystem. @param dirName input dirName. @param comparator input comparator. @param compress input compress. @throws IOException raised on errors performing I/O.
834 Create the named file for values of the named class. @param conf configuration. @param fs file system. @param file file. @param valClass valClass. @throws IOException raised on errors performing I/O.
835 Create the named file for values of the named class. @param conf configuration. @param fs file system. @param file file. @param valClass valClass. @param compress compress. @param progress progress. @throws IOException raised on errors performing I/O.
836 Create the named map for keys of the named class. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs filesystem. @param dirName dirName. @param keyClass keyClass. @param valClass valClass. @throws IOException raised on errors performing I/O.
837 Create the named map for keys of the named class. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs fs. @param dirName dirName. @param keyClass keyClass. @param valClass valClass. @param compress compress. @param progress progress. @throws IOException raised on errors performing I/O.
838 Create the named map for keys of the named class. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs FileSystem. @param dirName dirName. @param keyClass keyClass. @param valClass valClass. @param compress compress. @param codec codec. @param progress progress. @throws IOException raised on errors performing I/O.
839 Create the named map for keys of the named class. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs fs. @param dirName dirName. @param keyClass keyClass. @param valClass valClass. @param compress compress. @throws IOException raised on errors performing I/O.
840 Create the named map using the named key comparator. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs fs. @param dirName dirName. @param comparator comparator. @param valClass valClass. @throws IOException raised on errors performing I/O.
841 Create the named map using the named key comparator. @param conf configuration. @param fs filesystem. @param dirName dirName. @param comparator comparator. @param valClass valClass. @param compress compress. @throws IOException raised on errors performing I/O. @deprecated Use Writer(Configuration, Path, Option...) instead.
842 Create the named map using the named key comparator. @deprecated Use Writer(Configuration, Path, Option...)} instead. @param conf configuration. @param fs filesystem. @param dirName dirName. @param comparator comparator. @param valClass valClass. @param compress CompressionType. @param progress progress. @throws IOException raised on errors performing I/O.
843 Create the named map using the named key comparator. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs FileSystem. @param dirName dirName. @param comparator comparator. @param valClass valClass. @param compress CompressionType. @param codec codec. @param progress progress. @throws IOException raised on errors performing I/O.
844 Construct the preferred type of SequenceFile Writer. @param fc The context for the specified file. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @param metadata The metadata of the file. @param createFlag gives the semantics of create: overwrite, append etc. @param opts file creation options; see {@link CreateOpts}. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O.
845 Main entry point. @param args command-line arguments
846 Creates a classloader based on the environment that was specified by the user. If HADOOP_USE_CLIENT_CLASSLOADER is specified, it creates an application classloader that provides the isolation of the user class space from the hadoop classes and their dependencies. It forms a class space for the user jar as well as the HADOOP_CLASSPATH. Otherwise, it creates a classloader that simply adds the user jar to the classpath.
847 Modify configuration according user-specified generic options. @param line User-specified generic options
848 Return temporary file created based on the file path retrieved from local dir allocator. @param conf The configuration object. @param localDirAllocator Local dir allocator instance. @return Path of the temporary file created. @throws IOException if IO error occurs while local dir allocator tries to retrieve path from local FS or file creation fails or permission set fails.
849 Determine if the cache space is available on the local FS. @param fileSize The size of the file. @param conf The configuration. @param localDirAllocator Local dir allocator instance. @return True if the given file size is less than the available free space on local FS, False otherwise.
850 Merges the list of segments of type <code>SegmentDescriptor</code> @param segments the list of SegmentDescriptors @param tmpDir the directory to write temporary files into @return RawKeyValueIterator @throws IOException raised on errors performing I/O.
851 Merges the contents of files passed in Path[] @param inNames the array of path names @param deleteInputs true if the input files should be deleted when unnecessary @param factor the factor that will be used as the maximum merge fan-in @param tmpDir the directory to write temporary files into @return RawKeyValueIteratorMergeQueue @throws IOException raised on errors performing I/O.
852 Merges the contents of files passed in Path[] @param inNames the array of path names @param tempDir the directory for creating temp files during merge @param deleteInputs true if the input files should be deleted when unnecessary @return RawKeyValueIteratorMergeQueue @throws IOException raised on errors performing I/O.
853 Used by mergePass to merge the output of the sort @param inName the name of the input file containing sorted segments @param indexIn the offsets of the sorted segments @param tmpDir the relative directory to store intermediate results in @return RawKeyValueIterator @throws IOException
854 Create a set naming the element class and compression type. @param conf input Configuration. @param fs input FileSystem. @param dirName input dirName. @param keyClass input keyClass. @param compress input compress. @throws IOException raised on errors performing I/O.
855 Create the named set for keys of the named class. @deprecated pass a Configuration too @param fs input FileSystem. @param dirName input dirName. @param keyClass input keyClass. @throws IOException raised on errors performing I/O.
856 Merge multiple MapFiles to one Mapfile. @param inMapFiles input inMapFiles. @param deleteInputs deleteInputs. @param outMapFile input outMapFile. @throws IOException raised on errors performing I/O.
857 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param bufferSize buffer size for the underlaying outputstream. @param replication replication factor for the file. @param blockSize block size for the file. @param createParent create parent directory if non-existent @param compressionType The compression type. @param codec The compression codec. @param metadata The metadata of the file. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O.
858 Parse the user-specified options, get the generic options, and modify configuration accordingly. @param opts Options to use for parsing args. @param args User-specified arguments @return true if the parse was successful
859 Puts the given block in this cache. @param blockNumber the block number, used as a key for blocks map. @param buffer buffer contents of the given block to be added to this cache. @param conf the configuration. @param localDirAllocator the local dir allocator instance. @throws IOException if either local dir allocator fails to allocate file or if IO error occurs while writing the buffer content to the file. @throws IllegalArgumentException if buffer is null, or if buffer.limit() is zero or negative.
860 Merges the contents of files passed in Path[] using a max factor value that is already set @param inNames the array of path names @param deleteInputs true if the input files should be deleted when unnecessary @param tmpDir the directory to write temporary files into @return RawKeyValueIteratorMergeQueue @throws IOException raised on errors performing I/O.
861 sort calls this to generate the final merged output
862 Run a Hadoop job jar. If the main class is not in the jar's manifest, then it must be provided on the command line. @param args args. @throws Throwable error.
863 Create a <code>GenericOptionsParser</code> to parse given options as well as generic Hadoop options. The resulting <code>CommandLine</code> object can be obtained by {@link #getCommandLine()}. @param conf the configuration to modify @param options options built by the caller @param args User-specified arguments @throws IOException raised on errors performing I/O.
864 Perform a file sort from a set of input files and return an iterator. @param inFiles the files to be sorted @param tempDir the directory where temp files are created during sort @param deleteInput should the input files be deleted as they are read? @return iterator the RawKeyValueIterator @throws IOException raised on errors performing I/O.
865 Merge the provided files. @param inFiles the array of input path names @param outFile the final output file @throws IOException raised on errors performing I/O.
866 Perform a file sort from a set of input files into an output file. @param inFiles the files to be sorted @param outFile the sorted output file @param deleteInput should the input files be deleted as they are read? @throws IOException raised on errors performing I/O.
867 Create an options parser with the given options to parse the args. @param opts the options @param args the command line arguments @throws IOException raised on errors performing I/O.
868 Create an options parser to parse the args. @param args the command line arguments @throws IOException raised on errors performing I/O.
869 Create a <code>GenericOptionsParser</code> to parse only the generic Hadoop arguments. The array of string arguments other than the generic arguments can be obtained by {@link #getRemainingArgs()}. @param conf the <code>Configuration</code> to modify. @param args command-line arguments. @throws IOException raised on errors performing I/O.
870 The backwards compatible interface to sort. @param inFile the input file to sort. @param outFile the sorted output file. @throws IOException raised on errors performing I/O.
871 Override point: create a generic options parser or subclass thereof. @param conf Hadoop configuration @param argArray array of arguments @return a generic options parser to parse the arguments @throws IOException on any failure
872 Runs the given <code>Tool</code> by {@link Tool#run(String[])}, after parsing with the given generic arguments. Uses the given <code>Configuration</code>, or builds one if null. Sets the <code>Tool</code>'s configuration with the possibly modified version of the <code>conf</code>. @param conf <code>Configuration</code> for the <code>Tool</code>. @param tool <code>Tool</code> to run. @param args command-line arguments to the tool. @return exit code of the {@link Tool#run(String[])} method. @throws Exception Exception.
873 Parse the command arguments, extracting the service class as the last element of the list (after extracting all the rest). The field {@link #commandOptions} field must already have been set. @param conf configuration to use @param args command line argument list @return the remaining arguments @throws ServiceLaunchException if processing of arguments failed
874 Inner entry point, with no logging or system exits. @param conf configuration @param argv argument list @return an exception @throws Exception Exception.
875 Main program. @param args Command line arguments @throws Exception exception.
876 main() entry point for the KeyShell. While strictly speaking the return is void, it will System.exit() with a return code: 0 is for success and 1 for failure. @param args Command line arguments. @throws Exception raised on errors performing I/O.
877 Runs the <code>Tool</code> with its <code>Configuration</code>. Equivalent to <code>run(tool.getConf(), tool, args)</code>. @param tool <code>Tool</code> to run. @param args command-line arguments to the tool. @return exit code of the {@link Tool#run(String[])} method. @throws Exception exception.
878 Extract the command options and apply them to the configuration, building an array of processed arguments to hand down to the service. @param conf configuration to update. @param args main arguments. {@code args[0]}is assumed to be the service classname and is skipped. @return the remaining arguments @throws ExitUtil.ExitException if JVM exiting is disabled.
879 Main entry point. @param argv args list
880 main() has some simple utility methods @param argv the command and its arguments @throws Exception upon error
881 A command line implementation @param args input args. @throws Exception exception.
882 Main entry point. Runs the class via the {@link ToolRunner}, then exits with an appropriate exit code. @param args argument list
883 Launch the service and exit. <ol> <li>Parse the command line.</li> <li>Build the service configuration from it.</li> <li>Start the service.</li> <li>If it is a {@link LaunchableService}: execute it</li> <li>Otherwise: wait for it to finish.</li> <li>Exit passing the status code to the {@link #exit(int, String)} method.</li> </ol> @param args arguments to the service. {@code arg[0]} is assumed to be the service classname.
884 This is the JVM entry point for the service launcher. Converts the arguments to a list, then invokes {@link #serviceMain(List)} @param args command line arguments.
885 Varargs version of the entry point for testing and other in-JVM use. Hands off to {@link #serviceMain(List)} @param args command line arguments.
