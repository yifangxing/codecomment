1 Read bytes from stream into a byte buffer using an intermediate byte array. <pre> (position, buffer, buffer-offset, length): Void position:= the position within the file to read data. buffer := a buffer to read fully `length` bytes into. buffer-offset := the offset within the buffer to write data length := the number of bytes to read. </pre> The passed in function MUST block until the required length of data is read, or an exception is thrown. @param range range to read @param buffer buffer to fill. @param operation operation to use for reading data. @throws IOException any IOE.
2 Validate a list of ranges (including overlapping checks) and return the sorted list. <p> Two ranges overlap when the start offset of second is less than the end offset of first. End offset is calculated as start offset + length. @param input input list @param fileLength file length if known @return a new sorted list. @throws IllegalArgumentException if there are overlapping ranges or a range element is invalid (other than with negative offset) @throws EOFException if the last range extends beyond the end of the file supplied or a range offset is negative
3 Constructs an instance of {@code BlockManager}. @param blockData information about each block of the underlying file. @throws IllegalArgumentException if blockData is null.
4 Releases resources allocated to the given block. @param data the {@code BufferData} to release. @throws IllegalArgumentException if data is null.
5 Releases a previously acquired resource. @throws IllegalArgumentException if item is null.
6 Helper that asserts the current state is one of the expected values. @param states the collection of allowed states. @throws IllegalArgumentException if states is null.
7 Validates that the given string is not null and has non-zero length. @param arg the argument reference to validate. @param argName the name of the argument being validated.
8 Validates that the given set is not null and has an exact number of items. @param <T> the type of collection's elements. @param collection the argument reference to validate. @param numElements the expected number of elements in the collection. @param argName the name of the argument being validated.
9 Validates that the given path exists. @param path the path to check. @param argName the name of the argument being validated.
10 Constructs a resource pool of the given size. @param size the size of this pool. Cannot be changed post creation. @throws IllegalArgumentException if size is zero or negative.
11 Initializes a new instance of the {@code BufferPool} class. @param size number of buffer in this pool. @param bufferSize size in bytes of each buffer. @param prefetchingStatistics statistics for this stream. @throws IllegalArgumentException if size is zero or negative. @throws IllegalArgumentException if bufferSize is zero or negative.
12 Requests optional prefetching of the given block. @param blockNumber the id of the block to prefetch. @throws IllegalArgumentException if blockNumber is negative.
13 Constructs an instances of this class. @param blockNumber Number of the block associated with this buffer. @param buffer The buffer associated with this block. @throws IllegalArgumentException if blockNumber is negative. @throws IllegalArgumentException if buffer is null.
14 Initializes a new instance of the {@code Retryer} class. @param perRetryDelay per retry delay (in ms). @param maxDelay maximum amount of delay (in ms) before retry fails. @param statusUpdateInterval time interval (in ms) at which status update would be made. @throws IllegalArgumentException if perRetryDelay is zero or negative. @throws IllegalArgumentException if maxDelay is less than or equal to perRetryDelay. @throws IllegalArgumentException if statusUpdateInterval is zero or negative.
15 Validates that the given array is not null and has at least one element. @param <T> the type of array's elements. @param array the argument reference to validate. @param argName the name of the argument being validated.
16 Validates that the given array is not null and has at least one element. @param array the argument reference to validate. @param argName the name of the argument being validated.
17 Validates that the given array is not null and has at least one element. @param array the argument reference to validate. @param argName the name of the argument being validated.
18 Validates that the given array is not null and has at least one element. @param array the argument reference to validate. @param argName the name of the argument being validated.
19 Validates that the given array is not null and has at least one element. @param array the argument reference to validate. @param argName the name of the argument being validated.
20 Validates that the given buffer is not null and has non-zero capacity. @param <T> the type of iterable's elements. @param iter the argument reference to validate. @param argName the name of the argument being validated.
21 {@inheritDoc}. The default impl just calls {@code FileSystem.delete(path, false)} on the single path in the list.
22 Apply a function to an object which may be an IOStatisticsSnapshot. @param <T> return type @param source statistics snapshot @param fun function to invoke if {@code source} is valid. @return the applied value @throws UncheckedIOException Any IO exception. @throws IllegalArgumentException if the supplied class is not a snapshot
23 Create a FlagSet. @param enumClass class of enum @param prefix prefix (with trailing ".") for path capabilities probe @param flags flags. A copy of these are made.
24 Close this FileSystem instance. Will release any held locks, delete all files queued for deletion through calls to {@link #deleteOnExit(Path)}, and remove this FS instance from the cache, if cached. After this operation, the outcome of any method call on this FileSystem instance, or any input/output stream created by it is <i>undefined</i>. @throws IOException IO failure
25 Compare this FileStatus to another FileStatus based on lexicographical order of path. This method was added back by HADOOP-14683 to keep binary compatibility. @param o the FileStatus to be compared. @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object. @throws ClassCastException if the specified object is not FileStatus
26 Compare this FileStatus to another FileStatus @param o the FileStatus to be compared. @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object.
27 convert an array of FileStatus to an array of Path. If stats if null, return path @param stats an array of FileStatus objects @param path default path to return in stats is null @return an array of paths corresponding to the input
28 Declare that this filesystem connector is always read only. {@inheritDoc}
29 Get a JSON serializer for this class. @return a serializer.
30 Publish the IOStatistics as a set of storage statistics. This is dynamic. @param name storage statistics name. @param scheme FS scheme; may be null. @param source IOStatistics source. @return a dynamic storage statistics object.
31 Get the StorageStatistics for this FileSystem object. These statistics are per-instance. They are not shared with any other FileSystem object. <p>This is a default method which is intended to be overridden by subclasses. The default implementation returns an empty storage statistics object.</p> @return The StorageStatistics for this FileSystem instance. Will never be null.
32 @param path for the exception
33 @param path for the exception
34 @param path for the exception
35 @param path for the exception
36 Set the size of the buffer to be used. @param bufSize buffer size. @return Generics Type B.
37 Set replication factor. @param replica replica. @return Generics Type B.
38 Set block size. @param blkSize block size. @return B Generics Type.
39 Create the parent directory if they do not exist. @return B Generics Type.
40 Create an FSDataOutputStream at the specified path. @return return Generics Type B.
41 Set to true to overwrite the existing file. Set it to false, an exception will be thrown when calling {@link #build()} if the file exists. @param overwrite overrite. @return Generics Type B.
42 Append to an existing file (optional operation). @return Generics Type B.
43 Set the hosts hosting this block. @param hosts hosts array. @throws IOException If an I/O error occurred.
44 Set the hosts hosting a cached replica of this block. @param cachedHosts cached hosts.
45 Set the names (host:port) hosting this block. @param names names. @throws IOException If an I/O error occurred.
46 Set the network topology paths of the hosts. @param topologyPaths topology paths. @throws IOException If an I/O error occurred.
47 True iff the named path is a regular file. Note: Avoid using this method. Instead reuse the FileStatus returned by {@link #getFileStatus(Path)} or listStatus() methods. @param f path to check @throws IOException IO failure @deprecated Use {@link #getFileStatus(Path)} instead @return if f is file true, not false.
48 Takes an IOException, file/directory path, and method name and returns an IOException with the input exception as the cause and also include the file,method details. The new exception provides the stack trace of the place where the exception is thrown and some extra diagnostics information. Return instance of same exception if exception class has a public string constructor; Otherwise return an PathIOException. InterruptedIOException and PathIOException are returned unwrapped. @param path file/directory path @param methodName method name @param exception the caught exception. @return an exception to throw
49 Seek to the next sync mark past a given position. @param position position. @throws IOException raised on errors performing I/O.
50 Re-positions the reader before its first key. @throws IOException raised on errors performing I/O.
51 Register the expressions with the expression factory.
52 Register the command classes used by the fs subcommand @param factory where to register the class
53 Expand globs in the given <code>filePattern</code> into a collection of file patterns so that in the expanded set no file pattern has a slash character ("/") in a curly bracket pair. <p> Some examples of how the filePattern is expanded:<br> <pre> <b> filePattern - Expanded file pattern </b> {a/b} - a/b /}{a/b} - /}a/b p{a/b,c/d}s - pa/bs, pc/ds {a/b,c/d,{e,f}} - a/b, c/d, {e,f} {a/b,c/d}{e,f} - a/b{e,f}, c/d{e,f} {a,b}/{b,{c/d,e/f}} - {a,b}/b, {a,b}/c/d, {a,b}/e/f {a,b}/{c/\d} - {a,b}/c/d </pre> @param filePattern file pattern. @return expanded file patterns @throws IOException raised on errors performing I/O.
54 Filter files/directories in the given path using the user-supplied path filter. <p> Does not guarantee to return the List of files/directories status in a sorted order. @param f a path name @param filter the user-supplied path filter @return an array of FileStatus objects for the files under the given path after applying the filter @throws FileNotFoundException when the path does not exist @throws IOException see specific implementation
55 Filter files/directories in the given list of paths using user-supplied path filter. <p> Does not guarantee to return the List of files/directories status in a sorted order. @param files a list of paths @param filter the user-supplied path filter @return a list of statuses for the files under the given paths after applying the filter @throws FileNotFoundException when the path does not exist @throws IOException see specific implementation
56 Requests a delegation token using the configured <code>Authenticator</code> for authentication. @param url the URL to get the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token being used for the user where the Delegation token will be stored. @param renewer the renewer user. @return a delegation token. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
57 Renews a delegation token from the server end-point using the configured <code>Authenticator</code> for authentication. @param url the URL to renew the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to renew. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred. @return delegation token long value.
58 Cancels a delegation token from the server end-point. It does not require being authenticated by the configured <code>Authenticator</code>. @param url the URL to cancel the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to cancel. @throws IOException if an IO error occurred.
59 Create a FileEncryptionInfo. @param suite CipherSuite used to encrypt the file @param edek encrypted data encryption key (EDEK) of the file @param iv initialization vector (IV) used to encrypt the file @param keyName name of the key used for the encryption zone @param ezKeyVersionName name of the KeyVersion used to encrypt the encrypted data encryption key. @param version version.
60 Set permission for the file.
61 Set checksum opt.
62 Construct from a non-null IOException. @param cause inner cause @throws NullPointerException if the cause is null.
63 Construct an instance with the given function. @param fn function to invoke.
64 Construct bonded to a file context. @param fc file context.
65 Construct bonded to a filesystem. @param fs file system.
66 Set permission for the file. @param perm permission. @return B Generics Type.
67 Set the facility of reporting progress. @param prog progress. @return B Generics Type.
68 Set checksum opt. @param chksumOpt check sum opt. @return Generics Type B.
69 Validate args to a write command. These are the same validation checks expected for any implementation of {@code OutputStream.write()}. @param b byte array containing data. @param off offset in array where to start. @param len number of bytes to be written. @throws NullPointerException for a null buffer @throws IndexOutOfBoundsException if indices are out of range @throws IOException raised on errors performing I/O.
70 Compare strings locale-freely by using String#equalsIgnoreCase. @param s1 Non-null string to be converted @param s2 string to be converted @return the str, converted to uppercase.
71 The callbacks and watchers pass a reference to the ZK client which made the original call. We don't want to take action based on any callbacks from prior clients after we quit the election. @param ctx the ZK client passed into the watcher @return true if it matches the current client
72 Get the statistics for a particular file system. @param scheme scheme. @param cls the class to lookup @return a statistics object @deprecated use {@link #getGlobalStorageStatistics()}
73 Copies from one stream to another. @param in InputStrem to read from @param out OutputStream to write to @param buffSize the size of the buffer @param close whether or not close the InputStream and OutputStream at the end. The streams are closed in the finally clause. @throws IOException raised on errors performing I/O.
74 Copies count bytes from one stream to another. @param in InputStream to read from @param out OutputStream to write to @param count number of bytes to copy @param close whether to close the streams @throws IOException if bytes can not be read or written
75 Performs some disk IO by writing to a new file in the given directory and sync'ing file contents to disk. This increases the likelihood of catching catastrophic disk/controller failures sooner. @param dir directory to be checked. @throws DiskErrorException if we hit an error while trying to perform disk IO against the file.
76 Return true if any storage type quota has been set. @return if any storage type quota has been set true, not false.
77 Return true if any storage type consumption information is available. @return if any storage type consumption information is available, not false.
78 Compare if this object is equal to another object @param o the object to be compared. @return true if two file status has the same path name; false if not.
79 Returns a hash code value for the object, which is defined as the hash code of the path name. @return a hash code value for the path name.
80 Set the values to 0.
81 Set the statistic to the values of another. Synchronized. @param other the source.
82 Convert IOStatistics to a string form. @param statistics A statistics instance. @return string value or the empty string if null
83 Given a map, produce a string with all the values, sorted. Needs to create a treemap and insert all the entries. @param sb string buffer to append to @param type type (for output) @param map map to evaluate @param <E> type of values of the map
84 Initiate a duration tracking operation by creating/returning an object whose {@code close()} call will update the statistics. The expected use is within a try-with-resources clause. @param key statistic key @return an object to close after an operation completes.
85 Take a snapshot of the current counter values and return an iterator over them. @return all the counter statistics.
86 Add a duration to the min/mean/max statistics, using the given prefix and adding a suffix for each specific value. <p> The update is non -atomic, even though each individual statistic is updated thread-safely. If two threads update the values simultaneously, at the end of each operation the state will be correct. It is only during the sequence that the statistics may be observably inconsistent. </p> @param prefix statistic prefix @param durationMillis duration in milliseconds.
87 Build the IOStatistics instance. @return an instance. @throws IllegalStateException if the builder has already been built.
88 Add a new evaluator to the counter statistics. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
89 Add a new evaluator to the gauge statistics. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
90 Add a new evaluator to the minimum statistics. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
91 Add a new evaluator to the maximum statistics. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
92 Add a new evaluator to the mean statistics. This is a function which must return the mean and the sample count. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
93 Register an interrupt handler. @param signalName signal name @throws IllegalArgumentException if the registration failed
94 Take a snapshot. @return a map snapshot.
95 Take a snapshot of a supplied map, where the copy option simply uses the existing value. For this to be safe, the map must refer to immutable objects. @param source source map @param <E> type of values. @return a new map referencing the same values.
96 Create a new empty snapshot. A new one is always created for isolation. @return a statistics snapshot
97 Constructor. @param threadId thread ID @param id instance ID.
98 Create a snapshot statistics instance ready to aggregate data. The instance can be serialized, and its {@code toString()} method lists all the values. @return an empty snapshot
99 Static probe to check if the thread-level IO statistics enabled. @return true if the thread-level IO statistics are enabled.
100 Ask the inner stream for their IOStatistics. @return any IOStatistics offered by the inner stream.
101 Return any IOStatistics offered by the inner stream. @return inner IOStatistics or null
102 Get the IO Statistics of the nested stream, falling back to null if the stream does not implement the interface {@link IOStatisticsSource}. @return an IOStatistics instance or null
103 Get the IO Statistics of the nested stream, falling back to null if the stream does not implement the interface {@link IOStatisticsSource}. @return an IOStatistics instance or null
104 Get the IO Statistics of the nested stream, falling back to null if the stream does not implement the interface {@link IOStatisticsSource}. @return an IOStatistics instance or null
105 Get the IO Statistics of the nested stream, falling back to empty statistics if the stream does not implement the interface {@link IOStatisticsSource}. @return an IOStatistics instance.
106 Return any IOStatistics provided by the underlying stream. @return IO stats from the inner stream.
107 Return any IOStatistics provided by the underlying stream. @return IO stats from the inner stream.
108 Return any IOStatistics provided by the source. @return IO stats from the input stream.
109 Implementation of chunked verification specifically on byte arrays. This is to avoid the copy when dealing with ByteBuffers that have array backing.
110 Calculate the counter and iv, update the decryptor.
111 Do the encryption, input is {@link #inBuffer} and output is {@link #outBuffer}.
112 Same as this(0, 0, null)
113 Same as this(0, 0, null)
114 Construct the glob pattern object with a glob pattern string @param globPattern the glob pattern string
115 Convert a os-native filename to a path that works for the shell. @param file The filename to convert @return The unix pathname @throws IOException on windows, there can be problems with the subprocess
116 Convert a os-native filename to a path that works for the shell and avoids script injection attacks. @param file The filename to convert @return The unix pathname @throws IOException on windows, there can be problems with the subprocess
117 Given a stream input it will unzip the it in the unzip directory. passed as the second parameter @param inputStream The zip file as input @param toDir The unzip directory where to unzip the zip file. @throws IOException an exception occurred
118 Given a File input it will unzip it in the unzip directory. passed as the second parameter @param inFile The zip file as input @param unzipDir The unzip directory where to unzip the zip file. @throws IOException An I/O exception has occurred
119 Logout and disconnect the given channel. @param client @throws IOException
120 Shutdown the connection pool and close all open connections.
121 Resets existing buffer with a new one of the specified size. @param size size.
122 Copy constructor. @param other The input Statistics object which is cloned.
123 Get the total number of bytes read. @return the number of bytes
124 Get the total number of bytes written. @return the number of bytes
125 Get the number of file system read operations such as list files. @return number of read operations
126 Get the number of large file system read operations such as list files under a large directory. @return number of large read operations
127 Get the number of file system write operations such as create, append rename etc. @return number of write operations
128 Get total time taken in ms for bytes read from remote. @return time taken in ms for remote bytes read.
129 Get all statistics data. MR or other frameworks can use the method to get all statistics at once. @return the StatisticsData
130 Get the total number of bytes read on erasure-coded files. @return the number of bytes
131 Resets all statistics to 0. In order to reset, we add up all the thread-local statistics data, and set rootData to the negative of that. This may seem like a counterintuitive way to reset the statistics. Why can't we just zero out all the thread-local data? Well, thread-local data can only be modified by the thread that owns it. If we tried to modify the thread-local data from this thread, our modification might get interleaved with a read-modify-write operation done by the thread that owns the data. That would result in our update getting lost. The approach used here avoids this problem because it only ever reads (not writes) the thread-local data. Both reads and writes to rootData are done under the lock, so we're free to modify rootData from any thread that holds the lock.
132 Validate the CreateFlag for create operation @param path Object representing the path; usually String or {@link Path} @param pathExists pass true if the path exists in the file system @param flag set of CreateFlag @throws IOException on error @throws HadoopIllegalArgumentException if the CreateFlag is invalid
133 Validate the CreateFlag for the append operation. The flag must contain APPEND, and cannot contain OVERWRITE. @param flag enum set flag.
134 Get the URI for the file system based on the given URI. The path, query part of the given URI is stripped out and default file system port is used to form the URI. @param uri FileSystem URI. @param authorityNeeded if true authority cannot be null in the URI. If false authority must be null. @param defaultPort default port to use if port is not specified in the URI. @return URI of the file system @throws URISyntaxException <code>uri</code> has syntax error
135 Construct an instance of known type but no value yet for use with type-specific wrapper classes. @param componentType componentType.
136 Parse ACL permission string, partially borrowed from ZooKeeperMain private method
137 A helper method for processing user input and default value to create a combined checksum option. @param defaultOpt Default checksum option @param userOpt User-specified checksum option @return ChecksumOpt.
138 Return a canonicalized form of this FileSystem's URI. The default implementation simply calls {@link #canonicalizeUri(URI)} on the filesystem's own URI, so subclasses typically only need to implement that method. @see #canonicalizeUri(URI) @return the URI of this filesystem.
139 Constructor, deprecated by ContentSummary.Builder This constructor implicitly set spaceConsumed the same as length. spaceConsumed and length must be set explicitly with ContentSummary.Builder. @param length length. @param fileCount file count. @param directoryCount directory count.
140 Returns a status object describing the use and capacity of the filesystem. If the filesystem has multiple partitions, the use and capacity of the root partition is reflected. @return a FsStatus object @throws IOException see specific implementation
141 Instantiate. <p> All maps/enums passed down are copied into thread safe equivalents. as their origin is unknown and cannot be guaranteed to not be shared. <p> Context and operationId are expected to be well formed numeric/hex strings, at least adequate to be used as individual path elements in a URL.
142 Releases a previously acquired resource. @param data the {@code BufferData} instance to release. @throws IllegalArgumentException if data is null. @throws IllegalArgumentException if data cannot be released due to its state.
143 Instantiate without collecting executor aquisition duration information. @param executorDelegatee Executor to delegate to @param permitCount number of permits into the queue permitted @param fair should the semaphore be "fair"
144 If no blocks were released after calling releaseDoneBlocks() a few times, we may end up waiting forever. To avoid that situation, we try releasing a 'ready' block farthest away from the given block.
145 Gets the current position within this file relative to the start of the associated buffer. @return the current position within this file relative to the start of the associated buffer.
146 Determines whether the given absolute position lies within the current buffer. @param pos the position to check. @return true if the given absolute position lies within the current buffer, false otherwise.
147 Gets the start of the current block's absolute offset. @return the start of the current block's absolute offset.
148 Get the current thread's IOStatisticsContext instance. If no instance is present for this thread ID, create one using the factory. @return instance of IOStatisticsContext.
149 Set the IOStatisticsContext for the current thread. @param statisticsContext IOStatistics context instance for the current thread. If null, the context is reset.
150 Merge sorted ranges to optimize the access from the underlying file system. The motivations are that: <ul> <li>Upper layers want to pass down logical file ranges.</li> <li>Fewer reads have better performance.</li> <li>Applications want callbacks as ranges are read.</li> <li>Some file systems want to round ranges to be at checksum boundaries.</li> </ul> @param sortedRanges already sorted list of ranges based on offset. @param chunkSize round the start and end points to multiples of chunkSize @param minimumSeek the smallest gap that we should seek over in bytes @param maxSize the largest combined file range in bytes @return the list of sorted CombinedFileRanges that cover the input
151 Find the checksum ranges that correspond to the given data ranges. @param dataRanges the input data ranges, which are assumed to be sorted and non-overlapping @return a list of AsyncReaderUtils.CombinedFileRange that correspond to the checksum ranges
152 Creates a case sensitive name expression.
153 Applies child expressions to the {@link PathData} item. If all pass then returns {@link Result#PASS} else returns the result of the first non-passing expression.
154 Returns the current find options, creating them if necessary.
155 Parse parameters from the given list of args. The list is destructively modified to remove the options. @param args as a list of input arguments
156 The long usage suitable for help output @return text of the usage
157 Display an warning string prefaced with the command name. @param message warning message to display
158 The short usage suitable for the synopsis @return "name options"
159 Creates a new ScopedAclEntries from the given list. It is assumed that the list is already sorted such that all access entries precede all default entries. @param aclEntries List&lt;AclEntry&gt; to separate
160 Render the table to a stream. @param out PrintStream for output
161 @param allow If true, resolve references to this entity anywhere in the namespace. @return Handle option encoding parameter.
162 @param allow If true, resolve references to this entity even if it has been modified. @return Handle option encoding parameter.
163 Create an instance with no minimum interval between runs; stderr is not merged with stdout.
164 Generate a DelegationTokenAuthenticatedURL.Token from the given generic typed delegation token. @param dToken The delegation token. @return The DelegationTokenAuthenticatedURL.Token, with its delegation token set to the delegation token passed in.
165 List files and its block locations in a directory.
166 Open a file by delegating to {@link FileSystem#openFileWithOptions(Path, org.apache.hadoop.fs.impl.OpenFileParameters)}. @param path path to the file @param parameters open file parameters from the builder. @return a future which will evaluate to the opened file.ControlAlpha @throws IOException failure to resolve the link. @throws IllegalArgumentException unknown mandatory key
167 @return Gets the fallback file system configured. Usually, this will be the default cluster.
168 Continues a multiple-part encryption or decryption operation. The data is encrypted or decrypted, depending on how this cipher was initialized. <p> All <code>input.remaining()</code> bytes starting at <code>input.position()</code> are processed. The result is stored in the output buffer. <p> Upon return, the input buffer's position will be equal to its limit; its limit will not have changed. The output buffer's position will have advanced by n, when n is the value returned by this method; the output buffer's limit will not have changed. <p> If <code>output.remaining()</code> bytes are insufficient to hold the result, a <code>ShortBufferException</code> is thrown. @param input the input ByteBuffer @param output the output ByteBuffer @return int number of bytes stored in <code>output</code> @throws ShortBufferException if there is insufficient space in the output buffer
169 Finishes a multiple-part operation. The data is encrypted or decrypted, depending on how this cipher was initialized. <p> The result is stored in the output buffer. Upon return, the output buffer's position will have advanced by n, where n is the value returned by this method; the output buffer's limit will not have changed. </p> If <code>output.remaining()</code> bytes are insufficient to hold the result, a <code>ShortBufferException</code> is thrown. <p> Upon finishing, this method resets this cipher object to the state it was in when previously initialized. That is, the object is available to encrypt or decrypt more data. </p> If any exception is thrown, this cipher object need to be reset before it can be used again. @param output the output ByteBuffer @return int number of bytes stored in <code>output</code> @throws ShortBufferException if there is insufficient space in the output buffer. @throws IllegalBlockSizeException This exception is thrown when the length of data provided to a block cipher is incorrect. @throws BadPaddingException This exception is thrown when a particular padding mechanism is expected for the input data but the data is not padded properly.
170 interceptorSettingsString string should be like ${type}:${string}, e.g. replaceresolveddstpath:word1,word2. @param interceptorSettingsString @return Return interceptor based on setting or null on bad/unknown config.
171 Normalize a path string to use non-duplicated forward slashes as the path separator and remove any trailing path separators. @param scheme the URI scheme. Used to deduce whether we should replace backslashes or not @param path the scheme-specific part @return the normalized path string
172 Determine whether a given path string represents an absolute path on Windows. e.g. "C:/a/b" is an absolute path. "C:a/b" is not. @param pathString the path string to evaluate @param slashed true if the given path is prefixed with "/" @return true if the supplied path looks like an absolute path with a Windows drive-specifier
173 Returns true if the path component (i.e. directory) of this URI is absolute. @return whether this URI's path is absolute
174 the hash of the path p inside the filesystem @param p the path in the harfilesystem @return the hash code of the path.
175 Validate a path. @param path path to check.
176 Return the next ID suffix to use when creating the log file. This method will look at the files in the directory, find the one with the highest ID suffix, and 1 to that suffix, and return it. This approach saves a full linear probe, which matters in the case where there are a large number of log files. @param initial the base file path @param lastId the last ID value that was used @return the next ID to try @throws IOException thrown if there's an issue querying the files in the directory
177 Skips over and discards <code>n</code> bytes of data from the input stream. <p>This method may skip more bytes than are remaining in the backing file. This produces no exception and the number of bytes skipped may include some number of bytes that were beyond the EOF of the backing file. Attempting to read from the stream after skipping past the end will result in -1 indicating the end of the file. <p>If <code>n</code> is negative, no bytes are skipped. @param n the number of bytes to be skipped. @return the actual number of bytes skipped. @exception IOException if an I/O error occurs. ChecksumException if the chunk to skip to is corrupted
178 Perform a fallback read. @param stream input stream. @param bufferPool bufferPool. @param maxLength maxLength. @throws IOException raised on errors performing I/O. @return byte buffer.
179 Rest the context; will set the standard options again. Primarily for testing.
180 Demand invoked to create the instance for this thread. @return an instance.
181 Construct by the given {@link FsAction}. @param u user action @param g group action @param o other action
182 Construct by the given mode. @param mode mode. @see #toShort()
183 Create and initialize a {@link FsPermission} from {@link DataInput}. @param in data input. @throws IOException raised on errors performing I/O. @return FsPermission.
184 Get the effective permission for the AclEntry @param entry AclEntry to get the effective action @return FsAction.
185 Create an immutable {@link PermissionStatus} object. @param user user. @param group group. @param permission permission. @return PermissionStatus.
186 Parses a string representation of an ACL spec into a list of AclEntry objects. Example: "user::rwx,user:foo:rw-,group::r--,other::---" The expected format of ACL entries in the string parameter is the same format produced by the {@link #toStringStable()} method. @param aclSpec String representation of an ACL spec. @param includePermission for setAcl operations this will be true. i.e. AclSpec should include permissions.<br> But for removeAcl operation it will be false. i.e. AclSpec should not contain permissions.<br> Example: "user:foo,group:bar" @return Returns list of {@link AclEntry} parsed
187 Create from masked and unmasked modes. @param masked masked. @param unmasked unmasked. @return FsCreateModes.
188 Prints a single extended ACL entry. If the mask restricts the permissions of the entry, then also prints the restricted version as the effective permissions. The mask applies to all named entries and also the unnamed group entry. @param aclStatus AclStatus for the path @param fsPerm FsPermission for the path @param entry AclEntry extended ACL entry to print
189 Returns an arraylist of strings. @param str the comma separated string values @return the arraylist of the comma separated string values
190 Get the current buffer position. @return the buffer position
191 Check if there is data left. @return true if there is data remaining in the buffer.
192 Switch to the upload state and return a stream for uploading. Base class calls {@link #enterState(DestState, DestState)} to manage the state machine. @return the stream. @throws IOException trouble
193 Enter the closed state. @return true if the class was in any other state, implying that the subclass should do its close operations.
194 Flush operation will flush to disk. @throws IOException IOE raised on FileOutputStream
195 Get the statistics for a particular file system @param uri the uri to lookup the statistics. Only scheme and authority part of the uri are used as the key to store and lookup. @return a statistics object
196 Get the current directory index for the given configuration item. @return the current directory index for the given configuration item.
197 create a sync point. @throws IOException raised on errors performing I/O.
198 @return Returns the current length of the output file. <p>This always returns a synchronized position. In other words, immediately after calling {@link SequenceFile.Reader#seek(long)} with a position returned by this method, {@link SequenceFile.Reader#next(Writable)} may be called. However the key may be earlier in the file than key last written when this method was called (e.g., with block-compression, it may be the first key in the block that was being written when this method was called).</p> @throws IOException raised on errors performing I/O.
199 Get the current position in file. @return The current byte offset in underlying file. @throws IOException
200 Return the {@link ContentSummary} of a given {@link Path}. @param f path to use @throws FileNotFoundException if the path does not resolve @throws IOException IO failure @return content summary.
201 Build ACL from the given array of strings. The strings contain comma separated values. @param userGroupStrings build ACL from array of Strings
202 Given a comma separated list of enum values, trim the list, map to enum values in the message (case insensitive) and return the set. Special handling of "*" meaning: all values. @param key Configuration object key -used in error messages. @param valueString value from Configuration @param enumClass class of enum @param ignoreUnknown should unknown values be ignored? @param <E> enum type @return a mutable set of enum values parsed from the valueString, with any unknown matches stripped if {@code ignoreUnknown} is true. @throws IllegalArgumentException if one of the entries was unknown and ignoreUnknown is false, or there are two entries in the enum which differ only by case.
203 Verify that that a service is in a given state. @param expectedState the desired state @throws ServiceStateException if the service state is different from the desired state
204 Construct the service. @param name service name
205 Check that a state tansition is valid and throw an exception if not @param name name of the service (can be null) @param state current state @param proposed proposed new state
206 Generate an exception announcing a failure to create the service. @param exception inner exception. @return a new exception, with the exit code {@link LauncherExitCodes#EXIT_SERVICE_CREATION_FAILURE}
207 Verify that all the specified filenames exist. @param filenames a list of files @throws ServiceLaunchException if a file is not found
208 Convert an exception to an {@code ExitException}. This process may just be a simple pass through, otherwise a new exception is created with an exit code, the text of the supplied exception, and the supplied exception as an inner cause. <ol> <li>If is already the right type, pass it through.</li> <li>If it implements {@link ExitCodeProvider#getExitCode()}, the exit code is extracted and used in the new exception.</li> <li>Otherwise, the exit code {@link LauncherExitCodes#EXIT_EXCEPTION_THROWN} is used.</li> </ol> @param thrown the exception thrown @return an {@code ExitException} with a status code
209 Create an instance. @param service the service
210 Failure handling: record the exception that triggered it -if there was not one already. Services are free to call this themselves. @param exception the exception
211 Add a state change event to the lifecycle history
212 Stop the services in reverse order @param numOfServicesStarted index from where the stop should work @param stopOnlyStartedServices flag to say "only start services that are started, not those that are NOTINITED or INITED. @throws RuntimeException the first exception raised during the stop process -<i>after all services are stopped</i>
213 Stop a service; if it is null do nothing. Exceptions are caught and logged at warn level. (but not Throwables). This operation is intended to be used in cleanup operations @param service a service; may be null @return any exception that was caught; null if none was.
214 Compare two UTF8s.
215 Returns true iff <code>o</code> is a UTF8 with the same contents.
216 Compares this object with the specified object for order.
217 Compare bytes from {#getBytes()}. @see org.apache.hadoop.io.WritableComparator#compareBytes(byte[],int,int,byte[],int,int)
218 Compare bytes from {#getBytes()} to those provided. @param other other. @param off off. @param len len. @return compareBytes.
219 Return a hash of the bytes returned from {#getBytes()}. @see org.apache.hadoop.io.WritableComparator#hashBytes(byte[],int)
220 Parse a double from a byte array. @param bytes bytes. @param start start. @return double from a byte array.
221 Change the size of the buffer. The values in the old range are preserved and any new values are undefined. The capacity is changed if it is necessary. @param size The new number of bytes
222 Platform independent implementation for {@link File#canRead()} @param f input file @return On Unix, same as {@link File#canRead()} On Windows, true if process has read access on the path
223 Platform independent implementation for {@link File#canWrite()} @param f input file @return On Unix, same as {@link File#canWrite()} On Windows, true if process has write access on the path
224 Platform independent implementation for {@link File#canExecute()} @param f input file @return On Unix, same as {@link File#canExecute()} On Windows, true if process has execute access on the path
225 @return Return the singleton instance for the current process.
226 Get the maximum number of bytes that can be locked into memory at any given point. @return 0 if no bytes can be locked into memory; Long.MAX_VALUE if there is no limit; The number of bytes that can be locked into memory otherwise.
227 Implementation of chunked calculation specifically on byte arrays. This is to avoid the copy when dealing with ByteBuffers that have array backing. @param data data. @param dataOffset dataOffset. @param dataLength dataLength. @param sums sums. @param sumsOffset sumsOffset.
228 @return Create the specified File for write access, ensuring that it does not exist. @param f the file that we want to create @param permissions we want to have on the file (if security is enabled) @throws AlreadyExistsException if the file already exists @throws IOException if any other error occurred
229 Clean direct buffer pool
230 Forcibly free the direct buffers.
231 Returns the file stat for a file descriptor. @param fd file descriptor. @return the file descriptor file stat. @throws IOException thrown if there was an IO error while obtaining the file stat.
232 Return the file stat for a file path. @param path file path @return the file stat @throws IOException thrown if there is an IO error while obtaining the file stat
233 Create a BoundedByteArrayOutputStream with the specified capacity and limit. @param capacity The capacity of the underlying byte array @param limit The maximum limit upto which data can be written
234 Construct a new EnumSetWritable. Argument <tt>value</tt> should not be null or empty. @param value enumSet value.
235 Writes bytes from a InputStream directly into the buffer. @param in input in. @param length input length. @throws IOException raised on errors performing I/O.
236 Streaming access to the key. Useful for desrializing the key into user objects. @return The input stream.
237 Modify the writable to the value from the newValue. @param obj the object to read into @param newValue the string with the url-safe base64 encoded bytes @throws IOException
238 Optimization hook. Override this to make SequenceFile.Sorter's scream. <p>The default implementation reads the data into two {@link WritableComparable}s (using {@link Writable#readFields(DataInput)}, then calls {@link #compare(WritableComparable,WritableComparable)}.
239 Given a BlockGroup, tell if any of the missing blocks can be recovered, to be called by ECManager @param blockGroup a blockGroup that may contain erased blocks but not sure recoverable or not @return true if any erased block recoverable, false otherwise
240 Get the number of erased blocks in the block group. @param blockGroup blockGroup. @return number of erased blocks
241 Get indexes of erased blocks from inputBlocks @param inputBlocks inputBlocks. @return indexes of erased blocks from inputBlocks
242 Check and ensure the buffers are of the desired length and type, direct buffers or not. @param buffers the buffers to check
243 Check and ensure the buffers are of the desired length. @param buffers the buffers to check
244 The constructor with all the necessary info. @param inputBlocks inputBlocks. @param erasedIndexes the indexes of erased blocks in inputBlocks array @param outputBlocks outputBlocks. @param rawDecoder underlying RS decoder for hitchhiker decoding @param rawEncoder underlying XOR encoder for hitchhiker decoding
245 Check and validate decoding parameters, throw exception accordingly. The checking assumes it's a MDS code. Other code can override this. @param inputs input buffers to check @param erasedIndexes indexes of erased units in the inputs array @param outputs output buffers to check
246 The constructor with all the necessary info. @param inputBlocks inputBlocks. @param outputBlocks outputBlocks. @param rsRawEncoder underlying RS encoder for hitchhiker encoding @param xorRawEncoder underlying XOR encoder for hitchhiker encoding
247 Check and validate decoding parameters, throw exception accordingly. @param inputs input buffers to check @param outputs output buffers to check
248 Compute the sum of two polynomials. The index in the array corresponds to the power of the entry. For example p[0] is the constant term of the polynomial p. @param p input polynomial @param q input polynomial @return polynomial represents p+q
249 Compute the multiplication of two polynomials. The index in the array corresponds to the power of the entry. For example p[0] is the constant term of the polynomial p. @param p input polynomial @param q input polynomial @return polynomial represents p*q
250 Perform Gaussian elimination on the given matrix. This matrix has to be a fat matrix (number of rows &gt; number of columns). @param matrix matrix.
251 Print data in hex format in an array of chunks. @param header header. @param chunks chunks.
252 Initialize the output buffers with ZERO bytes.
253 Convert an array of this chunks to an array of ByteBuffers @param chunks chunks to convertToByteArrayState into buffers @return an array of ByteBuffers
254 Initialize the output buffers with ZERO bytes.
255 Get the object performs Galois field arithmetic with default setting. @return GaloisField.
256 Create a {@link BlockCompressorStream}. @param out stream @param compressor compressor to be used @param bufferSize size of buffer @param compressionOverhead maximum 'overhead' of the compression algorithm with given bufferSize
257 Creates a new decompressor. @param bufferSize bufferSize.
258 Creates a new compressor with the default buffer size.
259 Find the relevant compression codec for the codec's canonical class name or by codec alias and returns its implemetation class. <p> Codec aliases are case insensitive. <p> The code alias is the short class name (without the package name). If the short class name ends with 'Codec', then there are two aliases for the codec, the complete short class name and the short class name without the 'Codec' ending. For example for the 'GzipCodec' codec class name the alias are 'gzip' and 'gzipcodec'. @param codecName the canonical class name of the codec @return the codec class
260 Get a {@link Compressor} for the given {@link CompressionCodec} from the pool or a new one. @param codec the <code>CompressionCodec</code> for which to get the <code>Compressor</code> @param conf the <code>Configuration</code> object which contains confs for creating or reinit the compressor @return <code>Compressor</code> for the given <code>CompressionCodec</code> from the pool or a new one
261 Get a {@link Decompressor} for the given {@link CompressionCodec} from the pool or a new one. @param codec the <code>CompressionCodec</code> for which to get the <code>Decompressor</code> @return <code>Decompressor</code> for the given <code>CompressionCodec</code> the pool or a new one
262 Return the {@link Compressor} to the pool. @param compressor the <code>Compressor</code> to be returned to the pool
263 Return the {@link Decompressor} to the pool. @param decompressor the <code>Decompressor</code> to be returned to the pool
264 Get the type of {@link Compressor} needed by this {@link CompressionCodec}. @return the type of compressor needed by this codec.
265 Get the type of {@link Decompressor} needed by this {@link CompressionCodec}. @return the type of decompressor needed by this codec.
266 Creates a new compressor with the default compression level. Compressed data will be generated in ZLIB format.
267 Creates a new compressor, taking settings from the configuration. @param conf configuration.
268 Prepare the compressor to be used in a new stream with settings defined in the given Configuration. It will reset the compressor's compression level and compression strategy. @param conf Configuration storing new settings
269 Parse the gzip header (assuming we're in the appropriate state). In order to deal with degenerate cases (e.g., user buffer is one byte long), we copy (some) header bytes to another buffer. (Filename, comment, and extra-field bytes are simply skipped.)</p> See http://www.ietf.org/rfc/rfc1952.txt for the gzip spec. Note that no version of gzip to date (at least through 1.4.0, 2010-01-20) supports the FHCRC header-CRC16 flagbit; instead, the implementation treats it as a multi-file continuation flag (which it also doesn't support). :-( Sun's JDK v6 (1.6) supports the header CRC, however, and so do we.
270 Serialize. Write this object to out length uses zero-compressed encoding. @see Writable#write(DataOutput)
271 Reads a zero-compressed encoded integer from input stream and returns it. @param stream Binary input stream @throws IOException raised on errors performing I/O. @return deserialized integer from stream.
272 Reads an integer from the input stream and returns it. This function validates that the integer is between [lower, upper], inclusive. @param stream Binary input stream @param lower input lower. @param upper input upper. @throws IOException raised on errors performing I/O. @return deserialized integer from stream.
273 Construct from a string. @param string input string.
274 Finds any occurrence of <code>what</code> in the backing buffer, starting as position <code>start</code>. The starting position is measured in bytes and the return value is in terms of byte position in the buffer. The backing buffer is not converted to a string for this operation. @param what input what. @param start input start. @return byte position of the first occurrence of the search string in the UTF-8 buffer or -1 if not found
275 Write a UTF8 encoded string to out. @param out input out. @param s input s. @throws IOException raised on errors performing I/O. @return a UTF8 encoded string to out.
276 @return Write a UTF8 encoded string with a maximum size to out. @param out input out. @param s input s. @param maxLength input maxLength. @throws IOException raised on errors performing I/O.
277 Set to a utf8 byte array. If the length of <code>utf8</code> is <em>zero</em>, actually clear {@link #bytes} and any existing data is lost. @param utf8 input utf8.
278 Copy a text. @param other other.
279 Read a line terminated by one of CR, LF, or CRLF.
280 Read a line terminated by a custom delimiter.
281 default constructor.
282 Default constructor.
283 Constructor. <p> Builds a key with a default weight. @param value The byte value of <i>this</i> key.
284 Construct a hash value for a byte array. @param data data. @return MD5Hash.
285 Construct a hash value for a String. @param utf8 utf8. @return MD5Hash.
286 Constructs an MD5Hash from a hex string. @param hex input hex.
287 <p> Keep trying forever with a fixed time between attempts. </p> @param sleepTime sleepTime. @param timeUnit timeUnit. @return RetryPolicy.
288 <p> Keep trying a limited number of times, waiting a fixed time between attempts, and then fail by re-throwing the exception. </p> @param maxRetries maxRetries. @param sleepTime sleepTime. @param timeUnit timeUnit. @return RetryPolicy.
289 <p> Keep trying a limited number of times, waiting a growing amount of time between attempts, and then fail by re-throwing the exception. The time between attempts is <code>sleepTime</code> mutliplied by a random number in the range of [0, 2 to the number of retries) </p> @param timeUnit timeUnit. @param maxRetries maxRetries. @param sleepTime sleepTime. @return RetryPolicy.
290 <p> Keep trying a limited number of times, waiting a growing amount of time between attempts, and then fail by re-throwing the exception. The time between attempts is <code>sleepTime</code> mutliplied by the number of tries so far. </p> @param sleepTime sleepTime. @param maxRetries maxRetries. @param timeUnit timeUnit. @return RetryPolicy.
291 Starts timing for the instrumented write lock.
292 Starts timing for the instrumented lock.
293 Starts timing for the instrumented read lock. It records the time to ThreadLocal.
294 Create a proxy for an interface of implementations of that interface using the given {@link FailoverProxyProvider} and the a set of retry policies specified by method name. If no retry policy is defined for a method then a default of {@link RetryPolicies#TRY_ONCE_THEN_FAIL} is used. @param iface the interface that the retry will implement @param proxyProvider provides implementation instances whose methods should be retried @param methodNameToPolicyMap map of method names to retry policies @param defaultPolicy defaultPolicy. @param <T> T. @return the retry proxy
295 Similarly, remoteExceptionToRetry is ignored as part of hashCode since it does not affect connection failure handling.
296 remoteExceptionToRetry is ignored as part of equals since it does not affect connection failure handling.
297 @return null if nothing is added to this builder; otherwise, return an {@link IOException}
298 Get names of supported compression algorithms. The names are acceptable by TFile.Writer. @return Array of strings, each represents a supported compression algorithm. Currently, the following compression algorithms are supported. <ul> <li>"none" - No compression. <li>"lzo" - LZO compression. <li>"gz" - GZIP compression. </ul>
299 Get the name of the compression algorithm used to compress the block. @return name of the compression algorithm.
300 Read a String as a VInt n, followed by n Bytes in Text format. @param in The input stream. @return The string @throws IOException raised on errors performing I/O.
301 Reading the length of next chunk. @throws java.io.IOException when no more data is available.
302 Make a raw comparator from a string name. @param name Comparator name @return A RawComparable comparator.
303 Write out a chunk. @param chunk The chunk buffer. @param offset Offset to chunk buffer for the beginning of chunk. @param len @param last Is this the last call to flushBuffer?
304 Write out a chunk that is a concatenation of the internal buffer plus user supplied data. This will never be the last block. @param data User supplied data buffer. @param offset Offset to user data buffer. @param len User data buffer size.
305 Constructor. @param out the underlying output stream. @param size The total # of bytes to be written as a single chunk. @throws java.io.IOException if an I/O error occurs.
306 Get a Comparator object to compare Entries. It is useful when you want stores the entries in a collection (such as PriorityQueue) and perform sorting or comparison among entries based on the keys without copying out the key. @return An Entry Comparator..
307 Is cursor at the end location? @return true if the cursor is at the end location.
308 Get the location pointing to the beginning of the first key-value pair in a compressed block whose byte offset in the TFile is greater than or equal to the specified offset. @param offset the user supplied offset. @return the location to the corresponding entry; or end() if no such entry exists.
309 @see java.lang.Object#clone()
310 Copy value into user-supplied buffer. User supplied buffer must be large enough to hold the whole value. The value part of the key-value pair pointed by the current cursor is not cached and can only be examined once. Calling any of the following functions more than once without moving the cursor will result in exception: {@link #getValue(byte[])}, {@link #getValue(byte[], int)}, {@link #getValueStream}. @param buf buf. @return the length of the value. Does not require isValueLengthKnown() to be true. @throws IOException raised on errors performing I/O.
311 Set to contain the contents of a string. @param string input string.
312 Convert writables to a byte array. @param writables input writables. @return ByteArray.
313 @return Convert a string to a UTF-8 encoded byte array. @see String#getBytes(String) @param string input string.
314 Workhorse to check and write out compressed data/lengths
315 Used by child copy constructors. @param other other.
316 Append a key/value pair.
317 Get the bytes for the token identifier @return the bytes of the identifier
318 Generate a string with the url-quoted base64 encoded serialized form of the Writable. @param obj the object to serialize @return the encoded string @throws IOException
319 Move the data from the output buffer to the input buffer.
320 Return the distance between two nodes by comparing their network paths without checking if they belong to the same ancestor node by reference. It is assumed that the distance from one node to its parent is 1 The distance between two nodes is calculated by summing up their distances to their closest common ancestor. @param node1 one node @param node2 another node @return the distance between node1 and node2
321 Return a reference to the node given its string representation. Default implementation delegates to {@link #getNode(String)}. <p>To be overridden in subclasses for specific NetworkTopology implementations, as alternative to overriding the full {@link #add(Node)} method. @param node The string representation of this node's network location is used to retrieve a Node object. @return a reference to the node; null if the node is not in the tree @see #add(Node) @see #getNode(String)
322 return leaves in <i>scope</i> @param scope a path string @return leaves nodes under specific scope
323 return the number of leaves in <i>scope</i> but not in <i>excludedNodes</i> if scope starts with ~, return the number of nodes that are not in <i>scope</i> and <i>excludedNodes</i>; @param scope a path string that may start with ~ @param excludedNodes a list of nodes @return number of available nodes
324 Internal function for update empty rack number for remove or decommission a node. @param node node to be removed; can be null
325 Sort nodes array by network distance to <i>reader</i>. <p> As an additional twist, we also randomize the nodes at each network distance. This helps with load balancing when there is data skew. And it helps choose node with more fast storage type. @param reader Node where data will be read @param nodes Available replicas with the requested data @param activeLen Number of active nodes at the front of the array @param nonDataNodeReader True if the reader is not a datanode
326 Update empty rack number when add a node like recommission. @param node node to be added; can be null
327 Call {@link #transferToFully(FileChannel, long, int, LongWritable, LongWritable) } with null <code>waitForWritableTime</code> and <code>transferToTime</code>. @param fileCh input fileCh. @param position input position. @param count input count. @throws IOException raised on errors performing I/O.
328 Take an IOException , the local host port and remote host port details and return an IOException with the input exception as the cause and also include the host details. The new exception provides the stack trace of the place where the exception is thrown and some extra diagnostics information. If the exception is of type BindException, ConnectException, UnknownHostException, SocketTimeoutException or has a String constructor, return a new one of the same type; Otherwise return an IOException. @param destHost target host (nullable) @param destPort target port @param localHost local host (nullable) @param localPort local port @param exception the caught exception. @return an exception to throw
329 Constructor. The mapping is not ready to use until {@link #setConf(Configuration)} has been called
330 Create an instance from the given raw mapping @param rawMap raw DNSTOSwithMapping
331 Construct an InnerNode from a path-like string. @param path input path.
332 Construct an InnerNode from its name, its network location, its parent, and its level. @param name input name. @param location input location. @param parent input parent. @param level input level.
333 Wake up the DomainSocketWatcher thread.
334 Create a new DomainSocket listening on the given path. @param path The path to bind and listen on. @return The new DomainSocket. @throws IOException raised on errors performing I/O.
335 Create a pair of UNIX domain sockets which are connected to each other by calling socketpair(2). @return An array of two UNIX domain sockets connected to each other. @throws IOException on error.
336 Create a new DomainSocket connected to the given path. @param path The path to connect to. @throws IOException If there was an I/O error performing the connect. @return The new DomainSocket.
337 Send callback, and if the domain socket was closed as a result of processing, then also remove the entry for the file descriptor. @param caller reason for call @param entries mapping of file descriptor to entry @param fdSet set of file descriptors @param fd file descriptor
338 Close the DomainSocketWatcher and wait for its thread to terminate. If there is more than one close, all but the first will be ignored.
339 Takes one selector from end of LRU list of free selectors. If there are no selectors awailable, it creates a new selector. Also invokes trimIdleSelectors(). @param channel @return @throws IOException
340 puts selector back at the end of LRU list of free selectos. Also invokes trimIdleSelectors(). @param info
341 @return Like {@link DNS#getIPs(String, boolean)}, but returns all IPs associated with the given interface and its subinterfaces. @param strInterface input strInterface. @throws UnknownHostException If no IP address for the local host could be found.
342 Returns all the host names associated by the provided nameserver with the address bound to the specified network interface @param strInterface The name of the network interface or subinterface to query (e.g. eth0 or eth0:0) @param nameserver The DNS host name @param tryfallbackResolution if true and if reverse DNS resolution fails then attempt to resolve the hostname with {@link InetAddress#getCanonicalHostName()} which includes hosts file resolution. @return A string vector of all host names associated with the IPs tied to the specified interface @throws UnknownHostException if the given interface is invalid
343 Create a log helper without any primary recorder. @see #LogThrottlingHelper(long, String) @param minLogPeriodMs input minLogPeriodMs.
344 Record some set of values at the current time into this helper. Note that this does <i>not</i> actually write information to any log. Instead, this will return a LogAction indicating whether or not the caller should write to its own log. The LogAction will additionally contain summary information about the values specified since the last time the caller was expected to write to its log. <p>Specifying multiple values will maintain separate summary statistics about each value. For example: <pre>{@code helper.record(1, 0); LogAction action = helper.record(3, 100); action.getStats(0); // == 2 action.getStats(1); // == 50 }</pre> @param values The values about which to maintain summary information. Every time this method is called, the same number of values must be specified. @return A LogAction indicating whether or not the caller should write to its log.
345 Unquote the name and quote the value.
346 Quote the url so that users specifying the HOST HTTP header can't inject attacks.
347 Quote the server name so that users specifying the HOST HTTP header can't inject attacks.
348 See {@link #FileMonitoringTimerTask(List, Consumer, Consumer)}. @param filePath The file to monitor. @param onFileChange What to do when the file changes. @param onChangeFailure What to do when <code>onFileChange</code> throws an exception.
349 Update the cache and return the current cache record @param mr the update record @return the updated cache record
350 Consume one element, will block if queue is empty Only one consumer at a time is allowed @param consumer the consumer callback object
351 Consume all the elements, will block if queue is empty @param consumer the consumer callback object @throws InterruptedException
352 One cache hit event
353 One cache cleared
354 One cache updated
355 Client was disconnected due to backoff
356 Increments the Slow RPC counter.
357 Increments the Requeue Calls counter.
358 One RPC call success event.
359 This is a wrapper around {@link WritableByteChannel#write(ByteBuffer)}. If the amount of data is large, it writes to channel in smaller chunks. This is to avoid jdk from creating many direct buffers as the size of buffer increases. This also minimizes extra copies in NIO layer as a result of multiple write operations required to write a large buffer. @see WritableByteChannel#write(ByteBuffer)
360 This is a wrapper around {@link ReadableByteChannel#read(ByteBuffer)}. If the amount of data is large, it writes to channel in smaller chunks. This is to avoid jdk from creating many direct buffers as the size of ByteBuffer increases. There should not be any performance degredation. @see ReadableByteChannel#read(ByteBuffer)
361 Increase the failure count and update the last failure timestamp.
362 Queries impl for groups belonging to the user. This could involve I/O and take awhile.
363 Shutdown the instrumentation process.
364 Sets quantileInfo. @param ucName capitalized name of the metric @param uvName capitalized type of the values @param desc uncapitalized long-form textual description of the metric @param lvName uncapitalized type of the values @param pDecimalFormat Number formatter for percentile value
365 Sets quantileInfo. @param ucName capitalized name of the metric @param uvName capitalized type of the values @param desc uncapitalized long-form textual description of the metric @param lvName uncapitalized type of the values @param df Number formatter for inverse percentile value
366 Construct the registry with a record name @param name of the record of the metrics
367 Get a metrics tag. @param name of the tag @param description of the tag @param value of the tag @return an interned metrics tag
368 Construct a sample statistics metric @param name of the metric @param description of the metric @param sampleName of the metric (e.g. "Ops") @param valueName of the metric (e.g. "Time", "Latency") @param extended create extended stats (stdev, min/max etc.) by default.
369 Add a tag to the metrics @param info metadata of the tag @param value of the tag @param override existing tag if true @return the registry (for keep adding tags etc.)
370 Add a snapshot to the metric. @param value of the metric
371 Return Standard Deviation of the Processing Time. @return double
372 Add a new value from the stream. @param v v.
373 Get a snapshot of the current values of all the tracked quantiles. @return snapshot of the tracked quantiles. If no items are added to the estimator, returns null.
374 Return top token real owners list as well as the tokens count. @param n top number of users @return map of owners to counts
375 Add a group to cache, only netgroups are cached @param groups list of group names to add to cache
376 Obtain the collection of tokens associated with this user. @return an unmodifiable collection of tokens associated with user
377 Get the group memberships of a given user. If the user's group is not cached, this method may block. Note this method can be expensive as it involves Set {@literal ->} List conversion. For user with large group membership (i.e., {@literal >} 1000 groups), we recommend using getGroupSet to avoid the conversion and fast membership look up via contains(). @param user User's name @return the group memberships of the user as list @throws IOException if user does not exist @deprecated Use {@link #getGroupsSet(String user)} instead.
378 Get the group memberships of a given user. If the user's group is not cached, this method may block. This provide better performance when user has large group membership via <br> 1) avoid {@literal set->list->set} conversion for the caller UGI/PermissionCheck <br> 2) fast lookup using contains() via Set instead of List @param user User's name @return the group memberships of the user as set @throws IOException if user does not exist
379 Gets unix groups and netgroups for the user. It gets all unix groups as returned by id -Gn but it only returns netgroups that are used in ACLs (there is no way to get all netgroups for a given user, see documentation for getent netgroup)
380 Print a new line
381 Print a system property, or {@link #UNSET} if unset. @param property property to print
382 Print an environment variable's name and value; printing {@link #UNSET} if it is not set. @param variable environment variable
383 Dump any file to standard out. @param file file to dump @throws IOException IO problems
384 Print a message as an error @param category error category @param message format string @param args list of arguments
385 Print a message as an warning @param category error category @param message format string @param args list of arguments
386 Sets the authentication method in the subject @param authMethod authMethod.
387 Writes the specified byte to this output stream. @param b the <code>byte</code>. @exception IOException if an I/O error occurs.
388 Writes <code>b.length</code> bytes from the specified byte array to this output stream. <p> The <code>write</code> method of <code>SASLOutputStream</code> calls the <code>write</code> method of three arguments with the three arguments <code>b</code>, <code>0</code>, and <code>b.length</code>. @param b the data. @exception NullPointerException if <code>b</code> is null. @exception IOException if an I/O error occurs.
389 Find the DelegationTokenInformation for the given token id, and verify that if the token is expired. Note that this method should be called with acquiring the secret manager's monitor. @param identifier identifier. @throws InvalidToken invalid token exception. @return DelegationTokenInformation.
390 Sets an external <code>DelegationTokenSecretManager</code> instance to manage creation and verification of Delegation Tokens. <p> This is useful for use cases where secrets must be shared across multiple services. @param secretManager a <code>DelegationTokenSecretManager</code> instance
391 Update the current master key This is called once by startThreads before tokenRemoverThread is created, and only by tokenRemoverThread afterwards.
392 Default constructore required for Writable
393 Creates an <code>DelegationTokenAuthenticatedURL</code>. @param authenticator the {@link DelegationTokenAuthenticator} instance to use, if <code>null</code> the default one will be used. @param connConfigurator a connection configurator.
394 Renew or replace the delegation token for this file system. It can only be called when the action is not in the queue. @return @throws IOException
395 Reads the next byte of data from this input stream. The value byte is returned as an <code>int</code> in the range <code>0</code> to <code>255</code>. If no byte is available because the end of the stream has been reached, the value <code>-1</code> is returned. This method blocks until input data is available, the end of the stream is detected, or an exception is thrown. <p> @return the next byte of data, or <code>-1</code> if the end of the stream is reached. @exception IOException if an I/O error occurs.
396 Reads up to <code>len</code> bytes of data from this input stream into an array of bytes. This method blocks until some input is available. If the first argument is <code>null,</code> up to <code>len</code> bytes are read and discarded. @param b the buffer into which the data is read. @param off the start offset of the data. @param len the maximum number of bytes read. @return the total number of bytes read into the buffer, or <code>-1</code> if there is no more data because the end of the stream has been reached. @exception IOException if an I/O error occurs.
397 Authorize the superuser which is doing doAs. {@link #authorize(UserGroupInformation, InetAddress)} should be preferred to avoid possibly re-resolving the ip address. @param user ugi of the effective or proxy user which contains a real user. @param remoteAddress the ip address of client. @throws AuthorizationException Authorization Exception.
398 Is the ugi managed by the UGI or an external subject? @return true if managed by UGI.
399 Create a proxy user using username of the effective user and the ugi of the real user. @param user user. @param realUser realUser. @return proxyUser ugi
400 If this is a proxy user, get the real user. Otherwise, return this user. @param user the user to check @return the real user or self
401 Return the username.
402 Get the authentication method from the real user's subject. If there is no real user, return the given user's authentication method. @return AuthenticationMethod in the subject, null if not present.
403 Returns the authentication method of a ugi. If the authentication method is PROXY, returns the authentication method of the real user. @param ugi ugi. @return AuthenticationMethod
404 This method creates the connection context using exactly the same logic as the old connection context as was done for writable where the effective and real users are set based on the auth method. @param protocol protocol. @param ugi ugi. @param authMethod authMethod. @return IpcConnectionContextProto.
405 The javax.net.ssl.HostnameVerifier contract. @param host 'hostname' we used to create our socket @param session SSLSession with the remote server @return true if the host matched the one in the certificate.
406 Load a resource @param name resource name @return the status code
407 Constructor. @param conf configuration.
408 Factory constructor for commands @param conf the hadoop configuration
409 Construct a FsShell with the given configuration. Commands can be executed via {@link #run(String[])} @param conf the hadoop configuration
410 Create a class with a specified configuration @param conf configuration
411 Used exclusively for testing. @param conf The configuration to use. @param out The PrintStream to write to, instead of System.out
412 Construct a Configured.
413 Returns the access control list as a String that can be used for building a new instance by sending it to the constructor of {@link AccessControlList}. @return acl string.
414 Get the Kerberos TGT @return the user's TGT or null if none was found
415 Configure ZooKeeper Client with SSL/TLS connection. @param zkClientConfig ZooKeeper Client configuration @param truststoreKeystore truststore keystore, that we use to set the SSL configurations @throws ConfigurationException if the SSL configs are empty
416 Return an <code>OpensslCipher</code> object that implements the specified transformation. @param transformation the name of the transformation, e.g., AES/CTR/NoPadding. @param engineId the openssl engine to use.if not set, defalut engine will be used. @return OpensslCipher an <code>OpensslCipher</code> object @throws NoSuchAlgorithmException if <code>transformation</code> is null, empty, in an invalid format, or if Openssl doesn't implement the specified algorithm. @throws NoSuchPaddingException if <code>transformation</code> contains a padding scheme that is not available.
417 Create a new key generating the material for it. The given key must not already exist. <p> This implementation generates the key material and calls the {@link #createKey(String, byte[], Options)} method. @param name the base name of the key @param options the options for the new key. @return the version name of the first version of the key. @throws IOException raised on errors performing I/O. @throws NoSuchAlgorithmException no such algorithm exception.
418 Roll a new version of the given key generating the material for it. <p> This implementation generates the key material and calls the {@link #rollNewVersion(String, byte[])} method. @param name the basename of the key @return the name of the new version of the key @throws IOException raised on errors performing I/O. @throws NoSuchAlgorithmException This exception is thrown when a particular cryptographic algorithm is requested but is not available in the environment.
419 Insert e into the backing queue or block until we can. If client backoff is enabled this method behaves like add which throws if the queue overflows. If we block and the queue changes on us, we will insert while the queue is drained.
420 Register the rpcRequest deserializer for WritableRpcEngine
421 Start to measure times and make the state of stopwatch running. @return this instance of StopWatch.
422 Stop elapsed time and make the state of stopwatch stop. @return this instance of StopWatch.
423 @return current elapsed time in nanosecond.
424 Get the hash code of an array of methods Methods are sorted before hashcode is calculated. So the returned value is irrelevant of the method order in the array. @param methods an array of methods @return the hash code
425 Return a protocol's signature and finger print from cache @param protocol a protocol class @param serverVersion protocol version @return its signature and finger print
426 Create RemoteException from attributes. @param attrs may not be null. @return RemoteException.
427 Partial listing of the path being listed. In the case where the path is a file. The list will be a singleton with the file itself. @return Partial listing of the path being listed. @throws IOException if there was an exception getting the listing.
428 Store a processing time value for an RPC call into this scheduler. @param callName The name of the call. @param schedulable The schedulable representing the incoming call. @param details The details of processing time.
429 Offer the element to queue of the given or lower priority. @param priority - starting queue priority @param e - element to add @param includeLast - whether to attempt last queue @return boolean if added to a queue
430 @param t the {@link java.lang.Throwable} to use to set errorInfo @param responseParams the {@link ResponseParams} instance to populate
431 Create a version mismatch exception @param interfaceName the name of the protocol mismatch @param clientVersion the client's version of the protocol @param serverVersion the server's version of the protocol
432 Update the scheduleCache to match current conditions in callCosts.
433 Returns the priority level for a given identity by first trying the cache, then computing it. @param identity an object responding to toString and hashCode @return integer scheduling decision from 0 to numLevels - 1
434 Override hashcode to avoid findbugs warnings
435 Use the mux by getting and advancing index.
436 @return Returns remote address as a string when invoked inside an RPC. Returns null in case of an error.
437 @param hostEntries collection of separated ip/cidr/host addresses
438 Read /proc/meminfo, parse and compute memory information only once.
439 {@inheritDoc}
440 {@inheritDoc}
441 {@inheritDoc}
442 {@inheritDoc}
443 Add a new (key, value) mapping. Inserting a new (key, value) never overwrites a previous one. In other words, you can insert the same key multiple times and it will lead to multiple entries. @param k Generics Type k. @param v Generics Type v.
444 This method should be used if you need a {@link TransformerFactory}. Use this method instead of {@link TransformerFactory#newInstance()}. The factory that is returned has secure configuration enabled. @return a {@link TransformerFactory} with secure configuration enabled @throws TransformerConfigurationException if the {@code JAXP} transformer does not support the secure configuration
445 This method should be used if you need a {@link SAXTransformerFactory}. Use this method instead of {@link SAXTransformerFactory#newInstance()}. The factory that is returned has secure configuration enabled. @return a {@link SAXTransformerFactory} with secure configuration enabled @throws TransformerConfigurationException if the {@code JAXP} transformer does not support the secure configuration
446 Formats a size to be human readable or in bytes. @param size value to be formatted @param humanReadable flag indicating human readable or not @return String representation of the size
447 Formats a size to be human readable or in bytes. @param size value to be formatted @param humanReadable flag indicating human readable or not @return String representation of the size
448 Given an integer, return a string that is in an approximate, but human readable format. @param number the number to format @return a human readable form of the integer @deprecated use {@link TraditionalBinaryPrefix#long2String(long, String, int)}.
449 a byte description of the given long interger value. @param len len. @return a byte description of the given long interger value.
450 Add a new row to the usages table for the given FileSystem URI. @param uri - FileSystem URI @param fsStatus - FileSystem status @param mountedOnPath - FileSystem mounted on path
451 Same as byteToHexString(bytes, 0, bytes.length). @param bytes bytes. @return byteToHexString.
452 Sort the given range of items using heap sort. {@inheritDoc}
453 Exit the JVM using an exception for the exit code and message, invoking {@link ExitUtil#terminate(ExitUtil.ExitException)}. This is the standard way a launched service exits. An error code of 0 means success -nothing is printed. If {@link ExitUtil#disableSystemExit()} has been called, this method will throw the exception. The method <i>may</i> be subclassed for testing @param ee exit exception @throws ExitUtil.ExitException if ExitUtil exceptions are disabled
454 Exit with a printed message. @param status status code @param message message message to print before exiting @throws ExitUtil.ExitException if exceptions are disabled
455 Like {@link #terminate(int, String)} but uses the given throwable to build the message to display or throw as an {@link ExitException}. <p> @param status exit code to use if the exception is not an ExitException. @param t throwable which triggered the termination. If this exception is an {@link ExitException} its status overrides that passed in. @throws ExitException if {@link System#exit(int)} is disabled.
456 Terminate the current process. Note that terminate is the *only* method that should be used to terminate the daemon processes. @param status exit code @param msg message used to create the {@code ExitException} @throws ExitException if {@link System#exit(int)} is disabled.
457 Forcibly terminates the currently running Java virtual machine. @param status exit code to use if the exception is not a HaltException. @param t throwable which triggered the termination. If this exception is a {@link HaltException} its status overrides that passed in. @throws HaltException if {@link System#exit(int)} is disabled.
458 Forcibly terminates the currently running Java virtual machine. @param status status code @param message message @throws HaltException if {@link Runtime#halt(int)} is disabled.
459 Unregister the hook.
460 Creates a <i>mutable</i> {@code ArrayList} instance containing the given elements; a very thin shortcut for creating an empty list then calling Iterables#addAll. @param <E> Generics Type E. @param elements elements. @return ArrayList Generics Type E.
461 Creates a <i>mutable</i> {@code LinkedList} instance containing the given elements; a very thin shortcut for creating an empty list then calling Iterables#addAll. <p><b>Performance note:</b> {@link ArrayList} and {@link java.util.ArrayDeque} consistently outperform {@code LinkedList} except in certain rare and specific situations. Unless you have spent a lot of time benchmarking your specific needs, use one of those instead.</p> @param elements elements. @param <E> Generics Type E. @return Generics Type E List.
462 Given permissions and extended ACL entries, returns the full logical ACL. @param perm FsPermission containing permissions @param entries List&lt;AclEntry&gt; containing extended ACL entries @return List&lt;AclEntry&gt; containing full logical ACL
463 Creates a <i>mutable</i> {@code ArrayList} instance containing the given elements. <p>Note that even when you do need the ability to add or remove, this method provides only a tiny bit of syntactic sugar for {@code newArrayList(} {@link Arrays#asList asList} {@code (...))}, or for creating an empty list then calling {@link Collections#addAll}. @param <E> Generics Type E. @param elements elements. @return ArrayList Generics Type E.
464 Creates an {@code ArrayList} instance to hold {@code estimatedSize} elements, <i>plus</i> an unspecified amount of padding; you almost certainly mean to call {@link #newArrayListWithCapacity} (see that method for further advice on usage). @param estimatedSize an estimate of the eventual {@link List#size()} of the new list. @return a new, empty {@code ArrayList}, sized appropriately to hold the estimated number of elements. @throws IllegalArgumentException if {@code estimatedSize} is negative. @param <E> Generics Type E.
465 Save to a local file. Any existing file is overwritten unless the OS blocks that. @param file file @param instance instance @throws IOException IO exception
466 Constructor. If the supplied count is greater than zero, the counter of the key name is updated. @param iostats statistics to update @param key Key to use as prefix of values. @param count #of times to increment the matching counter.
467 Create the duration text from a {@code String.format()} code call and log either at info or debug. @param log log to write to @param logAtInfo should the log be at info, rather than debug @param format format string @param args list of arguments
468 Return the duration as {@link #humanTime(long)}. @return a printable duration.
469 Returns a CrcComposer which will collapse CRCs for every combined underlying data size which aligns with the specified stripe boundary. For example, if "update" is called with 20 CRCs and bytesPerCrc == 5, and stripeLength == 10, then every two (10 / 5) consecutive CRCs will be combined with each other, yielding a list of 10 CRC "stripes" in the final digest, each corresponding to 10 underlying data bytes. Using a stripeLength greater than the total underlying data size is equivalent to using a non-striped CrcComposer. @param type type. @param bytesPerCrcHint bytesPerCrcHint. @param stripeLength stripeLength. @return a CrcComposer which will collapse CRCs for every combined. underlying data size which aligns with the specified stripe boundary. @throws IOException raised on errors performing I/O.
470 compose. @param crcA crcA. @param crcB crcB. @param lengthB length of content corresponding to {@code crcB}, in bytes. @param mod mod. @return compose result.
471 Returns byte representation of composed CRCs; if no stripeLength was specified, the digest should be of length equal to exactly one CRC. Otherwise, the number of CRCs in the returned array is equal to the total sum bytesPerCrc divided by stripeLength. If the sum of bytesPerCrc is not a multiple of stripeLength, then the last CRC in the array corresponds to totalLength % stripeLength underlying data bytes. @return byte representation of composed CRCs.
472 Unpack matching files from a jar. Entries inside the jar that do not match the given pattern will be skipped. Keep also a copy of the entire jar in the same directory for backward compatibility. TODO remove this feature in a new release and do only unJar @param inputStream the jar stream to unpack @param toDir the destination directory into which to unpack the jar @param unpackRegex the pattern to match jar entries against @param name name. @throws IOException if an I/O error has occurred or toDir cannot be created and does not already exist
473 Unpack a jar file into a directory. This version unpacks all files inside the jar regardless of filename. @param jarFile the .jar file to unpack @param toDir the destination directory into which to unpack the jar @throws IOException if an I/O error has occurred or toDir cannot be created and does not already exist
474 Find the nth occurrence of the given byte b in a UTF-8 encoded string @param utf a byte array containing a UTF-8 encoded string @param b the byte to find @param n the desired occurrence of the given byte @return position that nth occurrence of the given byte if exists; otherwise -1
475 Get the value, creating if needed. @param key key. @return an instance.
476 Log a warning if the lock was held for too long. Should be invoked by the caller immediately AFTER releasing the lock. @param acquireTime - timestamp just after acquiring the lock. @param releaseTime - timestamp just before releasing the lock. @param checkLockHeld checkLockHeld.
477 Formats time in ms and appends difference (finishTime - startTime) as returned by formatTimeDiff(). If finish time is 0, empty string is returned, if start time is 0 then difference is not appended to return value. @param formattedFinishTime formattedFinishTime to use @param finishTime finish time @param startTime start time @return formatted value.
478 Split a string using the default separator @param str a string that may have escaped separator @return an array of strings
479 Convert SOME_STUFF to SomeStuff @param s input string @return camelized string
480 Escape <code>charToEscape</code> in the string with the escape char <code>escapeChar</code> @param str string @param escapeChar escape char @param charToEscape the char to be escaped @return an escaped string
481 Unescape <code>charToEscape</code> in the string with the escape char <code>escapeChar</code> @param str string @param escapeChar escape char @param charToEscape the escaped char @return an unescaped string
482 Generate the text for the startup/shutdown message of processes. @param classname short classname of the class @param hostname hostname @param args Command arguments @return a string to log.
483 Returns the buildVersion which includes version, revision, user and date. @return the buildVersion
484 Return the next value. Will retrieve the next elements if needed. This is where the mapper takes place. @return true if there is another data element. @throws IOException failure in fetch operation or the transformation. @throws NoSuchElementException no more data
485 Check for the source having a next element. If it does not, this object's close() method is called and false returned @return true if there is a new value @throws IOException failure to retrieve next value
486 Create from a supplier. This is not a constructor to avoid ambiguity when a lambda-expression is passed in. @param supplier supplier implementation. @return a lazy reference. @param <T> type of reference
487 Get the maximum number of objects/files to delete in a single request. @param fs filesystem @param path path to delete under. @return a number greater than or equal to zero. @throws UnsupportedOperationException bulk delete under that path is not supported. @throws IllegalArgumentException path not valid. @throws UncheckedIOException if an IOE was raised.
488 Delete a list of files/objects. <ul> <li>Files must be under the path provided in {@code base}.</li> <li>The size of the list must be equal to or less than the page size.</li> <li>Directories are not supported; the outcome of attempting to delete directories is undefined (ignored; undetected, listed as failures...).</li> <li>The operation is not atomic.</li> <li>The operation is treated as idempotent: network failures may trigger resubmission of the request -any new objects created under a path in the list may then be deleted.</li> <li>There is no guarantee that any parent directories exist after this call. </li> </ul> @param fs filesystem @param base path to delete under. @param paths list of paths which must be absolute and under the base path. @return a list of all the paths which couldn't be deleted for a reason other than "not found" and any associated error message. @throws UnsupportedOperationException bulk delete under that path is not supported. @throws UncheckedIOException if an IOE was raised. @throws IllegalArgumentException if a path argument is invalid.
489 OpenFile assistant, easy reflection-based access to {@link FileSystem#openFile(Path)} and blocks awaiting the operation completion. @param fs filesystem @param path path @param policy read policy @param status optional file status @param length optional file length @param options nullable map of other options @return stream of the opened file @throws UncheckedIOException if an IOE was raised.
490 Delegate to {@link ByteBufferPositionedReadable#read(long, ByteBuffer)}. @param in input stream @param position position within file @param buf the ByteBuffer to receive the results of the read operation. Note: that is the default behaviour of {@link FSDataInputStream#readFully(long, ByteBuffer)}.
491 Load IOStatisticsSnapshot from a Hadoop filesystem. @param fs filesystem @param path path @return the loaded snapshot @throws UncheckedIOException Any IO exception.
492 Load IOStatisticsSnapshot from a JSON string. @param json JSON string value. @return deserialized snapshot. @throws UncheckedIOException Any IO/jackson exception.
493 Implementation of {@code Supplier.get()}. <p> Invoke {@link #eval()} and convert IOEs to UncheckedIOException. <p> This is the {@code Supplier.get()} implementation, which allows this class to passed into anything taking a supplier. @return the value @throws UncheckedIOException if the constructor raised an IOException.
494 Create a task builder for the iterable. @param items item source. @param <I> type of result. @return builder.
495 From the inner cause of an execution exception, extract the inner cause if it is an IOE or RTE. See {@link FutureIO#raiseInnerCause(ExecutionException)}. @param e exception. @param <T> type of return value. @return nothing, ever. @throws IOException either the inner IOException, or a wrapper around any non-Runtime-Exception @throws RuntimeException if that is the inner cause.
496 Given a future, evaluate it. <p> Any exception generated in the future is extracted and rethrown. </p> If this thread is interrupted while waiting for the future to complete, an {@code InterruptedIOException} is raised. However, if the future is cancelled, a {@code CancellationException} is raised in the {code Future.get()} call. This is passed up as is -so allowing the caller to distinguish between thread interruption (such as when speculative task execution is aborted) and future cancellation. @param future future to evaluate @param <T> type of the result. @return the result, if all went well. @throws InterruptedIOException waiting for future completion was interrupted @throws CancellationException if the future itself was cancelled @throws IOException if something went wrong @throws RuntimeException any nested RTE thrown
497 Given a future, evaluate it. <p> Any exception generated in the future is extracted and rethrown. </p> @param future future to evaluate @param timeout timeout to wait. @param unit time unit. @param <T> type of the result. @return the result, if all went well. @throws InterruptedIOException waiting for future completion was interrupted @throws CancellationException if the future itself was cancelled @throws IOException if something went wrong @throws RuntimeException any nested RTE thrown @throws TimeoutException the future timed out.
498 Extract the cause of a completion failure and rethrow it if an IOE or RTE. See {@link FutureIO#raiseInnerCause(CompletionException)}. @param e exception. @param <T> type of return value. @return nothing, ever. @throws IOException either the inner IOException, or a wrapper around any non-Runtime-Exception @throws RuntimeException if that is the inner cause.
499 Check and set 'configuration' if necessary. @param theObject object for which to set configuration @param conf Configuration
500 Return the class for a name. Default is {@link Class#forName(String)}. @param name input name. @param conf input configuration. @return class for a name. @throws IOException raised on errors performing I/O.
501 Find and load the class with given name <tt>className</tt> by first finding it in the specified <tt>conf</tt>. If the specified <tt>conf</tt> is null, try load it directly. @param conf configuration. @param className classname. @return Class.
502 Get a class fromt the configuration @param name the class name @return the class @throws ClassNotFoundException if the class was not found @throws Error on other classloading problems
503 Log the current thread stacks at INFO level. @param log the logger that logs the stack trace @param title a descriptive title for the call stacks @param minInterval the minimum time from the last @deprecated to be removed with 3.4.0. Use {@link #logThreadInfo(Logger, String, long)} instead.
504 Log the current thread stacks at INFO level. @param log the logger that logs the stack trace @param title a descriptive title for the call stacks @param minInterval the minimum time from the last
505 Constructor with both optional path and path handle. Either or both argument may be empty, but it is an error for both to be defined. @param optionalPath a path or empty @param optionalPathHandle a path handle/empty @throws IllegalArgumentException if both parameters are set.
506 A new configuration.
507 Validates the status of an <code>HttpURLConnection</code> against an expected HTTP status code. If the current status code is not the expected one it throws an exception with a detail message using Server side error messages if available. <p> <b>NOTE:</b> this method will throw the deserialized exception even if not declared in the <code>throws</code> of the method signature. @param conn the <code>HttpURLConnection</code>. @param expectedStatus the expected HTTP status code. @throws IOException thrown if the current status code does not match the expected one.
508 The flag is volatile to avoid synchronization here. Re-entrancy is unlikely except in failure mode (and inexpensive).
509 Returns just the shell command to be used to fetch a user's groups list. This is mainly separate to make some tests easier. @param userName The username that needs to be passed into the command built @return An appropriate shell command with arguments
510 Returns just the shell command to be used to fetch a user's group IDs list. This is mainly separate to make some tests easier. @param userName The username that needs to be passed into the command built @return An appropriate shell command with arguments
511 Return a command to set permission for specific file. @param perm String permission to set @param recursive boolean true to apply to all sub-directories recursively @param file String file to set @return String[] containing command and arguments
512 Return a command for determining if process with specified pid is alive. @param pid process ID @return a <code>kill -0</code> command or equivalent
513 Get the Hadoop home directory. Raises an exception if not found @return the home dir @throws IOException if the home directory cannot be located.
514 Fully qualify the path to a binary that should be in a known hadoop bin location. This is primarily useful for disambiguating call-outs to executable sub-components of Hadoop to avoid clashes with other executables that may be in the path. Caveat: this call doesn't just format the path to the bin directory. It also checks for file existence of the composed path. The output of this call should be cached by callers. @param executable executable @return executable file reference @throws FileNotFoundException if the path does not exist
515 Adds a node to the tree. Gives equal weightage to all phases. @return Progress.
516 Adds n nodes to the tree. Gives equal weightage to all phases. @param n n.
517 Adds a named node with a specified progress weightage to the tree. @param status status. @param weightage weightage. @return Progress.
518 Returns progress in this node. get() would give overall progress of the root node(not just given current node). @return progress.
519 Create a ZNode. @param path Path of the ZNode. @return If the ZNode was created. @throws Exception If it cannot contact Zookeeper.
520 Utility function to ensure that the configured base znode exists. This recursively creates the znode as well as all of its parents. @param path Path of the znode to create. @param zkAcl ACLs for ZooKeeper. @throws Exception If it cannot create the file.
521 Checks for an implementation, first finding the given class by name. @param className name of a class @param methodName name of a method (different from constructor) @param argClasses argument classes for the method @return this Builder for method chaining
522 Checks for a method implementation. <p> The name passed to the constructor is the method name used. @param targetClass the class to check for an implementation @param argClasses argument classes for the method @return this Builder for method chaining
523 Checks for an implementation, first finding the given class by name. @param className name of a class @param methodName name of a method (different from constructor) @param argClasses argument classes for the method @return this Builder for method chaining
524 Checks for a method implementation. <p> The name passed to the constructor is the method name used. @param targetClass the class to check for an implementation @param argClasses argument classes for the method @return this Builder for method chaining
525 Get an invocation from the source class, which will be unavailable() if the class is null or the method isn't found. @param <T> return type @param source source. If null, the method is a no-op. @param returnType return type class (unused) @param name method name @param parameterTypes parameters @return the method or "unavailable"
526 For testing: verify that all methods were found. @throws UnsupportedOperationException if the method was not found.
527 Are the bulk delete methods available? @return true if the methods were found.
528 Is the {@link #fileSystem_openFile(FileSystem, Path, String, FileStatus, Long, Map)} method available. @return true if the optimized open file method can be invoked.
529 Are the ByteBufferPositionedReadable methods loaded? This does not check that a specific stream implements the API; use {@link #byteBufferPositionedReadable_readFullyAvailable(InputStream)}. @return true if the hadoop libraries have the method.
530 Probe to see if the input stream is an instance of ByteBufferPositionedReadable. If the stream is an FSDataInputStream, the wrapped stream is checked. @param in input stream @return true if the API is available, the stream implements the interface (including the innermost wrapped stream) and that it declares the stream capability. @throws IOException if the operation was attempted and failed.
531 Are the core IOStatistics methods and classes available. @return true if the relevant methods are loaded.
532 Are the IOStatisticsContext methods and classes available? @return true if the relevant methods are loaded.
533 Require a method to be available. @param method method to probe @throws UnsupportedOperationException if the method was not found.
534 Returns the first valid implementation as a BoundMethod or throws a NoSuchMethodException if there is none. @param receiver an Object to receive the method invocation @return a {@link BoundMethod} with a valid implementation and receiver @throws IllegalStateException if the method is static @throws IllegalArgumentException if the receiver's class is incompatible @throws NoSuchMethodException if no implementation was found
535 Returns the first valid implementation as a BoundMethod or throws a RuntimeError if there is none. @param receiver an Object to receive the method invocation @return a {@link BoundMethod} with a valid implementation and receiver @throws IllegalStateException if the method is static @throws IllegalArgumentException if the receiver's class is incompatible @throws RuntimeException if no implementation was found
536 Returns the first valid implementation as a StaticMethod or throws a NoSuchMethodException if there is none. @return a {@link StaticMethod} with a valid implementation @throws IllegalStateException if the method is not static @throws NoSuchMethodException if no implementation was found
537 Returns the first valid implementation as a StaticMethod or throws a RuntimeException if there is none. @return a {@link StaticMethod} with a valid implementation @throws IllegalStateException if the method is not static @throws RuntimeException if no implementation was found
538 Load the filesystem declarations from service resources. This is a synchronized operation.
539 Compute the hash of the specified file @param args name of file to compute hash of. @throws IOException raised on errors performing I/O.
540 Constructor. <p> Builds a hash function that must obey to a given maximum number of returned values and a highest value. @param maxValue The maximum highest returned value. @param nbHash The number of resulting hashed values. @param hashType type of the hashing function (see {@link Hash}).
541 Default constructor - use with readFields
542 This method calculates an approximate count of the key, i.e. how many times the key was added to the filter. This allows the filter to be used as an approximate <code>key -&gt; count</code> map. <p>NOTE: due to the bucket size of this filter, inserting the same key more than 15 times will cause an overflow at all filter positions associated with this key, and it will significantly increase the error rate for this and other keys. For this reason the filter can only be used to store small count values <code>0 &lt;= N &lt;&lt; 15</code>. @param key key to be tested @return 0 if the key is not present. Otherwise, a positive value v will be returned such that <code>v == count</code> with probability equal to the error rate of this filter, and <code>v &gt; count</code> otherwise. Additionally, if the filter experienced an underflow as a result of {@link #delete(Key)} operation, the return value may be lower than the <code>count</code> with the probability of the false negative rate of such filter.
543 Adds a false positive information to <i>this</i> retouched Bloom filter. <p> <b>Invariant</b>: if the false positive is <code>null</code>, nothing happens. @param key The false positive key to add.
544 Removes a given key from <i>this</i> filer. @param k The key to remove. @param vector The counting vector associated to the key.
545 Chooses the bit position that minimizes the number of false negative generated. @param h The different bit positions. @return The position that minimizes the number of false negative generated.
546 Chooses the bit position that maximizes the number of false positive removed. @param h The different bit positions. @return The position that maximizes the number of false positive removed.
547 Computes the ratio A/FP.
548 Dump a resource to out @param name resource name @return the status code
549 Print a usage message @param args the command line arguments @return an exit code
550 Adds element to the PriorityQueue in log(size) time if either the PriorityQueue is not full, or not lessThan(element, top()). @param element element. @return true if element is added, false otherwise.
551 Creates a <i>mutable</i> {@code TreeSet} instance containing the given elements sorted by their natural ordering. <p><b>Note:</b> if mutability is not required, use ImmutableSortedSet#copyOf(Iterable) instead. <p><b>Note:</b> If {@code elements} is a {@code SortedSet} with an explicit comparator, this method has different behavior than {@link TreeSet#TreeSet(SortedSet)}, which returns a {@code TreeSet} with that comparator. <p><b>Note for Java 7 and later:</b> this method is now unnecessary and should be treated as deprecated. Instead, use the {@code TreeSet} constructor directly, taking advantage of the new <a href="http://goo.gl/iz2Wi">"diamond" syntax</a>. <p>This method is just a small convenience for creating an empty set and then calling Iterables#addAll. This method is not very useful and will likely be deprecated in the future. @param <E> Generics Type E. @param elements the elements that the set should contain @return a new {@code TreeSet} containing those elements (minus duplicates)
552 Creates a <i>mutable</i> {@code HashSet} instance containing the given elements. A very thin convenience for creating an empty set then calling {@link Collection#addAll} or Iterables#addAll. <p><b>Note:</b> if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterable) instead. (Or, change {@code elements} to be a FluentIterable and call {@code elements.toSet()}.)</p> <p><b>Note:</b> if {@code E} is an {@link Enum} type, use newEnumSet(Iterable, Class) instead.</p> @param <E> Generics Type E. @param elements the elements that the set should contain. @return a new, empty thread-safe {@code Set}.
553 Creates a <i>mutable</i> {@code HashSet} instance initially containing the given elements. <p><b>Note:</b> if elements are non-null and won't be added or removed after this point, use ImmutableSet#of() or ImmutableSet#copyOf(Object[]) instead. If {@code E} is an {@link Enum} type, use {@link EnumSet#of(Enum, Enum[])} instead. Otherwise, strongly consider using a {@code LinkedHashSet} instead, at the cost of increased memory footprint, to get deterministic iteration behavior.</p> <p>This method is just a small convenience, either for {@code newHashSet(}{@link Arrays#asList}{@code (...))}, or for creating an empty set then calling {@link Collections#addAll}.</p> @param <E> Generics Type E. @param elements the elements that the set should contain. @return a new, empty thread-safe {@code Set}
554 This is a driver for the example programs. It looks at the first command line argument and tries to find an example program with that name. If it is found, it calls the main method in that class with the rest of the command line arguments. @param args The argument from the user. args[0] is the command to run. @return -1 on error, 0 on success @throws NoSuchMethodException when a particular method cannot be found. @throws SecurityException security manager to indicate a security violation. @throws IllegalAccessException for backward compatibility. @throws IllegalArgumentException if the arg is invalid. @throws Throwable Anything thrown by the example program's main
555 Add a new field to the Table under construction. @param title Field title. @param justification Right or left justification. Defaults to left. @param wrap Width at which to auto-wrap the content of the cell. Defaults to Integer.MAX_VALUE. @return This Builder object
556 Return time duration in the given time unit. Valid units are encoded in properties as suffixes: nanoseconds (ns), microseconds (us), milliseconds (ms), seconds (s), minutes (m), hours (h), and days (d). @param name Property name @param vStr The string value with time unit suffix to be converted. @param unit Unit to convert the stored property, if it exists. @return time duration in given time unit.
557 Append a property with its attributes to a given {#link Document} if the property is found in configuration. @param doc @param conf @param propertyName
558 Adds a set of deprecated keys to the global deprecations. This method is lockless. It works by means of creating a new DeprecationContext based on the old one, and then atomically swapping in the new context. If someone else updated the context in between us reading the old context and swapping in the new one, we try again until we win the race. @param deltas The deprecations to add.
559 Bind using port ranges. Keep on looking for a free port in the port range and throw a bind exception if no port in the configured range binds. @param listener jetty listener. @param startPort initial port which is set in the listener. @throws Exception
560 Add information about the target to the the environment of the subprocess. @param target @param environment
