1 Factory method to create a FileRange object. @param offset starting offset of the range. @param length length of the range. @return a new instance of FileRangeImpl.
2 Factory method to create a FileRange object. @param offset starting offset of the range. @param length length of the range. @param reference nullable reference to store in the range. @return a new instance of FileRangeImpl.
3 Validate a single range. @param range range to validate. @return the range. @param <T> range type @throws IllegalArgumentException the range length is negative or other invalid condition is met other than the those which raise EOFException or NullPointerException. @throws EOFException the range offset is negative @throws NullPointerException if the range is null.
4 Validates that the given reference argument is not null. @param obj the argument reference to validate. @param argName the name of the argument being validated.
5 Validates that the given integer argument is not zero or negative. @param value the argument value to validate @param argName the name of the argument being validated.
6 Validates that the given integer argument is not negative. @param value the argument value to validate @param argName the name of the argument being validated.
7 Validates that the expression (that checks a required field is present) is true. @param isPresent indicates whether the given argument is present. @param argName the name of the argument being validated.
8 Validates that the expression (that checks a field is valid) is true. @param isValid indicates whether the given argument is valid. @param argName the name of the argument being validated.
9 Validates that the expression (that checks a field is valid) is true. @param isValid indicates whether the given argument is valid. @param argName the name of the argument being validated. @param validValues the list of values that are allowed.
10 Validates that the given two values are equal. @param value1 the first value to check. @param value1Name the name of the first argument. @param value2 the second value to check. @param value2Name the name of the second argument.
11 Validates that the first value is an integer multiple of the second value. @param value1 the first value to check. @param value1Name the name of the first argument. @param value2 the second value to check. @param value2Name the name of the second argument.
12 Validates that the first value is greater than the second value. @param value1 the first value to check. @param value1Name the name of the first argument. @param value2 the second value to check. @param value2Name the name of the second argument.
13 Validates that the first value is greater than or equal to the second value. @param value1 the first value to check. @param value1Name the name of the first argument. @param value2 the second value to check. @param value2Name the name of the second argument.
14 Validates that the first value is less than or equal to the second value. @param value1 the first value to check. @param value1Name the name of the first argument. @param value2 the second value to check. @param value2Name the name of the second argument.
15 Validates that the given value is within the given range of values. @param value the value to check. @param valueName the name of the argument. @param minValueInclusive inclusive lower limit for the value. @param maxValueInclusive inclusive upper limit for the value.
16 Validates that the given value is within the given range of values. @param value the value to check. @param valueName the name of the argument. @param minValueInclusive inclusive lower limit for the value. @param maxValueInclusive inclusive upper limit for the value.
17 Preconditions for bulk delete paths. @param paths paths to delete. @param pageSize maximum number of paths to delete in a single operation. @param basePath base path for the delete operation.
18 File constructor; input stream and byteArray will be null. @param file file to upload
19 Require the parameter to be an instance of {@link IOStatisticsSnapshot}. @param snapshot object to validate @return cast value @throws IllegalArgumentException if the supplied class is not a snapshot
20 Given an enum class, build a map of lower case names to values. @param prefix prefix (with trailing ".") for path capabilities probe @param enumClass class of enum @param <E> enum type @return a mutable map of lower case names to enum values @throws IllegalArgumentException if there are two entries which differ only by case.
21 Sort the input ranges by offset; no validation is done. <p> This method is used externally and must be retained with the signature unchanged. @param input input ranges. @return a new list of the ranges, sorted by offset.
22 Probe for a path being a parent of another @param parent parent path @param child possible child path @return true if the parent's path matches the start of the child's
23 Are qualSrc and qualDst of the same file system? @param qualPath1 - fully qualified path @param qualPath2 - fully qualified path @return is same fs true,not false.
24 Mark a path to be deleted when its FileSystem is closed. When the JVM shuts down cleanly, all cached FileSystem objects will be closed automatically. These the marked paths will be deleted as a result. If a FileSystem instance is not cached, i.e. has been created with {@link #createFileSystem(URI, Configuration)}, then the paths will be deleted in when {@link #close()} is called on that instance. The path must exist in the filesystem at the time of the method call; it does not have to exist at the time of JVM shutdown. Notes <ol> <li>Clean shutdown of the JVM cannot be guaranteed.</li> <li>The time to shut down a FileSystem will depends on the number of files to delete. For filesystems where the cost of checking for the existence of a file/directory and the actual delete operation (for example: object stores) is high, the time to shutdown the JVM can be significantly extended by over-use of this feature.</li> <li>Connectivity problems with a remote filesystem may delay shutdown further, and may cause the files to not be deleted.</li> </ol> @param f the path to delete. @return true if deleteOnExit is successful, otherwise false. @throws IOException IO failure
25 Delete all paths that were marked as delete-on-exit. This recursively deletes all files and directories in the specified paths. The time to process this operation is {@code O(paths)}, with the actual time dependent on the time for existence and deletion operations to complete, successfully or not.
26 Return true iff file is a checksum file name. @param file the file path. @return if is checksum file true,not false.
27 Return true if file is a checksum file name. @param file the file path. @return if file is a checksum file true, not false.
28 Fix offset and length of block locations. Note that this method modifies the original array. @param locations block locations of har part file @param start the start of the desired range in the contained file @param len the length of the desired range @param fileOffsetInHar the offset of the desired file in the har part file @return block locations with fixed offset and length
29 Compare this FileStatus to another FileStatus based on lexicographical order of path. @param o the FileStatus to be compared. @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object.
30 convert an array of FileStatus to an array of Path @param stats an array of FileStatus objects @return an array of paths corresponding to the input
31 Resolves all symbolic links in the specified path leading up to, but not including the final path component. @param f path to resolve @return the new path object. @throws IOException If an I/O error occurred.
32 Get the replication factor. @deprecated Use {@link #getFileStatus(Path)} instead @param src file name @return file replication @throws FileNotFoundException if the path does not resolve. @throws IOException an IO failure
33 Get the block size for a particular file. @param f the filename @return the number of bytes in a block @deprecated Use {@link #getFileStatus(Path)} instead @throws FileNotFoundException if the path is not present @throws IOException IO failure
34 Get the default replication for a path. The given path will be used to locate the actual FileSystem to query. The full path does not have to exist. @param path of the file @return default replication for the path's filesystem
35 Performs clean-up action when the associated thread is garbage collected.
36 Validation code, available for use in subclasses. @param position position: if negative an EOF exception is raised @param buffer destination buffer @param offset offset within the buffer @param length length of bytes to read @throws EOFException if the position is negative @throws IndexOutOfBoundsException if there isn't space for the amount of data requested. @throws IllegalArgumentException other arguments are invalid.
37 Utility method to validate uploadIDs. @param uploadId Upload ID @throws IllegalArgumentException invalid ID
38 Utility method to validate partHandles. @param partHandles handles @throws IllegalArgumentException if the parts are invalid
39 Validate the arguments to {@link PathCapabilities#hasPathCapability(Path, String)}. @param path path to query the capability of. @param capability non-null, non-empty string to query the path for support. @return the string to use in a switch statement. @throws IllegalArgumentException if a an argument is invalid.
40 Create an IRQ handler bound to the specific interrupt. @param name signal name @param handler handler
41 Returns consecutive sub-lists of a list, each of the same size (the final list may be smaller). @param originalList original big list. @param pageSize desired size of each sublist ( last one may be smaller) @param <T> Generics Type. @return a list of sub lists.
42 Create an instance bound to a specific type. @param classType class to marshall @param failOnUnknownProperties fail if an unknown property is encountered. @param pretty generate pretty (indented) output?
43 Instantiate. @param name storage statistics name. @param scheme FS scheme; may be null. @param ioStatistics IOStatistics source.
44 Get the Map of Statistics object indexed by URI Scheme. @return a Map having a key as URI scheme and value as Statistics object @deprecated use {@link #getGlobalStorageStatistics()}
45 Create an FSDataOutputStream at the indicated Path with write-progress reporting. @param f the file name to open @param permission file permission @param flags {@link CreateFlag}s to use for this stream. @param bufferSize the size of the buffer to be used. @param replication required block replication for the file. @param blockSize block size @param progress the progress reporter @throws IOException IO failure @see #setPermission(Path, FsPermission) @return output stream.
46 Opens an FSDataOutputStream at the indicated Path with write-progress reporting. Same as create(), except fails if parent directory doesn't already exist. @param f the file name to open @param permission file permission @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @param replication required block replication for the file. @param blockSize block size @param progress the progress reporter @throws IOException IO failure @see #setPermission(Path, FsPermission) @return output stream.
47 @param path for the exception
48 @param path for the exception
49 @param path for the exception
50 @param path for the exception
51 Constructor a generic I/O error exception @param path for the exception
52 Appends the custom error-message to the default error message. @param path path that encountered the closed resource. @param message custom error message.
53 Return the concrete implementation of the builder instance.
54 Encodes the object to a short. Unlike {@link #toShort()}, this method may return values outside the fixed range 00000 - 01777 if extended features are encoded into this permission, such as the ACL bit. @return short extended short representation of this permission
55 Returns the FsPermission in an octal format. @return short Unlike {@link #toShort()} which provides a binary representation, this method returns the standard octal style permission.
56 Interns all the strings in the given array in place, returning the same array. @param strings strings. @return internStringsInArray.
57 Old interface, instead use the explicit {@link FileStatus#isFile()}, {@link FileStatus#isDirectory()}, and {@link FileStatus#isSymlink()} @return true if this is a directory. @deprecated Use {@link FileStatus#isFile()}, {@link FileStatus#isDirectory()}, and {@link FileStatus#isSymlink()} instead.
58 True iff the named path is a directory. Note: Avoid using this method. Instead reuse the FileStatus returned by getFileStatus() or listStatus() methods.
59 Determines whether a {@link PathData} item is recursable. Default implementation is to recurse directories but can be overridden to recurse through symbolic links. @param item a {@link PathData} object @return true if the item is recursable, false otherwise @throws IOException if anything goes wrong in the user-implementation
60 Returns the ACL entries to use in the API call for the given path. For a recursive operation, returns all specified ACL entries if the item is a directory or just the access ACL entries if the item is a file. For a non-recursive operation, returns all specified ACL entries. @param item PathData path to check @return List<AclEntry> ACL entries to use in the API call
61 True iff the named path is a directory. Note: Avoid using this method. Instead reuse the FileStatus returned by getFileStatus() or listStatus() methods. @param f path to check @throws IOException IO failure @deprecated Use {@link #getFileStatus(Path)} instead @return if f is directory true, not false.
62 Apply permission against specified file and determine what the new mode would be @param file File against which to apply mode @return File's new mode if applied.
63 Is this a file? @return true if this is a file
64 @return The contents of the symbolic link. @throws IOException raised on errors performing I/O.
65 Calculate length of file if not already cached. @return file length. @throws IOException any IOE.
66 The number of bytes in a file. @param f the path. @return the number of bytes; 0 for a directory @deprecated Use {@link #getFileStatus(Path)} instead. @throws FileNotFoundException if the path does not resolve @throws IOException IO failure
67 Retrieve the storage policy for a given file or directory. @param src file or directory path. @return storage policy for give file. @throws IOException raised on errors performing I/O.
68 Set an xattr of a file or directory. The name must be prefixed with the namespace followed by ".". For example, "user.attr". <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to modify @param name xattr name. @param value xattr value. @throws IOException raised on errors performing I/O.
69 Appends the text of a Throwable to the default error message @param path for the exception @param cause a throwable to extract the error message
70 Set the current byte position in the input file. <p>The position passed must be a position returned by {@link SequenceFile.Writer#getLength()} when writing this file. To seek to an arbitrary position, use {@link SequenceFile.Reader#sync(long)}. </p> @param position input position. @throws IOException raised on errors performing I/O.
71 Read and return the next record length, potentially skipping over a sync block. @return the length of the next record or -1 if there is no next record @throws IOException
72 @return Return the current byte position in the input file. @throws IOException raised on errors performing I/O.
73 Invokes "static void registerExpression(FindExpressionFactory)" on the given class. This method abstracts the contract between the factory and the expression class. Do not assume that directly invoking registerExpression on the given class will have the same effect. @param expressionClass class to allow an opportunity to register
74 Invokes "static void registerCommands(CommandFactory)" on the given class. This method abstracts the contract between the factory and the command class. Do not assume that directly invoking registerCommands on the given class will have the same effect. @param registrarClass class to allow an opportunity to register
75 implementing position readable.
76 position readable again.
77 Expand the leftmost outer curly bracket pair containing a slash character ("/") in <code>filePattern</code>. @param filePatternWithOffset @return expanded file patterns @throws IOException
78 Given an opaque iteration token, return the next batch of entries in a directory. This is a private API not meant for use by end users. <p> This method should be overridden by FileSystem subclasses that want to use the generic {@link FileSystem#listStatusIterator(Path)} implementation. @param f Path to list @param token opaque iteration token returned by previous call, or null if this is the first call. @return directory entries. @throws FileNotFoundException when the path does not exist. @throws IOException If an I/O error occurred.
79 Encode byte[] value to string representation with encoding. Values encoded as text strings are enclosed in double quotes (\"), while strings encoded as hexadecimal and base64 are prefixed with 0x and 0s, respectively. @param value byte[] value @param encoding encoding. @return String string representation of value @throws IOException raised on errors performing I/O.
80 Filter files/directories in the given path using the user-supplied path filter. Results are added to the given array <code>results</code>. @throws FileNotFoundException when the path does not exist @throws IOException see specific implementation
81 Construct the tag with name, description and value @param info of the tag @param value of the tag
82 Construct the metric @param info about the metric
83 Requests a delegation token using the configured <code>Authenticator</code> for authentication. @param url the URL to get the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token being used for the user where the Delegation token will be stored. @param renewer the renewer user. @param doAsUser the user to do as, which will be the token owner. @return a delegation token. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
84 Renews a delegation token from the server end-point using the configured <code>Authenticator</code> for authentication. @param url the URL to renew the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to renew. @param doAsUser the user to do as, which will be the token owner. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred. @return delegation token long value.
85 Cancels a delegation token from the server end-point. It does not require being authenticated by the configured <code>Authenticator</code>. @param url the URL to cancel the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to cancel. @param doAsUser the user to do as, which will be the token owner. @throws IOException if an IO error occurred.
86 Constructor takes the following tunable configuration parameters @param numValues The number of values cached in the Queue for a particular key. @param lowWatermark The ratio of (number of current entries/numValues) below which the <code>fillQueueForKey()</code> funciton will be invoked to fill the Queue. @param expiry Expiry time after which the Key and associated Queue are evicted from the cache. @param numFillerThreads Number of threads to use for the filler thread @param policy The SyncGenerationPolicy to use when client calls "getAtMost" @param refiller implementation of the QueueRefiller
87 <p>Preconditions that the specified argument is not {@code null}, throwing a NPE exception otherwise. <p>The message of the exception is &quot;The validated object is null&quot;.</p> @param <T> the object type @param obj the object to check @return the validated object @throws NullPointerException if the object is {@code null} @see #checkNotNull(Object, Object)
88 Create or return the StorageStatistics object with the given name. @param name The storage statistics object name. @param provider An object which can create a new StorageStatistics object if needed. @return The StorageStatistics object with the given name. @throws RuntimeException If the StorageStatisticsProvider provides a null object or a new StorageStatistics object with the wrong name.
89 Reset all statistics for all file systems.
90 Close: closes any upload stream and byteArray provided in the constructor. @throws IOException inherited exception.
91 Unbuffered file copy from src to dst without tainting OS buffer cache In POSIX platform: It uses FileChannel#transferTo() which internally attempts unbuffered IO on OS with native sendfile64() support and falls back to buffered IO otherwise. It minimizes the number of FileChannel#transferTo call by passing the the src file size directly instead of a smaller size as the 3rd parameter. This saves the number of sendfile64() system call when native sendfile64() is supported. In the two fall back cases where sendfile is not supported, FileChannle#transferTo already has its own batching of size 8 MB and 8 KB, respectively. In Windows Platform: It uses its own native wrapper of CopyFileEx with COPY_FILE_NO_BUFFERING flag, which is supported on Windows Server 2008 and above. Ideally, we should use FileChannel#transferTo() across both POSIX and Windows platform. Unfortunately, the wrapper(Java_sun_nio_ch_FileChannelImpl_transferTo0) used by FileChannel#transferTo for unbuffered IO is not implemented on Windows. Based on OpenJDK 6/7/8 source code, Java_sun_nio_ch_FileChannelImpl_transferTo0 on Windows simply returns IOS_UNSUPPORTED. Note: This simple native wrapper does minimal parameter checking before copy and consistency check (e.g., size) after copy. It is recommended to use wrapper function like the Storage#nativeCopyFileUnbuffered() function in hadoop-hdfs with pre/post copy checks. @param src The source path @param dst The destination path @throws IOException raised on errors performing I/O.
92 Closes the stream ignoring {@link Throwable}. Must only be called in cleaning up from exception handlers. @param stream the Stream to close
93 Closes the streams ignoring {@link Throwable}. Must only be called in cleaning up from exception handlers. @param streams the Streams to close
94 Try to perform some disk IO by writing to the given file without using Native IO. @param file @throws IOException if there was a non-retriable error.
95 HSync calls sync on fhe file descriptor after a local flush() call. @throws IOException failure
96 Set the finished time and then update the statistics. If the operation failed then the key + .failures counter will be incremented by one. The operation min/mean/max values will be updated with the duration; on a failure these will all be the .failures metrics.
97 Set the count for the current buf. @param newCount the new count to set @return the original count
98 Get the address that corresponds to a particular connector. @param index index. @return the corresponding address for the connector, or null if there's no such connector or the connector is not bounded or was closed.
99 Create an instance of GCTimeMonitor. Once it's started, it will stay alive and monitor GC time percentage until shutdown() is called. If you don't put a limit on the number of GCTimeMonitor instances that you create, and alertHandler != null, you should necessarily call shutdown() once the given instance is not needed. Otherwise, you may create a memory leak, because each running GCTimeMonitor will keep its alertHandler object in memory, which in turn may reference and keep in memory many more other objects. @param observationWindowMs the interval over which the percentage of GC time should be calculated. A practical value would be somewhere between 30 sec and several minutes. @param sleepIntervalMs how frequently this thread should wake up to check GC timings. This is also a frequency with which alertHandler will be invoked if GC time percentage exceeds the specified limit. A practical value would likely be 500..1000 ms. @param maxGcTimePercentage A GC time percentage limit (0..100) within observationWindowMs. Once this is exceeded, alertHandler will be invoked every sleepIntervalMs milliseconds until GC time percentage falls below this limit. @param alertHandler a single method in this interface is invoked when GC time percentage exceeds the specified limit.
100 Parse the path component from the given request and return w/o decoding. @param request Http request to parse @param servletName the name of servlet that precedes the path @return path component, null if the default charset is not supported
101 Compare if this object is equal to another object @param o the object to be compared. @return true if two file status has the same path name; false if not.
102 Returns a hash code value for the object, which is defined as the hash code of the path name. @return a hash code value for the path name.
103 Set the sum and samples. Synchronized. @param sampleCount new sample count. @param newSum new sum
104 Add another MeanStatistic. @param other other value @return mean statistic.
105 Given a map, add its entryset to the string. The entries are only sorted if the source entryset iterator is sorted, such as from a TreeMap. @param sb string buffer to append to @param type type (for output) @param map map to evaluate @param separator separator @param <E> type of values of the map
106 Convert an entry to the string format used in logging. @param entry entry to evaluate @param <E> entry type @return formatted string
107 Initiate a duration tracking operation by creating/returning an object whose {@code close()} call will update the statistics. The statistics counter with the key name will be incremented by the given count. The expected use is within a try-with-resources clause. The default implementation returns a stub duration tracker. @param key statistic key prefix @param count #of times to increment the matching counter in this operation. @return an object to close after an operation completes.
108 Convert a counter/gauge entry to a long statistics. @param e entry @return statistic
109 Construct with the copy function being simple passthrough.
110 add a mapping of a key to a counter function. @param key the key @param eval the evaluator
111 add a mapping of a key to a gauge function. @param key the key @param eval the evaluator
112 add a mapping of a key to a minimum function. @param key the key @param eval the evaluator
113 add a mapping of a key to a maximum function. @param key the key @param eval the evaluator
114 add a mapping of a key to a meanStatistic function. @param key the key @param eval the evaluator
115 Take an IOStatistics instance and wrap it in a source. @param statistics statistics. @return a source which will return the values
116 Get the shared instance of the immutable empty statistics store. @return an empty statistics object.
117 Get the shared instance of the immutable empty statistics object. @return an empty statistics object.
118 Get a reference to the atomic instance providing the value for a specific counter. This is useful if the value is passed around. @param key statistic name @return the reference @throws NullPointerException if there is no entry of that name
119 Get a reference to the atomic instance providing the value for a specific maximum. This is useful if the value is passed around. @param key statistic name @return the reference @throws NullPointerException if there is no entry of that name
120 Get a reference to the atomic instance providing the value for a specific minimum. This is useful if the value is passed around. @param key statistic name @return the reference @throws NullPointerException if there is no entry of that name
121 Get a reference to the atomic instance providing the value for a specific gauge. This is useful if the value is passed around. @param key statistic name @return the reference @throws NullPointerException if there is no entry of that name
122 Get a mean statistic. @param key statistic name @return the reference @throws NullPointerException if there is no entry of that name
123 @return the global duration
124 Set the wrapped statistics. Will fail if the field is already set. @param wrapped new value
125 Get the statistics instance. @return the instance to build/return @throws IllegalStateException if the builder has already been built.
126 Check for mutability before any mutating operation. @throws IllegalStateException if the set is still mutable
127 Convert to a byte array. If the data is stored in a file, it will be read and returned. If the data was passed in via an input stream (which happens if the data is stored in a bytebuffer) then it will be converted to a byte array -which will then be cached for any subsequent use. @return byte[] after converting the uploadBlock. @throws IOException throw if an exception is caught while reading File/InputStream or closing InputStream.
128 Bind to the interrupt handler. @throws IllegalArgumentException if the exception could not be set
129 Decrement the reference count. @return True if the object is closed and has no outstanding references.
130 Take a snapshot of a supplied map, using the copy function to replicate the source values. @param source source map @param copyFn function to copy the value @param <E> type of values. @return a concurrent hash map referencing the same values.
131 Given an IOException raising callable/lambda expression, execute it and update the relevant statistic. @param factory factory of duration trackers @param statistic statistic key @param input input callable. @param <B> return type. @return the result of the operation. @throws IOException raised on errors performing I/O.
132 Create a DurationTrackerFactory which aggregates the tracking of two other factories. @param first first tracker factory @param second second tracker factory @return a factory
133 Returns the number of disconnected backoffs. @return long
134 Returns the number of slow calls. @return long
135 Returns the number of requeue calls. @return long
136 Reset the thread +.
137 Construct.
138 Static probe to check if the thread-level IO statistics enabled. @return if the thread-level IO statistics enabled.
139 Creates a new (pure Java) gzip decompressor.
140 Update the {@link #encryptor}: calculate counter and {@link #padding}.
141 Check and floor buffer size. @param codec crypto codec. @param bufferSize the size of the buffer to be used. @return calc buffer size.
142 Creates a hardlink "dst" that points to "src". This is deprecated since JDK7 NIO can create hardlinks via the {@link java.nio.file.Files} API. @param src source file @param dst hardlink location @throws IOException raised on errors performing I/O.
143 Create a MD5FileChecksum. @param bytesPerCRC bytesPerCRC. @param crcPerBlock crcPerBlock. @param md5 md5.
144 Same as this(0, 0, null)
145 Create a MD5FileChecksum. @param bytesPerCRC bytesPerCRC. @param crcPerBlock crcPerBlock. @param md5 md5.
146 Set and compile a glob pattern @param glob the glob pattern string
147 Return a remote iterator for listing in a directory
148 Convert a os-native filename to a path that works for the shell. @param file The filename to convert @param makeCanonicalPath Whether to make canonical path for the file passed @return The unix pathname @throws IOException on windows, there can be problems with the subprocess
149 The permission operation of this method only involves users, user groups, and others. If SUID is set, only executable permissions are reserved. @param mode Permissions are represented by numerical values @return The original permissions for files are stored in collections
150 Execute the shell command. @throws IOException if the command fails, or if the command is not well constructed.
151 Checks if a given command (String[]) fits in the Windows maximum command line length Note that the input is expected to already include space delimiters, no extra count will be added for delimiters. @param commands command parts, including any space delimiters @throws IOException raised on errors performing I/O.
152 Build a PowerShell script to kill a java.exe process in a remote machine. @param processName Name of the process to kill. This is an attribute in CommandLine. @param host Host where the process is. @return Path of the PowerShell script.
153 @return the size for a checksum.
154 the required checksum size given the data length. @param dataSize data size. @return the required checksum size given the data length.
155 Converts a checksum integer value to a byte stream @param sum check sum. @param checksumSize check sum size. @return byte stream.
156 Increment the bytes read in the statistics. @param newBytes the additional bytes read
157 Increment the bytes written in the statistics. @param newBytes the additional bytes written
158 Increment the number of read operations. @param count number of read operations
159 Increment the number of large read operations. @param count number of large read operations
160 Increment the number of write operations. @param count number of write operations
161 Increment the bytes read on erasure-coded files in the statistics. @param newBytes the additional bytes read
162 Increment the bytes read by the network distance in the statistics In the common network topology setup, distance value should be an even number such as 0, 2, 4, 6. To make it more general, we group distance by {1, 2}, {3, 4} and {5 and beyond} for accounting. @param distance the network distance @param newBytes the additional bytes read
163 Increment the time taken to read bytes from remote in the statistics. @param durationMS time taken in ms to read bytes from remote
164 Apply the given aggregator to all StatisticsData objects associated with this Statistics object. For each StatisticsData object, we will call accept on the visitor. Finally, at the end, we will call aggregate to get the final total. @param visitor to use. @return The total.
165 Constructor for ContentSummary.Builder. @param builder builder.
166 Create a uninitialized one
167 Create a ChecksumOpts that disables checksum. @return ChecksumOpt.
168 Validate the CreateFlag and throw exception if it is invalid @param flag set of CreateFlag @throws HadoopIllegalArgumentException if the CreateFlag is invalid
169 Check that the Uri's scheme matches. @param uri name URI of the FS. @param supportedScheme supported scheme.
170 Constructs exception with the specified detail message. @param path invalid path.
171 Constructs exception with the specified detail message. @param path invalid path. @param reason Reason <code>path</code> is invalid
172 Find the valid input from all the inputs. @param <T> Generics Type T. @param inputs input buffers to look for valid input @return the first valid input
173 Find the valid input from all the inputs. @param inputs input buffers to look for valid input @return the first valid input
174 Check and ensure the buffers are of the desired length. @param buffers the buffers to check
175 Check and ensure the buffers are of the desired length and type, direct buffers or not. @param buffers the buffers to check
176 Check and ensure the buffers are of the desired length. @param buffers the buffers to check
177 Check and ensure the buffers are of the desired length and type, direct buffers or not. @param buffers the buffers to check
178 Stop the proxy. Proxy must either implement {@link Closeable} or must have associated {@link RpcInvocationHandler}. @param proxy the RPC proxy object to be stopped @throws HadoopIllegalArgumentException if the proxy does not implement {@link Closeable} interface or does not have closeable {@link InvocationHandler}
179 A helper method for processing user input and default value to create a combined checksum option. This is a bit complicated because bytesPerChecksum is kept for backward compatibility. @param defaultOpt Default checksum option @param userOpt User-specified checksum option. Ignored if null. @param userBytesPerChecksum User-specified bytesPerChecksum Ignored if {@literal <} 0. @return ChecksumOpt.
180 Returns the default port if the file system defines one. {@link FileSystem#getDefaultPort()} returns 0 to indicate the default port is undefined. However, the logic that consumes this value expects to receive -1 to indicate the port is undefined, which agrees with the contract of {@link URI#getPort()}. @param theFsImpl file system to check for default port @return default port, or -1 if default port is undefined
181 Canonicalize the given URI. This is implementation-dependent, and may for example consist of canonicalizing the hostname using DNS and adding the default port if not specified. The default implementation simply fills in the default port if not specified and if {@link #getDefaultPort()} returns a default port. @param uri url. @return URI @see NetUtils#getCanonicalUri(URI, int)
182 Set replication for an existing file. @param src file name @param replication new replication @throws IOException raised on errors performing I/O. @return true if successful; false if file does not exist or is a directory
183 Logout and disconnect the given FTPClient. * @param client @throws IOException
184 Close the underlying output stream.
185 Constructor deprecated by ContentSummary.Builder
186 Constructor, deprecated by ContentSummary.Builder. @param length length. @param fileCount file count. @param directoryCount directory count. @param quota quota. @param spaceConsumed space consumed. @param spaceQuota space quota.
187 Get the delay until this event should happen.
188 Set a new time for the renewal. It can only be called when the action is not in the queue or any collection because the hashCode may change @param delay the renewal time
189 Update lastActivity with the current time.
190 Cause the current thread to sleep as close as possible to the provided number of milliseconds. This method will log and ignore any {@link InterruptedException} encountered. @param millis the number of milliseconds for the current thread to sleep
191 Current system time. Do not use this to calculate a duration or interval to sleep, because it will be broken by settimeofday. Instead, use monotonicNow. @return current time in msec.
192 Wait for the termination of the thread pools. @param milliseconds The number of milliseconds to wait @return true if all thread pools are terminated without time limit @throws InterruptedException if the thread is interrupted.
193 Check the data against the checksums. @param sumsBytes the checksum data @param sumsOffset where from the checksum file this buffer started @param data the file data @param dataOffset where the file data started (must be a multiple of bytesPerSum) @param bytesPerSum how many bytes per a checksum @param file the path of the filename @return the data buffer @throws CompletionException if the checksums don't match
194 The specification of this method matches that of {@link FileContext#open(Path)} except that Path f must be for this file system. @param f the path. @throws AccessControlException access control exception. @throws FileNotFoundException file not found exception. @throws UnresolvedLinkException unresolved link exception. @throws IOException raised on errors performing I/O. @return input stream.
195 Return the length of the checksum file given the size of the actual file. @param file the file path. @param fileSize file size. @return check sum file length.
196 Returns a status object describing the use and capacity of the filesystem. If the filesystem has multiple partitions, the use and capacity of the partition pointed to by the specified path is reflected. @param p Path for which status should be obtained. null means the default partition. @return a FsStatus object @throws IOException see specific implementation
197 Register the permission related commands with the factory @param factory the command factory
198 Register the names for the count command @param factory the command factory that will instantiate this class
199 Register the names for the count command @param factory the command factory that will instantiate this class
200 @deprecated use replacement since name is an unused parameter @param name of command, but never used @param min see replacement @param max see replacement @param possibleOpt see replacement @see #CommandFormat(int, int, String...)
201 Evaluate a CallableRaisingIOE in the current thread, converting IOEs to RTEs and propagating. See {@link FutureIO#eval(CallableRaisingIOE)}. @param callable callable to invoke @param <T> Return type. @return the evaluated result. @throws UnsupportedOperationException fail fast if unsupported @throws IllegalArgumentException invalid argument
202 Reject a configuration if one or more mandatory keys are not in the set of mandatory keys. The first invalid key raises the exception; the order of the scan and hence the specific key raising the exception is undefined. @param knownKeys a possibly empty collection of known keys @param extraErrorText extra error text to include. @throws IllegalArgumentException if any key is unknown.
203 Generate the list of capabilities. @return a possibly empty list.
204 Build the referrer string. This includes dynamically evaluating all of the evaluated attributes. If there is an error creating the string it will be logged once per entry, and "" returned. @return a referrer string or ""
205 instantiate. @param factory supplier of new instances @param referenceLost optional callback on lost references.
206 Probe for an output stream having a capability; returns true if the stream implements {@link StreamCapabilities} and its {@code hasCapabilities()} method returns true for the capability. @param out output stream @param capability capability to probe for @return true if the stream declares that it supports the capability.
207 Probe for an input stream having a capability; returns true if the stream implements {@link StreamCapabilities} and its {@code hasCapabilities()} method returns true for the capability. @param in input stream @param capability capability to probe for @return true if the stream declares that it supports the capability.
208 Utility to shutdown the {@link ExecutorService} used by this class. Will wait up to a certain timeout for the ExecutorService to gracefully shutdown. @param logger Logger @param timeout the maximum time to wait @param unit the time unit of the timeout argument
209 Acquires a resource blocking if necessary until one becomes available.
210 Acquires a resource blocking if one is immediately available. Otherwise returns null.
211 Number of items available to be acquired. Mostly for testing purposes. @return the number available.
212 Constructs an instance of a {@code SingleFilePerBlockCache}. @param prefetchingStatistics statistics for this stream. @param maxBlocksCount max blocks count to be kept in cache at any time. @param trackerFactory tracker with statistics to update
213 Instantiate. @param executorDelegatee Executor to delegate to @param permitCount number of permits into the queue permitted @param fair should the semaphore be "fair" @param trackerFactory duration tracker factory.
214 Helper method to add the given entry to the head of the linked list. @param entry Block entry to add.
215 Indicates that this block is no longer of use and can be reclaimed.
216 Set the size of the buffer to be used. @param bufSize buffer size. @return FutureDataInputStreamBuilder.
217 Get the builder. This must be used after the constructor has been invoked to create the actual builder: it allows for subclasses to do things after construction. @return FutureDataInputStreamBuilder.
218 Get the value for the current thread, creating if needed. @return an instance.
219 Remove the reference for the current thread. @return any reference value which existed.
220 Set the new value for the current thread. @param newVal new reference to set for the active thread. @return the previously set value, possibly null
221 Merge this input range into the current one, if it is compatible. It is assumed that otherOffset is greater or equal the current offset, which typically happens by sorting the input ranges on offset. @param otherOffset the offset to consider merging @param otherEnd the end to consider merging @param other the underlying FileRange to add if we merge @param minSeek the minimum distance that we'll seek without merging the ranges together @param maxSize the maximum size that we'll merge into a single range @return true if we have merged the range into this one
222 Create a bulk delete operation. The default implementation returns an instance of {@link DefaultBulkDeleteOperation}. @param path base path for the operation. @return an instance of the bulk delete. @throws IllegalArgumentException any argument is invalid. @throws IOException if there is an IO problem.
223 Registers this expression with the specified factory.
224 Registers this expression with the specified factory.
225 Registers this expression with the specified factory.
226 Construct a Name {@link Expression} with a specified case sensitivity. @param caseSensitive if true the comparisons are case sensitive.
227 Find the relevant compression codec for the given file based on its filename suffix. @param file the filename to check @return the codec object
228 Resolves a property name to its client/server version if applicable. <p> NOTE: This method is public for testing purposes. @param mode client/server mode. @param template property name template. @return the resolved property name.
229 Returns suffix of cipher suite configuration. @return String configuration suffix
230 Returns the combination of this and another result. @param other other. @return result.
231 Negate this result. @return Result.
232 Create a new set of find options.
233 Asks the factory whether an expression is recognized.
234 Add a specific number of children to this expression. The children are popped off the head of the expressions. @param exprs deque of expressions from which to take the children @param count number of children to be added
235 Add a specific number of arguments to this expression. The children are popped off the head of the expressions. @param args deque of arguments from which to take the argument @param count number of children to be added
236 Construct a URI from a String with unescaped special characters that have non-standard semantics. e.g. /, ?, #. A custom parsing is needed to prevent misbehavior. @param pathString The input path in string form @return URI
237 Initialise the comparator to be used for sorting files. If multiple options are selected then the order is chosen in the following precedence: - Modification time (or access time if requested) - File size - File name
238 Is the command deprecated? @return boolean
239 The name of the command. Will first try to use the assigned name else fallback to the command's preferred name @return name of the command
240 If true, the last modified time, last access time, owner, group and permission information of the source file will be preserved as far as target {@link FileSystem} implementation allows. @param preserve preserve.
241 @param parent {@link MetricsCollector} using this record builder @param info metrics information @param rf @param mf @param acceptable
242 @param initialChunkCapacity the capacity of the first chunk to be allocated @param maxChunkSize the maximum size of any chunk allocated
243 Returns the pivot point in the list between the access entries and the default entries. This is the index of the first element in the list that is a default entry. @param aclBuilder ArrayList<AclEntry> containing entries to build @return int pivot point, or -1 if list contains no default entries
244 Create a snapshot with a default name. @param path The directory where snapshots will be taken. @return the snapshot path. @throws IOException IO failure @throws UnsupportedOperationException if the operation is unsupported
245 add option with value @param option option name
246 Create a table with headers @param headers list of headers
247 Does table have any rows @return boolean
248 Create an instance with a minimum interval between executions; stderr is not merged with stdout. @param interval interval in milliseconds between command executions.
249 Construct a token from the components. @param identifier the token identifier @param password the token's password @param kind the kind of token @param service the service for this token
250 Default constructor.
251 File Context constructor for use by {@link GlobBuilder}. @param fc file context @param pathPattern path pattern @param filter optional filter @param resolveSymlinks should symlinks be resolved.
252 Format: cmd: {operation} `path' {to `target'}: error string
253 If multiple clients with the same principal try to connect to the same server at the same time, the server assumes a replay attack is in progress. This is a feature of kerberos. In order to work around this, what is done is that the client backs off randomly and tries to initiate the connection again. The other problem is to do with ticket expiry. To handle that, a relogin is attempted.
254 Check if the FileSystem is a ViewFileSystem. @param fileSystem file system. @return true if the fileSystem is ViewFileSystem
255 Set quota for the given {@link Path}. @param src the target path to set quota for @param namespaceQuota the namespace quota (i.e., # of files/directories) to set @param storagespaceQuota the storage space quota to set @throws IOException IO failure
256 Set per storage type quota for the given {@link Path}. @param src the target path to set storage type quota for @param type the storage type to set @param quota the quota to set for the given storage type @throws IOException IO failure
257 Create a multipart uploader. @param basePath file path under which all files are uploaded @return a MultipartUploaderBuilder object to build the uploader @throws IOException if some early checks cause IO failures. @throws UnsupportedOperationException if support is checked early.
258 List the statuses of the files/directories in the given path if the path is a directory. Return the file's status and block locations If the path is a file. If a returned status is a file, it contains the file's block locations. @param f is the path @return an iterator that traverses statuses of the files/directories in the given path @throws FileNotFoundException If <code>f</code> does not exist @throws IOException If an I/O error occurred
259 List the statuses of the files/directories in the given path if the path is a directory. @param f given path @return the statuses of the files/directories in the given patch @throws IOException if an I/O error occurs.
260 Get the checksum of a file, if the FS supports checksums. @param f The file path @return The file checksum. The default return value is null, which indicates that no checksum algorithm is implemented in the corresponding FileSystem. @throws IOException IO failure
261 Set an xattr of a file or directory. The name must be prefixed with the namespace followed by ".". For example, "user.attr". <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to modify @param name xattr name. @param value xattr value. @throws IOException IO failure @throws UnsupportedOperationException if the operation is unsupported (default outcome).
262 Execute the actual open file operation. This is invoked from {@code FSDataInputStreamBuilder.build()} and from {@link DelegateToFileSystem} and is where the action of opening the file should begin. The base implementation performs a blocking call to {@link #open(Path, int)} in this call; the actual outcome is in the returned {@code CompletableFuture}. This avoids having to create some thread pool, while still setting up the expectation that the {@code get()} call is needed to evaluate the result. @param path path to the file @param parameters open file parameters from the builder. @return a future which will evaluate to the opened file. @throws IOException failure to resolve the link. @throws IllegalArgumentException unknown mandatory key
263 Open the file as a blocking call to {@link #open(Path, int)}. {@inheritDoc}
264 Open a file with the given set of options. The base implementation performs a blocking call to {@link #open(Path, int)}in this call; the actual outcome is in the returned {@code CompletableFuture}. This avoids having to create some thread pool, while still setting up the expectation that the {@code get()} call is needed to evaluate the result. @param path path to the file @param parameters open file parameters from the builder. @return a future which will evaluate to the opened file. @throws IOException failure to resolve the link. @throws IllegalArgumentException unknown mandatory key
265 Execute the actual open file operation. The base implementation performs a blocking call to {@link #open(Path, int)} in this call; the actual outcome is in the returned {@code CompletableFuture}. This avoids having to create some thread pool, while still setting up the expectation that the {@code get()} call is needed to evaluate the result. @param pathHandle path to the file @param parameters open file parameters from the builder. @return a future which will evaluate to the opened file. @throws IOException failure to resolve the link. @throws IllegalArgumentException unknown mandatory key @throws UnsupportedOperationException PathHandles are not supported. This may be deferred until the future is evaluated.
266 Retrieve all the storage policies supported by this file system. @return all storage policies supported by this filesystem. @throws IOException If an I/O error occurred.
267 Initialize the target filesystem for all mount points. @param mountPoints The mount points @return Mapping of mount point and the initialized target filesystems @throws RuntimeException when the target file system cannot be initialized
268 Build resolve result. Here's an example Mountpoint: fs.viewfs.mounttable.mt .linkRegex.replaceresolveddstpath:_:-#.^/user/(??&lt;username&gt;\w+) Value: /targetTestRoot/$username Dir path to test: viewfs://mt/user/hadoop_user1/hadoop_dir1 Expect path: /targetTestRoot/hadoop-user1/hadoop_dir1 resolvedPathStr: /user/hadoop_user1 targetOfResolvedPathStr: /targetTestRoot/hadoop-user1 remainingPath: /hadoop_dir1 @param resultKind resultKind. @param resolvedPathStr resolvedPathStr. @param targetOfResolvedPathStr targetOfResolvedPathStr. @param remainingPath remainingPath. @return targetFileSystem or null on exceptions.
269 This method is overridden because in ViewFileSystemOverloadScheme if overloaded scheme matches with mounted target fs scheme, file system should be created without going into {@literal fs.<scheme>.impl} based resolution. Otherwise it will end up in an infinite loop as the target will be resolved again to ViewFileSystemOverloadScheme as {@literal fs.<scheme>.impl} points to ViewFileSystemOverloadScheme. So, below method will initialize the {@literal fs.viewfs.overload.scheme.target.<scheme>.impl}. Other schemes can follow fs.newInstance
270 Construct a mergeLink or nfly.
271 Construct a simple link (i.e. not a mergeLink).
272 Use capture group named regexGroupNameOrIndexStr in mather to replace parsedDestPath. E.g. link: ^/user/(?<username>\\w+) => s3://$user.apache.com/_${user} srcMatcher is from /user/hadoop. Then the params will be like following. parsedDestPath: s3://$user.apache.com/_${user}, regexGroupNameOrIndexStr: user groupRepresentationStrSetInDest: {user:$user; user:${user}} return value will be s3://hadoop.apache.com/_hadoop @param parsedDestPath @param srcMatcher @param regexGroupNameOrIndexStr @param groupRepresentationStrSetInDest @return return parsedDestPath while ${var},$var replaced or parsedDestPath nothing found.
273 Do the decryption using inBuffer as input and outBuffer as output. Upon return, inBuffer is cleared; the decrypted data starts at outBuffer.position() and ends at outBuffer.limit();
274 Check whether context is initialized.
275 @return true if the configured parent znode exists @throws IOException raised on errors performing I/O. @throws InterruptedException interrupted exception.
276 Get the config variable prefix for the default mount table @return the config variable prefix for the default mount table
277 Create interceptor from config string. The string should be in replaceresolvedpath:wordToReplace:replaceString Note that we'll assume there's no ':' in the regex for the moment. @return Interceptor instance or null on bad config.
278 @return an underlying ReadableByteChannel implementation. @throws IllegalStateException if this socket does not have a channel
279 Return the length of the checksum file given the size of the actual file. @param file the file path. @param fileSize file size. @return checksum length.
280 @return a string indicating which filesystem volume we're checking. @throws IOException raised on errors performing I/O.
281 @return the filesystem mount point for the indicated volume. @throws IOException raised on errors performing I/O.
282 @return the amount of the volume full, as a percent.
283 Constructor @param file The name of the file to be read @param numOfRetries Number of read retries when ChecksumError occurs @param sum the type of Checksum engine @param chunkSize maximun chunk size @param checksumSize the number byte of each checksum @param verifyChecksum verify check sum.
284 Determine if a stream can do a byte buffer read via read(ByteBuffer buf)
285 Initialize.
286 Add the entry point as a context entry with the key {@link AuditConstants#PARAM_COMMAND} if it has not already been recorded. This is called via ToolRunner but may be used at any other entry point. @param tool object loaded/being launched.
287 Set optional int parameter for the Builder. @param key key. @param value value. @return generic type B. @see #opt(String, String)
288 This parameter is converted to a long and passed to {@link #optLong(String, long)} -all decimal precision is lost. @param key key. @param value value. @return generic type B. @see #opt(String, String) @deprecated use {@link #optDouble(String, double)}
289 Set optional long parameter for the Builder. @param key key. @param value value. @return generic type B. @deprecated use {@link #optLong(String, long)} where possible.
290 Pass an optional double parameter for the Builder. This parameter is converted to a long and passed to {@link #optLong(String, long)} -all decimal precision is lost. @param key key. @param value value. @return generic type B. @see #opt(String, String) @deprecated use {@link #optDouble(String, double)}
291 Set mandatory int option. @param key key. @param value value. @return generic type B. @see #must(String, String)
292 This parameter is converted to a long and passed to {@link #mustLong(String, long)} -all decimal precision is lost. @param key key. @param value value. @return generic type B. @deprecated use {@link #mustDouble(String, double)} to set floating point.
293 Set mandatory long option. @param key key. @param value value. @return generic type B. @see #must(String, String)
294 Set mandatory long option, despite passing in a floating point value. @param key key. @param value value. @return generic type B. @see #must(String, String)
295 Return the ith row of the column as a set of wrapped strings, each at most wrapWidth in length.
296 Returns a local File that the user can write output to. The caller provides both the eventual FS target name and the local working file. If the FS is local, we write directly into the target. If the FS is remote, we write into the tmp local area.
297 Get the effective permission for the AclEntry. <br> Recommended to use this API ONLY if client communicates with the old NameNode, needs to pass the Permission for the path to get effective permission, else use {@link AclStatus#getEffectivePermission(AclEntry)}. @param entry AclEntry to get the effective action @param permArg Permission for the path. However if the client is NOT communicating with old namenode, then this argument will not have any preference. @return Returns the effective permission for the entry. @throws IllegalArgumentException If the client communicating with old namenode and permission is not passed as an argument.
298 Constructor. @param user user. @param group group. @param permission permission.
299 Parses a string representation of an ACL into a AclEntry object.<br> The expected format of ACL entries in the string parameter is the same format produced by the {@link #toStringStable()} method. @param aclStr String representation of an ACL.<br> Example: "user:foo:rw-" @param includePermission for setAcl operations this will be true. i.e. Acl should include permissions.<br> But for removeAcl operation it will be false. i.e. Acl should not contain permissions.<br> Example: "user:foo,group:bar,mask::" @return Returns an {@link AclEntry} object
300 Returns a string representation guaranteed to be stable across versions to satisfy backward compatibility requirements, such as for shell command output or serialization. The format of this string representation matches what is expected by the {@link #parseAclSpec(String, boolean)} and {@link #parseAclEntry(String, boolean)} methods. @return stable, backward compatible string representation
301 Returns an arraylist of strings. @param str the string values @param delim delimiter to separate the values @return the arraylist of the separated string values
302 Returns a collection of strings. @param str comma separated string values @return an <code>ArrayList</code> of string values
303 Begin parsing permission stored in modeStr @param modeStr Permission mode, either octal or symbolic @param symbolic Use-case specific symbolic pattern to match against @throws IllegalArgumentException if unable to parse modeStr
304 The close operation will delete the destination file if it still exists. @throws IOException IO problems
305 Check the open state. @throws IllegalStateException if the stream is closed.
306 Atomically enter a state, verifying current state. @param current current state. null means "no check" @param next next state @throws IllegalStateException if the current state is not as expected
307 Write a series of bytes from the buffer, from the offset. Returns the number of bytes written. Only valid in the state {@code Writing}. Base class verifies the state but does no writing. @param buffer buffer. @param offset offset. @param length length of write. @return number of bytes written. @throws IOException trouble
308 Flush the output. Only valid in the state {@code Writing}. In the base class, this is a no-op @throws IOException any IO problem.
309 Set an attribute. If the value is non-null/empty, it will be used as a query parameter. @param key key to set @param value value.
310 Split up the string. Uses httpClient: make sure it is on the classpath. Any query param with a name but no value, e.g ?something is returned in the map with an empty string as the value. @param header URI to parse @return a map of parameters. @throws URISyntaxException failure to build URI from header.
311 Get the amount of data; if there is no buffer then the size is 0. @return the amount of data available to upload.
312 Resolve the path following any symlinks or mount points @param f to be resolved @return fully qualified resolved path @throws FileNotFoundException If <code>f</code> does not exist @throws AccessControlException if access denied @throws IOException If an IO Error occurred @throws UnresolvedLinkException If unresolved link occurred. Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>f</code> is not valid
313 Synchronize client metadata state. @throws IOException If an I/O error occurred. @throws UnsupportedOperationException If file system for <code>f</code> is not supported.
314 Prints the statistics to standard output. File System is identified by the scheme and authority.
315 Get the statistics for a particular file system. @param uri used as key to lookup STATISTICS_TABLE. Only scheme and authority part of the uri are used. @return a statistics object
316 Create a multipart uploader. @param basePath file path under which all files are uploaded @return a MultipartUploaderBuilder object to build the uploader @throws IOException if some early checks cause IO failures. @throws UnsupportedOperationException if support is checked early.
317 This method must be used to obtain the dir allocation context for a particular value of the context name. The context name must be an item defined in the Configuration object for which we want to control the dir allocations (e.g., <code>mapred.local.dir</code>). The method will create a context for that name if it doesn't already exist.
318 Get the current position in the output stream. @return the current position in the output stream
319 flush all currently written data to the file system. @deprecated Use {@link #hsync()} or {@link #hflush()} instead @throws IOException raised on errors performing I/O.
320 Splits a comma separated value <code>String</code>, trimming leading and trailing whitespace on each value. Duplicate and empty values are removed. @param str a comma separated <code>String</code> with values, may be null @return a <code>Collection</code> of <code>String</code> values, empty Collection if null String input
321 Log events to the static log for this class
322 Instantiate @param message error message
323 Instantiate, using the specified exit code as the exit code of the exception, irrespetive of any exit code supplied by any inner cause. @param exitCode exit code to declare @param message exception message @param cause inner cause
324 Convert any exception into a {@link RuntimeException}. If the caught exception is already of that type, it is typecast to a {@link RuntimeException} and returned. All other exception types are wrapped in a new instance of {@code ServiceStateException}. @param text text to use if a new exception is created @param fault exception or throwable @return a {@link RuntimeException} to rethrow
325 Convert any exception into a {@link RuntimeException}. All other exception types are wrapped in a new instance of {@code ServiceStateException}. @param fault exception or throwable @return a {@link RuntimeException} to rethrow
326 Create the service state model in the {@link Service.STATE#NOTINITED} state. @param name input name.
327 Is a state transition valid? There are no checks for current==proposed as that is considered a non-transition. using an array kills off all branch misprediction costs, at the expense of cache line misses. @param current current state @param proposed proposed new state @return true if the transition to a new state is valid
328 return the state text as the toString() value @return the current state's description
329 Basic exception handler -logs simple exceptions, then continues.
330 Handler for the JVM API for signal handling. @param s signal raised
331 Look up the handler for a signal. @param signalName signal name @return a handler if found
332 Create an exception with the specific exit code. @param exitCode exit code @param cause cause of the exception
333 Create an exception with the specific exit code and text. @param exitCode exit code @param message message to use in exception
334 Create a formatted exception. <p> This uses {@link String#format(String, Object...)} to build the formatted exception in the ENGLISH locale. <p> If the last argument is a throwable, it becomes the cause of the exception. It will also be used as a parameter for the format. @param exitCode exit code @param format format for message to use in exception @param args list of arguments
335 Create a formatted exception. <p> This uses {@link String#format(String, Object...)} to build the formatted exception in the ENGLISH locale. @param exitCode exit code @param cause inner cause @param format format for message to use in exception @param args list of arguments
336 Shutdown handler. Query the service hook reference -if it is still valid the {@link Service#stop()} operation is invoked.
337 Create an instance of the launcher. @param serviceClassName classname of the service
338 Record that an Exit Exception has been raised. Save it to {@link #serviceException}, with its exit code in {@link #serviceExitCode} @param exitException exception
339 Set the {@link #commandOptions} field to the result of {@link #createOptions()}; protected for subclasses and test access.
340 @return This creates all the configurations defined by {@link #getConfigurationsToCreate()} , ensuring that the resources have been pushed in. If one cannot be loaded it is logged and the operation continues except in the case that the class does load but it isn't actually a subclass of {@link Configuration}. @throws ExitUtil.ExitException if a loaded class is of the wrong type
341 Register a global listener, which receives notifications from the state change events of all services in the JVM @param l listener
342 unregister a global listener. @param l listener to unregister @return true if the listener was found (and then deleted)
343 Package-scoped method for testing -resets the global listener list
344 Notify local and global listeners of state changes. Exceptions raised by listeners are NOT passed up.
345 All initialization code needed by a service. This method will only ever be called once during the lifecycle of a specific service instance. Implementations do not need to be synchronized as the logic in {@link #init(Configuration)} prevents re-entrancy. The base implementation checks to see if the subclass has created a new configuration instance, and if so, updates the base class value @param conf configuration @throws Exception on a failure -these will be caught, possibly wrapped, and will trigger a service stop
346 If the passed object is an instance of {@link Service}, add it to the list of services managed by this {@link CompositeService} @param object object. @return true if a service is added, false otherwise.
347 Stop a service; if it is null do nothing. Exceptions are caught and logged at warn level. (but not Throwables). This operation is intended to be used in cleanup operations @param log the log to warn at @param service a service; may be null @return any exception that was caught; null if none was. @deprecated to be removed with 3.4.0. Use {@link #stopQuietly(Logger, Service)} instead.
348 Stop a service; if it is null do nothing. Exceptions are caught and logged at warn level. (but not Throwables). This operation is intended to be used in cleanup operations @param log the log to warn at @param service a service; may be null @return any exception that was caught; null if none was. @see ServiceOperations#stopQuietly(Service)
349 Probe to see if the input stream is an instance of ByteBufferPositionedReadable. If the stream is an FSDataInputStream, the wrapped stream is checked. @param in input stream @return true if the stream implements the interface (including a wrapped stream) and that it declares the stream capability.
350 Is the wrapped IO class loaded? @return true if the instance is loaded.
351 Convert an instance to a string form for output. This is a robust operation which will convert any JSON-generating exceptions into error text. @param instance non-null instance @return a JSON string
352 Convert a {@link FunctionRaisingIOE} as a {@link Supplier}. @param fun function to wrap @param <T> type of input @param <R> type of return value. @return a new function which invokes the inner function and wraps exceptions.
353 clone by converting to JSON and back again. This is much less efficient than any Java clone process. @param instance instance to duplicate @return a new instance @throws IOException IO problems.
354 Deserialize from a byte array. @param bytes byte array @throws IOException IO problems @throws EOFException not enough data @return byte array.
355 Construct from a given string. @param utf8 input utf8.
356 @return Write a UTF-8 encoded string. @see DataOutput#writeUTF(String) @param out input out. @param s input s. @throws IOException raised on errors performing I/O.
357 Skips over one UTF8 in the input. @param in datainput. @throws IOException raised on errors performing I/O.
358 Positions the reader before its <code>n</code>th value. @param n n key. @throws IOException raised on errors performing I/O.
359 Return the <code>n</code>th value in the file. @param n n key. @param value value. @throws IOException raised on errors performing I/O. @return writable.
360 Constructs a new empty buffer.
361 Returns the current contents of the buffer. Data is only valid to {@link #getLength()}. @return the current contents of the buffer.
362 Returns the length of the valid data currently in the buffer. @return the length of the valid data currently in the buffer.
363 @return Resets the buffer to empty.
364 Compare two Object. @param a the first object to be compared. @param b the second object to be compared. @return compare result.
365 Lexicographic order of binary data. @param b1 b1. @param s1 s1. @param l1 l1. @param b2 b2. @param s2 s2. @param l2 l2. @return compare bytes.
366 Compute hash for binary data. @param bytes bytes. @param length length. @return hash for binary data.
367 Parse a float from a byte array. @param bytes bytes. @param start start. @return float from a byte array
368 Parse a long from a byte array. @param bytes bytes. @param start start. @return long from a byte array
369 Reads a zero-compressed encoded integer from a byte array and returns it. @param bytes byte array with the encoded integer @param start start index @throws IOException raised on errors performing I/O. @return deserialized integer
370 Create a BytesWritable using the byte array as the initial value. @param bytes This array becomes the backing storage for the object.
371 Get the data from the BytesWritable. @deprecated Use {@link #getBytes()} instead. @return data from the BytesWritable.
372 Get the current size of the buffer. @deprecated Use {@link #getLength()} instead. @return current size of the buffer.
373 Change the capacity of the backing storage. The data is preserved. @param capacity The new capacity in bytes.
374 Get the size of the buffer pool, for the specified buffer type. @param direct Whether the size is returned for direct buffers @return The size
375 Issue a request to readahead on the given file descriptor. @param identifier a textual identifier that will be used in error messages (e.g. the file name) @param fd the file descriptor to read ahead @param curPos the current offset at which reads are being issued @param readaheadLength the configured length to read ahead @param maxOffsetToRead the maximum offset that will be readahead (useful if, for example, only some segment of the file is requested by the user). Pass {@link Long#MAX_VALUE} to allow readahead to the end of the file. @param lastReadahead the result returned by the previous invocation of this function on this file descriptor, or null if this is the first call @return an object representing this outstanding request, or null if no readahead was performed
376 Append a key to a set. The key must be strictly greater than the previous key added to the set. @param key input key. @throws IOException raised on errors performing I/O.
377 Read the next key in a set into <code>key</code>. @param key input key. @return Returns true if such a key exists and false when at the end of the set. @throws IOException raised on errors performing I/O.
378 Returns the key associated with the most recent call to {@link #seek(long)}, {@link #next(Writable)}, or {@link #get(long,Writable)}. @return key key. @throws IOException raised on errors performing I/O.
379 Checks whether the current process has desired access rights on the given path. Longer term this native function can be substituted with JDK7 function Files#isReadable, isWritable, isExecutable. @param path input path @param desiredAccess ACCESS_READ, ACCESS_WRITE or ACCESS_EXECUTE @return true if access is allowed @throws IOException I/O exception on error
380 @return Return true if the JNI-based native IO extensions are available.
381 @return Return true if the JNI-based native IO extensions are available.
382 Return true if the JNI-based native CRC extensions are available.
383 Unmaps the block from memory. See munmap(2). There isn't any portable way to unmap a memory region in Java. So we use the sun.nio method here. Note that unmapping a memory region could cause crashes if code continues to reference the unmapped code. However, if we don't manually unmap the memory, we are dependent on the finalizer to do it, and we have no idea when the finalizer will run. @param buffer The buffer to unmap.
384 Forcibly free the direct buffer. @param buffer buffer.
385 Writes bytes from a DataInput directly into the buffer. @param in data input. @param length length. @throws IOException raised on errors performing I/O.
386 Construct a new EnumSetWritable. If the <tt>value</tt> argument is null or its size is zero, the <tt>elementType</tt> argument must not be null. If the argument <tt>value</tt>'s size is bigger than zero, the argument <tt>elementType</tt> is not be used. @param value enumSet value. @param elementType elementType.
387 Constructs a new empty buffer.
388 Resets the data that the buffer reads. @param input input. @param length length.
389 Resets the data that the buffer reads. @param input input. @param start start. @param length length.
390 Returns the current position in the input. @return position.
391 Returns the index one greater than the last valid character in the input stream buffer. @return length.
392 Constructor with schema name and provided all options. Note the options may contain additional information for the erasure codec to interpret further. @param allOptions all schema options
393 Constructor with key parameters provided. @param codecName codec name @param numDataUnits number of data units used in the schema @param numParityUnits number os parity units used in the schema
394 Get required data blocks count in a BlockGroup. @return count of required data blocks
395 Get required parity blocks count in a BlockGroup. @return count of required parity blocks
396 Get a specific coder factory defined by codec name and coder name. @param codecName name of the codec @param coderName name of the coder @return the specific coder, null if not exist
397 Calculating and organizing BlockGroup, to be called by ECManager @param dataBlocks Data blocks to compute parity blocks against @param parityBlocks To be computed parity blocks @return ECBlockGroup.
398 Get erased blocks count @return erased count of blocks
399 Find out how many blocks are erased. @param inputBlocks all the input blocks @return number of erased blocks
400 Convert an array of this chunks to an array of ByteBuffers @param chunks chunks to convert into buffers @return an array of ByteBuffers
401 Which blocks were erased ? For XOR it's simple we only allow and return one erased block, either data or parity. @param blockGroup blockGroup. @return output blocks to recover
402 We have all the data blocks and parity blocks as input blocks for recovering by default. It's codec specific @param blockGroup blockGroup. @return input blocks
403 Compute the sum of two fields @param x input field @param y input field @return result of addition
404 Compute the multiplication of two fields @param x input field @param y input field @return result of multiplication
405 Compute the division of two fields @param x input field @param y input field @return x/y
406 Compute power n of a field @param x input field @param n power @return x^n
407 Print data in hex format in a chunk. @param chunk chunk.
408 Allow change into input buffers or not while perform encoding/decoding. @return true if it's allowed to change inputs, false otherwise
409 Allow change into input buffers or not while perform encoding/decoding. @return true if it's allowed to change inputs, false otherwise
410 Allow to dump verbose info during encoding/decoding. @return true if it's allowed to do verbose dump, false otherwise.
411 Allow to dump verbose info during encoding/decoding. @return true if it's allowed to do verbose dump, false otherwise.
412 Ensure a buffer filled with ZERO bytes from current readable/writable position. @param buffer a buffer ready to read / write certain size bytes @return the buffer itself, with ZERO bytes written, the position and limit are not changed after the call
413 Ensure the buffer (either input or output) ready to read or write with ZERO bytes fully in specified length of len. @param buffer bytes array buffer @return the buffer itself
414 Convert to a ByteArrayEncodingState when it's backed by on-heap arrays.
415 Convert to a ByteBufferEncodingState when it's backed by on-heap arrays.
416 Convert to a ByteBufferDecodingState when it's backed by on-heap arrays.
417 Convert to a ByteArrayDecodingState when it's backed by on-heap arrays.
418 Ported from Intel ISA-L library. @param k k. @param a a. @param m m.
419 Invert a matrix assuming it's invertible. Ported from Intel ISA-L library. @param inMatrix inMatrix. @param outMatrix outMatrix. @param n n
420 Encode a group of inputs data and generate the outputs. It's also used for decoding because, in this implementation, encoding and decoding are unified. The algorithm is ported from Intel ISA-L library for compatible. It leverages Java auto-vectorization support for performance. @param gfTables gfTables. @param dataLen dataLen. @param inputs inputs. @param inputOffsets inputOffsets. @param outputs outputs. @param outputOffsets outputOffsets.
421 See above. Try to use the byte[] version when possible. @param gfTables gfTables. @param inputs inputs. @param outputs outputs.
422 Get the object performs Galois field arithmetics. @param fieldSize size of the field @param primitivePolynomial a primitive polynomial corresponds to the size @return GaloisField.
423 Given a Vandermonde matrix V[i][j]=x[j]^i and vector y, solve for z such that Vz=y. The output z will be placed in y. @param x the vector which describe the Vandermonde matrix @param y right-hand side of the Vandermonde system equation. will be replaced the output in this vector
424 A default constructor. isParity and isErased are false by default.
425 This method is called by the client of this class in case there are any corrections in the stream position. One common example is when client of this code removes starting BZ characters from the compressed stream. @param count count bytes are added to the reported bytes
426 This method reads a Byte from the compressed stream. Whenever we need to read from the underlying compressed stream, this method should be called instead of directly calling the read method of the underlying compressed stream. This method does important record keeping to have the statistic that how many bytes have been read off the compressed stream.
427 Called by recvDecodingTables() exclusively.
428 Method "mainQSort3", file "blocksort.c", BZip2 1.0.2
429 Returns the total number of uncompressed bytes output so far. @return the total (non-negative) number of uncompressed bytes output so far
430 Returns the total number of compressed bytes input so far. @return the total (non-negative) number of compressed bytes input so far
431 Returns the number of bytes remaining in the input buffers; normally called when finished() is true to determine amount of post-gzip-stream data. @return the total (non-negative) number of unprocessed bytes in input
432 Resets everything including the input buffers (user and direct).
433 Creates a new compressor with a default values for the compression block size and work factor. Compressed data will be generated in bzip2 format.
434 Returns the total number of compressed bytes output so far. @return the total (non-negative) number of compressed bytes output so far
435 Returns the total number of uncompressed bytes input so far. @return the total (non-negative) number of uncompressed bytes input so far
436 Allow derived classes to directly set the underlying stream. @param out Underlying output stream.
437 Creates a new decompressor with the default buffer size.
438 Sets input data for decompression. This should be called if and only if {@link #needsInput()} returns <code>true</code> indicating that more input data is required. (Both native and non-native versions of various Decompressors require that the data passed in via <code>b[]</code> remain unmodified until the caller is explicitly notified--via {@link #needsInput()}--that the buffer may be safely modified. With this requirement, an extra buffer-copy can be avoided.) @param b Input data @param off Start offset @param len Length
439 Returns true if the input data buffer is empty and {@link #setInput(byte[], int, int)} should be called to provide more input. @return <code>true</code> if the input data buffer is empty and {@link #setInput(byte[], int, int)} should be called in order to provide more input.
440 Fills specified buffer with uncompressed data. Returns actual number of bytes of uncompressed data. A return value of 0 indicates that {@link #needsInput()} should be called in order to determine if more input data is required. @param b Buffer for the uncompressed data @param off Start offset of the data @param len Size of the buffer @return The actual number of bytes of compressed data. @throws IOException raised on errors performing I/O.
441 Creates a new compressor with the default buffer size.
442 Fills specified buffer with compressed data. Returns actual number of bytes of compressed data. A return value of 0 indicates that needsInput() should be called in order to determine if more input data is required. @param b Buffer for the compressed data @param off Start offset of the data @param len Size of the buffer @return The actual number of bytes of compressed data.
443 Prepare the compressor to be used in a new stream with settings defined in the given Configuration @param conf Configuration from which new setting are fetched
444 Allow derived classes to directly set the underlying stream. @param in Underlying input stream. @throws IOException raised on errors performing I/O.
445 <p>Returns the number of bytes remaining in the input buffers; normally called when finished() is true to determine amount of post-stream data.</p> @return the total (non-negative) number of unprocessed bytes in input
446 Resets everything including the input buffers (user and direct).
447 Returns the total number of compressed bytes output so far. @return the total (non-negative) number of compressed bytes output so far
448 <p>Returns the total number of uncompressed bytes input so far.</p> @return the total (non-negative) number of uncompressed bytes input so far
449 Creates a new decompressor with the default buffer size.
450 Sets input data for decompression. This should be called if and only if {@link #needsInput()} returns <code>true</code> indicating that more input data is required. (Both native and non-native versions of various Decompressors require that the data passed in via <code>b[]</code> remain unmodified until the caller is explicitly notified--via {@link #needsInput()}--that the buffer may be safely modified. With this requirement, an extra buffer-copy can be avoided.) @param b Input data @param off Start offset @param len Length
451 Returns true if the input data buffer is empty and {@link #setInput(byte[], int, int)} should be called to provide more input. @return <code>true</code> if the input data buffer is empty and {@link #setInput(byte[], int, int)} should be called in order to provide more input.
452 Fills specified buffer with uncompressed data. Returns actual number of bytes of uncompressed data. A return value of 0 indicates that {@link #needsInput()} should be called in order to determine if more input data is required. @param b Buffer for the compressed data @param off Start offset of the data @param len Size of the buffer @return The actual number of bytes of uncompressed data. @throws IOException raised on errors performing I/O.
453 Creates a new compressor. @param directBufferSize size of the direct buffer to be used.
454 Fills specified buffer with compressed data. Returns actual number of bytes of compressed data. A return value of 0 indicates that needsInput() should be called in order to determine if more input data is required. @param b Buffer for the compressed data @param off Start offset of the data @param len Size of the buffer @return The actual number of bytes of compressed data.
455 Prepare the compressor to be used in a new stream with settings defined in the given Configuration @param conf Configuration from which new setting are fetched
456 Find the relevant compression codec for the codec's canonical class name or by codec alias. <p> Codec aliases are case insensitive. <p> The code alias is the short class name (without the package name). If the short class name ends with 'Codec', then there are two aliases for the codec, the complete short class name and the short class name without the 'Codec' ending. For example for the 'GzipCodec' codec class name the alias are 'gzip' and 'gzipcodec'. @param codecName the canonical class name of the codec @return the codec object
457 Return the number of leased {@link Compressor}s for this {@link CompressionCodec}. @param codec codec. @return the number of leased.
458 Return the number of leased {@link Decompressor}s for this {@link CompressionCodec}. @param codec codec. @return the number of leased
459 Return the appropriate type of the zlib compressor. @param conf configuration @return the appropriate type of the zlib compressor.
460 Return the appropriate type of the zlib decompressor. @param conf configuration @return the appropriate type of the zlib decompressor.
461 Load native library and set the flag whether to use native library. The method is also used for reset the flag modified by setNativeZlibLoaded
462 reinit the compressor with the given configuration. It will reset the compressor's compression level and compression strategy. Different from <tt>ZlibCompressor</tt>, <tt>BuiltInZlibDeflater</tt> only support three kind of compression strategy: FILTERED, HUFFMAN_ONLY and DEFAULT_STRATEGY. It will use DEFAULT_STRATEGY as default if the configured compression strategy is not supported.
463 Creates a new compressor using the specified compression level. Compressed data will be generated in ZLIB format. @param level Compression level #CompressionLevel @param strategy Compression strategy #CompressionStrategy @param header Compression header #CompressionHeader @param directBufferSize Size of the direct buffer to be used.
464 Returns the total number of compressed bytes output so far. @return the total (non-negative) number of compressed bytes output so far
465 Returns the total number of uncompressed bytes input so far. @return the total (non-negative) number of uncompressed bytes input so far
466 Creates a new decompressor. @param header header. @param directBufferSize directBufferSize.
467 Returns the total number of uncompressed bytes output so far. @return the total (non-negative) number of uncompressed bytes output so far
468 Returns the total number of compressed bytes input so far. @return the total (non-negative) number of compressed bytes input so far
469 Returns the number of bytes remaining in the input buffers; normally called when finished() is true to determine amount of post-gzip-stream data. @return the total (non-negative) number of unprocessed bytes in input
470 Resets everything including the input buffers (user and direct).
471 Parse the gzip trailer (assuming we're in the appropriate state). In order to deal with degenerate cases (e.g., user buffer is one byte long), we copy trailer bytes (all 8 of 'em) to a local buffer.</p> See http://www.ietf.org/rfc/rfc1952.txt for the gzip spec.
472 Serializes an integer to a binary stream with zero-compressed encoding. For -112 {@literal <=} i {@literal <=} 127, only one byte is used with the actual value. For other values of i, the first byte value indicates whether the integer is positive or negative, and the number of bytes that follow. If the first byte value v is between -113 and -116, the following integer is positive, with number of bytes that follow are -(v+112). If the first byte value v is between -121 and -124, the following integer is negative, with number of bytes that follow are -(v+120). Bytes are stored in the high-non-zero-byte-first order. @param stream Binary output stream @param i Integer to be serialized @throws IOException raised on errors performing I/O.
473 Reads a zero-compressed encoded long from input stream and returns it. @param stream Binary input stream @throws IOException raised on errors performing I/O. @return deserialized long from stream.
474 {@inheritDoc} @param direct whether we want a direct byte buffer or a heap one. @param length length of requested buffer. @return returns equal or next greater than capacity buffer from pool if already available and not garbage collected else creates a new buffer and return it.
475 Return buffer to the pool. @param buffer buffer to be returned.
476 Returns the Unicode Scalar Value (32-bit integer value) for the character at <code>position</code>. Note that this method avoids using the converter or doing String instantiation. @param position input position. @return the Unicode scalar value at position or -1 if the position is invalid or points to a trailing byte
477 Set to contain the contents of a string. @param string input string.
478 Set the Text to range of bytes. @param utf8 the data to copy from @param start the first position of the new string @param len the number of bytes of the new string
479 Append a range of bytes to the end of the given text. @param utf8 the data to copy from @param start the first position to append from utf8 @param len the number of bytes to append
480 Read a Text object whose length is already known. This allows creating Text from a stream which uses a different serialization format. @param in input in. @param len input len. @throws IOException raised on errors performing I/O.
481 @return Converts the provided byte array to a String using the UTF-8 encoding. If the input is malformed, replace by a default value. @param utf8 input utf8. @throws CharacterCodingException when a character encoding or decoding error occurs.
482 @return Converts the provided byte array to a String using the UTF-8 encoding. If <code>replace</code> is true, then malformed input is replaced with the substitution character, which is U+FFFD. Otherwise the method throws a MalformedInputException. @param utf8 input utf8. @param start input start. @param length input length. @param replace input replace. @throws CharacterCodingException when a character encoding or decoding error occurs.
483 Check if a byte array contains valid UTF-8. @param utf8 byte array @throws MalformedInputException if the byte array contains invalid UTF-8
484 Add a Class to the maps if it is not already present. @param clazz clazz.
485 constructor.
486 @deprecated only used for backwards-compatibility in the createWriter methods that take FileSystem.
487 Constructor. <p> Builds a key with a specified weight. @param value The value of <i>this</i> key. @param weight The weight associated to <i>this</i> key.
488 The default cleanup. Subclasses can override this with a custom cleanup
489 Converts the given <code>List&lt;T&gt;</code> to a an array of <code>T[]</code>. @param list the list to convert @param <T> Generics Type T. @throws ArrayIndexOutOfBoundsException if the list is empty. Use {@link #toArray(Class, List)} if the list may be empty. @return T Array.
490 Constructs a new empty buffer.
491 Resets the data that the buffer reads. @param input input. @param length length.
492 Resets the data that the buffer reads. @param input input. @param start start. @param length length.
493 Returns the current position in the input. @return the current position in the input.
494 Returns the length of the input. @return length of the input.
495 Constructs, reads and returns an instance. @param in in. @throws IOException raised on errors performing I/O. @return MD5Hash.
496 Construct a hash value for the content from the InputStream. @param in input stream. @return MD5Hash. @throws IOException raised on errors performing I/O.
497 Construct a hash value for a byte array. @param data data. @param start start. @param len len. @return MD5Hash.
498 Construct a hash value for an array of byte array. @param dataArr dataArr. @param start start. @param len len. @return MD5Hash.
499 Returns a hash code value for this object. Only uses the first 4 bytes, since md5s are evenly distributed.
500 Sets the digest value from a hex string. @param hex hex.
501 Try to instantiate a protocol buffer of the given message class from the given input stream. @param protoClass the class of the generated protocol buffer @param dataIn the input stream to read from @return the instantiated Message instance @throws IOException if an IO problem occurs
502 Ensure that any writes to the given file is written to the storage device that contains it. This method opens channel on given File and closes it once the sync is done.<br> Borrowed from Uwe Schindler in LUCENE-5588 @param fileToSync the file to fsync @throws IOException raised on errors performing I/O.
503 @param value value.
504 <p> A retry policy for RemoteException Set a default policy with some explicit handlers for specific exceptions. </p> @param defaultPolicy defaultPolicy. @param exceptionToPolicyMap exceptionToPolicyMap. @return RetryPolicy.
505 Is the queue empty for more than the given time in millisecond?
506 Current time from some arbitrary time base in the past, counting in milliseconds, and not affected by settimeofday or similar system clock changes. This is appropriate to use when computing how much longer to wait for an interval to expire. @return a monotonic clock that counts in milliseconds.
507 <p> A retry policy where RemoteException and SaslException are not retried, other individual exception types can have RetryPolicy overrides, and any other exception type without an override is not retried. </p> @param defaultPolicy defaultPolicy. @param exceptionToPolicyMap exceptionToPolicyMap. @return RetryPolicy.
508 Since this is incapable of returning multiple connection IDs, simply return the first one. In most cases, the connection ID should be the same for all proxies.
509 Parse the given string as a MultipleLinearRandomRetry object. The format of the string is "t_1, n_1, t_2, n_2, ...", where t_i and n_i are the i-th pair of sleep time and number of retries. Note that the white spaces in the string are ignored. @param s input string. @return the parsed object, or null if the parsing fails.
510 <p> Set a default policy with some explicit handlers for specific exceptions. </p> @param exceptionToPolicyMap exceptionToPolicyMap. @param defaultPolicy defaultPolicy. @return RetryPolicy.
511 A convenient method to create an {@link IOException}. @param exceptions IOException List. @return IOException.
512 Get the number of data blocks. @return the number of data blocks.
513 Get the name of the default compression algorithm. @return the name of the default compression algorithm.
514 Decoding the variable-length integer. Synonymous to <code>(int)Utils#readVLong(in)</code>. @param in input stream @return the decoded integer @throws IOException raised on errors performing I/O. @see Utils#readVLong(DataInput)
515 Encoding an integer into a variable-length encoding format. Synonymous to <code>Utils#writeVLong(out, n)</code>. @param out output stream @param n The integer to be encoded @throws IOException raised on errors performing I/O. @see Utils#writeVLong(DataOutput, long)
516 Is the TFile sorted? @return true if TFile is sorted.
517 Get the number of key-value pair entries in TFile. @return the number of key-value pairs in TFile
518 Close the reader. The state of the Reader object is undefined after close. Calling close() for multiple times has no effect.
519 Get the string representation of the comparator. @return If the TFile is not sorted by keys, an empty string will be returned. Otherwise, the actual comparator string that is provided during the TFile creation time will be returned.
520 Constructing a ByteArray from a {@link BytesWritable}. @param other other.
521 Wrap a whole byte array as a RawComparable. @param buffer the byte array buffer.
522 Find the smallest Block index whose starting offset is greater than or equal to the specified offset. @param offset User-specific offset. @return the index to the data Block if such block exists; or -1 otherwise.
523 @param key input key. @return the ID of the first block that contains key >= input key. Or -1 if no such block exists.
524 @param key input key. @return the ID of the first block that contains key > input key. Or -1 if no such block exists.
525 @see java.lang.Comparable#compareTo(java.lang.Object)
526 Copy the key into user supplied buffer. @param buf The buffer supplied by user. The length of the buffer must not be shorter than the key length. @return The length of the key. @throws IOException raised on errors performing I/O.
527 Copy value into user-supplied buffer. User supplied buffer must be large enough to hold the whole value (starting from the offset). The value part of the key-value pair pointed by the current cursor is not cached and can only be examined once. Calling any of the following functions more than once without moving the cursor will result in exception: {@link #getValue(byte[])}, {@link #getValue(byte[], int)}, {@link #getValueStream}. @param buf buf. @param offset offset. @return the length of the value. Does not require isValueLengthKnown() to be true. @throws IOException raised on errors performing I/O.
528 Get the uncompressed size of the block. @return uncompressed size of the block.
529 Get the compressed size of the block. @return compressed size of the block.
530 Get the starting position of the block in the file. @return the starting position of the block in the file.
531 Construct an OutputStream from the given DataOutput. If 'out' is already an OutputStream, simply returns it. Otherwise, wraps it in an OutputStream. @param out the DataOutput to wrap @return an OutputStream instance that outputs to 'out'
532 Lexicographically compare two arrays. @param buffer1 left operand @param buffer2 right operand @param offset1 Where to start comparing in the left buffer @param offset2 Where to start comparing in the right buffer @param length1 How much to compare from the left buffer @param length2 How much to compare from the right buffer @return 0 if equal, < 0 if left is less than right, etc.
533 Constructs a new empty buffer.
534 Returns the current contents of the buffer. Data is only valid to {@link #getLength()}. @return data byte.
535 Returns the length of the valid data currently in the buffer. @return length.
536 Overwrite an integer into the internal buffer. Note that this call can only be used to overwrite existing data in the buffer, i.e., buffer#count cannot be increased, and DataOutputStream#written cannot be increased. @param v v. @param offset offset. @throws IOException raised on errors performing I/O.
537 Return the distance between two nodes It is assumed that the distance from one node to its parent is 1 The distance between two nodes is calculated by summing up their distances to their closest common ancestor. @param node1 one node @param node2 another node @return the distance between node1 and node2 which is zero if they are the same or {@link Integer#MAX_VALUE} if node1 or node2 do not belong to the cluster
538 Checks whether a node belongs to the scope. @param node the node to check. @param scope scope to check. @return true if node lies within the scope
539 Get the path components of a node. @param node a non-null node @return the path of a node
540 @return this node's path as its string representation
541 Remove a node Update node counter and rack counter if necessary @param node node to be removed; can be null
542 Given a string representation of a rack, return its children @param loc a path-like string representation of a rack @return a newly allocated list with all the node's children
543 Given a string representation of a node, return its reference @param loc a path-like string representation of a node @return a reference to the node; null if the node is not in the tree
544 convert a network tree to a string.
545 Check if two nodes are on the same rack @param node1 one node (can be null) @param node2 another node (can be null) @return true if node1 and node2 are on the same rack; false otherwise @exception IllegalArgumentException when either node1 or node2 is null, or node1 or node2 do not belong to the cluster
546 Randomly choose one node under <i>parentNode</i>, considering the exclude nodes and scope. Should be called with {@link #netlock}'s readlock held. @param parentNode the parent node @param excludedScopeNode the node corresponding to the exclude scope. @param excludedNodes a collection of nodes to be excluded from @param totalInScopeNodes total number of nodes under parentNode, excluding the excludedScopeNode @param availableNodes number of available nodes under parentNode that could be chosen, excluding excludedNodes @return the chosen node, or null if none can be chosen
547 Returns an integer weight which specifies how far away <i>node</i> is from <i>reader</i>. A lower value signifies that a node is closer. It uses network location to calculate the weight @param reader Node where data will be read @param node Replica of data @return weight
548 Internal function for update empty rack number for add or recommission a node. @param node node to be added; can be null
549 Transfers data from FileChannel using {@link FileChannel#transferTo(long, long, WritableByteChannel)}. Updates <code>waitForWritableTime</code> and <code>transferToTime</code> with the time spent blocked on the network and the time spent transferring data from disk to network respectively. Similar to readFully(), this waits till requested amount of data is transfered. @param fileCh FileChannel to transfer data from. @param position position within the channel where the transfer begins @param count number of bytes to transfer. @param waitForWritableTime nanoseconds spent waiting for the socket to become writable @param transferToTime nanoseconds spent transferring data @throws EOFException If end of input file is reached before requested number of bytes are transfered. @throws SocketTimeoutException If this channel blocks transfer longer than timeout for this stream. @throws IOException Includes any exception thrown by {@link FileChannel#transferTo(long, long, WritableByteChannel)}.
550 Given a collection of string representation of hosts, return a list of corresponding IP addresses in the textual representation. @param names a collection of string representations of hosts @return a list of corresponding IP addresses in the string format @see #normalizeHostName(String)
551 Get the host details as a string @param destHost destinatioon host (nullable) @param destPort destination port @param localHost local host (nullable) @return a string describing the destination host:port and the local host
552 Return an InetAddress for each interface that matches the given subnet specified using CIDR notation. @param subnet subnet specified using CIDR notation @param returnSubinterfaces whether to return IPs associated with subinterfaces @throws IllegalArgumentException if subnet is invalid @return ips.
553 Return free ports. There is no guarantee they will remain free, so ports should be used immediately. The number of free ports returned by this method should match argument {@code numOfPorts}. Num of ports provided in the argument should not exceed 25. @param numOfPorts Number of free ports to acquire. @return Free ports for binding a local socket.
554 Constructor. The mapping is not ready to use until {@link #setConf(Configuration)} has been called
555 cache a raw DNS mapping @param rawMapping the raw mapping to cache
556 Construct a node from its path @param path a concatenation of this node's location, the path separator, and its name
557 Construct a node from its name and its location @param name this node's name (can be null, must not contain {@link #PATH_SEPARATOR}) @param location this node's location
558 Construct a node from its name and its location @param name this node's name (can be null, must not contain {@link #PATH_SEPARATOR}) @param location this node's location @param parent this node's parent node @param level this node's level in the tree
559 Send callback and return whether or not the domain socket was closed as a result of processing. @param caller reason for call @param entries mapping of file descriptor to entry @param fdSet set of file descriptors @param fd file descriptor @return true if the domain socket was closed as a result of processing
560 Return true if the file descriptor is currently open. @return True if the file descriptor is currently open.
561 Close the Socket.
562 Closes selectors that are idle for IDLE_TIMEOUT (10 sec). It does not traverse the whole list, just over the one that have crossed the timeout.
563 Get dependencies in the topology for a given host @param name - host name for which we are getting dependency @return a list of hosts dependent on the provided host name
564 Set the timeout for reads from this stream. Note: the behavior here can differ subtly depending on whether the underlying socket has an associated Channel. In particular, if there is no channel, then this call will affect the socket timeout for <em>all</em> readers of this socket. If there is a channel, then this call will affect the timeout only for <em>this</em> stream. As such, it is recommended to only create one {@link SocketInputWrapper} instance per socket. @param timeoutMs the new timeout, 0 for no timeout @throws SocketException if the timeout cannot be set
565 Returns all the IPs associated with the provided interface, if any, in textual form. @param strInterface The name of the network interface or sub-interface to query (eg eth0 or eth0:0) or the string "default" @param returnSubinterfaces Whether to return IPs associated with subinterfaces of the given interface @return A string vector of all the IPs associated with the provided interface. The local host IP is returned if the interface name "default" is specified or there is an I/O error looking for the given interface. @throws UnknownHostException If the given interface is invalid
566 Returns all the IPs associated with the provided interface, if any, as a list of InetAddress objects. @param strInterface The name of the network interface or sub-interface to query (eg eth0 or eth0:0) or the string "default" @param returnSubinterfaces Whether to return IPs associated with subinterfaces of the given interface @return A list of all the IPs associated with the provided interface. The local host IP is returned if the interface name "default" is specified or there is an I/O error looking for the given interface. @throws UnknownHostException If the given interface is invalid
567 Given a string representation of a node group for a specific network location @param loc a path-like string representation of a network location @return a node group string
568 Generate a string listing the switch mapping implementation, the mapping for every known node and the number of nodes and unique switches known about -each entry to a separate line. @return a string that can be presented to the ops team or used in debug messages.
569 Query for a {@link DNSToSwitchMapping} instance being on a single switch. <p> This predicate simply assumes that all mappings not derived from this class are multi-switch. @param mapping the mapping to query @return true if the base class says it is single switch, or the mapping is not derived from this class.
570 Return the summary information for given index. @param recorderName The name of the recorder. @param idx The index value. @return The summary information.
571 Prints generic command-line argurments and usage information. @param out stream to write usage information to.
572 Determine whether the log of <code>clazz</code> is Log4j implementation. @param clazz a class to be determined @return true if the log of <code>clazz</code> is Log4j implementation.
573 Create a log helper with a specified primary recorder name; this can be used in conjunction with {@link #record(String, long, double...)} to set up primary and dependent recorders. See {@link #record(String, long, double...)} for more details. @param minLogPeriodMs The minimum period with which to log; do not log more frequently than this. @param primaryRecorderName The name of the primary recorder.
574 Record some set of values at the specified time into this helper. This can be useful to avoid fetching the current time twice if the caller has already done so for other purposes. This additionally allows the caller to specify a name for this recorder. When multiple names are used, one is denoted as the primary recorder. Only recorders named as the primary will trigger logging; other names not matching the primary can <i>only</i> be triggered by following the primary. This is used to coordinate multiple logging points. A primary can be set via the {@link #LogThrottlingHelper(long, String)} constructor. If no primary is set in the constructor, then the first recorder name used becomes the primary. If multiple names are used, they maintain entirely different sets of values and summary information. For example: <pre>{@code // Initialize "pre" as the primary recorder name LogThrottlingHelper helper = new LogThrottlingHelper(1000, "pre"); LogAction preLog = helper.record("pre", Time.monotonicNow()); if (preLog.shouldLog()) { // ... } double eventsProcessed = ... // perform some action LogAction postLog = helper.record("post", Time.monotonicNow(), eventsProcessed); if (postLog.shouldLog()) { // ... // Can use postLog.getStats(0) to access eventsProcessed information } }</pre> Since "pre" is the primary recorder name, logging to "pre" will trigger a log action if enough time has elapsed. This will indicate that "post" should log as well. This ensures that "post" is always logged in the same iteration as "pre", yet each one is able to maintain its own summary information. <p>Other behavior is the same as {@link #record(double...)}. @param recorderName The name of the recorder. This is used to check if the current recorder is the primary. Other names are arbitrary and are only used to differentiate between distinct recorders. @param currentTimeMs The current time. @param values The values to log. @return The LogAction for the specified recorder. @see #record(double...)
575 Does the given string need to be quoted? @param str the string to check @return does the string contain any of the active html characters?
576 Quote the given item to make it html-safe. @param item the string to quote @return the quoted string
577 Add a Jersey resource package. @param packageName The Java package name containing the Jersey resource. @param pathSpec The path spec for the servlet
578 Add a servlet in the server. @param name The name of the servlet (can be passed as null) @param pathSpec The path spec for the servlet @param clazz The servlet class
579 Add an internal servlet in the server. Note: This method is to be used for adding servlets that facilitate internal communication and not for user facing functionality. For servlets added using this method, filters are not enabled. @param name The name of the servlet (can be passed as null) @param pathSpec The path spec for the servlet @param clazz The servlet class
580 Define a filter for a context and set up default url mappings. @param ctx ctx. @param name name. @param classname classname. @param parameters parameters. @param urls urls.
581 Bind using single configured port. If findPort is true, we will try to bind after incrementing port till a free port is found. @param listener jetty listener. @param port port which is set in the listener. @throws Exception
582 We cannot use valueOf since the AllowFrom enum differs from its value Allow-From. This is a helper method that does exactly what valueof does, but allows us to handle the AllowFrom issue gracefully. @param value - String must be DENY, SAMEORIGIN or ALLOW-FROM. @return XFrameOption or throws IllegalException.
583 Create file monitoring task to be scheduled using a standard Java {@link java.util.Timer} instance. @param filePaths The path to the file to monitor. @param onFileChange The function to call when the file has changed. @param onChangeFailure The function to call when an exception is thrown during the file change processing.
584 Return the property value if it's non-negative and throw an exception if it's not. @param key the property key @param defaultValue the default value
585 Throw a {@link MetricsException} if the given property is not set. @param key the key to validate
586 If the sink isn't set to ignore errors, throw a {@link MetricsException} if the stream encountered an exception. The message parameter will be used as the new exception's message with the current file name ({@link #currentFilePath}) appended to it. @param message the exception message. The message will have a colon and the current file name ({@link #currentFilePath}) appended to it. @throws MetricsException thrown if there was an error and the sink isn't ignoring errors
587 If the sink isn't set to ignore errors, throw a new {@link MetricsException}. The message parameter will be used as the new exception's message with the current file name ({@link #currentFilePath}) appended to it. @param message the exception message. The message will have a colon and the current file name ({@link #currentFilePath}) appended to it.
588 Extract the roll interval from the configuration and return it in milliseconds. @return the roll interval in millis
589 If the sink isn't set to ignore errors, wrap the Throwable in a {@link MetricsException} and throw it. The message parameter will be used as the new exception's message with the current file name ({@link #currentFilePath}) and the Throwable's string representation appended to it. @param message the exception message. The message will have a colon, the current file name ({@link #currentFilePath}), and the Throwable's string representation (wrapped in square brackets) appended to it. @param t the Throwable to wrap
590 Update the cache and return the current cached record @param mr the update record @param includingTags cache tag values (for later lookup by name) if true @return the updated cache record
591 Puts a string into the buffer by first writing the size of the string as an int, followed by the bytes of the string, padded if necessary to a multiple of 4. @param s the string to be written to buffer at offset location
592 The method sends metrics to Ganglia servers. The method has been taken from org.apache.hadoop.metrics.ganglia.GangliaContext31 with minimal changes in order to keep it in sync. @param groupName The group name of the metric @param name The metric name @param type The type of the metric @param value The value of the metric @param gConf The GangliaConf for this metric @param gSlope The slope for this metric @throws IOException raised on errors performing I/O.
593 The method sends metrics to Ganglia servers. The method has been taken from org.apache.hadoop.metrics.ganglia.GangliaContext30 with minimal changes in order to keep it in sync. @param groupName The group name of the metric @param name The metric name @param type The type of the metric @param value The value of the metric @param gConf The GangliaConf for this metric @param gSlope The slope for this metric @throws IOException raised on errors performing I/O.
594 Dequeue one element from head of the queue, will block if queue is empty @return the first element @throws InterruptedException
595 Construct a metrics record @param info {@link MetricsInfo} of the record @param timestamp of the record @param tags of the record @param metrics of the record
596 Sometimes, the request time observed by the client is much longer than the queue + process time on the RPC server.Perhaps the RPC request 'waiting enQueue' took too long on the RPC server, so we should add enQueue time to RpcMetrics. See HADOOP-18840 for details. Add an RPC enqueue time sample @param enQTime the queue time
597 Add an RPC queue time sample @param qTime the queue time
598 Add an RPC processing time sample @param processingTime the processing time
599 Add the file write latency to {@link MutableQuantiles} metrics. @param writeLatency file write latency in microseconds
600 Add the file read latency to {@link MutableQuantiles} metrics. @param readLatency file read latency in microseconds
601 Convenience method to initialize the metrics system @param prefix for the metrics system configuration @return the metrics system instance
602 @return the metrics system object
603 Shutdown the metrics system
604 Sample all the mutable metrics and put the snapshot in the builder @param builder to contain the metrics snapshot @param all get all the metrics even if the values are not changed.
605 Retrieve a map of metric name {@literal ->} (aggregate). Filter out entries that don't have at least minSamples. @param minSamples input minSamples. @return a map of peer DataNode Id to the average latency to that node seen over the measurement period.
606 Returns the number of samples that we have seen so far. @return long
607 Iterates over snapshot to capture all Avg metrics into rolling structure {@link MutableRollingAverages#averages}.
608 Get a metric info object. @param name Name of metric info object @param description Description of metric info object @return an interned metric info object
609 Get a metrics tag. @param info of the tag @param value of the tag @return an interned metrics tag
610 Add a number of samples and their sum to the running stat Note that although use of this method will preserve accurate mean values, large values for numSamples may result in inaccurate variance values due to the use of a single step of the Welford method for variance calculation. @param numSamples number of samples @param sum of the samples
611 Add a sample the running stat. @param x the sample number @return self
612 Returns mean of RPC Processing Times. @return double
613 @return the minimum value of the samples
614 @return the maximum value of the samples
615 Reset the all time min max of the metric
616 Get time for next login retry. This will allow the thread to retry with exponential back-off, until tgt endtime. Last retry is {@link #kerberosMinSecondsBeforeRelogin} before endtime. @param tgtEndTime EndTime of the tgt. @param now Current time. @param rp The retry policy. @return Time for next login retry.
617 @return the standard deviation of the samples
618 Try to remove extraneous items from the set of sampled items. This checks if an item is unnecessary based on the desired error bounds, and merges it with the adjacent item if it is.
619 Get the estimated value at the specified quantile. @param quantile Queried quantile, e.g. 0.50 or 0.99. @return Estimated value at that quantile.
620 Merges items from buffer into the samples array in one pass. This is more efficient than doing an insert on every item.
621 Get the list of cached netgroups @return list of cached groups
622 Returns true if a given netgroup is cached @param group check if this group is cached @return true if group is cached, false otherwise
623 Identify the Sasl Properties to be used for a connection with a client. @param clientAddress client's address @param ingressPort the port that the client is connecting @return the sasl properties to be used for the connection.
624 Identify the Sasl Properties to be used for a connection with a server. @param serverAddress server's address @param ingressPort the port that is used to connect to server @return the sasl properties to be used for the connection.
625 Get the host name from the principal name of format {@literal <}service {@literal >}/host@realm. @param principalName principal name of format as described above @return host name if the the string conforms to the above format, else null
626 Get the group memberships of a given user. If the user's group is not cached, this method may block. @param user User's name @return the group memberships of the user as Set @throws IOException if user does not exist
627 Refresh all user-to-groups mappings.
628 Print a line of output. This goes to any output file, or is logged at info. The output is flushed before and after, to try and stay in sync with JRE logging. @param format format string @param args any arguments
629 Get the list of users or groups returned by the specified command, and save them in the corresponding map. @param map map. @param mapName mapName. @param command command. @param staticMapping staticMapping. @param regex regex. @throws IOException raised on errors performing I/O. @return updateMapInternal.
630 Returns a command to run the given script. The script interpreter is inferred by platform: cmd on Windows or bash otherwise. @param script File script to run @return String[] command to run the script
631 Switch to the next available user to bind to. @param e AuthenticationException encountered when contacting LDAP
632 Writes <code>len</code> bytes from the specified byte array starting at offset <code>off</code> to this output stream. @param inBuf the data. @param off the start offset in the data. @param len the number of bytes to write. @exception IOException if an I/O error occurs.
633 Closes this output stream and releases any system resources associated with this stream. @exception IOException if an I/O error occurs.
634 Handles an {@link HttpInteraction} by applying the filtering logic. @param httpInteraction caller's HTTP interaction @throws IOException if there is an I/O error @throws ServletException if the implementation relies on the servlet API and a servlet API call has failed
635 Attempt to parse group names given that some names are not resolvable. Use the group id list to identify those that are not resolved. @param groupNames a string representing a list of group names @param groupIDs a string representing a list of group ids @return a linked list of group names @throws PartialGroupNameException
636 Convert the byte[] to a secret key @param key the byte[] to create the secret key from @return the secret key
637 Removes the existing TokenInformation from the SQL database to invalidate it. @param ident TokenInformation to remove from the SQL database.
638 Reset all data structures and mutable state.
639 For subclasses externalizing the storage, for example Zookeeper based implementations. @param key DelegationKey. @throws IOException raised on errors performing I/O.
640 Removes the existing DelegationKey from the SQL database to invalidate it. @param key DelegationKey to remove from the SQL database.
641 Add a previously used master key to cache (when NN restarts), should be called before activate(). @param key delegation key. @throws IOException raised on errors performing I/O.
642 For subclasses externalizing the storage, for example Zookeeper based implementations. @param key DelegationKey. @throws IOException raised on errors performing I/O.
643 Sets an external <code>DelegationTokenSecretManager</code> instance to manage creation and verification of Delegation Tokens. <p> This is useful for use cases where secrets must be shared across multiple services. @param secretManager a <code>DelegationTokenSecretManager</code> instance
644 It delegates to {@link AuthenticationFilter#getConfiguration(String, FilterConfig)} and then overrides the {@link AuthenticationHandler} to use if authentication type is set to <code>simple</code> or <code>kerberos</code> in order to use the corresponding implementation with delegation token support. @param configPrefix parameter not used. @param filterConfig parameter not used. @return hadoop-auth de-prefixed configuration for the filter and handler.
645 Returns the remote {@link UserGroupInformation} in context for the current HTTP request, taking into account proxy user requests. @return the remote {@link UserGroupInformation}, <code>NULL</code> if none.
646 This method checks if the given HTTP request corresponds to a management operation. @param request The HTTP request @return true if the given HTTP request corresponds to a management operation false otherwise @throws IOException In case of I/O error.
647 Is this token managed so that it can be renewed or cancelled? @return true, if it can be renewed and cancelled. @throws IOException raised on errors performing I/O.
648 Renew this delegation token. @param conf configuration. @return the new expiration time @throws IOException raised on errors performing I/O. @throws InterruptedException if the thread is interrupted.
649 Cancel this delegation token. @param conf configuration. @throws IOException raised on errors performing I/O. @throws InterruptedException if the thread is interrupted.
650 Get SASL wrapped InputStream if SASL QoP requires unwrapping, otherwise return original stream. Can be called only after saslConnect() has been called. @param in - InputStream used to make the connection @return InputStream that may be using SASL unwrap @throws IOException raised on errors performing I/O.
651 Get SASL wrapped OutputStream if SASL QoP requires wrapping, otherwise return original stream. Can be called only after saslConnect() has been called. @param out - OutputStream used to make the connection @return OutputStream that may be using wrapping @throws IOException raised on errors performing I/O.
652 Read more data and get them processed <br> Entry condition: ostart = ofinish <br> Exit condition: ostart <= ofinish <br> return (ofinish-ostart) (we have this many bytes for you), 0 (no data now, but could have more later), or -1 (absolutely no more data)
653 Closes this input stream and releases any system resources associated with the stream. <p> The <code>close</code> method of <code>SASLInputStream</code> calls the <code>close</code> method of its underlying input stream. @exception IOException if an I/O error occurs.
654 Constructs a new exception with the specified cause and a detail message of <tt>(cause==null ? null : cause.toString())</tt> (which typically contains the class and detail message of <tt>cause</tt>). @param cause the cause (which is saved for later retrieval by the {@link #getCause()} method). (A <tt>null</tt> value is permitted, and indicates that the cause is nonexistent or unknown.)
655 This method checks for a successful Kerberos login and returns true by default if it is not using Kerberos. @return true on successful login
656 Set the last login time for logged in user @param loginTime the number of milliseconds since the beginning of time
657 Create a UserGroupInformation for the given subject. This does not change the subject or acquire new credentials. The creator of subject is responsible for renewing credentials. @param subject the user's subject
658 Get the user's full principal name. @return the user's full principal name.
659 checks if logged in using kerberos @return true if the subject logged via keytab or has a Kerberos TGT
660 Get the authentication method from the subject @return AuthenticationMethod in the subject, null if not present.
661 get RealUser (vs. EffectiveUser) @return realUser running over proxy user
662 Get the user's login name. @return the user's name up to the first '/' or '@'.
663 Sets the authentication method in the subject @param authMethod authMethod.
664 Creates a reloadable trustmanager. The trustmanager reloads itself if the underlying trustore file has changed. @param type type of truststore file, typically 'jks'. @param location local path to the truststore file. @param password password of the truststore file. changed, in milliseconds. @throws IOException thrown if the truststore could not be initialized due to an IO error. @throws GeneralSecurityException thrown if the truststore could not be initialized due to a security error.
665 Construct a <code>Reloading509KeystoreManager</code> @param type type of keystore file, typically 'jks'. @param location local path to the keystore file. @param storePassword password of the keystore file. @param keyPassword The password of the key. @throws IOException raised on errors performing I/O. @throws GeneralSecurityException thrown if create encryptor error.
666 Get the resource @param name resource name @return URL or null for not found
667 Get an input stream attached to the configuration resource with the given <code>name</code>. @param name configuration resource name. @return an input stream attached to the resource.
668 Get a {@link Reader} attached to the configuration resource with the given <code>name</code>. @param name configuration resource name. @return a reader attached to the resource.
669 Returns a configured SSLEngine. @return the configured SSLEngine. @throws GeneralSecurityException thrown if the SSL engine could not be initialized. @throws IOException thrown if and IO error occurred while loading the server keystore.
670 If the given {@link HttpURLConnection} is an {@link HttpsURLConnection} configures the connection with the {@link SSLSocketFactory} and {@link HostnameVerifier} of this SSLFactory, otherwise does nothing. @param conn the {@link HttpURLConnection} instance to configure. @return the configured {@link HttpURLConnection} instance. @throws IOException if an IO error occurred.
671 Construct a Configured. @param conf the Configuration object.
672 Check if the executor had a timeout and logs the event. @param executor to check @param user user to log @return true if timeout has occurred
673 Returns the commands of this instance. Arguments with spaces in are presented with quotes round; other arguments are presented raw @return a string representation of the object.
674 Read from in. @param in DataInput. @throws IOException raised on errors performing I/O. @return AuthMethod.
675 Add user to the names of users allowed for this service. @param user The user name
676 Add group to the names of groups allowed for this service. @param group The group name
677 Remove user from the names of users allowed for this service. @param user The user name
678 Remove group from the names of groups allowed for this service. @param group The group name
679 Returns comma-separated concatenated single String of the set 'users' @return comma separated list of users
680 Returns comma-separated concatenated single String of the set 'groups' @return comma separated list of groups
681 Check whether the server principal is the TGS's principal @param ticket the original TGT (the ticket that is obtained when a kinit is done) @return true or false
682 Identify the Sasl Properties to be used for a connection with a client. @param clientAddress client's address @return the sasl properties to be used for the connection.
683 AES/CTR/NoPadding or SM4/CTR/NoPadding is required. @param codec crypto codec.
684 Get underlying stream position.
685 Read data from underlying stream.
686 Convert to CipherSuite from name, {@link #algoBlockSize} is fixed for certain cipher suite, just need to compare the name. @param name cipher suite name @return CipherSuite cipher suite
687 Returns if a given protocol version is supported. @param version version number @return true if the version is supported, else false
688 Generates an integer containing the user-specified number of random bits (right justified, with leading zeros). @param numBits number of random bits to be generated, where 0 {@literal <=} <code>numBits</code> {@literal <=} 32. @return int an <code>int</code> containing the user-specified number of random bits (right justified, with leading zeros).
689 Creates a <code>KeyProviderCryptoExtension</code> using a given {@link KeyProvider}. <p> If the given <code>KeyProvider</code> implements the {@link CryptoExtension} interface the <code>KeyProvider</code> itself will provide the extension functionality. If the given <code>KeyProvider</code> implements the {@link KeyProviderExtension} interface and the KeyProvider being extended by the <code>KeyProvider</code> implements the {@link CryptoExtension} interface, the KeyProvider being extended will provide the extension functionality. Otherwise, a default extension implementation will be used. @param keyProvider <code>KeyProvider</code> to use to create the <code>KeyProviderCryptoExtension</code> extension. @return a <code>KeyProviderCryptoExtension</code> instance using the given <code>KeyProvider</code>.
690 Get the current version of the key, which should be used for encrypting new data. @param name the base name of the key @return the version name of the current version of the key or null if the key version doesn't exist @throws IOException raised on errors performing I/O.
691 Generates a key material. @param size length of the key. @param algorithm algorithm to use for generating the key. @return the generated key. @throws NoSuchAlgorithmException no such algorithm exception.
692 Factory method to create a new EncryptedKeyVersion that can then be passed into {@link #decryptEncryptedKey}. Note that the fields of the returned EncryptedKeyVersion will only partially be populated; it is not necessarily suitable for operations besides decryption. @param keyName Key name of the encryption key use to encrypt the encrypted key. @param encryptionKeyVersionName Version name of the encryption key used to encrypt the encrypted key. @param encryptedKeyIv Initialization vector of the encrypted key. The IV of the encryption key used to encrypt the encrypted key is derived from this IV. @param encryptedKeyMaterial Key material of the encrypted key. @return EncryptedKeyVersion suitable for decryption.
693 Creates a <code>KeyProviderDelegationTokenExtension</code> using a given {@link KeyProvider}. <p> If the given <code>KeyProvider</code> implements the {@link DelegationTokenExtension} interface the <code>KeyProvider</code> itself will provide the extension functionality, otherwise a default extension implementation will be used. @param keyProvider <code>KeyProvider</code> to use to create the <code>KeyProviderDelegationTokenExtension</code> extension. @return a <code>KeyProviderDelegationTokenExtension</code> instance using the given <code>KeyProvider</code>.
694 Shutdown valueQueue executor threads
695 Get the stripped lock given a key name. @param keyName The key name.
696 Append new field to the context. @param field one of fields to append. @return the builder.
697 Append new field which contains key and value to the context. @param key the key of field. @param value the value of field. @return the builder.
698 Append new field which contains key and value to the context if the key("key:") is absent. @param key the key of field. @param value the value of field. @return the builder.
699 Convenience method to create a response for successful refreshes. @return void response
700 @return Convert a clientId byte[] to string. @param clientId input clientId.
701 Insert e into the backing queue. Return true if e is queued. Return false if the queue is full.
702 The number of rpc calls in the queue. @return The number of rpc calls in the queue.
703 Get all interfaces that the given protocol implements or extends which are assignable from VersionedProtocol.
704 @return Returns the server address for a given proxy. @param proxy input proxy.
705 Same as {@link #monotonicNow()} but returns its result in nanoseconds. Note that this is subject to the same resolution constraints as {@link System#nanoTime()}. @return a monotonic clock that counts in nanoseconds.
706 Returns the RPC remote user when invoked inside an RPC. Note this may be different than the current user if called within another doAs @return connection's UGI or null if not an RPC
707 Convert an array of Method into an array of hash codes @param methods @return array of hash codes
708 Lookup the responsible handler and return its result. This should be called by the RPC server when it gets a refresh request. @param identifier the resource to refresh @param args the arguments to pass on, not including the program name @throws IllegalArgumentException on invalid identifier @return the response from the appropriate handler
709 @param className wrapped exception, may be null @param msg may be null
710 If this remote exception wraps up one of the lookupTypes then return this exception. <p> Unwraps any IOException. @param lookupTypes the desired exception class. may be null. @return IOException, which is either the lookupClass exception or this.
711 Instantiate and return the exception wrapped up by this remote exception. <p> This unwraps any <code>Throwable</code> that has a constructor taking a <code>String</code> as a parameter. Otherwise it returns this. @return <code>Throwable</code>
712 Calculates a weighted sum of the times stored on the provided processing details to be used as the cost in {@link DecayRpcScheduler}. @param details Processing details @return The weighted sum of the times. The returned unit is the same as the default unit used by the provided processing details.
713 The number of RPC connections dropped due to too many connections. @return the number of dropped rpc connections
714 The number of open RPC conections @return the number of open rpc connections
715 Put the element in a queue of a specific priority. @param priority - queue priority @param e - element to add
716 Offer the element to queue of a specific priority. @param priority - queue priority @param e - element to add @return boolean if added to the given queue
717 Add exception classes for which server won't log stack traces. @param exceptionClass exception classes
718 Add exception classes which server won't log at all. @param exceptionClass exception classes
719 Constructs exception with the specified detail message. @param messages detailed message.
720 Constructs exception with the specified detail message. @param message detailed message.
721 Constructs exception with the specified detail message. @param messages detailed message.
722 Constructs exception with the specified detail message and cause. @param message message. @param cause that cause this exception @param cause the cause (can be retried by the {@link #getCause()} method). (A <tt>null</tt> value is permitted, and indicates that the cause is nonexistent or unknown.)
723 Constructs exception with the specified detail message and cause. @param message message. @param cause the cause (can be retried by the {@link #getCause()} method). (A <tt>null</tt> value is permitted, and indicates that the cause is nonexistent or unknown.)
724 Constructs exception with the specified detail message and cause. @param message message. @param cause that cause this exception @param cause the cause (can be retried by the {@link #getCause()} method). (A <tt>null</tt> value is permitted, and indicates that the cause is nonexistent or unknown.)
725 Adjust the stored cost for a given identity. @param identity the identity of the user whose cost should be adjusted @param costDelta the cost to add for the given identity
726 Given the cost for an identity, compute a scheduling decision. @param cost the cost for an identity @param identity the identity of the user @return scheduling decision from 0 to numLevels - 1
727 Return the IOException thrown by the remote server wrapped in ServiceException as cause. @param se ServiceException that wraps IO exception thrown by the server @return Exception wrapped in ServiceException or a new IOException that wraps the unexpected ServiceException.
728 Evaluate a protobuf call, converting any ServiceException to an IOException. @param call invocation to make @return the result of the call @param <T> type of the result @throws IOException any translated protobuf exception
729 Get the ByteString for frequently used fixed and small set strings. @param key string @return ByteString for frequently used fixed and small set strings.
730 Get the byte string of a non-null byte array. If the array is 0 bytes long, return a singleton to reduce object allocation. @param bytes bytes to convert. @return a value
731 Set call id and retry count for the next call. @param cid input cid. @param rc input rc. @param externalHandler input externalHandler.
732 Return the socket (ip+port) on which the RPC server is listening to. @return the socket (ip+port) on which the RPC server is listening to.
733 Return the set of all the configured auxiliary socket addresses NameNode RPC is listening on. If there are none, or it is not configured at all, an empty set is returned. @return the set of all the auxiliary addresses on which the RPC server is listening on.
734 Stop a RPC client connection A RPC client is closed only when its reference count becomes zero. @param client input client.
735 Override equals to avoid findbugs warnings
736 Construct. The type of the parameter is Object so as to keep the casting internal to this class. @param message message to wrap. @throws IllegalArgumentException if the class is not a protobuf message.
737 Setup response for the IPC Call on Fatal Error from a client that is using old version of Hadoop. The response is serialized using the previous protocol's response layout. @param response buffer to serialize the response into @param call {@link Call} to which we are setting up the response @param rv return value for the IPC Call, if the call was successful @param errorClass error class, if the the call failed @param error error message, if the call failed @throws IOException
738 Advances the index, which will change the current index if called enough times.
739 Set the exception when there is an error. Notify the caller the call is done. @param error exception thrown by the call; either local or remote
740 Set the return value when there is no error. Notify the caller the call is done. @param rpcResponse return value of the rpc call.
741 Read a byte from the stream. Send a ping if timeout on read. Retries if no failure is detected until a byte is read. @throws IOException for any IO problem other than socket timeout
742 Read bytes into a buffer starting from offset <code>off</code> Send a ping if timeout on read. Retries if no failure is detected until a byte is read. @return the total number of bytes read; -1 if the connection is closed.
743 @return Returns the remote side ip address when invoked inside an RPC Returns null in case of an error.
744 @return Returns the remote side port when invoked inside an RPC Returns 0 in case of an error.
745 Returns the SASL qop for the current call, if the current call is set, and the SASL negotiation is done. Otherwise return null Note this only returns established QOP for auxiliary port, and returns null for primary (non-auxiliary) port. Also note that CurCall is thread local object. So in fact, different handler threads will process different CurCall object. Also, only return for RPC calls, not supported for other protocols. @return the QOP of the current connection.
746 @return Return the priority level assigned by call queue to an RPC Returns 0 in case no priority is assigned.
747 @return Get the NumOpenConnections/User.
748 Accepts a collection of ip/cidr/host addresses @param hostEntries hostEntries. @param addressFactory addressFactory to convert host to InetAddress
749 Accepts an ip address and return true if ipAddress is in the list. {@link #includes(InetAddress)} should be preferred to avoid possibly re-resolving the ip address. @param ipAddress ipAddress. @return true if ipAddress is part of the list
750 Constructor which allows assigning the /proc/ directories. This will be used only in unit tests. @param procfsMemFile fake file for /proc/meminfo @param procfsCpuFile fake file for /proc/cpuinfo @param procfsStatFile fake file for /proc/stat @param procfsNetFile fake file for /proc/net/dev @param procfsDisksFile fake file for /proc/diskstats @param jiffyLengthInMillis fake jiffy length value
751 Read /proc/meminfo, parse and compute memory information. @param readAgain if false, read only on the first time
752 {@inheritDoc}
753 {@inheritDoc}
754 {@inheritDoc}
755 Read /proc/stat file, parse and calculate cumulative CPU.
756 {@inheritDoc}
757 {@inheritDoc}
758 Read /proc/diskstats file, parse and calculate amount of bytes read and written from/to disks.
759 Retrieve a value associated with a given key. @param k Generics Type k. @return Generics Type V.
760 Retrieve a value associated with a given key, and delete the relevant entry. @param k Generics Type k. @return Generics Type V.
761 Remove the element corresponding to the key, given key.hashCode() == index. @param key key. @param index index. @return If such element exists, return it. Otherwise, return null.
762 These attributes are recommended for maximum security but some JAXP transformers do not support them. If at any stage, we fail to set these attributes, then we won't try again for subsequent transformers. @param transformerFactory to update
763 Convert a string to long. The input string is first be trimmed and then it is parsed with traditional binary prefix. For example, "-1230k" will be converted to -1230 * 1024 = -1259520; "891g" will be converted to 891 * 1024^3 = 956703965184; @param s input string @return a long value represented by the input string.
764 Convert a long integer to a string with traditional binary prefix. @param n the value to be converted @param unit The unit, e.g. "B" for bytes. @param decimalPlaces The number of decimal places. @return a string with traditional binary prefix.
765 Format a percentage for presentation to the user. @param fraction the percentage as a fraction, e.g. 0.1 = 10% @param decimalPlaces the number of decimal places @return a string representation of the percentage
766 Given an array of bytes it will convert the bytes to a hex string representation of the bytes @param bytes bytes. @param start start index, inclusively @param end end index, exclusively @return hex string representation of the byte array
767 limitDecimalTo2. @param d double param. @return string value ("%.2f"). @deprecated use StringUtils.format("%.2f", d).
768 Exits the JVM if exit is enabled, rethrow provided exception or any raised error otherwise. Inner termination: either exit with the exception's exit code, or, if system exits are disabled, rethrow the exception. @param ee exit exception @throws ExitException if {@link System#exit(int)} is disabled and not suppressed by an Error @throws Error if {@link System#exit(int)} is disabled and one Error arise, suppressing anything else, even <code>ee</code>
769 Halts the JVM if halt is enabled, rethrow provided exception or any raised error otherwise. If halt is disabled, this method throws either the exception argument if no error arise, the first error if at least one arise, suppressing <code>he</code>. If halt is enabled, all throwables are caught, even errors. @param he the exception containing the status code, message and any stack trace. @throws HaltException if {@link Runtime#halt(int)} is disabled and not suppressed by an Error @throws Error if {@link Runtime#halt(int)} is disabled and one Error arise, suppressing anyuthing else, even <code>he</code>
770 Adds a shutdownHook with a priority and timeout the higher the priority the earlier will run. ShutdownHooks with same priority run in a non-deterministic order. The shutdown hook will be terminated if it has not been finished in the specified period of time. @param shutdownHook shutdownHook <code>Runnable</code> @param priority priority of the shutdownHook @param timeout timeout of the shutdownHook @param unit unit of the timeout <code>TimeUnit</code>
771 Removes a shutdownHook. @param shutdownHook shutdownHook to remove. @return TRUE if the shutdownHook was registered and removed, FALSE otherwise.
772 Indicates if a shutdownHook is registered or not. @param shutdownHook shutdownHook to check if registered. @return TRUE/FALSE depending if the shutdownHook is is registered.
773 Convenience method that returns a resource as inputstream from the classpath. <p> Uses the Thread's context classloader to load resource. @param resourceName resource to retrieve. @throws IOException thrown if resource cannot be loaded @return inputstream with the resource.
774 Create a line reader that reads from the given stream using the default buffer-size (64k). @param in The input stream
775 Check to see if a command needs to be executed and execute if needed. @throws IOException raised on errors performing I/O.
776 Get a named {@link ThreadFactory} that just builds daemon threads. @param prefix name prefix for all threads created from the factory @return a thread factory that creates named, daemon threads with the supplied exception handler and normal priority
777 Checks if we need to expand, and expands if necessary.
778 Creates a <i>mutable</i> {@code ArrayList} instance containing the given elements; a very thin shortcut for creating an empty list and then calling Iterators#addAll. @param <E> Generics Type E. @param elements elements. @return ArrayList Generics Type E.
779 Adds all elements in {@code iterable} to {@code collection}. @return {@code true} if {@code collection} was modified as a result of this operation.
780 Creates an {@code ArrayList} instance backed by an array with the specified initial size; simply delegates to {@link ArrayList#ArrayList(int)}. @param <E> Generics Type E. @param initialArraySize the exact size of the initial backing array for the returned array list ({@code ArrayList} documentation calls this value the "capacity"). @return a new, empty {@code ArrayList} which is guaranteed not to resize itself unless its size reaches {@code initialArraySize + 1}. @throws IllegalArgumentException if {@code initialArraySize} is negative.
781 Write the JSON as bytes, then close the stream. @param instance instance to write @param dataOutputStream an output stream that will always be closed @throws IOException on any failure
782 Instantiate. The start time and finished time are both set to the current clock time.
783 Update the finished time with the current system time.
784 Get the duration of an operation as a java Duration instance. @return a duration.
785 Return the duration as {@link #humanTime(long)}. @return a printable duration.
786 Compute x^({@code lengthBytes} * 8) mod {@code mod}, where {@code mod} is in "reversed" (little-endian) format such that {@code mod & 1} represents x^31 and has an implicit term x^32. @param lengthBytes lengthBytes. @param mod mod. @return monomial.
787 composeWithMonomial. @param crcA crcA. @param crcB crcB. @param monomial Precomputed x^(lengthBInBytes * 8) mod {@code mod} @param mod mod. @return compose with monomial.
788 @return 4-byte array holding the big-endian representation of {@code value}. @param value value.
789 For use with debug statements; verifies bytes.length on creation, expecting it to represent exactly one CRC, and returns a hex formatted value. @param bytes bytes. @throws IOException raised on errors performing I/O. @return a list of hex formatted values.
790 For use with debug statements; verifies bytes.length on creation, expecting it to be divisible by CRC byte size, and returns a list of hex formatted values. @param bytes bytes. @throws IOException raised on errors performing I/O. @return a list of hex formatted values.
791 Unpack matching files from a jar. Entries inside the jar that do not match the given pattern will be skipped. @param inputStream the jar stream to unpack @param toDir the destination directory into which to unpack the jar @param unpackRegex the pattern to match jar entries against @throws IOException if an I/O error has occurred or toDir cannot be created and does not already exist
792 Unpack matching files from a jar. Entries inside the jar that do not match the given pattern will be skipped. @param jarFile the .jar file to unpack @param toDir the destination directory into which to unpack the jar @param unpackRegex the pattern to match jar entries against @throws IOException if an I/O error has occurred or toDir cannot be created and does not already exist
793 Find the nth occurrence of the given byte b in a UTF-8 encoded string @param utf a byte array containing a UTF-8 encoded string @param start starting offset @param length the length of byte array @param b the byte to find @param n the desired occurrence of the given byte @return position that nth occurrence of the given byte if exists; otherwise -1
794 Put a value under the key. A null value can be put, though on a get() call a new entry is generated @param key key @param value value @return any old non-null reference.
795 Remove any value under the key. @param key key @return any old non-null reference.
796 Does the map have a valid reference for this object? no-side effects: there's no attempt to notify or cleanup if the reference is null. @param key key to look up @return true if there is a valid reference.
797 Create a new instance under a key. <p> The instance is created, added to the map and then the map value retrieved. This ensures that the reference returned is that in the map, even if there is more than one entry being created at the same time. If that race does occur, it will be logged the first time it happens for this specific map instance. <p> HADOOP-18456 highlighted the risk of a concurrent GC resulting a null value being retrieved and so returned. To prevent this: <ol> <li>A strong reference is retained to the newly created instance in a local variable.</li> <li>That variable is used after the resolution process, to ensure the JVM doesn't consider it "unreachable" and so eligible for GC.</li> <li>A check is made for the resolved reference being null, and if so, the put() is repeated</li> </ol> @param key key @return the created value
798 Prune all null weak references, calling the referenceLost callback for each one. non-atomic and non-blocking. @return the number of entries pruned.
799 Captures the current value of the counts into a SuppressedSnapshot object and resets the values to zero. @return SuppressedSnapshot containing the current value of the counters
800 Given a finish and start time in long milliseconds, returns a String in the format Xhrs, Ymins, Z sec, for the time difference between two times. If finish time comes before start time then negative valeus of X, Y and Z wil return. @param finishTime finish time @param startTime start time @return a String in the format Xhrs, Ymins, Z sec, for the time difference between two times.
801 Splits an "=" separated value <code>String</code>, trimming leading and trailing whitespace on each value after splitting by comma and new line separator. @param str a comma separated <code>String</code> with values, may be null @return a <code>Map</code> of <code>String</code> keys and values, empty Collection if null String input.
802 Split a string using the given separator @param str a string that may have escaped separator @param escapeChar a char that be used to escape the separator @param separator a separator char @return an array of strings
803 escapeString. @param str str. @param escapeChar escapeChar. @param charsToEscape array of characters to be escaped @return escapeString.
804 unEscapeString. @param str str. @param escapeChar escapeChar. @param charsToEscape array of characters to unescape @return escape string.
805 Get the Hadoop version. @return the Hadoop version string, eg. "0.6.3-dev"
806 Get the Git commit hash of the repository when compiled. @return the commit hash, eg. "18f64065d5db6208daf50b02c1b5ed4ee3ce547a"
807 Get the branch on which this originated. @return The branch name, e.g. "trunk" or "branches/branch-0.20"
808 The date that Hadoop was compiled. @return the compilation date in unix date format
809 The user that compiled Hadoop. @return the username of the user
810 Get the URL for the Hadoop repository. @return the URL of the Hadoop repository
811 Get the checksum of the source files from which Hadoop was built. @return the checksum of the source files
812 Returns the protoc version used for the build. @return the protoc version
813 Returns the OS platform used for the build. @return the OS platform
814 An iterator which combines filtering with transformation. All source elements for which filter = true are returned, transformed via the mapper. @param source source iterator. @param filter filter predicate.
815 Wrap an iterator with one which adds a continuation probe. The probe will be called in the {@link #hasNext()} method, before the source iterator is itself checked and in {@link #next()} before retrieval. That is: it may be called multiple times per iteration. @param source source iterator. @param continueWork predicate which will trigger a fast halt if it returns false.
816 Trigger a fetch if an entry is needed. @return true if there was already an entry return, or there was not but one could then be retrieved.set @throws IOException failure in fetch operation
817 Construct. @param o object to close.
818 Submit a callable into a completable future. RTEs are rethrown. Non RTEs are caught and wrapped; IOExceptions to {@code RuntimeIOException} instances. @param executor executor. @param call call to invoke @param <T> type @return the future to wait for
819 Constructor for this instance. @param constructor method to invoke to actually construct the inner object.
820 Create from a supplier. This is not a constructor to avoid ambiguity when a lambda-expression is passed in. @param supplier supplier implementation. @return a lazy reference. @param <T> type of reference
821 {@inheritDoc} @throws IllegalStateException if the reference is closed.
822 Implementation of {@code CallableRaisingIOE.apply()}. Invoke {@link #eval()}. @return the value @throws IOException on any evaluation failure
823 Invoke any operation, wrapping IOExceptions with {@code UncheckedIOException}. @param call callable @param <T> type of result @return result @throws UncheckedIOException if an IOE was raised.
824 Wrap a {@link CallableRaisingIOE} as a {@link Supplier}. @param call call to wrap @param <T> type of result @return a supplier which invokes the call.
825 Create a task builder for the remote iterator. @param items item source. @param <I> type of result. @return builder.
826 Throw one exception, adding the others as suppressed exceptions attached to the one thrown. This method never completes normally. @param exceptions collection of exceptions @param <E> class of exceptions @throws E an extracted exception.
827 Create the builder. @param items items to process
828 Suppress exceptions from tasks. RemoteIterator exceptions are not suppressable. @return the builder.
829 From the inner cause of an execution exception, extract the inner cause if it is an IOE or RTE. This will always raise an exception, either the inner IOException, an inner RuntimeException, or a new IOException wrapping the raised exception. @param e exception. @param <T> type of return value. @return nothing, ever. @throws IOException either the inner IOException, or a wrapper around any non-Runtime-Exception @throws RuntimeException if that is the inner cause.
830 Extract the cause of a completion failure and rethrow it if an IOE or RTE. @param e exception. @param <T> type of return value. @return nothing, ever. @throws IOException either the inner IOException, or a wrapper around any non-Runtime-Exception @throws RuntimeException if that is the inner cause.
831 This code is to support backward compatibility and break the compile time dependency of core on mapred. This should be made deprecated along with the mapred package HADOOP-1230. Should be removed when mapred package is removed.
832 Load a class by name. @param name the class name. @return the class object. @throws ClassNotFoundException if the class is not found.
833 Print all of the thread's information and stack traces. @param stream the stream to @param title a string title for the stack trace
834 A new configuration where the behavior of reading from the default resources can be turned off. If the parameter {@code loadDefaults} is false, the new instance will not load resources from the default files. @param loadDefaults specifies whether to load from the default files
835 Creates a HTTP servlet response serializing the exception in it as JSON. @param response the servlet response @param status the error code to set in the response @param ex the exception to serialize in the response @throws IOException thrown if there was an error while creating the response
836 Creates a HTTP JAX-RPC response serializing the exception in it as JSON. @param status the error code to set in the response @param ex the exception to serialize in the response @return the JAX-RPC response with the set error and JSON encoded exception
837 Create a new PureJavaCrc32 object.
838 Remove all elements.
839 A command to get a given user's groups list. If the OS is not WINDOWS, the command will get the user's primary group first and finally get the groups list which includes the primary group. i.e. the user's primary group will be included twice. @param user user. @return groups for user command.
840 A command to get a given user's group id list. The command will get the user's primary group first and finally get the groups list which includes the primary group. i.e. the user's primary group will be included twice. This command does not support Windows and will only return group names. @param user user. @return groups id for user command.
841 Return a command to get permission information. @return permission command.
842 Return a command to set permission. @param perm permission. @param recursive recursive. @return set permission command.
843 Return a command to set owner. @param owner owner. @return set owner command.
844 Return a command to create symbolic links. @param target target. @param link link. @return symlink command.
845 Return a command to read the target of the a symbolic link. @param link link. @return read link command.
846 Return a command to send a signal to a given pid. @param code code. @param pid pid. @return signal kill command.
847 Returns a File referencing a script with the given basename, inside the given parent directory. The file extension is inferred by platform: <code>".cmd"</code> on Windows, or <code>".sh"</code> otherwise. @param parent File parent directory @param basename String script file basename @return File referencing the script in the directory
848 Centralized logic to discover and validate the sanity of the Hadoop home directory. This does a lot of work so it should only be called privately for initialization once per process. @return A directory that exists and via was specified on the command line via <code>-Dhadoop.home.dir</code> or the <code>HADOOP_HOME</code> environment variable. @throws FileNotFoundException if the properties are absent or the specified path is not a reference to a valid directory.
849 Get the Hadoop home directory. If it is invalid, throw an exception. @return a path referring to hadoop home. @throws FileNotFoundException if the directory doesn't exist.
850 Inner logic of {@link #getQualifiedBin(String)}, accessible for tests. @param hadoopHomeDir home directory (assumed to be valid) @param executable executable @return path to the binary @throws FileNotFoundException if the executable was not found/valid
851 Get a file reference to winutils. Always raises an exception if there isn't one @return the file instance referring to the winutils bin. @throws FileNotFoundException on any failure to locate that file.
852 Static method to destroy all running <code>Shell</code> processes. Iterates through a map of all currently running <code>Shell</code> processes and destroys them one by one. This method is thread safe
853 @param thread {@link Thread to be shutdown} @return <tt>true</tt> if the thread is successfully interrupted, <tt>false</tt> otherwise
854 shutdownExecutorService. @param service {@link ExecutorService to be shutdown} @return <tt>true</tt> if the service is terminated, <tt>false</tt> otherwise @throws InterruptedException if the thread is interrupted.
855 Adds a new phase. Caller needs to set progress weightage
856 Adds a node with a specified progress weightage to the tree. @param weightage weightage. @return Progress.
857 Computes progress in this node.
858 Completes this node, moving the parent node to its next child.
859 Get the data in a ZNode. @param path Path of the ZNode. @return The data in the ZNode. @throws Exception If it cannot contact Zookeeper.
860 Get the data in a ZNode. @param path Path of the ZNode. @param stat Output statistics of the ZNode. @return The data in the ZNode. @throws Exception If it cannot contact Zookeeper.
861 Set data into a ZNode. @param path Path of the ZNode. @param data Data to set as String. @param version Version of the data to store. @throws Exception If it cannot contact Zookeeper.
862 Create a ZNode. @param path Path of the ZNode. @param zkAcl ACL for the node. @return If the ZNode was created. @throws Exception If it cannot contact Zookeeper.
863 Delete a ZNode. @param path Path of the ZNode. @return If the znode was deleted. @throws Exception If it cannot contact ZooKeeper.
864 Deletes the path. Checks for existence of path as well. @param path Path to be deleted. @param fencingNodePath fencingNodePath. @param fencingACL fencingACL. @throws Exception if any problem occurs while performing deletion.
865 This is the method that adds the classed to the repository. @param name The name of the string you want the class instance to be called with @param mainClass The class that you want to add to the repository @param description The description of the class @throws NoSuchMethodException when a particular method cannot be found. @throws SecurityException security manager to indicate a security violation.
866 Checks for a method implementation. @param targetClass the class to check for an implementation @param methodName name of a method (different from constructor) @param argClasses argument classes for the method @return this Builder for method chaining
867 Checks for a method implementation. @param targetClass the class to check for an implementation @param methodName name of a method (different from constructor) @param argClasses argument classes for the method @return this Builder for method chaining
868 Create a no-op method. @param name method name @return a no-op method.
869 Given a sequence of methods, verify that they are all available. @param methods methods @return true if they are all implemented
870 Is a method available? @param method method to probe @return true iff the method is found and loaded.
871 Returns this method as a BoundMethod for the given receiver. @param receiver an Object to receive the method invocation @return a {@link BoundMethod} for this method and the receiver @throws IllegalStateException if the method is static @throws IllegalArgumentException if the receiver's class is incompatible
872 Returns this method as a StaticMethod. @return a {@link StaticMethod} for this method @throws IllegalStateException if the method is not static
873 Find a jar that contains a class of the same name, if any. It will return a jar file, even if that is not the first thing on the class path that has a class with the same name. @param clazz the class to find. @return a jar file that contains the class, or null.
874 Find the absolute location of the class. @param clazz the class to find. @return the class file with absolute location, or null.
875 Writes the current checksum to the stream. If <i>reset</i> is true, then resets the checksum. @param out out. @param reset reset. @return number of bytes written. Will be equal to getChecksumSize(); @throws IOException raised on errors performing I/O.
876 Writes the current checksum to a buffer. If <i>reset</i> is true, then resets the checksum. @param buf buf. @param offset offset. @param reset reset. @return number of bytes written. Will be equal to getChecksumSize(); @throws IOException raised on errors performing I/O.
877 Create an instance. If the rate is 0; return the unlimited rate. @param capacity capacity in permits/second. @return limiter restricted to the given capacity.
878 Register some signal handlers. @param log The log4j logfile to use in the signal handlers.
879 @param recommended_length Recommended size of the internal array.
880 Retrieve an atomic view of the included and excluded hosts. @param includes set to populate with included hosts @param excludes set to populate with excluded hosts @deprecated use {@link #getHostDetails() instead}
881 Retrieve an atomic view of the included and excluded hosts. @param includeHosts set to populate with included hosts @param excludeHosts map to populate with excluded hosts @deprecated use {@link #getHostDetails() instead}
882 taken from hashlittle() -- hash a variable-length key into a 32-bit value @param key the key (the unaligned variable-length array of bytes) @param nbytes number of bytes to include in hash @param initval can be any integer value @return a 32-bit value. Every bit of the key affects every bit of the return value. Two keys differing by one or two bits will have totally different hash values. <p>The best hash table sizes are powers of 2. There is no need to do mod a prime (mod is sooo slow!). If you need less than 32 bits, use a bitmask. For example, if you need only 10 bits, do <code>h = (h &amp; hashmask(10));</code> In which case, the hash table should have hashsize(10) elements. <p>If you are hashing n strings byte[][] k, do it like this: for (int i = 0, h = 0; i &lt; n; ++i) h = hash( k[i], h); <p>By Bob Jenkins, 2006. bob_jenkins@burtleburtle.net. You may use this code any way you wish, private, educational, or commercial. It's free. <p>Use for hash table lookup, or anything where one collision in 2^^32 is acceptable. Do NOT use for cryptographic purposes.
883 Get a singleton instance of hash function of a given type. @param type predefined hash type @return hash function instance, or null if type is invalid
884 Default constructor - use with readFields
885 Default constructor - use with readFields
886 Zero-args constructor for the serialization.
887 Hashes a specified key into several integers. @param k The specified key. @return The array of hashed values.
888 Creates an instance of {@code AutoCloseableLock}, initializes the underlying lock instance with a new {@code ReentrantLock}.
889 Attempts to release the lock by making a call to {@code release()}. This is to implement {@code close()} method from {@code AutoCloseable} interface. This allows users to user a try-with-resource syntax, where the lock can be automatically released.
890 print a stack trace with text @param e the exception to print @param text text to print
891 Explain an error code as part of the usage @param errorcode error code returned @param text error text
892 Log that a class has been loaded, and where from. @param name classname @param clazz class
893 Returns a copy of the most recent data measured by this monitor. @return a copy of the most recent data measured by this monitor
894 Create a new PureJavaCrc32 object.
895 Execute the shutdown. This is exposed purely for testing: do not invoke it. @return the number of shutdown hooks which timed out.
896 Adds an Object to a PriorityQueue in log(size) time. If one tries to add more objects than maxSize from initialize a RuntimeException (ArrayIndexOutOfBound) is thrown. @param element element.
897 Removes and returns the least element of the PriorityQueue in log(size) time. @return T Generics Type T.
898 Should be called when the Object at top changes values. Still log(n) worst case, but it's at least twice as fast to <pre> { pq.top().change(); pq.adjustTop(); } </pre> instead of <pre> { o = pq.pop(); o.change(); pq.push(o); } </pre>
899 Creates a <i>mutable</i> {@code HashSet} instance containing the given elements. A very thin convenience for creating an empty set and then calling Iterators#addAll. <p><b>Note:</b> if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterator) instead.</p> <p><b>Note:</b> if {@code E} is an {@link Enum} type, you should create an {@link EnumSet} instead.</p> <p>Overall, this method is not very useful and will likely be deprecated in the future.</p> @param <E> Generics Type E. @param elements elements. @return a new, empty thread-safe {@code Set}.
900 Returns a new hash set using the smallest initial table size that can hold {@code expectedSize} elements without resizing. Note that this is not what {@link HashSet#HashSet(int)} does, but it is what most users want and expect it to do. <p>This behavior can't be broadly guaranteed, but has been tested with OpenJDK 1.7 and 1.8.</p> @param expectedSize the number of elements you expect to add to the returned set @param <E> Generics Type E. @return a new, empty hash set with enough capacity to hold {@code expectedSize} elements without resizing @throws IllegalArgumentException if {@code expectedSize} is negative
901 Skip to the new value. @param newValue newValue. @throws IllegalStateException Cannot skip to less than the current value.
902 Create a new TableListing. @return TableListing.
903 checks whether the given <code>key</code> is deprecated. @param key the parameter which is to be checked for deprecation @return <code>true</code> if the key is deprecated and <code>false</code> otherwise.
904 Returns whether or not a deprecated name has been warned. If the name is not deprecated then always return false @param name proprties. @return true if name is a warned deprecation.
905 Reload existing configuration instances.
906 Add a default resource. Resources are loaded in the order of the resources added. @param name file name. File should be present in the classpath.
907 Return time duration in the given time unit. Valid units are encoded in properties as suffixes: nanoseconds (ns), microseconds (us), milliseconds (ms), seconds (s), minutes (m), hours (h), and days (d). @param name Property name @param vStr The string value with time unit suffix to be converted. @param defaultUnit Unit to convert the stored property, if it exists. @param returnUnit Unit for the returned value. @return time duration in given time unit.
908 Get all properties belonging to list of input tags. Calls getAllPropertiesByTag internally. @param tagList list of input tags @return Properties with matching tags
909 Given a key / value pair, decides whether or not to redact and returns either the original value or text indicating it has been redacted. @param key param key. @param value param value, will return if conditions permit. @return Original value, or text indicating it has been redacted
910 Given a key / value pair, decides whether or not to redact and returns either the original value or text indicating it has been redacted. @param key param key. @param value param value, will return if conditions permit. @return Original value, or text indicating it has been redacted
911 Start a reconfiguration task to reload configuration in background. @throws IOException raised on errors performing I/O.
912 Create a new DeprecationContext by copying a previous DeprecationContext and adding some deltas. @param other The previous deprecation context to copy, or null to start from nothing. @param deltas The deltas to apply.
913 Create a new instance of {@link ReconfigurationException}. @param property property name. @param newVal new value. @param oldVal old value. @param cause original exception.
914 Create a new instance of {@link ReconfigurationException}. @param property property name. @param newVal new value. @param oldVal old value.
915 Ensure that we are allowed to manually manage the HA state of the target service. If automatic failover is configured, then the automatic failover controllers should be doing state management, and it is generally an error to use the HAAdmin command line to do so. @param target the target to check @return true if manual state management is allowed
916 Execute a command through the ssh session, pumping its stderr and stdout to our own logs.
917 If the local node is an observer or is unhealthy it is not eligible for graceful failover. @throws ServiceFailedException if the node is an observer or unhealthy
918 Read bytes from stream into a byte buffer using an intermediate byte array. <pre> (position, buffer, buffer-offset, length): Void position:= the position within the file to read data. buffer := a buffer to read fully `length` bytes into. buffer-offset := the offset within the buffer to write data length := the number of bytes to read. </pre> The passed in function MUST block until the required length of data is read, or an exception is thrown. @param range range to read @param buffer buffer to fill. @param operation operation to use for reading data. @throws IOException any IOE.
919 Validate a list of ranges (including overlapping checks) and return the sorted list. <p> Two ranges overlap when the start offset of second is less than the end offset of first. End offset is calculated as start offset + length. @param input input list @param fileLength file length if known @return a new sorted list. @throws IllegalArgumentException if there are overlapping ranges or a range element is invalid (other than with negative offset) @throws EOFException if the last range extends beyond the end of the file supplied or a range offset is negative
920 Constructs an instance of {@code BlockManager}. @param blockData information about each block of the underlying file. @throws IllegalArgumentException if blockData is null.
921 Releases resources allocated to the given block. @param data the {@code BufferData} to release. @throws IllegalArgumentException if data is null.
922 Releases a previously acquired resource. @throws IllegalArgumentException if item is null.
923 Helper that asserts the current state is one of the expected values. @param states the collection of allowed states. @throws IllegalArgumentException if states is null.
924 Validates that the given string is not null and has non-zero length. @param arg the argument reference to validate. @param argName the name of the argument being validated.
925 Validates that the given set is not null and has an exact number of items. @param <T> the type of collection's elements. @param collection the argument reference to validate. @param numElements the expected number of elements in the collection. @param argName the name of the argument being validated.
926 Validates that the given path exists. @param path the path to check. @param argName the name of the argument being validated.
927 Constructs a resource pool of the given size. @param size the size of this pool. Cannot be changed post creation. @throws IllegalArgumentException if size is zero or negative.
928 Initializes a new instance of the {@code BufferPool} class. @param size number of buffer in this pool. @param bufferSize size in bytes of each buffer. @param prefetchingStatistics statistics for this stream. @throws IllegalArgumentException if size is zero or negative. @throws IllegalArgumentException if bufferSize is zero or negative.
929 Requests optional prefetching of the given block. @param blockNumber the id of the block to prefetch. @throws IllegalArgumentException if blockNumber is negative.
930 Constructs an instances of this class. @param blockNumber Number of the block associated with this buffer. @param buffer The buffer associated with this block. @throws IllegalArgumentException if blockNumber is negative. @throws IllegalArgumentException if buffer is null.
931 Initializes a new instance of the {@code Retryer} class. @param perRetryDelay per retry delay (in ms). @param maxDelay maximum amount of delay (in ms) before retry fails. @param statusUpdateInterval time interval (in ms) at which status update would be made. @throws IllegalArgumentException if perRetryDelay is zero or negative. @throws IllegalArgumentException if maxDelay is less than or equal to perRetryDelay. @throws IllegalArgumentException if statusUpdateInterval is zero or negative.
932 Validates that the given array is not null and has at least one element. @param <T> the type of array's elements. @param array the argument reference to validate. @param argName the name of the argument being validated.
933 Validates that the given array is not null and has at least one element. @param array the argument reference to validate. @param argName the name of the argument being validated.
934 Validates that the given array is not null and has at least one element. @param array the argument reference to validate. @param argName the name of the argument being validated.
935 Validates that the given array is not null and has at least one element. @param array the argument reference to validate. @param argName the name of the argument being validated.
936 Validates that the given array is not null and has at least one element. @param array the argument reference to validate. @param argName the name of the argument being validated.
937 Validates that the given buffer is not null and has non-zero capacity. @param <T> the type of iterable's elements. @param iter the argument reference to validate. @param argName the name of the argument being validated.
938 {@inheritDoc}. The default impl just calls {@code FileSystem.delete(path, false)} on the single path in the list.
939 Apply a function to an object which may be an IOStatisticsSnapshot. @param <T> return type @param source statistics snapshot @param fun function to invoke if {@code source} is valid. @return the applied value @throws UncheckedIOException Any IO exception. @throws IllegalArgumentException if the supplied class is not a snapshot
940 Create a FlagSet. @param enumClass class of enum @param prefix prefix (with trailing ".") for path capabilities probe @param flags flags. A copy of these are made.
941 Close this FileSystem instance. Will release any held locks, delete all files queued for deletion through calls to {@link #deleteOnExit(Path)}, and remove this FS instance from the cache, if cached. After this operation, the outcome of any method call on this FileSystem instance, or any input/output stream created by it is <i>undefined</i>. @throws IOException IO failure
942 Compare this FileStatus to another FileStatus based on lexicographical order of path. This method was added back by HADOOP-14683 to keep binary compatibility. @param o the FileStatus to be compared. @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object. @throws ClassCastException if the specified object is not FileStatus
943 Compare this FileStatus to another FileStatus @param o the FileStatus to be compared. @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object.
944 convert an array of FileStatus to an array of Path. If stats if null, return path @param stats an array of FileStatus objects @param path default path to return in stats is null @return an array of paths corresponding to the input
945 Declare that this filesystem connector is always read only. {@inheritDoc}
946 Get a JSON serializer for this class. @return a serializer.
947 Publish the IOStatistics as a set of storage statistics. This is dynamic. @param name storage statistics name. @param scheme FS scheme; may be null. @param source IOStatistics source. @return a dynamic storage statistics object.
948 Get the StorageStatistics for this FileSystem object. These statistics are per-instance. They are not shared with any other FileSystem object. <p>This is a default method which is intended to be overridden by subclasses. The default implementation returns an empty storage statistics object.</p> @return The StorageStatistics for this FileSystem instance. Will never be null.
949 @param path for the exception
950 @param path for the exception
951 @param path for the exception
952 @param path for the exception
953 Set the size of the buffer to be used. @param bufSize buffer size. @return Generics Type B.
954 Set replication factor. @param replica replica. @return Generics Type B.
955 Set block size. @param blkSize block size. @return B Generics Type.
956 Create the parent directory if they do not exist. @return B Generics Type.
957 Create an FSDataOutputStream at the specified path. @return return Generics Type B.
958 Set to true to overwrite the existing file. Set it to false, an exception will be thrown when calling {@link #build()} if the file exists. @param overwrite overrite. @return Generics Type B.
959 Append to an existing file (optional operation). @return Generics Type B.
960 Set the hosts hosting this block. @param hosts hosts array. @throws IOException If an I/O error occurred.
961 Set the hosts hosting a cached replica of this block. @param cachedHosts cached hosts.
962 Set the names (host:port) hosting this block. @param names names. @throws IOException If an I/O error occurred.
963 Set the network topology paths of the hosts. @param topologyPaths topology paths. @throws IOException If an I/O error occurred.
964 True iff the named path is a regular file. Note: Avoid using this method. Instead reuse the FileStatus returned by {@link #getFileStatus(Path)} or listStatus() methods. @param f path to check @throws IOException IO failure @deprecated Use {@link #getFileStatus(Path)} instead @return if f is file true, not false.
965 Takes an IOException, file/directory path, and method name and returns an IOException with the input exception as the cause and also include the file,method details. The new exception provides the stack trace of the place where the exception is thrown and some extra diagnostics information. Return instance of same exception if exception class has a public string constructor; Otherwise return an PathIOException. InterruptedIOException and PathIOException are returned unwrapped. @param path file/directory path @param methodName method name @param exception the caught exception. @return an exception to throw
966 Seek to the next sync mark past a given position. @param position position. @throws IOException raised on errors performing I/O.
967 Re-positions the reader before its first key. @throws IOException raised on errors performing I/O.
968 Register the expressions with the expression factory.
969 Register the command classes used by the fs subcommand @param factory where to register the class
970 Expand globs in the given <code>filePattern</code> into a collection of file patterns so that in the expanded set no file pattern has a slash character ("/") in a curly bracket pair. <p> Some examples of how the filePattern is expanded:<br> <pre> <b> filePattern - Expanded file pattern </b> {a/b} - a/b /}{a/b} - /}a/b p{a/b,c/d}s - pa/bs, pc/ds {a/b,c/d,{e,f}} - a/b, c/d, {e,f} {a/b,c/d}{e,f} - a/b{e,f}, c/d{e,f} {a,b}/{b,{c/d,e/f}} - {a,b}/b, {a,b}/c/d, {a,b}/e/f {a,b}/{c/\d} - {a,b}/c/d </pre> @param filePattern file pattern. @return expanded file patterns @throws IOException raised on errors performing I/O.
971 Filter files/directories in the given path using the user-supplied path filter. <p> Does not guarantee to return the List of files/directories status in a sorted order. @param f a path name @param filter the user-supplied path filter @return an array of FileStatus objects for the files under the given path after applying the filter @throws FileNotFoundException when the path does not exist @throws IOException see specific implementation
972 Filter files/directories in the given list of paths using user-supplied path filter. <p> Does not guarantee to return the List of files/directories status in a sorted order. @param files a list of paths @param filter the user-supplied path filter @return a list of statuses for the files under the given paths after applying the filter @throws FileNotFoundException when the path does not exist @throws IOException see specific implementation
973 Requests a delegation token using the configured <code>Authenticator</code> for authentication. @param url the URL to get the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token being used for the user where the Delegation token will be stored. @param renewer the renewer user. @return a delegation token. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
974 Renews a delegation token from the server end-point using the configured <code>Authenticator</code> for authentication. @param url the URL to renew the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to renew. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred. @return delegation token long value.
975 Cancels a delegation token from the server end-point. It does not require being authenticated by the configured <code>Authenticator</code>. @param url the URL to cancel the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to cancel. @throws IOException if an IO error occurred.
976 Create a FileEncryptionInfo. @param suite CipherSuite used to encrypt the file @param edek encrypted data encryption key (EDEK) of the file @param iv initialization vector (IV) used to encrypt the file @param keyName name of the key used for the encryption zone @param ezKeyVersionName name of the KeyVersion used to encrypt the encrypted data encryption key. @param version version.
977 Set permission for the file.
978 Set checksum opt.
979 Construct from a non-null IOException. @param cause inner cause @throws NullPointerException if the cause is null.
980 Construct an instance with the given function. @param fn function to invoke.
981 Construct bonded to a file context. @param fc file context.
982 Construct bonded to a filesystem. @param fs file system.
983 Set permission for the file. @param perm permission. @return B Generics Type.
984 Set the facility of reporting progress. @param prog progress. @return B Generics Type.
985 Set checksum opt. @param chksumOpt check sum opt. @return Generics Type B.
986 Validate args to a write command. These are the same validation checks expected for any implementation of {@code OutputStream.write()}. @param b byte array containing data. @param off offset in array where to start. @param len number of bytes to be written. @throws NullPointerException for a null buffer @throws IndexOutOfBoundsException if indices are out of range @throws IOException raised on errors performing I/O.
987 Compare strings locale-freely by using String#equalsIgnoreCase. @param s1 Non-null string to be converted @param s2 string to be converted @return the str, converted to uppercase.
988 The callbacks and watchers pass a reference to the ZK client which made the original call. We don't want to take action based on any callbacks from prior clients after we quit the election. @param ctx the ZK client passed into the watcher @return true if it matches the current client
989 Get the statistics for a particular file system. @param scheme scheme. @param cls the class to lookup @return a statistics object @deprecated use {@link #getGlobalStorageStatistics()}
990 Copies from one stream to another. @param in InputStrem to read from @param out OutputStream to write to @param buffSize the size of the buffer @param close whether or not close the InputStream and OutputStream at the end. The streams are closed in the finally clause. @throws IOException raised on errors performing I/O.
991 Copies count bytes from one stream to another. @param in InputStream to read from @param out OutputStream to write to @param count number of bytes to copy @param close whether to close the streams @throws IOException if bytes can not be read or written
992 Performs some disk IO by writing to a new file in the given directory and sync'ing file contents to disk. This increases the likelihood of catching catastrophic disk/controller failures sooner. @param dir directory to be checked. @throws DiskErrorException if we hit an error while trying to perform disk IO against the file.
993 Return true if any storage type quota has been set. @return if any storage type quota has been set true, not false.
994 Return true if any storage type consumption information is available. @return if any storage type consumption information is available, not false.
995 Compare if this object is equal to another object @param o the object to be compared. @return true if two file status has the same path name; false if not.
996 Returns a hash code value for the object, which is defined as the hash code of the path name. @return a hash code value for the path name.
997 Set the values to 0.
998 Set the statistic to the values of another. Synchronized. @param other the source.
999 Convert IOStatistics to a string form. @param statistics A statistics instance. @return string value or the empty string if null
1000 Given a map, produce a string with all the values, sorted. Needs to create a treemap and insert all the entries. @param sb string buffer to append to @param type type (for output) @param map map to evaluate @param <E> type of values of the map
1001 Initiate a duration tracking operation by creating/returning an object whose {@code close()} call will update the statistics. The expected use is within a try-with-resources clause. @param key statistic key @return an object to close after an operation completes.
1002 Take a snapshot of the current counter values and return an iterator over them. @return all the counter statistics.
1003 Add a duration to the min/mean/max statistics, using the given prefix and adding a suffix for each specific value. <p> The update is non -atomic, even though each individual statistic is updated thread-safely. If two threads update the values simultaneously, at the end of each operation the state will be correct. It is only during the sequence that the statistics may be observably inconsistent. </p> @param prefix statistic prefix @param durationMillis duration in milliseconds.
1004 Build the IOStatistics instance. @return an instance. @throws IllegalStateException if the builder has already been built.
1005 Add a new evaluator to the counter statistics. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
1006 Add a new evaluator to the gauge statistics. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
1007 Add a new evaluator to the minimum statistics. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
1008 Add a new evaluator to the maximum statistics. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
1009 Add a new evaluator to the mean statistics. This is a function which must return the mean and the sample count. @param key key of this statistic @param eval evaluator for the statistic @return the builder.
1010 Register an interrupt handler. @param signalName signal name @throws IllegalArgumentException if the registration failed
1011 Take a snapshot. @return a map snapshot.
1012 Take a snapshot of a supplied map, where the copy option simply uses the existing value. For this to be safe, the map must refer to immutable objects. @param source source map @param <E> type of values. @return a new map referencing the same values.
1013 Create a new empty snapshot. A new one is always created for isolation. @return a statistics snapshot
1014 Constructor. @param threadId thread ID @param id instance ID.
1015 Create a snapshot statistics instance ready to aggregate data. The instance can be serialized, and its {@code toString()} method lists all the values. @return an empty snapshot
1016 Static probe to check if the thread-level IO statistics enabled. @return true if the thread-level IO statistics are enabled.
1017 Ask the inner stream for their IOStatistics. @return any IOStatistics offered by the inner stream.
1018 Return any IOStatistics offered by the inner stream. @return inner IOStatistics or null
1019 Get the IO Statistics of the nested stream, falling back to null if the stream does not implement the interface {@link IOStatisticsSource}. @return an IOStatistics instance or null
1020 Get the IO Statistics of the nested stream, falling back to null if the stream does not implement the interface {@link IOStatisticsSource}. @return an IOStatistics instance or null
1021 Get the IO Statistics of the nested stream, falling back to null if the stream does not implement the interface {@link IOStatisticsSource}. @return an IOStatistics instance or null
1022 Get the IO Statistics of the nested stream, falling back to empty statistics if the stream does not implement the interface {@link IOStatisticsSource}. @return an IOStatistics instance.
1023 Return any IOStatistics provided by the underlying stream. @return IO stats from the inner stream.
1024 Return any IOStatistics provided by the underlying stream. @return IO stats from the inner stream.
1025 Return any IOStatistics provided by the source. @return IO stats from the input stream.
1026 Implementation of chunked verification specifically on byte arrays. This is to avoid the copy when dealing with ByteBuffers that have array backing.
1027 Calculate the counter and iv, update the decryptor.
1028 Do the encryption, input is {@link #inBuffer} and output is {@link #outBuffer}.
1029 Same as this(0, 0, null)
1030 Same as this(0, 0, null)
1031 Construct the glob pattern object with a glob pattern string @param globPattern the glob pattern string
1032 Convert a os-native filename to a path that works for the shell. @param file The filename to convert @return The unix pathname @throws IOException on windows, there can be problems with the subprocess
1033 Convert a os-native filename to a path that works for the shell and avoids script injection attacks. @param file The filename to convert @return The unix pathname @throws IOException on windows, there can be problems with the subprocess
1034 Given a stream input it will unzip the it in the unzip directory. passed as the second parameter @param inputStream The zip file as input @param toDir The unzip directory where to unzip the zip file. @throws IOException an exception occurred
1035 Given a File input it will unzip it in the unzip directory. passed as the second parameter @param inFile The zip file as input @param unzipDir The unzip directory where to unzip the zip file. @throws IOException An I/O exception has occurred
1036 Logout and disconnect the given channel. @param client @throws IOException
1037 Shutdown the connection pool and close all open connections.
1038 Resets existing buffer with a new one of the specified size. @param size size.
1039 Copy constructor. @param other The input Statistics object which is cloned.
1040 Get the total number of bytes read. @return the number of bytes
1041 Get the total number of bytes written. @return the number of bytes
1042 Get the number of file system read operations such as list files. @return number of read operations
1043 Get the number of large file system read operations such as list files under a large directory. @return number of large read operations
1044 Get the number of file system write operations such as create, append rename etc. @return number of write operations
1045 Get total time taken in ms for bytes read from remote. @return time taken in ms for remote bytes read.
1046 Get all statistics data. MR or other frameworks can use the method to get all statistics at once. @return the StatisticsData
1047 Get the total number of bytes read on erasure-coded files. @return the number of bytes
1048 Resets all statistics to 0. In order to reset, we add up all the thread-local statistics data, and set rootData to the negative of that. This may seem like a counterintuitive way to reset the statistics. Why can't we just zero out all the thread-local data? Well, thread-local data can only be modified by the thread that owns it. If we tried to modify the thread-local data from this thread, our modification might get interleaved with a read-modify-write operation done by the thread that owns the data. That would result in our update getting lost. The approach used here avoids this problem because it only ever reads (not writes) the thread-local data. Both reads and writes to rootData are done under the lock, so we're free to modify rootData from any thread that holds the lock.
1049 Validate the CreateFlag for create operation @param path Object representing the path; usually String or {@link Path} @param pathExists pass true if the path exists in the file system @param flag set of CreateFlag @throws IOException on error @throws HadoopIllegalArgumentException if the CreateFlag is invalid
1050 Validate the CreateFlag for the append operation. The flag must contain APPEND, and cannot contain OVERWRITE. @param flag enum set flag.
1051 Get the URI for the file system based on the given URI. The path, query part of the given URI is stripped out and default file system port is used to form the URI. @param uri FileSystem URI. @param authorityNeeded if true authority cannot be null in the URI. If false authority must be null. @param defaultPort default port to use if port is not specified in the URI. @return URI of the file system @throws URISyntaxException <code>uri</code> has syntax error
1052 Construct an instance of known type but no value yet for use with type-specific wrapper classes. @param componentType componentType.
1053 Parse ACL permission string, partially borrowed from ZooKeeperMain private method
1054 A helper method for processing user input and default value to create a combined checksum option. @param defaultOpt Default checksum option @param userOpt User-specified checksum option @return ChecksumOpt.
1055 Return a canonicalized form of this FileSystem's URI. The default implementation simply calls {@link #canonicalizeUri(URI)} on the filesystem's own URI, so subclasses typically only need to implement that method. @see #canonicalizeUri(URI) @return the URI of this filesystem.
1056 Constructor, deprecated by ContentSummary.Builder This constructor implicitly set spaceConsumed the same as length. spaceConsumed and length must be set explicitly with ContentSummary.Builder. @param length length. @param fileCount file count. @param directoryCount directory count.
1057 Returns a status object describing the use and capacity of the filesystem. If the filesystem has multiple partitions, the use and capacity of the root partition is reflected. @return a FsStatus object @throws IOException see specific implementation
1058 Instantiate. <p> All maps/enums passed down are copied into thread safe equivalents. as their origin is unknown and cannot be guaranteed to not be shared. <p> Context and operationId are expected to be well formed numeric/hex strings, at least adequate to be used as individual path elements in a URL.
1059 Releases a previously acquired resource. @param data the {@code BufferData} instance to release. @throws IllegalArgumentException if data is null. @throws IllegalArgumentException if data cannot be released due to its state.
1060 Instantiate without collecting executor aquisition duration information. @param executorDelegatee Executor to delegate to @param permitCount number of permits into the queue permitted @param fair should the semaphore be "fair"
1061 If no blocks were released after calling releaseDoneBlocks() a few times, we may end up waiting forever. To avoid that situation, we try releasing a 'ready' block farthest away from the given block.
1062 Gets the current position within this file relative to the start of the associated buffer. @return the current position within this file relative to the start of the associated buffer.
1063 Determines whether the given absolute position lies within the current buffer. @param pos the position to check. @return true if the given absolute position lies within the current buffer, false otherwise.
1064 Gets the start of the current block's absolute offset. @return the start of the current block's absolute offset.
1065 Get the current thread's IOStatisticsContext instance. If no instance is present for this thread ID, create one using the factory. @return instance of IOStatisticsContext.
1066 Set the IOStatisticsContext for the current thread. @param statisticsContext IOStatistics context instance for the current thread. If null, the context is reset.
1067 Merge sorted ranges to optimize the access from the underlying file system. The motivations are that: <ul> <li>Upper layers want to pass down logical file ranges.</li> <li>Fewer reads have better performance.</li> <li>Applications want callbacks as ranges are read.</li> <li>Some file systems want to round ranges to be at checksum boundaries.</li> </ul> @param sortedRanges already sorted list of ranges based on offset. @param chunkSize round the start and end points to multiples of chunkSize @param minimumSeek the smallest gap that we should seek over in bytes @param maxSize the largest combined file range in bytes @return the list of sorted CombinedFileRanges that cover the input
1068 Find the checksum ranges that correspond to the given data ranges. @param dataRanges the input data ranges, which are assumed to be sorted and non-overlapping @return a list of AsyncReaderUtils.CombinedFileRange that correspond to the checksum ranges
1069 Creates a case sensitive name expression.
1070 Applies child expressions to the {@link PathData} item. If all pass then returns {@link Result#PASS} else returns the result of the first non-passing expression.
1071 Returns the current find options, creating them if necessary.
1072 Parse parameters from the given list of args. The list is destructively modified to remove the options. @param args as a list of input arguments
1073 The long usage suitable for help output @return text of the usage
1074 Display an warning string prefaced with the command name. @param message warning message to display
1075 The short usage suitable for the synopsis @return "name options"
1076 Creates a new ScopedAclEntries from the given list. It is assumed that the list is already sorted such that all access entries precede all default entries. @param aclEntries List&lt;AclEntry&gt; to separate
1077 Render the table to a stream. @param out PrintStream for output
1078 @param allow If true, resolve references to this entity anywhere in the namespace. @return Handle option encoding parameter.
1079 @param allow If true, resolve references to this entity even if it has been modified. @return Handle option encoding parameter.
1080 Create an instance with no minimum interval between runs; stderr is not merged with stdout.
1081 Generate a DelegationTokenAuthenticatedURL.Token from the given generic typed delegation token. @param dToken The delegation token. @return The DelegationTokenAuthenticatedURL.Token, with its delegation token set to the delegation token passed in.
1082 List files and its block locations in a directory.
1083 Open a file by delegating to {@link FileSystem#openFileWithOptions(Path, org.apache.hadoop.fs.impl.OpenFileParameters)}. @param path path to the file @param parameters open file parameters from the builder. @return a future which will evaluate to the opened file.ControlAlpha @throws IOException failure to resolve the link. @throws IllegalArgumentException unknown mandatory key
1084 @return Gets the fallback file system configured. Usually, this will be the default cluster.
1085 Continues a multiple-part encryption or decryption operation. The data is encrypted or decrypted, depending on how this cipher was initialized. <p> All <code>input.remaining()</code> bytes starting at <code>input.position()</code> are processed. The result is stored in the output buffer. <p> Upon return, the input buffer's position will be equal to its limit; its limit will not have changed. The output buffer's position will have advanced by n, when n is the value returned by this method; the output buffer's limit will not have changed. <p> If <code>output.remaining()</code> bytes are insufficient to hold the result, a <code>ShortBufferException</code> is thrown. @param input the input ByteBuffer @param output the output ByteBuffer @return int number of bytes stored in <code>output</code> @throws ShortBufferException if there is insufficient space in the output buffer
1086 Finishes a multiple-part operation. The data is encrypted or decrypted, depending on how this cipher was initialized. <p> The result is stored in the output buffer. Upon return, the output buffer's position will have advanced by n, where n is the value returned by this method; the output buffer's limit will not have changed. </p> If <code>output.remaining()</code> bytes are insufficient to hold the result, a <code>ShortBufferException</code> is thrown. <p> Upon finishing, this method resets this cipher object to the state it was in when previously initialized. That is, the object is available to encrypt or decrypt more data. </p> If any exception is thrown, this cipher object need to be reset before it can be used again. @param output the output ByteBuffer @return int number of bytes stored in <code>output</code> @throws ShortBufferException if there is insufficient space in the output buffer. @throws IllegalBlockSizeException This exception is thrown when the length of data provided to a block cipher is incorrect. @throws BadPaddingException This exception is thrown when a particular padding mechanism is expected for the input data but the data is not padded properly.
1087 interceptorSettingsString string should be like ${type}:${string}, e.g. replaceresolveddstpath:word1,word2. @param interceptorSettingsString @return Return interceptor based on setting or null on bad/unknown config.
1088 Normalize a path string to use non-duplicated forward slashes as the path separator and remove any trailing path separators. @param scheme the URI scheme. Used to deduce whether we should replace backslashes or not @param path the scheme-specific part @return the normalized path string
1089 Determine whether a given path string represents an absolute path on Windows. e.g. "C:/a/b" is an absolute path. "C:a/b" is not. @param pathString the path string to evaluate @param slashed true if the given path is prefixed with "/" @return true if the supplied path looks like an absolute path with a Windows drive-specifier
1090 Returns true if the path component (i.e. directory) of this URI is absolute. @return whether this URI's path is absolute
1091 the hash of the path p inside the filesystem @param p the path in the harfilesystem @return the hash code of the path.
1092 Validate a path. @param path path to check.
1093 Return the next ID suffix to use when creating the log file. This method will look at the files in the directory, find the one with the highest ID suffix, and 1 to that suffix, and return it. This approach saves a full linear probe, which matters in the case where there are a large number of log files. @param initial the base file path @param lastId the last ID value that was used @return the next ID to try @throws IOException thrown if there's an issue querying the files in the directory
1094 Skips over and discards <code>n</code> bytes of data from the input stream. <p>This method may skip more bytes than are remaining in the backing file. This produces no exception and the number of bytes skipped may include some number of bytes that were beyond the EOF of the backing file. Attempting to read from the stream after skipping past the end will result in -1 indicating the end of the file. <p>If <code>n</code> is negative, no bytes are skipped. @param n the number of bytes to be skipped. @return the actual number of bytes skipped. @exception IOException if an I/O error occurs. ChecksumException if the chunk to skip to is corrupted
1095 Perform a fallback read. @param stream input stream. @param bufferPool bufferPool. @param maxLength maxLength. @throws IOException raised on errors performing I/O. @return byte buffer.
1096 Rest the context; will set the standard options again. Primarily for testing.
1097 Demand invoked to create the instance for this thread. @return an instance.
1098 Construct by the given {@link FsAction}. @param u user action @param g group action @param o other action
1099 Construct by the given mode. @param mode mode. @see #toShort()
1100 Create and initialize a {@link FsPermission} from {@link DataInput}. @param in data input. @throws IOException raised on errors performing I/O. @return FsPermission.
1101 Get the effective permission for the AclEntry @param entry AclEntry to get the effective action @return FsAction.
1102 Create an immutable {@link PermissionStatus} object. @param user user. @param group group. @param permission permission. @return PermissionStatus.
1103 Parses a string representation of an ACL spec into a list of AclEntry objects. Example: "user::rwx,user:foo:rw-,group::r--,other::---" The expected format of ACL entries in the string parameter is the same format produced by the {@link #toStringStable()} method. @param aclSpec String representation of an ACL spec. @param includePermission for setAcl operations this will be true. i.e. AclSpec should include permissions.<br> But for removeAcl operation it will be false. i.e. AclSpec should not contain permissions.<br> Example: "user:foo,group:bar" @return Returns list of {@link AclEntry} parsed
1104 Create from masked and unmasked modes. @param masked masked. @param unmasked unmasked. @return FsCreateModes.
1105 Prints a single extended ACL entry. If the mask restricts the permissions of the entry, then also prints the restricted version as the effective permissions. The mask applies to all named entries and also the unnamed group entry. @param aclStatus AclStatus for the path @param fsPerm FsPermission for the path @param entry AclEntry extended ACL entry to print
1106 Returns an arraylist of strings. @param str the comma separated string values @return the arraylist of the comma separated string values
1107 Get the current buffer position. @return the buffer position
1108 Check if there is data left. @return true if there is data remaining in the buffer.
1109 Switch to the upload state and return a stream for uploading. Base class calls {@link #enterState(DestState, DestState)} to manage the state machine. @return the stream. @throws IOException trouble
1110 Enter the closed state. @return true if the class was in any other state, implying that the subclass should do its close operations.
1111 Flush operation will flush to disk. @throws IOException IOE raised on FileOutputStream
1112 Get the statistics for a particular file system @param uri the uri to lookup the statistics. Only scheme and authority part of the uri are used as the key to store and lookup. @return a statistics object
1113 Get the current directory index for the given configuration item. @return the current directory index for the given configuration item.
1114 create a sync point. @throws IOException raised on errors performing I/O.
1115 @return Returns the current length of the output file. <p>This always returns a synchronized position. In other words, immediately after calling {@link SequenceFile.Reader#seek(long)} with a position returned by this method, {@link SequenceFile.Reader#next(Writable)} may be called. However the key may be earlier in the file than key last written when this method was called (e.g., with block-compression, it may be the first key in the block that was being written when this method was called).</p> @throws IOException raised on errors performing I/O.
1116 Get the current position in file. @return The current byte offset in underlying file. @throws IOException
1117 Return the {@link ContentSummary} of a given {@link Path}. @param f path to use @throws FileNotFoundException if the path does not resolve @throws IOException IO failure @return content summary.
1118 Build ACL from the given array of strings. The strings contain comma separated values. @param userGroupStrings build ACL from array of Strings
1119 Given a comma separated list of enum values, trim the list, map to enum values in the message (case insensitive) and return the set. Special handling of "*" meaning: all values. @param key Configuration object key -used in error messages. @param valueString value from Configuration @param enumClass class of enum @param ignoreUnknown should unknown values be ignored? @param <E> enum type @return a mutable set of enum values parsed from the valueString, with any unknown matches stripped if {@code ignoreUnknown} is true. @throws IllegalArgumentException if one of the entries was unknown and ignoreUnknown is false, or there are two entries in the enum which differ only by case.
1120 Verify that that a service is in a given state. @param expectedState the desired state @throws ServiceStateException if the service state is different from the desired state
1121 Construct the service. @param name service name
1122 Check that a state tansition is valid and throw an exception if not @param name name of the service (can be null) @param state current state @param proposed proposed new state
1123 Generate an exception announcing a failure to create the service. @param exception inner exception. @return a new exception, with the exit code {@link LauncherExitCodes#EXIT_SERVICE_CREATION_FAILURE}
1124 Verify that all the specified filenames exist. @param filenames a list of files @throws ServiceLaunchException if a file is not found
1125 Convert an exception to an {@code ExitException}. This process may just be a simple pass through, otherwise a new exception is created with an exit code, the text of the supplied exception, and the supplied exception as an inner cause. <ol> <li>If is already the right type, pass it through.</li> <li>If it implements {@link ExitCodeProvider#getExitCode()}, the exit code is extracted and used in the new exception.</li> <li>Otherwise, the exit code {@link LauncherExitCodes#EXIT_EXCEPTION_THROWN} is used.</li> </ol> @param thrown the exception thrown @return an {@code ExitException} with a status code
1126 Create an instance. @param service the service
1127 Failure handling: record the exception that triggered it -if there was not one already. Services are free to call this themselves. @param exception the exception
1128 Add a state change event to the lifecycle history
1129 Stop the services in reverse order @param numOfServicesStarted index from where the stop should work @param stopOnlyStartedServices flag to say "only start services that are started, not those that are NOTINITED or INITED. @throws RuntimeException the first exception raised during the stop process -<i>after all services are stopped</i>
1130 Stop a service; if it is null do nothing. Exceptions are caught and logged at warn level. (but not Throwables). This operation is intended to be used in cleanup operations @param service a service; may be null @return any exception that was caught; null if none was.
1131 Compare two UTF8s.
1132 Returns true iff <code>o</code> is a UTF8 with the same contents.
1133 Compares this object with the specified object for order.
1134 Compare bytes from {#getBytes()}. @see org.apache.hadoop.io.WritableComparator#compareBytes(byte[],int,int,byte[],int,int)
1135 Compare bytes from {#getBytes()} to those provided. @param other other. @param off off. @param len len. @return compareBytes.
1136 Return a hash of the bytes returned from {#getBytes()}. @see org.apache.hadoop.io.WritableComparator#hashBytes(byte[],int)
1137 Parse a double from a byte array. @param bytes bytes. @param start start. @return double from a byte array.
1138 Change the size of the buffer. The values in the old range are preserved and any new values are undefined. The capacity is changed if it is necessary. @param size The new number of bytes
1139 Platform independent implementation for {@link File#canRead()} @param f input file @return On Unix, same as {@link File#canRead()} On Windows, true if process has read access on the path
1140 Platform independent implementation for {@link File#canWrite()} @param f input file @return On Unix, same as {@link File#canWrite()} On Windows, true if process has write access on the path
1141 Platform independent implementation for {@link File#canExecute()} @param f input file @return On Unix, same as {@link File#canExecute()} On Windows, true if process has execute access on the path
1142 @return Return the singleton instance for the current process.
1143 Get the maximum number of bytes that can be locked into memory at any given point. @return 0 if no bytes can be locked into memory; Long.MAX_VALUE if there is no limit; The number of bytes that can be locked into memory otherwise.
1144 Implementation of chunked calculation specifically on byte arrays. This is to avoid the copy when dealing with ByteBuffers that have array backing. @param data data. @param dataOffset dataOffset. @param dataLength dataLength. @param sums sums. @param sumsOffset sumsOffset.
1145 @return Create the specified File for write access, ensuring that it does not exist. @param f the file that we want to create @param permissions we want to have on the file (if security is enabled) @throws AlreadyExistsException if the file already exists @throws IOException if any other error occurred
1146 Clean direct buffer pool
1147 Forcibly free the direct buffers.
1148 Returns the file stat for a file descriptor. @param fd file descriptor. @return the file descriptor file stat. @throws IOException thrown if there was an IO error while obtaining the file stat.
1149 Return the file stat for a file path. @param path file path @return the file stat @throws IOException thrown if there is an IO error while obtaining the file stat
1150 Create a BoundedByteArrayOutputStream with the specified capacity and limit. @param capacity The capacity of the underlying byte array @param limit The maximum limit upto which data can be written
1151 Construct a new EnumSetWritable. Argument <tt>value</tt> should not be null or empty. @param value enumSet value.
1152 Writes bytes from a InputStream directly into the buffer. @param in input in. @param length input length. @throws IOException raised on errors performing I/O.
1153 Streaming access to the key. Useful for desrializing the key into user objects. @return The input stream.
1154 Modify the writable to the value from the newValue. @param obj the object to read into @param newValue the string with the url-safe base64 encoded bytes @throws IOException
1155 Optimization hook. Override this to make SequenceFile.Sorter's scream. <p>The default implementation reads the data into two {@link WritableComparable}s (using {@link Writable#readFields(DataInput)}, then calls {@link #compare(WritableComparable,WritableComparable)}.
1156 Given a BlockGroup, tell if any of the missing blocks can be recovered, to be called by ECManager @param blockGroup a blockGroup that may contain erased blocks but not sure recoverable or not @return true if any erased block recoverable, false otherwise
1157 Get the number of erased blocks in the block group. @param blockGroup blockGroup. @return number of erased blocks
1158 Get indexes of erased blocks from inputBlocks @param inputBlocks inputBlocks. @return indexes of erased blocks from inputBlocks
1159 Check and ensure the buffers are of the desired length and type, direct buffers or not. @param buffers the buffers to check
1160 Check and ensure the buffers are of the desired length. @param buffers the buffers to check
1161 The constructor with all the necessary info. @param inputBlocks inputBlocks. @param erasedIndexes the indexes of erased blocks in inputBlocks array @param outputBlocks outputBlocks. @param rawDecoder underlying RS decoder for hitchhiker decoding @param rawEncoder underlying XOR encoder for hitchhiker decoding
1162 Check and validate decoding parameters, throw exception accordingly. The checking assumes it's a MDS code. Other code can override this. @param inputs input buffers to check @param erasedIndexes indexes of erased units in the inputs array @param outputs output buffers to check
1163 The constructor with all the necessary info. @param inputBlocks inputBlocks. @param outputBlocks outputBlocks. @param rsRawEncoder underlying RS encoder for hitchhiker encoding @param xorRawEncoder underlying XOR encoder for hitchhiker encoding
1164 Check and validate decoding parameters, throw exception accordingly. @param inputs input buffers to check @param outputs output buffers to check
1165 Compute the sum of two polynomials. The index in the array corresponds to the power of the entry. For example p[0] is the constant term of the polynomial p. @param p input polynomial @param q input polynomial @return polynomial represents p+q
1166 Compute the multiplication of two polynomials. The index in the array corresponds to the power of the entry. For example p[0] is the constant term of the polynomial p. @param p input polynomial @param q input polynomial @return polynomial represents p*q
1167 Perform Gaussian elimination on the given matrix. This matrix has to be a fat matrix (number of rows &gt; number of columns). @param matrix matrix.
1168 Print data in hex format in an array of chunks. @param header header. @param chunks chunks.
1169 Initialize the output buffers with ZERO bytes.
1170 Convert an array of this chunks to an array of ByteBuffers @param chunks chunks to convertToByteArrayState into buffers @return an array of ByteBuffers
1171 Initialize the output buffers with ZERO bytes.
1172 Get the object performs Galois field arithmetic with default setting. @return GaloisField.
1173 Create a {@link BlockCompressorStream}. @param out stream @param compressor compressor to be used @param bufferSize size of buffer @param compressionOverhead maximum 'overhead' of the compression algorithm with given bufferSize
1174 Creates a new decompressor. @param bufferSize bufferSize.
1175 Creates a new compressor with the default buffer size.
1176 Find the relevant compression codec for the codec's canonical class name or by codec alias and returns its implemetation class. <p> Codec aliases are case insensitive. <p> The code alias is the short class name (without the package name). If the short class name ends with 'Codec', then there are two aliases for the codec, the complete short class name and the short class name without the 'Codec' ending. For example for the 'GzipCodec' codec class name the alias are 'gzip' and 'gzipcodec'. @param codecName the canonical class name of the codec @return the codec class
1177 Get a {@link Compressor} for the given {@link CompressionCodec} from the pool or a new one. @param codec the <code>CompressionCodec</code> for which to get the <code>Compressor</code> @param conf the <code>Configuration</code> object which contains confs for creating or reinit the compressor @return <code>Compressor</code> for the given <code>CompressionCodec</code> from the pool or a new one
1178 Get a {@link Decompressor} for the given {@link CompressionCodec} from the pool or a new one. @param codec the <code>CompressionCodec</code> for which to get the <code>Decompressor</code> @return <code>Decompressor</code> for the given <code>CompressionCodec</code> the pool or a new one
1179 Return the {@link Compressor} to the pool. @param compressor the <code>Compressor</code> to be returned to the pool
1180 Return the {@link Decompressor} to the pool. @param decompressor the <code>Decompressor</code> to be returned to the pool
1181 Get the type of {@link Compressor} needed by this {@link CompressionCodec}. @return the type of compressor needed by this codec.
1182 Get the type of {@link Decompressor} needed by this {@link CompressionCodec}. @return the type of decompressor needed by this codec.
1183 Creates a new compressor with the default compression level. Compressed data will be generated in ZLIB format.
1184 Creates a new compressor, taking settings from the configuration. @param conf configuration.
1185 Prepare the compressor to be used in a new stream with settings defined in the given Configuration. It will reset the compressor's compression level and compression strategy. @param conf Configuration storing new settings
1186 Parse the gzip header (assuming we're in the appropriate state). In order to deal with degenerate cases (e.g., user buffer is one byte long), we copy (some) header bytes to another buffer. (Filename, comment, and extra-field bytes are simply skipped.)</p> See http://www.ietf.org/rfc/rfc1952.txt for the gzip spec. Note that no version of gzip to date (at least through 1.4.0, 2010-01-20) supports the FHCRC header-CRC16 flagbit; instead, the implementation treats it as a multi-file continuation flag (which it also doesn't support). :-( Sun's JDK v6 (1.6) supports the header CRC, however, and so do we.
1187 Serialize. Write this object to out length uses zero-compressed encoding. @see Writable#write(DataOutput)
1188 Reads a zero-compressed encoded integer from input stream and returns it. @param stream Binary input stream @throws IOException raised on errors performing I/O. @return deserialized integer from stream.
1189 Reads an integer from the input stream and returns it. This function validates that the integer is between [lower, upper], inclusive. @param stream Binary input stream @param lower input lower. @param upper input upper. @throws IOException raised on errors performing I/O. @return deserialized integer from stream.
1190 Construct from a string. @param string input string.
1191 Finds any occurrence of <code>what</code> in the backing buffer, starting as position <code>start</code>. The starting position is measured in bytes and the return value is in terms of byte position in the buffer. The backing buffer is not converted to a string for this operation. @param what input what. @param start input start. @return byte position of the first occurrence of the search string in the UTF-8 buffer or -1 if not found
1192 Write a UTF8 encoded string to out. @param out input out. @param s input s. @throws IOException raised on errors performing I/O. @return a UTF8 encoded string to out.
1193 @return Write a UTF8 encoded string with a maximum size to out. @param out input out. @param s input s. @param maxLength input maxLength. @throws IOException raised on errors performing I/O.
1194 Set to a utf8 byte array. If the length of <code>utf8</code> is <em>zero</em>, actually clear {@link #bytes} and any existing data is lost. @param utf8 input utf8.
1195 Copy a text. @param other other.
1196 Read a line terminated by one of CR, LF, or CRLF.
1197 Read a line terminated by a custom delimiter.
1198 default constructor.
1199 Default constructor.
1200 Constructor. <p> Builds a key with a default weight. @param value The byte value of <i>this</i> key.
1201 Construct a hash value for a byte array. @param data data. @return MD5Hash.
1202 Construct a hash value for a String. @param utf8 utf8. @return MD5Hash.
1203 Constructs an MD5Hash from a hex string. @param hex input hex.
1204 <p> Keep trying forever with a fixed time between attempts. </p> @param sleepTime sleepTime. @param timeUnit timeUnit. @return RetryPolicy.
1205 <p> Keep trying a limited number of times, waiting a fixed time between attempts, and then fail by re-throwing the exception. </p> @param maxRetries maxRetries. @param sleepTime sleepTime. @param timeUnit timeUnit. @return RetryPolicy.
1206 <p> Keep trying a limited number of times, waiting a growing amount of time between attempts, and then fail by re-throwing the exception. The time between attempts is <code>sleepTime</code> mutliplied by a random number in the range of [0, 2 to the number of retries) </p> @param timeUnit timeUnit. @param maxRetries maxRetries. @param sleepTime sleepTime. @return RetryPolicy.
1207 <p> Keep trying a limited number of times, waiting a growing amount of time between attempts, and then fail by re-throwing the exception. The time between attempts is <code>sleepTime</code> mutliplied by the number of tries so far. </p> @param sleepTime sleepTime. @param maxRetries maxRetries. @param timeUnit timeUnit. @return RetryPolicy.
1208 Starts timing for the instrumented write lock.
1209 Starts timing for the instrumented lock.
1210 Starts timing for the instrumented read lock. It records the time to ThreadLocal.
1211 Create a proxy for an interface of implementations of that interface using the given {@link FailoverProxyProvider} and the a set of retry policies specified by method name. If no retry policy is defined for a method then a default of {@link RetryPolicies#TRY_ONCE_THEN_FAIL} is used. @param iface the interface that the retry will implement @param proxyProvider provides implementation instances whose methods should be retried @param methodNameToPolicyMap map of method names to retry policies @param defaultPolicy defaultPolicy. @param <T> T. @return the retry proxy
1212 Similarly, remoteExceptionToRetry is ignored as part of hashCode since it does not affect connection failure handling.
1213 remoteExceptionToRetry is ignored as part of equals since it does not affect connection failure handling.
1214 @return null if nothing is added to this builder; otherwise, return an {@link IOException}
1215 Get names of supported compression algorithms. The names are acceptable by TFile.Writer. @return Array of strings, each represents a supported compression algorithm. Currently, the following compression algorithms are supported. <ul> <li>"none" - No compression. <li>"lzo" - LZO compression. <li>"gz" - GZIP compression. </ul>
1216 Get the name of the compression algorithm used to compress the block. @return name of the compression algorithm.
1217 Read a String as a VInt n, followed by n Bytes in Text format. @param in The input stream. @return The string @throws IOException raised on errors performing I/O.
1218 Reading the length of next chunk. @throws java.io.IOException when no more data is available.
1219 Make a raw comparator from a string name. @param name Comparator name @return A RawComparable comparator.
1220 Write out a chunk. @param chunk The chunk buffer. @param offset Offset to chunk buffer for the beginning of chunk. @param len @param last Is this the last call to flushBuffer?
1221 Write out a chunk that is a concatenation of the internal buffer plus user supplied data. This will never be the last block. @param data User supplied data buffer. @param offset Offset to user data buffer. @param len User data buffer size.
1222 Constructor. @param out the underlying output stream. @param size The total # of bytes to be written as a single chunk. @throws java.io.IOException if an I/O error occurs.
1223 Get a Comparator object to compare Entries. It is useful when you want stores the entries in a collection (such as PriorityQueue) and perform sorting or comparison among entries based on the keys without copying out the key. @return An Entry Comparator..
1224 Is cursor at the end location? @return true if the cursor is at the end location.
1225 Get the location pointing to the beginning of the first key-value pair in a compressed block whose byte offset in the TFile is greater than or equal to the specified offset. @param offset the user supplied offset. @return the location to the corresponding entry; or end() if no such entry exists.
1226 @see java.lang.Object#clone()
1227 Copy value into user-supplied buffer. User supplied buffer must be large enough to hold the whole value. The value part of the key-value pair pointed by the current cursor is not cached and can only be examined once. Calling any of the following functions more than once without moving the cursor will result in exception: {@link #getValue(byte[])}, {@link #getValue(byte[], int)}, {@link #getValueStream}. @param buf buf. @return the length of the value. Does not require isValueLengthKnown() to be true. @throws IOException raised on errors performing I/O.
1228 Set to contain the contents of a string. @param string input string.
1229 Convert writables to a byte array. @param writables input writables. @return ByteArray.
1230 @return Convert a string to a UTF-8 encoded byte array. @see String#getBytes(String) @param string input string.
1231 Workhorse to check and write out compressed data/lengths
1232 Used by child copy constructors. @param other other.
1233 Append a key/value pair.
1234 Get the bytes for the token identifier @return the bytes of the identifier
1235 Generate a string with the url-quoted base64 encoded serialized form of the Writable. @param obj the object to serialize @return the encoded string @throws IOException
1236 Move the data from the output buffer to the input buffer.
1237 Return the distance between two nodes by comparing their network paths without checking if they belong to the same ancestor node by reference. It is assumed that the distance from one node to its parent is 1 The distance between two nodes is calculated by summing up their distances to their closest common ancestor. @param node1 one node @param node2 another node @return the distance between node1 and node2
1238 Return a reference to the node given its string representation. Default implementation delegates to {@link #getNode(String)}. <p>To be overridden in subclasses for specific NetworkTopology implementations, as alternative to overriding the full {@link #add(Node)} method. @param node The string representation of this node's network location is used to retrieve a Node object. @return a reference to the node; null if the node is not in the tree @see #add(Node) @see #getNode(String)
1239 return leaves in <i>scope</i> @param scope a path string @return leaves nodes under specific scope
1240 return the number of leaves in <i>scope</i> but not in <i>excludedNodes</i> if scope starts with ~, return the number of nodes that are not in <i>scope</i> and <i>excludedNodes</i>; @param scope a path string that may start with ~ @param excludedNodes a list of nodes @return number of available nodes
1241 Internal function for update empty rack number for remove or decommission a node. @param node node to be removed; can be null
1242 Sort nodes array by network distance to <i>reader</i>. <p> As an additional twist, we also randomize the nodes at each network distance. This helps with load balancing when there is data skew. And it helps choose node with more fast storage type. @param reader Node where data will be read @param nodes Available replicas with the requested data @param activeLen Number of active nodes at the front of the array @param nonDataNodeReader True if the reader is not a datanode
1243 Update empty rack number when add a node like recommission. @param node node to be added; can be null
1244 Call {@link #transferToFully(FileChannel, long, int, LongWritable, LongWritable) } with null <code>waitForWritableTime</code> and <code>transferToTime</code>. @param fileCh input fileCh. @param position input position. @param count input count. @throws IOException raised on errors performing I/O.
1245 Take an IOException , the local host port and remote host port details and return an IOException with the input exception as the cause and also include the host details. The new exception provides the stack trace of the place where the exception is thrown and some extra diagnostics information. If the exception is of type BindException, ConnectException, UnknownHostException, SocketTimeoutException or has a String constructor, return a new one of the same type; Otherwise return an IOException. @param destHost target host (nullable) @param destPort target port @param localHost local host (nullable) @param localPort local port @param exception the caught exception. @return an exception to throw
1246 Constructor. The mapping is not ready to use until {@link #setConf(Configuration)} has been called
1247 Create an instance from the given raw mapping @param rawMap raw DNSTOSwithMapping
1248 Construct an InnerNode from a path-like string. @param path input path.
1249 Construct an InnerNode from its name, its network location, its parent, and its level. @param name input name. @param location input location. @param parent input parent. @param level input level.
1250 Wake up the DomainSocketWatcher thread.
1251 Create a new DomainSocket listening on the given path. @param path The path to bind and listen on. @return The new DomainSocket. @throws IOException raised on errors performing I/O.
1252 Create a pair of UNIX domain sockets which are connected to each other by calling socketpair(2). @return An array of two UNIX domain sockets connected to each other. @throws IOException on error.
1253 Create a new DomainSocket connected to the given path. @param path The path to connect to. @throws IOException If there was an I/O error performing the connect. @return The new DomainSocket.
1254 Send callback, and if the domain socket was closed as a result of processing, then also remove the entry for the file descriptor. @param caller reason for call @param entries mapping of file descriptor to entry @param fdSet set of file descriptors @param fd file descriptor
1255 Close the DomainSocketWatcher and wait for its thread to terminate. If there is more than one close, all but the first will be ignored.
1256 Takes one selector from end of LRU list of free selectors. If there are no selectors awailable, it creates a new selector. Also invokes trimIdleSelectors(). @param channel @return @throws IOException
1257 puts selector back at the end of LRU list of free selectos. Also invokes trimIdleSelectors(). @param info
1258 @return Like {@link DNS#getIPs(String, boolean)}, but returns all IPs associated with the given interface and its subinterfaces. @param strInterface input strInterface. @throws UnknownHostException If no IP address for the local host could be found.
1259 Returns all the host names associated by the provided nameserver with the address bound to the specified network interface @param strInterface The name of the network interface or subinterface to query (e.g. eth0 or eth0:0) @param nameserver The DNS host name @param tryfallbackResolution if true and if reverse DNS resolution fails then attempt to resolve the hostname with {@link InetAddress#getCanonicalHostName()} which includes hosts file resolution. @return A string vector of all host names associated with the IPs tied to the specified interface @throws UnknownHostException if the given interface is invalid
1260 Create a log helper without any primary recorder. @see #LogThrottlingHelper(long, String) @param minLogPeriodMs input minLogPeriodMs.
1261 Record some set of values at the current time into this helper. Note that this does <i>not</i> actually write information to any log. Instead, this will return a LogAction indicating whether or not the caller should write to its own log. The LogAction will additionally contain summary information about the values specified since the last time the caller was expected to write to its log. <p>Specifying multiple values will maintain separate summary statistics about each value. For example: <pre>{@code helper.record(1, 0); LogAction action = helper.record(3, 100); action.getStats(0); // == 2 action.getStats(1); // == 50 }</pre> @param values The values about which to maintain summary information. Every time this method is called, the same number of values must be specified. @return A LogAction indicating whether or not the caller should write to its log.
1262 Unquote the name and quote the value.
1263 Quote the url so that users specifying the HOST HTTP header can't inject attacks.
1264 Quote the server name so that users specifying the HOST HTTP header can't inject attacks.
1265 See {@link #FileMonitoringTimerTask(List, Consumer, Consumer)}. @param filePath The file to monitor. @param onFileChange What to do when the file changes. @param onChangeFailure What to do when <code>onFileChange</code> throws an exception.
1266 Update the cache and return the current cache record @param mr the update record @return the updated cache record
1267 Consume one element, will block if queue is empty Only one consumer at a time is allowed @param consumer the consumer callback object
1268 Consume all the elements, will block if queue is empty @param consumer the consumer callback object @throws InterruptedException
1269 One cache hit event
1270 One cache cleared
1271 One cache updated
1272 Client was disconnected due to backoff
1273 Increments the Slow RPC counter.
1274 Increments the Requeue Calls counter.
1275 One RPC call success event.
1276 This is a wrapper around {@link WritableByteChannel#write(ByteBuffer)}. If the amount of data is large, it writes to channel in smaller chunks. This is to avoid jdk from creating many direct buffers as the size of buffer increases. This also minimizes extra copies in NIO layer as a result of multiple write operations required to write a large buffer. @see WritableByteChannel#write(ByteBuffer)
1277 This is a wrapper around {@link ReadableByteChannel#read(ByteBuffer)}. If the amount of data is large, it writes to channel in smaller chunks. This is to avoid jdk from creating many direct buffers as the size of ByteBuffer increases. There should not be any performance degredation. @see ReadableByteChannel#read(ByteBuffer)
1278 Increase the failure count and update the last failure timestamp.
1279 Queries impl for groups belonging to the user. This could involve I/O and take awhile.
1280 Shutdown the instrumentation process.
1281 Sets quantileInfo. @param ucName capitalized name of the metric @param uvName capitalized type of the values @param desc uncapitalized long-form textual description of the metric @param lvName uncapitalized type of the values @param pDecimalFormat Number formatter for percentile value
1282 Sets quantileInfo. @param ucName capitalized name of the metric @param uvName capitalized type of the values @param desc uncapitalized long-form textual description of the metric @param lvName uncapitalized type of the values @param df Number formatter for inverse percentile value
1283 Construct the registry with a record name @param name of the record of the metrics
1284 Get a metrics tag. @param name of the tag @param description of the tag @param value of the tag @return an interned metrics tag
1285 Construct a sample statistics metric @param name of the metric @param description of the metric @param sampleName of the metric (e.g. "Ops") @param valueName of the metric (e.g. "Time", "Latency") @param extended create extended stats (stdev, min/max etc.) by default.
1286 Add a tag to the metrics @param info metadata of the tag @param value of the tag @param override existing tag if true @return the registry (for keep adding tags etc.)
1287 Add a snapshot to the metric. @param value of the metric
1288 Return Standard Deviation of the Processing Time. @return double
1289 Add a new value from the stream. @param v v.
1290 Get a snapshot of the current values of all the tracked quantiles. @return snapshot of the tracked quantiles. If no items are added to the estimator, returns null.
1291 Return top token real owners list as well as the tokens count. @param n top number of users @return map of owners to counts
1292 Add a group to cache, only netgroups are cached @param groups list of group names to add to cache
1293 Obtain the collection of tokens associated with this user. @return an unmodifiable collection of tokens associated with user
1294 Get the group memberships of a given user. If the user's group is not cached, this method may block. Note this method can be expensive as it involves Set {@literal ->} List conversion. For user with large group membership (i.e., {@literal >} 1000 groups), we recommend using getGroupSet to avoid the conversion and fast membership look up via contains(). @param user User's name @return the group memberships of the user as list @throws IOException if user does not exist @deprecated Use {@link #getGroupsSet(String user)} instead.
1295 Get the group memberships of a given user. If the user's group is not cached, this method may block. This provide better performance when user has large group membership via <br> 1) avoid {@literal set->list->set} conversion for the caller UGI/PermissionCheck <br> 2) fast lookup using contains() via Set instead of List @param user User's name @return the group memberships of the user as set @throws IOException if user does not exist
1296 Gets unix groups and netgroups for the user. It gets all unix groups as returned by id -Gn but it only returns netgroups that are used in ACLs (there is no way to get all netgroups for a given user, see documentation for getent netgroup)
1297 Print a new line
1298 Print a system property, or {@link #UNSET} if unset. @param property property to print
1299 Print an environment variable's name and value; printing {@link #UNSET} if it is not set. @param variable environment variable
1300 Dump any file to standard out. @param file file to dump @throws IOException IO problems
1301 Print a message as an error @param category error category @param message format string @param args list of arguments
1302 Print a message as an warning @param category error category @param message format string @param args list of arguments
1303 Sets the authentication method in the subject @param authMethod authMethod.
1304 Writes the specified byte to this output stream. @param b the <code>byte</code>. @exception IOException if an I/O error occurs.
1305 Writes <code>b.length</code> bytes from the specified byte array to this output stream. <p> The <code>write</code> method of <code>SASLOutputStream</code> calls the <code>write</code> method of three arguments with the three arguments <code>b</code>, <code>0</code>, and <code>b.length</code>. @param b the data. @exception NullPointerException if <code>b</code> is null. @exception IOException if an I/O error occurs.
1306 Find the DelegationTokenInformation for the given token id, and verify that if the token is expired. Note that this method should be called with acquiring the secret manager's monitor. @param identifier identifier. @throws InvalidToken invalid token exception. @return DelegationTokenInformation.
1307 Sets an external <code>DelegationTokenSecretManager</code> instance to manage creation and verification of Delegation Tokens. <p> This is useful for use cases where secrets must be shared across multiple services. @param secretManager a <code>DelegationTokenSecretManager</code> instance
1308 Update the current master key This is called once by startThreads before tokenRemoverThread is created, and only by tokenRemoverThread afterwards.
1309 Default constructore required for Writable
1310 Creates an <code>DelegationTokenAuthenticatedURL</code>. @param authenticator the {@link DelegationTokenAuthenticator} instance to use, if <code>null</code> the default one will be used. @param connConfigurator a connection configurator.
1311 Renew or replace the delegation token for this file system. It can only be called when the action is not in the queue. @return @throws IOException
1312 Reads the next byte of data from this input stream. The value byte is returned as an <code>int</code> in the range <code>0</code> to <code>255</code>. If no byte is available because the end of the stream has been reached, the value <code>-1</code> is returned. This method blocks until input data is available, the end of the stream is detected, or an exception is thrown. <p> @return the next byte of data, or <code>-1</code> if the end of the stream is reached. @exception IOException if an I/O error occurs.
1313 Reads up to <code>len</code> bytes of data from this input stream into an array of bytes. This method blocks until some input is available. If the first argument is <code>null,</code> up to <code>len</code> bytes are read and discarded. @param b the buffer into which the data is read. @param off the start offset of the data. @param len the maximum number of bytes read. @return the total number of bytes read into the buffer, or <code>-1</code> if there is no more data because the end of the stream has been reached. @exception IOException if an I/O error occurs.
1314 Authorize the superuser which is doing doAs. {@link #authorize(UserGroupInformation, InetAddress)} should be preferred to avoid possibly re-resolving the ip address. @param user ugi of the effective or proxy user which contains a real user. @param remoteAddress the ip address of client. @throws AuthorizationException Authorization Exception.
1315 Is the ugi managed by the UGI or an external subject? @return true if managed by UGI.
1316 Create a proxy user using username of the effective user and the ugi of the real user. @param user user. @param realUser realUser. @return proxyUser ugi
1317 If this is a proxy user, get the real user. Otherwise, return this user. @param user the user to check @return the real user or self
1318 Return the username.
1319 Get the authentication method from the real user's subject. If there is no real user, return the given user's authentication method. @return AuthenticationMethod in the subject, null if not present.
1320 Returns the authentication method of a ugi. If the authentication method is PROXY, returns the authentication method of the real user. @param ugi ugi. @return AuthenticationMethod
1321 This method creates the connection context using exactly the same logic as the old connection context as was done for writable where the effective and real users are set based on the auth method. @param protocol protocol. @param ugi ugi. @param authMethod authMethod. @return IpcConnectionContextProto.
1322 The javax.net.ssl.HostnameVerifier contract. @param host 'hostname' we used to create our socket @param session SSLSession with the remote server @return true if the host matched the one in the certificate.
1323 Load a resource @param name resource name @return the status code
1324 Constructor. @param conf configuration.
1325 Factory constructor for commands @param conf the hadoop configuration
1326 Construct a FsShell with the given configuration. Commands can be executed via {@link #run(String[])} @param conf the hadoop configuration
1327 Create a class with a specified configuration @param conf configuration
1328 Used exclusively for testing. @param conf The configuration to use. @param out The PrintStream to write to, instead of System.out
1329 Construct a Configured.
1330 Returns the access control list as a String that can be used for building a new instance by sending it to the constructor of {@link AccessControlList}. @return acl string.
1331 Get the Kerberos TGT @return the user's TGT or null if none was found
1332 Configure ZooKeeper Client with SSL/TLS connection. @param zkClientConfig ZooKeeper Client configuration @param truststoreKeystore truststore keystore, that we use to set the SSL configurations @throws ConfigurationException if the SSL configs are empty
1333 Return an <code>OpensslCipher</code> object that implements the specified transformation. @param transformation the name of the transformation, e.g., AES/CTR/NoPadding. @param engineId the openssl engine to use.if not set, defalut engine will be used. @return OpensslCipher an <code>OpensslCipher</code> object @throws NoSuchAlgorithmException if <code>transformation</code> is null, empty, in an invalid format, or if Openssl doesn't implement the specified algorithm. @throws NoSuchPaddingException if <code>transformation</code> contains a padding scheme that is not available.
1334 Create a new key generating the material for it. The given key must not already exist. <p> This implementation generates the key material and calls the {@link #createKey(String, byte[], Options)} method. @param name the base name of the key @param options the options for the new key. @return the version name of the first version of the key. @throws IOException raised on errors performing I/O. @throws NoSuchAlgorithmException no such algorithm exception.
1335 Roll a new version of the given key generating the material for it. <p> This implementation generates the key material and calls the {@link #rollNewVersion(String, byte[])} method. @param name the basename of the key @return the name of the new version of the key @throws IOException raised on errors performing I/O. @throws NoSuchAlgorithmException This exception is thrown when a particular cryptographic algorithm is requested but is not available in the environment.
1336 Insert e into the backing queue or block until we can. If client backoff is enabled this method behaves like add which throws if the queue overflows. If we block and the queue changes on us, we will insert while the queue is drained.
1337 Register the rpcRequest deserializer for WritableRpcEngine
1338 Start to measure times and make the state of stopwatch running. @return this instance of StopWatch.
1339 Stop elapsed time and make the state of stopwatch stop. @return this instance of StopWatch.
1340 @return current elapsed time in nanosecond.
1341 Get the hash code of an array of methods Methods are sorted before hashcode is calculated. So the returned value is irrelevant of the method order in the array. @param methods an array of methods @return the hash code
1342 Return a protocol's signature and finger print from cache @param protocol a protocol class @param serverVersion protocol version @return its signature and finger print
1343 Create RemoteException from attributes. @param attrs may not be null. @return RemoteException.
1344 Partial listing of the path being listed. In the case where the path is a file. The list will be a singleton with the file itself. @return Partial listing of the path being listed. @throws IOException if there was an exception getting the listing.
1345 Store a processing time value for an RPC call into this scheduler. @param callName The name of the call. @param schedulable The schedulable representing the incoming call. @param details The details of processing time.
1346 Offer the element to queue of the given or lower priority. @param priority - starting queue priority @param e - element to add @param includeLast - whether to attempt last queue @return boolean if added to a queue
1347 @param t the {@link java.lang.Throwable} to use to set errorInfo @param responseParams the {@link ResponseParams} instance to populate
1348 Create a version mismatch exception @param interfaceName the name of the protocol mismatch @param clientVersion the client's version of the protocol @param serverVersion the server's version of the protocol
1349 Update the scheduleCache to match current conditions in callCosts.
1350 Returns the priority level for a given identity by first trying the cache, then computing it. @param identity an object responding to toString and hashCode @return integer scheduling decision from 0 to numLevels - 1
1351 Override hashcode to avoid findbugs warnings
1352 Use the mux by getting and advancing index.
1353 @return Returns remote address as a string when invoked inside an RPC. Returns null in case of an error.
1354 @param hostEntries collection of separated ip/cidr/host addresses
1355 Read /proc/meminfo, parse and compute memory information only once.
1356 {@inheritDoc}
1357 {@inheritDoc}
1358 {@inheritDoc}
1359 {@inheritDoc}
1360 Add a new (key, value) mapping. Inserting a new (key, value) never overwrites a previous one. In other words, you can insert the same key multiple times and it will lead to multiple entries. @param k Generics Type k. @param v Generics Type v.
1361 This method should be used if you need a {@link TransformerFactory}. Use this method instead of {@link TransformerFactory#newInstance()}. The factory that is returned has secure configuration enabled. @return a {@link TransformerFactory} with secure configuration enabled @throws TransformerConfigurationException if the {@code JAXP} transformer does not support the secure configuration
1362 This method should be used if you need a {@link SAXTransformerFactory}. Use this method instead of {@link SAXTransformerFactory#newInstance()}. The factory that is returned has secure configuration enabled. @return a {@link SAXTransformerFactory} with secure configuration enabled @throws TransformerConfigurationException if the {@code JAXP} transformer does not support the secure configuration
1363 Formats a size to be human readable or in bytes. @param size value to be formatted @param humanReadable flag indicating human readable or not @return String representation of the size
1364 Formats a size to be human readable or in bytes. @param size value to be formatted @param humanReadable flag indicating human readable or not @return String representation of the size
1365 Given an integer, return a string that is in an approximate, but human readable format. @param number the number to format @return a human readable form of the integer @deprecated use {@link TraditionalBinaryPrefix#long2String(long, String, int)}.
1366 a byte description of the given long interger value. @param len len. @return a byte description of the given long interger value.
1367 Add a new row to the usages table for the given FileSystem URI. @param uri - FileSystem URI @param fsStatus - FileSystem status @param mountedOnPath - FileSystem mounted on path
1368 Same as byteToHexString(bytes, 0, bytes.length). @param bytes bytes. @return byteToHexString.
1369 Sort the given range of items using heap sort. {@inheritDoc}
1370 Exit the JVM using an exception for the exit code and message, invoking {@link ExitUtil#terminate(ExitUtil.ExitException)}. This is the standard way a launched service exits. An error code of 0 means success -nothing is printed. If {@link ExitUtil#disableSystemExit()} has been called, this method will throw the exception. The method <i>may</i> be subclassed for testing @param ee exit exception @throws ExitUtil.ExitException if ExitUtil exceptions are disabled
1371 Exit with a printed message. @param status status code @param message message message to print before exiting @throws ExitUtil.ExitException if exceptions are disabled
1372 Like {@link #terminate(int, String)} but uses the given throwable to build the message to display or throw as an {@link ExitException}. <p> @param status exit code to use if the exception is not an ExitException. @param t throwable which triggered the termination. If this exception is an {@link ExitException} its status overrides that passed in. @throws ExitException if {@link System#exit(int)} is disabled.
1373 Terminate the current process. Note that terminate is the *only* method that should be used to terminate the daemon processes. @param status exit code @param msg message used to create the {@code ExitException} @throws ExitException if {@link System#exit(int)} is disabled.
1374 Forcibly terminates the currently running Java virtual machine. @param status exit code to use if the exception is not a HaltException. @param t throwable which triggered the termination. If this exception is a {@link HaltException} its status overrides that passed in. @throws HaltException if {@link System#exit(int)} is disabled.
1375 Forcibly terminates the currently running Java virtual machine. @param status status code @param message message @throws HaltException if {@link Runtime#halt(int)} is disabled.
1376 Unregister the hook.
1377 Creates a <i>mutable</i> {@code ArrayList} instance containing the given elements; a very thin shortcut for creating an empty list then calling Iterables#addAll. @param <E> Generics Type E. @param elements elements. @return ArrayList Generics Type E.
1378 Creates a <i>mutable</i> {@code LinkedList} instance containing the given elements; a very thin shortcut for creating an empty list then calling Iterables#addAll. <p><b>Performance note:</b> {@link ArrayList} and {@link java.util.ArrayDeque} consistently outperform {@code LinkedList} except in certain rare and specific situations. Unless you have spent a lot of time benchmarking your specific needs, use one of those instead.</p> @param elements elements. @param <E> Generics Type E. @return Generics Type E List.
1379 Given permissions and extended ACL entries, returns the full logical ACL. @param perm FsPermission containing permissions @param entries List&lt;AclEntry&gt; containing extended ACL entries @return List&lt;AclEntry&gt; containing full logical ACL
1380 Creates a <i>mutable</i> {@code ArrayList} instance containing the given elements. <p>Note that even when you do need the ability to add or remove, this method provides only a tiny bit of syntactic sugar for {@code newArrayList(} {@link Arrays#asList asList} {@code (...))}, or for creating an empty list then calling {@link Collections#addAll}. @param <E> Generics Type E. @param elements elements. @return ArrayList Generics Type E.
1381 Creates an {@code ArrayList} instance to hold {@code estimatedSize} elements, <i>plus</i> an unspecified amount of padding; you almost certainly mean to call {@link #newArrayListWithCapacity} (see that method for further advice on usage). @param estimatedSize an estimate of the eventual {@link List#size()} of the new list. @return a new, empty {@code ArrayList}, sized appropriately to hold the estimated number of elements. @throws IllegalArgumentException if {@code estimatedSize} is negative. @param <E> Generics Type E.
1382 Save to a local file. Any existing file is overwritten unless the OS blocks that. @param file file @param instance instance @throws IOException IO exception
1383 Constructor. If the supplied count is greater than zero, the counter of the key name is updated. @param iostats statistics to update @param key Key to use as prefix of values. @param count #of times to increment the matching counter.
1384 Create the duration text from a {@code String.format()} code call and log either at info or debug. @param log log to write to @param logAtInfo should the log be at info, rather than debug @param format format string @param args list of arguments
1385 Return the duration as {@link #humanTime(long)}. @return a printable duration.
1386 Returns a CrcComposer which will collapse CRCs for every combined underlying data size which aligns with the specified stripe boundary. For example, if "update" is called with 20 CRCs and bytesPerCrc == 5, and stripeLength == 10, then every two (10 / 5) consecutive CRCs will be combined with each other, yielding a list of 10 CRC "stripes" in the final digest, each corresponding to 10 underlying data bytes. Using a stripeLength greater than the total underlying data size is equivalent to using a non-striped CrcComposer. @param type type. @param bytesPerCrcHint bytesPerCrcHint. @param stripeLength stripeLength. @return a CrcComposer which will collapse CRCs for every combined. underlying data size which aligns with the specified stripe boundary. @throws IOException raised on errors performing I/O.
1387 compose. @param crcA crcA. @param crcB crcB. @param lengthB length of content corresponding to {@code crcB}, in bytes. @param mod mod. @return compose result.
1388 Returns byte representation of composed CRCs; if no stripeLength was specified, the digest should be of length equal to exactly one CRC. Otherwise, the number of CRCs in the returned array is equal to the total sum bytesPerCrc divided by stripeLength. If the sum of bytesPerCrc is not a multiple of stripeLength, then the last CRC in the array corresponds to totalLength % stripeLength underlying data bytes. @return byte representation of composed CRCs.
1389 Unpack matching files from a jar. Entries inside the jar that do not match the given pattern will be skipped. Keep also a copy of the entire jar in the same directory for backward compatibility. TODO remove this feature in a new release and do only unJar @param inputStream the jar stream to unpack @param toDir the destination directory into which to unpack the jar @param unpackRegex the pattern to match jar entries against @param name name. @throws IOException if an I/O error has occurred or toDir cannot be created and does not already exist
1390 Unpack a jar file into a directory. This version unpacks all files inside the jar regardless of filename. @param jarFile the .jar file to unpack @param toDir the destination directory into which to unpack the jar @throws IOException if an I/O error has occurred or toDir cannot be created and does not already exist
1391 Find the nth occurrence of the given byte b in a UTF-8 encoded string @param utf a byte array containing a UTF-8 encoded string @param b the byte to find @param n the desired occurrence of the given byte @return position that nth occurrence of the given byte if exists; otherwise -1
1392 Get the value, creating if needed. @param key key. @return an instance.
1393 Log a warning if the lock was held for too long. Should be invoked by the caller immediately AFTER releasing the lock. @param acquireTime - timestamp just after acquiring the lock. @param releaseTime - timestamp just before releasing the lock. @param checkLockHeld checkLockHeld.
1394 Formats time in ms and appends difference (finishTime - startTime) as returned by formatTimeDiff(). If finish time is 0, empty string is returned, if start time is 0 then difference is not appended to return value. @param formattedFinishTime formattedFinishTime to use @param finishTime finish time @param startTime start time @return formatted value.
1395 Split a string using the default separator @param str a string that may have escaped separator @return an array of strings
1396 Convert SOME_STUFF to SomeStuff @param s input string @return camelized string
1397 Escape <code>charToEscape</code> in the string with the escape char <code>escapeChar</code> @param str string @param escapeChar escape char @param charToEscape the char to be escaped @return an escaped string
1398 Unescape <code>charToEscape</code> in the string with the escape char <code>escapeChar</code> @param str string @param escapeChar escape char @param charToEscape the escaped char @return an unescaped string
1399 Generate the text for the startup/shutdown message of processes. @param classname short classname of the class @param hostname hostname @param args Command arguments @return a string to log.
1400 Returns the buildVersion which includes version, revision, user and date. @return the buildVersion
1401 Return the next value. Will retrieve the next elements if needed. This is where the mapper takes place. @return true if there is another data element. @throws IOException failure in fetch operation or the transformation. @throws NoSuchElementException no more data
1402 Check for the source having a next element. If it does not, this object's close() method is called and false returned @return true if there is a new value @throws IOException failure to retrieve next value
1403 Create from a supplier. This is not a constructor to avoid ambiguity when a lambda-expression is passed in. @param supplier supplier implementation. @return a lazy reference. @param <T> type of reference
1404 Get the maximum number of objects/files to delete in a single request. @param fs filesystem @param path path to delete under. @return a number greater than or equal to zero. @throws UnsupportedOperationException bulk delete under that path is not supported. @throws IllegalArgumentException path not valid. @throws UncheckedIOException if an IOE was raised.
1405 Delete a list of files/objects. <ul> <li>Files must be under the path provided in {@code base}.</li> <li>The size of the list must be equal to or less than the page size.</li> <li>Directories are not supported; the outcome of attempting to delete directories is undefined (ignored; undetected, listed as failures...).</li> <li>The operation is not atomic.</li> <li>The operation is treated as idempotent: network failures may trigger resubmission of the request -any new objects created under a path in the list may then be deleted.</li> <li>There is no guarantee that any parent directories exist after this call. </li> </ul> @param fs filesystem @param base path to delete under. @param paths list of paths which must be absolute and under the base path. @return a list of all the paths which couldn't be deleted for a reason other than "not found" and any associated error message. @throws UnsupportedOperationException bulk delete under that path is not supported. @throws UncheckedIOException if an IOE was raised. @throws IllegalArgumentException if a path argument is invalid.
1406 OpenFile assistant, easy reflection-based access to {@link FileSystem#openFile(Path)} and blocks awaiting the operation completion. @param fs filesystem @param path path @param policy read policy @param status optional file status @param length optional file length @param options nullable map of other options @return stream of the opened file @throws UncheckedIOException if an IOE was raised.
1407 Delegate to {@link ByteBufferPositionedReadable#read(long, ByteBuffer)}. @param in input stream @param position position within file @param buf the ByteBuffer to receive the results of the read operation. Note: that is the default behaviour of {@link FSDataInputStream#readFully(long, ByteBuffer)}.
1408 Load IOStatisticsSnapshot from a Hadoop filesystem. @param fs filesystem @param path path @return the loaded snapshot @throws UncheckedIOException Any IO exception.
1409 Load IOStatisticsSnapshot from a JSON string. @param json JSON string value. @return deserialized snapshot. @throws UncheckedIOException Any IO/jackson exception.
1410 Implementation of {@code Supplier.get()}. <p> Invoke {@link #eval()} and convert IOEs to UncheckedIOException. <p> This is the {@code Supplier.get()} implementation, which allows this class to passed into anything taking a supplier. @return the value @throws UncheckedIOException if the constructor raised an IOException.
1411 Create a task builder for the iterable. @param items item source. @param <I> type of result. @return builder.
1412 From the inner cause of an execution exception, extract the inner cause if it is an IOE or RTE. See {@link FutureIO#raiseInnerCause(ExecutionException)}. @param e exception. @param <T> type of return value. @return nothing, ever. @throws IOException either the inner IOException, or a wrapper around any non-Runtime-Exception @throws RuntimeException if that is the inner cause.
1413 Given a future, evaluate it. <p> Any exception generated in the future is extracted and rethrown. </p> If this thread is interrupted while waiting for the future to complete, an {@code InterruptedIOException} is raised. However, if the future is cancelled, a {@code CancellationException} is raised in the {code Future.get()} call. This is passed up as is -so allowing the caller to distinguish between thread interruption (such as when speculative task execution is aborted) and future cancellation. @param future future to evaluate @param <T> type of the result. @return the result, if all went well. @throws InterruptedIOException waiting for future completion was interrupted @throws CancellationException if the future itself was cancelled @throws IOException if something went wrong @throws RuntimeException any nested RTE thrown
1414 Given a future, evaluate it. <p> Any exception generated in the future is extracted and rethrown. </p> @param future future to evaluate @param timeout timeout to wait. @param unit time unit. @param <T> type of the result. @return the result, if all went well. @throws InterruptedIOException waiting for future completion was interrupted @throws CancellationException if the future itself was cancelled @throws IOException if something went wrong @throws RuntimeException any nested RTE thrown @throws TimeoutException the future timed out.
1415 Extract the cause of a completion failure and rethrow it if an IOE or RTE. See {@link FutureIO#raiseInnerCause(CompletionException)}. @param e exception. @param <T> type of return value. @return nothing, ever. @throws IOException either the inner IOException, or a wrapper around any non-Runtime-Exception @throws RuntimeException if that is the inner cause.
1416 Check and set 'configuration' if necessary. @param theObject object for which to set configuration @param conf Configuration
1417 Return the class for a name. Default is {@link Class#forName(String)}. @param name input name. @param conf input configuration. @return class for a name. @throws IOException raised on errors performing I/O.
1418 Find and load the class with given name <tt>className</tt> by first finding it in the specified <tt>conf</tt>. If the specified <tt>conf</tt> is null, try load it directly. @param conf configuration. @param className classname. @return Class.
1419 Get a class fromt the configuration @param name the class name @return the class @throws ClassNotFoundException if the class was not found @throws Error on other classloading problems
1420 Log the current thread stacks at INFO level. @param log the logger that logs the stack trace @param title a descriptive title for the call stacks @param minInterval the minimum time from the last @deprecated to be removed with 3.4.0. Use {@link #logThreadInfo(Logger, String, long)} instead.
1421 Log the current thread stacks at INFO level. @param log the logger that logs the stack trace @param title a descriptive title for the call stacks @param minInterval the minimum time from the last
1422 Constructor with both optional path and path handle. Either or both argument may be empty, but it is an error for both to be defined. @param optionalPath a path or empty @param optionalPathHandle a path handle/empty @throws IllegalArgumentException if both parameters are set.
1423 A new configuration.
1424 Validates the status of an <code>HttpURLConnection</code> against an expected HTTP status code. If the current status code is not the expected one it throws an exception with a detail message using Server side error messages if available. <p> <b>NOTE:</b> this method will throw the deserialized exception even if not declared in the <code>throws</code> of the method signature. @param conn the <code>HttpURLConnection</code>. @param expectedStatus the expected HTTP status code. @throws IOException thrown if the current status code does not match the expected one.
1425 The flag is volatile to avoid synchronization here. Re-entrancy is unlikely except in failure mode (and inexpensive).
1426 Returns just the shell command to be used to fetch a user's groups list. This is mainly separate to make some tests easier. @param userName The username that needs to be passed into the command built @return An appropriate shell command with arguments
1427 Returns just the shell command to be used to fetch a user's group IDs list. This is mainly separate to make some tests easier. @param userName The username that needs to be passed into the command built @return An appropriate shell command with arguments
1428 Return a command to set permission for specific file. @param perm String permission to set @param recursive boolean true to apply to all sub-directories recursively @param file String file to set @return String[] containing command and arguments
1429 Return a command for determining if process with specified pid is alive. @param pid process ID @return a <code>kill -0</code> command or equivalent
1430 Get the Hadoop home directory. Raises an exception if not found @return the home dir @throws IOException if the home directory cannot be located.
1431 Fully qualify the path to a binary that should be in a known hadoop bin location. This is primarily useful for disambiguating call-outs to executable sub-components of Hadoop to avoid clashes with other executables that may be in the path. Caveat: this call doesn't just format the path to the bin directory. It also checks for file existence of the composed path. The output of this call should be cached by callers. @param executable executable @return executable file reference @throws FileNotFoundException if the path does not exist
1432 Adds a node to the tree. Gives equal weightage to all phases. @return Progress.
1433 Adds n nodes to the tree. Gives equal weightage to all phases. @param n n.
1434 Adds a named node with a specified progress weightage to the tree. @param status status. @param weightage weightage. @return Progress.
1435 Returns progress in this node. get() would give overall progress of the root node(not just given current node). @return progress.
1436 Create a ZNode. @param path Path of the ZNode. @return If the ZNode was created. @throws Exception If it cannot contact Zookeeper.
1437 Utility function to ensure that the configured base znode exists. This recursively creates the znode as well as all of its parents. @param path Path of the znode to create. @param zkAcl ACLs for ZooKeeper. @throws Exception If it cannot create the file.
1438 Checks for an implementation, first finding the given class by name. @param className name of a class @param methodName name of a method (different from constructor) @param argClasses argument classes for the method @return this Builder for method chaining
1439 Checks for a method implementation. <p> The name passed to the constructor is the method name used. @param targetClass the class to check for an implementation @param argClasses argument classes for the method @return this Builder for method chaining
1440 Checks for an implementation, first finding the given class by name. @param className name of a class @param methodName name of a method (different from constructor) @param argClasses argument classes for the method @return this Builder for method chaining
1441 Checks for a method implementation. <p> The name passed to the constructor is the method name used. @param targetClass the class to check for an implementation @param argClasses argument classes for the method @return this Builder for method chaining
1442 Get an invocation from the source class, which will be unavailable() if the class is null or the method isn't found. @param <T> return type @param source source. If null, the method is a no-op. @param returnType return type class (unused) @param name method name @param parameterTypes parameters @return the method or "unavailable"
1443 For testing: verify that all methods were found. @throws UnsupportedOperationException if the method was not found.
1444 Are the bulk delete methods available? @return true if the methods were found.
1445 Is the {@link #fileSystem_openFile(FileSystem, Path, String, FileStatus, Long, Map)} method available. @return true if the optimized open file method can be invoked.
1446 Are the ByteBufferPositionedReadable methods loaded? This does not check that a specific stream implements the API; use {@link #byteBufferPositionedReadable_readFullyAvailable(InputStream)}. @return true if the hadoop libraries have the method.
1447 Probe to see if the input stream is an instance of ByteBufferPositionedReadable. If the stream is an FSDataInputStream, the wrapped stream is checked. @param in input stream @return true if the API is available, the stream implements the interface (including the innermost wrapped stream) and that it declares the stream capability. @throws IOException if the operation was attempted and failed.
1448 Are the core IOStatistics methods and classes available. @return true if the relevant methods are loaded.
1449 Are the IOStatisticsContext methods and classes available? @return true if the relevant methods are loaded.
1450 Require a method to be available. @param method method to probe @throws UnsupportedOperationException if the method was not found.
1451 Returns the first valid implementation as a BoundMethod or throws a NoSuchMethodException if there is none. @param receiver an Object to receive the method invocation @return a {@link BoundMethod} with a valid implementation and receiver @throws IllegalStateException if the method is static @throws IllegalArgumentException if the receiver's class is incompatible @throws NoSuchMethodException if no implementation was found
1452 Returns the first valid implementation as a BoundMethod or throws a RuntimeError if there is none. @param receiver an Object to receive the method invocation @return a {@link BoundMethod} with a valid implementation and receiver @throws IllegalStateException if the method is static @throws IllegalArgumentException if the receiver's class is incompatible @throws RuntimeException if no implementation was found
1453 Returns the first valid implementation as a StaticMethod or throws a NoSuchMethodException if there is none. @return a {@link StaticMethod} with a valid implementation @throws IllegalStateException if the method is not static @throws NoSuchMethodException if no implementation was found
1454 Returns the first valid implementation as a StaticMethod or throws a RuntimeException if there is none. @return a {@link StaticMethod} with a valid implementation @throws IllegalStateException if the method is not static @throws RuntimeException if no implementation was found
1455 Load the filesystem declarations from service resources. This is a synchronized operation.
1456 Compute the hash of the specified file @param args name of file to compute hash of. @throws IOException raised on errors performing I/O.
1457 Constructor. <p> Builds a hash function that must obey to a given maximum number of returned values and a highest value. @param maxValue The maximum highest returned value. @param nbHash The number of resulting hashed values. @param hashType type of the hashing function (see {@link Hash}).
1458 Default constructor - use with readFields
1459 This method calculates an approximate count of the key, i.e. how many times the key was added to the filter. This allows the filter to be used as an approximate <code>key -&gt; count</code> map. <p>NOTE: due to the bucket size of this filter, inserting the same key more than 15 times will cause an overflow at all filter positions associated with this key, and it will significantly increase the error rate for this and other keys. For this reason the filter can only be used to store small count values <code>0 &lt;= N &lt;&lt; 15</code>. @param key key to be tested @return 0 if the key is not present. Otherwise, a positive value v will be returned such that <code>v == count</code> with probability equal to the error rate of this filter, and <code>v &gt; count</code> otherwise. Additionally, if the filter experienced an underflow as a result of {@link #delete(Key)} operation, the return value may be lower than the <code>count</code> with the probability of the false negative rate of such filter.
1460 Adds a false positive information to <i>this</i> retouched Bloom filter. <p> <b>Invariant</b>: if the false positive is <code>null</code>, nothing happens. @param key The false positive key to add.
1461 Removes a given key from <i>this</i> filer. @param k The key to remove. @param vector The counting vector associated to the key.
1462 Chooses the bit position that minimizes the number of false negative generated. @param h The different bit positions. @return The position that minimizes the number of false negative generated.
1463 Chooses the bit position that maximizes the number of false positive removed. @param h The different bit positions. @return The position that maximizes the number of false positive removed.
1464 Computes the ratio A/FP.
1465 Dump a resource to out @param name resource name @return the status code
1466 Print a usage message @param args the command line arguments @return an exit code
1467 Adds element to the PriorityQueue in log(size) time if either the PriorityQueue is not full, or not lessThan(element, top()). @param element element. @return true if element is added, false otherwise.
1468 Creates a <i>mutable</i> {@code TreeSet} instance containing the given elements sorted by their natural ordering. <p><b>Note:</b> if mutability is not required, use ImmutableSortedSet#copyOf(Iterable) instead. <p><b>Note:</b> If {@code elements} is a {@code SortedSet} with an explicit comparator, this method has different behavior than {@link TreeSet#TreeSet(SortedSet)}, which returns a {@code TreeSet} with that comparator. <p><b>Note for Java 7 and later:</b> this method is now unnecessary and should be treated as deprecated. Instead, use the {@code TreeSet} constructor directly, taking advantage of the new <a href="http://goo.gl/iz2Wi">"diamond" syntax</a>. <p>This method is just a small convenience for creating an empty set and then calling Iterables#addAll. This method is not very useful and will likely be deprecated in the future. @param <E> Generics Type E. @param elements the elements that the set should contain @return a new {@code TreeSet} containing those elements (minus duplicates)
1469 Creates a <i>mutable</i> {@code HashSet} instance containing the given elements. A very thin convenience for creating an empty set then calling {@link Collection#addAll} or Iterables#addAll. <p><b>Note:</b> if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterable) instead. (Or, change {@code elements} to be a FluentIterable and call {@code elements.toSet()}.)</p> <p><b>Note:</b> if {@code E} is an {@link Enum} type, use newEnumSet(Iterable, Class) instead.</p> @param <E> Generics Type E. @param elements the elements that the set should contain. @return a new, empty thread-safe {@code Set}.
1470 Creates a <i>mutable</i> {@code HashSet} instance initially containing the given elements. <p><b>Note:</b> if elements are non-null and won't be added or removed after this point, use ImmutableSet#of() or ImmutableSet#copyOf(Object[]) instead. If {@code E} is an {@link Enum} type, use {@link EnumSet#of(Enum, Enum[])} instead. Otherwise, strongly consider using a {@code LinkedHashSet} instead, at the cost of increased memory footprint, to get deterministic iteration behavior.</p> <p>This method is just a small convenience, either for {@code newHashSet(}{@link Arrays#asList}{@code (...))}, or for creating an empty set then calling {@link Collections#addAll}.</p> @param <E> Generics Type E. @param elements the elements that the set should contain. @return a new, empty thread-safe {@code Set}
1471 This is a driver for the example programs. It looks at the first command line argument and tries to find an example program with that name. If it is found, it calls the main method in that class with the rest of the command line arguments. @param args The argument from the user. args[0] is the command to run. @return -1 on error, 0 on success @throws NoSuchMethodException when a particular method cannot be found. @throws SecurityException security manager to indicate a security violation. @throws IllegalAccessException for backward compatibility. @throws IllegalArgumentException if the arg is invalid. @throws Throwable Anything thrown by the example program's main
1472 Add a new field to the Table under construction. @param title Field title. @param justification Right or left justification. Defaults to left. @param wrap Width at which to auto-wrap the content of the cell. Defaults to Integer.MAX_VALUE. @return This Builder object
1473 Return time duration in the given time unit. Valid units are encoded in properties as suffixes: nanoseconds (ns), microseconds (us), milliseconds (ms), seconds (s), minutes (m), hours (h), and days (d). @param name Property name @param vStr The string value with time unit suffix to be converted. @param unit Unit to convert the stored property, if it exists. @return time duration in given time unit.
1474 Append a property with its attributes to a given {#link Document} if the property is found in configuration. @param doc @param conf @param propertyName
1475 Adds a set of deprecated keys to the global deprecations. This method is lockless. It works by means of creating a new DeprecationContext based on the old one, and then atomically swapping in the new context. If someone else updated the context in between us reading the old context and swapping in the new one, we try again until we win the race. @param deltas The deprecations to add.
1476 Bind using port ranges. Keep on looking for a free port in the port range and throw a bind exception if no port in the configured range binds. @param listener jetty listener. @param startPort initial port which is set in the listener. @throws Exception
1477 Add information about the target to the the environment of the subprocess. @param target @param environment
1478 Read into a direct tor indirect buffer using {@code PositionedReadable.readFully()}. @param stream stream @param range file range @param buffer destination buffer @throws IOException IO problems.
1479 Validate a list of vectored read ranges. @param ranges list of ranges. @throws EOFException any EOF exception.
1480 Indicates that a caching operation is in progress. @param actionFuture the {@code Future} of a caching action. @throws IllegalArgumentException if actionFuture is null.
1481 Updates the current state to the specified value. Asserts that the current state is as expected. @param newState the state to transition to. @param expectedCurrentState the collection of states from which transition to {@code newState} is allowed. @throws IllegalArgumentException if newState is null. @throws IllegalArgumentException if expectedCurrentState is null.
1482 Validates that the given path exists and is a directory. @param path the path to check. @param argName the name of the argument being validated.
1483 Validates that the given path exists and is a file. @param path the path to check. @param argName the name of the argument being validated.
1484 Indicates whether the given block is the last block in the associated file. @param blockNumber the id of the desired block. @return true if the given block is the last block in the associated file, false otherwise. @throws IllegalArgumentException if blockNumber is invalid.
1485 Gets the start offset of the given block. @param blockNumber the id of the given block. @return the start offset of the given block. @throws IllegalArgumentException if blockNumber is invalid.
1486 Gets the state of the given block. @param blockNumber the id of the given block. @return the state of the given block. @throws IllegalArgumentException if blockNumber is invalid.
1487 Sets the state of the given block to the given value. @param blockNumber the id of the given block. @param blockState the target state. @throws IllegalArgumentException if blockNumber is invalid.
1488 Gets the id of the block that contains the given absolute offset. @param offset the absolute offset to check. @return the id of the block that contains the given absolute offset. @throws IllegalArgumentException if offset is invalid.
1489 Aggregate an existing {@link IOStatisticsSnapshot} with the supplied statistics. @param snapshot snapshot to update @param statistics IOStatistics to add @return true if the snapshot was updated. @throws IllegalArgumentException if the {@code statistics} argument is not null but not an instance of IOStatistics, or if {@code snapshot} is invalid.
1490 Save IOStatisticsSnapshot to a Hadoop filesystem as a JSON file. @param snapshot statistics @param fs filesystem @param path path @param overwrite should any existing file be overwritten? @throws UncheckedIOException Any IO exception.
1491 Get the counters of an IOStatisticsSnapshot. @param source source of statistics. @return the map of counters.
1492 Get the gauges of an IOStatisticsSnapshot. @param source source of statistics. @return the map of gauges.
1493 Get the minimums of an IOStatisticsSnapshot. @param source source of statistics. @return the map of minimums.
1494 Get the maximums of an IOStatisticsSnapshot. @param source source of statistics. @return the map of maximums.
1495 Get the means of an IOStatisticsSnapshot. Each value in the map is the (sample, sum) tuple of the values; the mean is then calculated by dividing sum/sample wherever sample count is non-zero. @param source source of statistics. @return a map of mean key to (sample, sum) tuples.
1496 Create a copy of the FlagSet. @return a new mutable instance with a separate copy of the flags
1497 Create a FlagSet. @param enumClass class of enum @param prefix prefix (with trailing ".") for path capabilities probe @param flags flags @param <E> enum type @return a mutable FlagSet
1498 Performs any necessary cleanup @throws IOException upon error
1499 Close all FileSystem instances in the Cache. @param onlyAutomatic only close those that are marked for automatic closing @throws IOException a problem arose closing one or more FileSystem.
1500 Save IOStatisticsSnapshot to a JSON string. @param snapshot statistics; may be null or of an incompatible type @return JSON string value @throws UncheckedIOException Any IO/jackson exception. @throws IllegalArgumentException if the supplied class is not a snapshot
1501 Writes bytes to a file. This utility method opens the file for writing, creating the file if it does not exist, or overwrites an existing file. All bytes in the byte array are written to the file. @param fileContext the file context with which to create the file @param path the path to the file @param bytes the byte array with the bytes to write @return the file context @throws NullPointerException if any of the arguments are {@code null} @throws IOException if an I/O error occurs creating or writing to the file
1502 Write lines of text to a file. Each line is a char sequence and is written to the file in sequence with each line terminated by the platform's line separator, as defined by the system property {@code line.separator}. Characters are encoded into bytes using the specified charset. This utility method opens the file for writing, creating the file if it does not exist, or overwrites an existing file. @param fileContext the file context with which to create the file @param path the path to the file @param lines a Collection to iterate over the char sequences @param cs the charset to use for encoding @return the file context @throws NullPointerException if any of the arguments are {@code null} @throws IOException if an I/O error occurs creating or writing to the file
1503 Write a line of text to a file. Characters are encoded into bytes using the specified charset. This utility method opens the file for writing, creating the file if it does not exist, or overwrites an existing file. @param fs the file context with which to create the file @param path the path to the file @param charseq the char sequence to write to the file @param cs the charset to use for encoding @return the file context @throws NullPointerException if any of the arguments are {@code null} @throws IOException if an I/O error occurs creating or writing to the file
1504 Create a new FSDataOutputStreamBuilder for the file with path. Files are overwritten by default. @param path file path @return a FSDataOutputStreamBuilder object to build the file HADOOP-14384. Temporarily reduce the visibility of method before the builder interface becomes stable.
1505 This is overridden to ensure that this class's create() method is ultimately called. {@inheritDoc}
1506 Create a Builder to append a file. @param path file path. @return a {@link FSDataOutputStreamBuilder} to build file append request.
1507 This is overridden to ensure that this class's create() method is ultimately called. {@inheritDoc}
1508 List the statuses of the files/directories in the given path if the path is a directory. @param f given path @return the statuses of the files/directories in the given path @throws IOException if an I/O error occurs.
1509 Filter files/directories in the given list of paths using default path filter. <p> Does not guarantee to return the List of files/directories status in a sorted order. @param files a list of paths @return a list of statuses for the files under the given paths after applying the filter default Path filter @throws FileNotFoundException when the path does not exist @throws IOException see specific implementation
1510 Create a mutable integer counter @param info metadata of the metric @param iVal initial value @return a new counter object
1511 Create a mutable long integer counter @param info metadata of the metric @param iVal initial value @return a new counter object
1512 Create a mutable long integer gauge @param info metadata of the metric @param iVal initial value @return a new gauge object
1513 Create a mutable float gauge @param info metadata of the metric @param iVal initial value @return a new gauge object
1514 Create a mutable integer gauge @param info metadata of the metric @param iVal initial value @return a new gauge object
1515 Apply the given function to the resolved path under the the supplied FileContext. @param fileContext file context to resolve under @param path path to resolve @param fn function to invoke @param <T> return type. @return the return value of the function as revoked against the resolved path. @throws UnresolvedLinkException link resolution failure @throws IOException other IO failure.
1516 Create a builder for a Globber, bonded to the specific file context. @param fileContext file context. @return the builder to finish configuring.
1517 Create a builder for a Globber, bonded to the specific filesystem. @param filesystem filesystem @return the builder to finish configuring.
1518 @return true if the call is done; otherwise, return false.
1519 @return the async return value from {@link AsyncCallHandler}. @param <T> T. @param <R> R.
1520 Override to hook in DUHelper class.
1521 Create from another statistic. @param that source
1522 Extract the statistics from a source object -or "" if it is not an instance of {@link IOStatistics}, {@link IOStatisticsSource} or the retrieved statistics are null. <p> Exceptions are caught and downgraded to debug logging. @param source source of statistics. @return a string for logging.
1523 Return the statistics dump of the wrapped statistics. @return the statistics for logging.
1524 Evaluate and stringify the statistics. @return a string value.
1525 Convert IOStatistics to a string form, with all the metrics sorted and empty value stripped. This is more expensive than the simple conversion, so should only be used for logging/output where it's known/highly likely that the caller wants to see the values. Not for debug logging. @param statistics A statistics instance. @return string value or the empty string if null
1526 Create the tracker. If the factory is null, a stub tracker is returned. @param factory tracker factory @param statistic statistic to track @return a duration tracker.
1527 Delete cache file as part of the block cache LRU eviction. @param elementToPurge Block entry to evict.
1528 Create IOStatistics from a storage statistics instance. This will be updated as the storage statistics change. @param storageStatistics source data. @return an IO statistics source.
1529 Add a counter statistic to dynamically return the latest value of the source. @param key key of this statistic @param source atomic long counter @return the builder.
1530 Add a counter statistic to dynamically return the latest value of the source. @param key key of this statistic @param source atomic int counter @return the builder.
1531 Build a dynamic counter statistic from a {@link MutableCounterLong}. @param key key of this statistic @param source mutable long counter @return the builder.
1532 Add a gauge statistic to dynamically return the latest value of the source. @param key key of this statistic @param source atomic long gauge @return the builder.
1533 Add a gauge statistic to dynamically return the latest value of the source. @param key key of this statistic @param source atomic int gauge @return the builder.
1534 Add a minimum statistic to dynamically return the latest value of the source. @param key key of this statistic @param source atomic long minimum @return the builder.
1535 Add a minimum statistic to dynamically return the latest value of the source. @param key key of this statistic @param source atomic int minimum @return the builder.
1536 Add a maximum statistic to dynamically return the latest value of the source. @param key key of this statistic @param source atomic long maximum @return the builder.
1537 Add a maximum statistic to dynamically return the latest value of the source. @param key key of this statistic @param source atomic int maximum @return the builder.
1538 Override point: register this class as the handler for the control-C and SIGINT interrupts. Subclasses can extend this with extra operations, such as an exception handler: <pre> Thread.setDefaultUncaughtExceptionHandler( new YarnUncaughtExceptionHandler()); </pre>
1539 Accept a new UNIX domain connection. This method can only be used on sockets that were bound with bind(). @return The new connection. @throws IOException If there was an I/O error performing the accept-- such as the socket being closed from under us. Particularly when the accept is timed out, it throws SocketTimeoutException.
1540 Call shutdown(SHUT_RDWR) on the UNIX domain socket. @throws IOException raised on errors performing I/O.
1541 Send some FileDescriptor objects to the process on the other side of this socket. @param descriptors The file descriptors to send. @param jbuf Some bytes to send. You must send at least one byte. @param offset The offset in the jbuf array to start at. @param length Length of the jbuf array to use. @throws IOException raised on errors performing I/O.
1542 Receive some FileDescriptor objects from the process on the other side of this socket, and wrap them in FileInputStream objects. @param streams input stream. @param buf input buf. @param offset input offset. @param length input length. @return wrap them in FileInputStream objects. @throws IOException raised on errors performing I/O.
1543 Creating a new IOStatisticsContext instance for a FS to be used. @param key Thread ID that represents which thread the context belongs to. @return an instance of IOStatisticsContext.
1544 Verify that the given checksums match the given data. The 'mark' of the ByteBuffer parameters may be modified by this function,. but the position is maintained. @param data the DirectByteBuffer pointing to the data to verify. @param checksums the DirectByteBuffer pointing to a series of stored checksums @param fileName the name of the file being read, for error-reporting @param basePos the file position to which the start of 'data' corresponds @throws ChecksumException if the checksums do not match
1545 This method is executed immediately after decryption. Check whether decryptor should be updated and recalculate padding if needed.
1546 Reset the underlying stream offset; clear {@link #inBuffer} and {@link #outBuffer}. This Typically happens during {@link #seek(long)} or {@link #skip(long)}.
1547 Encryption is buffer based. If there is enough room in {@link #inBuffer}, then write to this buffer. If {@link #inBuffer} is full, then do encryption and write data to the underlying stream. @param b the data. @param off the start offset in the data. @param len the number of bytes to write. @throws IOException raised on errors performing I/O.
1548 To flush, we need to encrypt the data in the buffer and write to the underlying stream, then do the flush.
1549 Compile glob pattern string @param globPattern the glob pattern @return the pattern object
1550 In the common network topology setup, distance value should be an even number such as 0, 2, 4, 6. To make it more general, we group distance by {1, 2}, {3, 4} and {5 and beyond} for accounting. So if the caller ask for bytes read for distance 2, the function will return the value for group {1, 2}. @param distance the network distance @return the total number of bytes read by the network distance
1551 This create has been added to support the FileContext that processes the permission with umask before calling this method. This a temporary method added to support the transition from FileSystem to FileContext for user applications. @param f path. @param absolutePermission permission. @param flag create flag. @param bufferSize buffer size. @param replication replication. @param blockSize block size. @param progress progress. @param checksumOpt check sum opt. @return output stream. @throws IOException IO failure
1552 Constructor to be called by subclasses. @param uri for this file system. @param supportedScheme the scheme supported by the implementor @param authorityNeeded if true then theURI must have authority, if false then the URI must have null authority. @param defaultPort default port to use if port is not specified in the URI. @throws URISyntaxException <code>uri</code> has syntax error
1553 Encode with inputs and generates outputs. More see above. @param inputs input buffers to read data from @param outputs output buffers to put the encoded data into, read to read after the call @throws IOException raised on errors performing I/O.
1554 Encode with inputs and generates outputs. Note, for both inputs and outputs, no mixing of on-heap buffers and direct buffers are allowed. If the coder option ALLOW_CHANGE_INPUTS is set true (false by default), the content of input buffers may change after the call, subject to concrete implementation. Anyway the positions of input buffers will move forward. @param inputs input buffers to read data from. The buffers' remaining will be 0 after encoding @param outputs output buffers to put the encoded data into, ready to read after the call @throws IOException if the encoder is closed.
1555 Wrap an existing array of primitives @param value - array of primitives
1556 Used for delegation token related functionality. Must delegate to underlying file system.
1557 Probe the inner stream for a capability. Syncable operations are rejected before being passed down. @param capability string to query the stream support for. @return true if a capability is known to be supported.
1558 Releases resources allocated to the given block. @throws IllegalArgumentException if data is null.
1559 Releases resources for any blocks marked as 'done'.
1560 Constructs an instance of a {@code CachingBlockManager}. @param blockManagerParameters params for block manager. @throws IllegalArgumentException if bufferPoolSize is zero or negative.
1561 Gets the block having the given {@code blockNumber}. @throws IllegalArgumentException if buffer is null.
1562 Gets the current absolute position within this file. @return the current absolute position within this file.
1563 Determines whether the current buffer has been fully read. @return true if the current buffer has been fully read, false otherwise.
1564 If the given {@code pos} lies within the current buffer, updates the current position to the specified value and returns true; otherwise returns false without changing the position. @param pos the absolute position to change the current position to if possible. @return true if the given current position was updated, false otherwise.
1565 Get the context's IOStatisticsContext. @return instance of IOStatisticsContext for the context.
1566 Set the IOStatisticsContext for the current thread. @param statisticsContext IOStatistics context instance for the current thread. If null, the context is reset.
1567 Return sub configs for instance specified in the config. Assuming format specified as follows:<pre> [type].[instance].[option] = [value]</pre> Note, '*' is a special default instance, which is excluded in the result. @param type of the instance @return a map with [instance] as key and config object as value
1568 Parse parameters starting from the given position Consider using the variant that directly takes a List @param args an array of input arguments @param pos the position at which starts to parse @return a list of parameters
1569 Display an error string prefaced with the command name. Also increments the error count for the command which will result in a non-zero exit code. @param message error message to display
1570 Hook to implement support for {@link PathHandle} operations. @param stat Referent in the target FileSystem @param opts Constraints that determine the validity of the {@link PathHandle} reference.
1571 Handle is valid iff the referent is neither moved nor changed. Equivalent to changed(false), moved(false). @return Options requiring that the content and location of the entity be unchanged between calls.
1572 Handle is valid iff the content of the referent is the same. Equivalent to changed(false), moved(true). @return Options requiring that the content of the entity is unchanged, but it may be at a different location.
1573 Handle is valid iff the referent is unmoved in the namespace. Equivalent to changed(true), moved(false). @return Options requiring that the referent exist in the same location, but its content may have changed.
1574 Handle is valid iff the referent exists in the namespace. Equivalent to changed(true), moved(true). @return Options requiring that the implementation resolve a reference to this entity regardless of changes to content or location.
1575 Create a new instance of the ShellCommandExecutor to execute a command. @param execString The command to execute with arguments @param dir If not-null, specifies the directory which should be set as the current working directory for the command. If null, the current working directory is not modified. @param env If not-null, environment of the command will include the key-value pairs specified in the map. If null, the current environment is not modified. @param timeout Specifies the time in milliseconds, after which the command will be killed and the status marked as timed-out. If 0, the command will not be timed out. @param inheritParentEnv Indicates if the process should inherit the env vars from the parent process or not.
1576 RunImmediately should set true, if we skip the first refresh. @param runImmediately The param default should be false.
1577 Create a private clone of a public token. @param newService the new service name @return a private token
1578 Test whether this Path uses a scheme and is relative. Pathnames with scheme and relative path are illegal.
1579 Returns true if the path component (i.e. directory) of this URI is absolute <strong>and</strong> the scheme is null, <b>and</b> the authority is null. @return whether the path is absolute and the URI has no scheme nor authority parts
1580 Returns true if the path component (i.e. directory) of this URI is absolute. This method is a wrapper for {@link #isUriPathAbsolute()}. @return whether this URI's path is absolute
1581 Check that a Path belongs to this FileSystem. If the path is fully qualified URI, then its scheme and authority matches that of this file system. Otherwise the path must be slash-relative name. @param path the path. @throws InvalidPathException if the path is invalid
1582 Write instance encoded as protobuf to stream. @param out Output stream @see PBHelper#convert(FileStatus) @deprecated Use the {@link PBHelper} and protobuf serialization directly.
1583 Check all the arguments to the {@link MultipartUploader#putPart(UploadHandle, int, Path, InputStream, long)} operation. @param filePath Target path for upload (as {@link #startUpload(Path)}). @param inputStream Data for this part. Implementations MUST close this stream after reading in the data. @param partNumber Index of the part relative to others. @param uploadId Identifier from {@link #startUpload(Path)}. @param lengthInBytes Target length to read from the stream. @throws IllegalArgumentException invalid argument
1584 {@inheritDoc}. @param path path to abort uploads under. @return a future to -1. @throws IOException raised on errors performing I/O.
1585 Skips over and discards <code>n</code> bytes of data from the input stream. The <code>skip</code> method skips over some smaller number of bytes when reaching end of file before <code>n</code> bytes have been skipped. The actual number of bytes skipped is returned. If <code>n</code> is negative, no bytes are skipped. @param n the number of bytes to be skipped. @return the actual number of bytes skipped. @exception IOException if an I/O error occurs. ChecksumException if the chunk to skip to is corrupted
1586 Apply a umask to this permission and return a new one. The umask is used by create, mkdir, and other Hadoop filesystem operations. The mode argument for these operations is modified by removing the bits which are set in the umask. Thus, the umask limits the permissions which newly created files and directories get. @param umask The umask to use @return The effective permission
1587 Return file permission. @param sftpFile @return file permission
1588 Construct by the given mode. octal mask is applied. <pre> before mask after mask file type sticky bit octal 100644 644 file no decimal 33188 420 octal 101644 1644 file yes decimal 33700 1420 octal 40644 644 directory no decimal 16804 420 octal 41644 1644 directory yes decimal 17316 1420 </pre> 100644 becomes 644 while 644 remains as 644 @param mode Mode is supposed to come from the result of native stat() call. It contains complete permission information: rwxrwxrwx, sticky bit, whether it is a directory or a file, etc. Upon applying mask, only permission and sticky bit info will be kept because they are the only parts to be used for now. @see #FsPermission(short mode)
1589 Get the default permission for directory and symlink. In previous versions, this default permission was also used to create files, so files created end up with ugo+x permission. See HADOOP-9155 for detail. Two new methods are added to solve this, please use {@link FsPermission#getDirDefault()} for directory, and use {@link FsPermission#getFileDefault()} for file. This method is kept for compatibility. @return Default FsPermission.
1590 Get the default permission for directory. @return DirDefault FsPermission.
1591 Get the default permission for file. @return FileDefault FsPermission.
1592 Get the default permission for cache pools. @return CachePoolDefault FsPermission.
1593 Create a FsPermission from a Unix symbolic permission string @param unixSymbolicPermission e.g. "-rw-rw-rw-" @return FsPermission.
1594 Prints all the ACL entries in a single scope. @param aclStatus AclStatus for the path @param fsPerm FsPermission for the path @param entries List<AclEntry> containing ACL entries of file
1595 Convert a List of AclEntries into a string - the reverse of parseAclSpec. @param aclSpec List of AclEntries to convert @return String representation of aclSpec
1596 Construct by given mode, either in octal or symbolic format. @param mode mode as a string, either in octal or symbolic format @throws IllegalArgumentException if <code>mode</code> is invalid
1597 Read in data. @param b destination buffer. @param offset offset within the buffer. @param length length of bytes to read. @throws EOFException if the position is negative @throws IndexOutOfBoundsException if there isn't space for the amount of data requested. @throws IllegalArgumentException other arguments are invalid.
1598 Current size of compressed data. @return @throws IOException
1599 Compute column widths and rebuild the format string @param items to find the max field width for each column
1600 Return the {@link QuotaUsage} of a given {@link Path}. @param f path to use @return the quota usage @throws IOException IO failure
1601 Return the total size of all files from a specified path. @param path the path. @throws IOException IO failure @return the number of path content summary.
1602 Construct an instance with the given name. @param name input name.
1603 Enter a state -thread safe. @param proposed proposed new state @return the original state @throws ServiceStateException if the transition is not permitted
1604 @return Instantiate the service defined in {@code serviceClassName}. Sets the {@code configuration} field to the the value of {@code conf}, and the {@code service} field to the service created. @param conf configuration to use
1605 Return true if bytes from {#getBytes()} match.
1606 Set the value to a copy of the given byte range. @param newData the new values to copy in @param offset the offset in newData to start at @param length the number of bytes to copy
1607 Copy the key into BytesWritable. The input BytesWritable will be automatically resized to the actual key size. @param key BytesWritable to hold the key. @throws IOException raised on errors performing I/O. @return the key into BytesWritable.
1608 A wrapper for {@link File#list()}. This java.io API returns null when a dir is not a directory or for any I/O error. Instead of having null check everywhere File#list() is used, we will add utility API to get around this problem. For the majority of cases where we prefer an IOException to be thrown. @param dir directory for which listing should be performed @return list of file names or empty string list @exception AccessDeniedException for unreadable directory @exception IOException for invalid directory or for bad disk
1609 Checks that the current running process can read, write, and execute the given directory by using methods of the File object. @param dir File to check @throws DiskErrorException if dir is not readable, not writable, or not executable
1610 Locks the provided direct ByteBuffer into memory, preventing it from swapping out. After a buffer is locked, future accesses will not incur a page fault. See the mlock(2) man page for more information. @throws NativeIOException
1611 Create a new SharedFileDescriptorFactory. @param prefix The prefix to prepend to all the file names created by this factory. @param paths An array of paths to use. We will try each path in succession, and return a factory using the first usable path. @return The factory. @throws IOException If a factory could not be created for any reason.
1612 Generate checksums for the given data chunks and output chunks & checksums to the underlying output stream.
1613 Calculate checksums for the given data. The 'mark' of the ByteBuffer parameters may be modified by this function, but the position is maintained. @param data the DirectByteBuffer pointing to the data to checksum. @param checksums the DirectByteBuffer into which checksums will be stored. Enough space must be available in this buffer to put the checksums.
1614 Forcibly free the direct buffers.
1615 Create a BoundedByteArrayOutputStream with the specified capacity @param capacity The capacity of the underlying byte array
1616 Decode the given url safe string into this token. @param newValue the encoded string @throws IOException raised on errors performing I/O.
1617 Which blocks were erased ? @param blockGroup blockGroup. @return output blocks to recover
1618 This method tries to find the marker (passed to it as the first parameter) in the stream. It can find bit patterns of length &lt;= 63 bits. Specifically this method is used in CBZip2InputStream to find the end of block (EOB) delimiter in the stream, starting from the current position of the stream. If marker is found, the stream position will be at the byte containing the starting bit of the marker. @param marker The bit pattern to be found in the stream @param markerBitLength No of bits in the marker @return true if the marker was found otherwise false @throws IOException raised on errors performing I/O. @throws IllegalArgumentException if marketBitLength is greater than 63
1619 Constructs a new <tt>CBZip2OutputStream</tt> with specified blocksize. <p> <b>Attention: </b>The caller is resonsible to write the two BZip2 magic bytes <tt>"BZ"</tt> to the specified stream prior to calling this constructor. </p> @param out the destination stream. @param blockSize the blockSize as 100k units. @throws IOException if an I/O error occurs in the specified stream. @throws IllegalArgumentException if {@code (blockSize < 1) || (blockSize > 9)} @throws NullPointerException if {@code out == null}. @see #MIN_BLOCKSIZE @see #MAX_BLOCKSIZE
1620 Create a {@link BlockCompressorStream} with given output-stream and compressor. Use default of 512 as bufferSize and compressionOverhead of (1% of bufferSize + 12 bytes) = 18 bytes (zlib algorithm). @param out stream @param compressor compressor to be used
1621 Create a {@link BlockDecompressorStream}. @param in input stream @param decompressor decompressor to use @param bufferSize size of buffer @throws IOException raised on errors performing I/O.
1622 Write the data provided to the compression codec, compressing no more than the buffer size less the compression overhead as specified during construction for each block. Each block contains the uncompressed length for the block, followed by one or more length-prefixed blocks of compressed data.
1623 Creates a new compressor with the default compression level. Compressed data will be generated in ZStandard format. @param level level. @param bufferSize bufferSize.
1624 Create an output stream with a codec taken from the global CodecPool. @param codec The codec to use to create the output stream. @param conf The configuration to use if we need to create a new codec. @param out The output stream to wrap. @return The new output stream @throws IOException
1625 Close the file.
1626 Create an input stream with a codec taken from the global CodecPool. @param codec The codec to use to create the input stream. @param conf The configuration to use if we need to create a new codec. @param in The input stream to wrap. @return The new input stream @throws IOException
1627 Close the file.
1628 Return the appropriate implementation of the zlib compressor. @param conf configuration @return the appropriate implementation of the zlib compressor.
1629 Return the appropriate implementation of the zlib direct decompressor. @param conf configuration @return the appropriate implementation of the zlib decompressor.
1630 Return the appropriate implementation of the zlib decompressor. @param conf configuration @return the appropriate implementation of the zlib decompressor.
1631 Persists a DelegationKey into the SQL database. The delegation keyId is expected to be unique and any duplicate key attempts will result in an IOException. @param key DelegationKey to persist into the SQL database.
1632 Updates an existing DelegationKey in the SQL database. @param key Updated DelegationKey.
1633 Read a string, but check it for sanity. The format consists of a vint followed by the given number of bytes. @param in the stream to read from @param maxLength the largest acceptable length of the encoded string @return the bytes as a string @throws IOException if reading from the DataInput fails @throws IllegalArgumentException if the encoded byte size for string is negative or larger than maxSize. Only the vint is read.
1634 Skips over one Text in the input. @param in input in. @throws IOException raised on errors performing I/O.
1635 Read a compressed buffer
1636 @return Read a UTF8 encoded string with a maximum size. @param in input datainput. @param maxLength input maxLength. @throws IOException raised on errors performing I/O.
1637 Write a String as a VInt n, followed by n Bytes as in Text format. @param out out. @param s s. @throws IOException raised on errors performing I/O.
1638 Construct the service key for a token @param addr InetSocketAddress of remote connection with a token @return "ip:port" or "host:port" depending on the value of hadoop.security.token.service.use_ip
1639 Create a hadoop token from a protobuf token. @param tokenProto token @return a new token
1640 writes String value of enum to DataOutput. @param out Dataoutput stream @param enumVal enum value @throws IOException raised on errors performing I/O.
1641 Serialize a {@link PermissionStatus} from its base components. @param out out. @param username username. @param groupname groupname. @param permission FsPermission. @throws IOException raised on errors performing I/O.
1642 Construct from a byte array. @param utf8 input utf8.
1643 Construct from another text. @param utf8 input utf8.
1644 Read one line from the InputStream into the given Text. @param str the object to store the given line (without newline) @param maxLineLength the maximum number of bytes to store into str; the rest of the line is silently discarded. @param maxBytesToConsume the maximum number of bytes to consume in this call. This is only a hint, because if the line cross this threshold, we allow it to happen. It can overshoot potentially by as much as one buffer length. @return the number of bytes read including the (longest) newline found. @throws IOException if the underlying stream throws
1645 @return Returns the length of this text. The length is equal to the number of Unicode code units in the text.
1646 Copy constructor. @param other the map to copy from
1647 Copy constructor. @param other the map to copy from
1648 <p> Keep trying for a maximum time, waiting a fixed time between attempts, and then fail by re-throwing the exception. </p> @param timeUnit timeUnit. @param sleepTime sleepTime. @param maxTime maxTime. @return RetryPolicy.
1649 Create a proxy for an interface of implementations of that interface using the given {@link FailoverProxyProvider} and the same retry policy for each method in the interface. @param iface the interface that the retry will implement @param proxyProvider provides implementation instances whose methods should be retried @param retryPolicy the policy for retrying or failing over method call failures @param <T> T. @return the retry proxy
1650 Create a proxy for an interface of an implementation class using the a set of retry policies specified by method name. If no retry policy is defined for a method then a default of {@link RetryPolicies#TRY_ONCE_THEN_FAIL} is used. @param iface the interface that the retry will implement @param <T> T. @param implementation the instance whose methods should be retried @param methodNameToPolicyMap a map of method names to retry policies @return the retry proxy
1651 Constructor @param fout FS output stream. @param compressionName Name of the compression algorithm, which will be used for all data blocks. @throws IOException @see Compression#getSupportedAlgorithms
1652 For reading from file. @throws IOException
1653 Check whether we reach the end of the stream. @return false if the chunk encoded stream has more data to read (in which case available() will be greater than 0); true otherwise. @throws java.io.IOException on I/O errors.
1654 Flush the internal buffer. Is this the last call to flushBuffer? @throws java.io.IOException
1655 Compare an entry with a RawComparable object. This is useful when Entries are stored in a collection, and we want to compare a user supplied key.
1656 Construct from a given string. @param string input string.
1657 Construct a hash value for a String. @param string string. @return MD5Hash.
1658 Compress and flush contents to dfs
1659 Returns a tracking identifier that can be used to associate usages of a token across multiple client sessions. Currently, this function just returns an MD5 of {{@link #getBytes()}. @return tracking identifier
1660 Encode this token as a url safe string. @return the encoded string @throws IOException raised on errors performing I/O.
1661 Add a leaf node Update node counter &amp; rack counter if necessary @param node node to be added; can be null @exception IllegalArgumentException if add a node to a leave or node to be added is not a leaf
1662 Remove a node Update node counter and rack counter if necessary @param node node to be removed; can be null
1663 Update empty rack number when remove a node like decommission. @param node node to be added; can be null
1664 Sort nodes array by network distance to <i>reader</i> with secondary sort. <p> In a three-level topology, a node can be either local, on the same rack, or on a different rack from the reader. Sorting the nodes based on network distance from the reader reduces network traffic and improves performance. </p> As an additional twist, we also randomize the nodes at each network distance. This helps with load balancing when there is data skew. @param reader Node where data will be read @param nodes Available replicas with the requested data @param activeLen Number of active nodes at the front of the array @param secondarySort a secondary sorting strategy which can inject into that point from outside to help sort the same distance. @param <T> Generics Type T
1665 Sort nodes array by network distance to <i>reader</i>. <p> using network location. This is used when the reader is not a datanode. Sorting the nodes based on network distance from the reader reduces network traffic and improves performance. </p> @param reader Node where data will be read @param nodes Available replicas with the requested data @param activeLen Number of active nodes at the front of the array @param secondarySort a secondary sorting strategy which can inject into that point from outside to help sort the same distance. @param <T> Generics Type T.
1666 Create a new input stream with the given timeout. If the timeout is zero, it will be treated as infinite timeout. The socket's channel will be configured to be non-blocking. @param channel Channel for reading, should also be a {@link SelectableChannel}. The channel will be configured to be non-blocking. @param timeout timeout in milliseconds. must not be negative. @throws IOException raised on errors performing I/O.
1667 Create a new ouput stream with the given timeout. If the timeout is zero, it will be treated as infinite timeout. The socket's channel will be configured to be non-blocking. @param channel Channel for writing, should also be a {@link SelectableChannel}. The channel will be configured to be non-blocking. @param timeout timeout in milliseconds. must not be negative. @throws IOException raised on errors performing I/O.
1668 @return the rpc response or, in case of timeout, null.
1669 Create an instance with the default configuration. <p> Calling {@link #setConf(Configuration)} will trigger a re-evaluation of the configuration settings and so be used to set up the mapping script.
1670 Create an instance with the default configuration. <p> Calling {@link #setConf(Configuration)} will trigger a re-evaluation of the configuration settings and so be used to set up the mapping script.
1671 Creates a parent node to be added to the list of children. Creates a node using the InnerNode four argument constructor specifying the name, location, parent, and level of this node. <p>To be overridden in subclasses for specific InnerNode implementations, as alternative to overriding the full {@link #add(Node)} method. @param parentName The name of the parent node @return A new inner node @see InnerNodeImpl(String, String, InnerNode, int)
1672 Add a socket. @param sock The socket to add. It is an error to re-add a socket that we are already watching. @param handler The handler to associate with this socket. This may be called any time after this function is called.
1673 Remove a socket. Its handler will be called. @param sock The socket to remove.
1674 Waits on the channel with the given timeout using one of the cached selectors. It also removes any cached selectors that are idle for a few seconds. @param channel @param ops @param timeout @return @throws IOException
1675 Returns the first available IP address associated with the provided network interface or the local host IP if "default" is given. @param strInterface The name of the network interface or subinterface to query (e.g. eth0 or eth0:0) or the string "default" @return The IP address in text form, the local host IP is returned if the interface name "default" is specified @throws UnknownHostException If the given interface is invalid
1676 Returns all the host names associated by the default nameserver with the address bound to the specified network interface @param strInterface The name of the network interface to query (e.g. eth0) @return The list of host names associated with IPs bound to the network interface @throws UnknownHostException If one is encountered while querying the default interface
1677 Returns the default (first) host name associated by the provided nameserver with the address bound to the specified network interface @param strInterface The name of the network interface to query (e.g. eth0) @param nameserver The DNS host name @param tryfallbackResolution Input tryfallbackResolution. @return The default host names associated with IPs bound to the network interface @throws UnknownHostException If one is encountered while querying the default interface
1678 Load configuration from a list of files until the first successful load @param conf the configuration object @param files the list of filenames to try @return the configuration object
1679 This method will block if a cache entry doesn't exist, and any subsequent requests for the same user will wait on this request to return. If a user already exists in the cache, and when the key expires, the first call to reload the key will block, but subsequent requests will return the old value until the blocking thread returns. If reloadGroupsInBackground is true, then the thread that needs to refresh an expired key will not block either. Instead it will return the old cache value and schedule a background refresh @param user key of cache @return List of groups belonging to user @throws IOException to prevent caching negative entries
1680 Shutdown the JvmMetrics singleton. This is not necessary if the JVM itself is shutdown, but may be necessary for scenarios where JvmMetrics instance needs to be re-created while the JVM is still around. One such scenario is unit-testing.
1681 Stops the service. No new calls will be handled after this is called.
1682 stop the server. @throws Exception exception.
1683 Instantiates a new {@link MutableQuantiles} for a metric that rolls itself over on the specified time interval. @param name of the metric @param description long-form textual description of the metric @param sampleName type of items in the stream (e.g., "Ops") @param valueName type of the values @param interval rollover interval (in seconds) of the estimator
1684 Create a mutable metric with stats @param name of the metric @param desc metric description @param sampleName of the metric (e.g., "Ops") @param valueName of the metric (e.g., "Time" or "Latency") @param extended produce extended stat (stdev, min/max etc.) if true. @return a new mutable stat metric object
1685 Construct a snapshot stat metric with extended stat off by default @param name of the metric @param description of the metric @param sampleName of the metric (e.g. "Ops") @param valueName of the metric (e.g. "Time", "Latency")
1686 Set the metrics context tag @param name of the context @return the registry itself as a convenience
1687 Add a tag to the metrics @param name of the tag @param description of the tag @param value of the tag @param override existing tag if true @return the registry (for keep adding tags)
1688 Add a rate sample for a rate metric. @param name of the rate metric @param elapsed time
1689 Publish a metrics snapshot to all the sinks @param buffer the metrics snapshot to publish @param immediate indicates that we should publish metrics immediately instead of using a separate thread.
1690 Copy the values to other (saves object creation and gc.) @param other the destination to hold our values
1691 Logs a Slow RPC Request. @param methodName - RPC Request method name @param details - Processing Detail. If a request took significant more time than other requests, and its processing time is at least `logSlowRPCThresholdMs` we consider that as a slow RPC. The definition rules for calculating whether the current request took too much time compared to other requests are as follows: 3 is a magic number that comes from 3 sigma deviation. A very simple explanation can be found by searching for 68-95-99.7 rule. We flag an RPC as slow RPC if and only if it falls above 99.7% of requests. We start this logic only once we have enough sample size.
1692 Refresh the netgroup cache
1693 Print something at the end of a section
1694 Print a title entry. @param format format string @param args any arguments
1695 Format and raise a failure. @param category category for exception @param message string formatting message @param args any arguments for the formatting @throws KerberosDiagsFailure containing the formatted text
1696 Create a user from a login name. It is intended to be used for remote users in RPC, since it won't have any credentials. @param user the full user principal name, must not be empty or null @param authMethod authMethod. @return the UserGroupInformation for the remote user.
1697 should be called before this object is used. @throws IOException raised on errors performing I/O.
1698 Update the current master key for generating delegation tokens It should be called only by tokenRemoverThread. @throws IOException raised on errors performing I/O.
1699 Creates an <code>DelegationTokenAuthenticatedURL</code>. <p> An instance of the default {@link DelegationTokenAuthenticator} will be used.
1700 Creates an <code>DelegationTokenAuthenticatedURL</code>. @param authenticator the {@link DelegationTokenAuthenticator} instance to use, if <code>null</code> the default one will be used.
1701 Creates an <code>DelegationTokenAuthenticatedURL</code> using the default {@link DelegationTokenAuthenticator} class. @param connConfigurator a connection configurator.
1702 Reads up to <code>b.length</code> bytes of data from this input stream into an array of bytes. <p> The <code>read</code> method of <code>InputStream</code> calls the <code>read</code> method of three arguments with the arguments <code>b</code>, <code>0</code>, and <code>b.length</code>. @param b the buffer into which the data is read. @return the total number of bytes read into the buffer, or <code>-1</code> is there is no more data because the end of the stream has been reached. @exception IOException if an I/O error occurs.
1703 Is this user logged in from a keytab file managed by the UGI? @return true if the credentials are from a keytab file.
1704 Is this user logged in from a ticket (but no keytab) managed by the UGI? @return true if the credentials are from a ticket cache.
1705 Initialize a singleton SSL socket factory. @param preferredMode applicable only if the instance is not initialized. @throws IOException if an error occurs.
1706 Factory constructor for commands
1707 public construction of harfilesystem
1708 Constructor to create a HarFileSystem with an underlying filesystem. @param fs underlying file system
1709 Default ctor with no configuration. Be sure to invoke {@link #setConf(Configuration)} with a valid configuration prior to running commands.
1710 Create an instance of this tool using the given configuration. @param conf configuration.
1711 Constructor
1712 Create an InetAddress with a fully qualified hostname of the given hostname. InetAddress does not qualify an incomplete hostname that is resolved via the domain search list. {@link InetAddress#getCanonicalHostName()} will fully qualify the hostname, but it always return the A record whereas the given hostname may be a CNAME. @param host a hostname or ip address @return InetAddress with the fully qualified hostname or ip @throws UnknownHostException if host does not exist
1713 Serializes the AccessControlList object
1714 Get a new zookeeper client instance. protected so that test class can inherit and pass in a mock object for zookeeper @return new zookeeper client instance @throws IOException raised on errors performing I/O.
1715 Get size of the Queue for keyName. This is only used in unit tests. @param keyName the key name @return int queue size. Zero means the queue is empty or the key does not exist.
1716 This removes the "num" values currently at the head of the Queue for the provided key. Will immediately fire the Queue filler function if key does not exist How many values are actually returned is governed by the <code>SyncGenerationPolicy</code> specified by the user. @param keyName String key name @param num Minimum number of values to return. @return {@literal List<E>} values returned @throws IOException raised on errors performing I/O. @throws ExecutionException execution exception.
1717 Drains the Queue for the provided key. @param keyName the key to drain the Queue for
1718 Insert e into the backing queue or block until we can. If client backoff is enabled this method behaves like add which throws if the queue overflows. If we block and the queue changes on us, we will insert while the queue is drained.
1719 Initialize this class if it isn't already.
1720 now. @param timeUnit timeUnit. @return current elapsed time in specified timeunit.
1721 Get a server protocol's signature @param clientMethodsHashCode client protocol methods hashcode @param serverVersion server protocol version @param protocol protocol @return the server's protocol signature
1722 Decay the stored costs for each user and clean as necessary. This method should be called periodically in order to keep costs current.
1723 Compute the appropriate priority for a schedulable based on past requests. @param obj the schedulable obj to query and remember @return the level index which we recommend scheduling in
1724 Returns an element first non-empty queue equal to the priority returned by the multiplexer or scans from highest to lowest priority queue. Caller must always acquire a semaphore permit before invoking. @return the first non-empty queue with less priority, or null if everything was empty
1725 Close the connection.
1726 Filesystem constructor for use by {@link GlobBuilder}. @param fs filesystem @param pathPattern path pattern @param filter optional filter @param resolveSymlinks should symlinks be resolved.
1727 @param hostEntries comma separated ip/cidr/host addresses
1728 Return default OS instance. @throws UnsupportedOperationException If cannot determine OS. @return Default instance for the detected OS.
1729 {@inheritDoc}
1730 {@inheritDoc}
1731 Transform input xml given a stylesheet. @param styleSheet the style-sheet @param xml input xml data @param out output @throws TransformerConfigurationException synopsis signals a problem creating a transformer object. @throws TransformerException this is used for throwing processor exceptions before the processing has started.
1732 Return the string representation of the object in the output format. if qOption is false, output directory count, file count, and content size; if qOption is true, output quota and remaining quota as well. if hOption is false, file sizes are returned in bytes if hOption is true, file sizes are returned in human readable if tOption is true, display the quota by storage types if tOption is false, same logic with #toString(boolean,boolean) if xOption is false, output includes the calculation from snapshots if xOption is true, output excludes the calculation from snapshots @param qOption a flag indicating if quota needs to be printed or not @param hOption a flag indicating if human readable output is to be used @param tOption a flag indicating if display quota by storage types @param xOption a flag indicating if calculation from snapshots is to be included in the output @param types Storage types to display @return the string representation of the object
1733 Return the string representation of the snapshot counts in the output format. @param hOption flag indicating human readable or not @return String representation of the snapshot counts
1734 Let t = percentage of max memory. Let e = round(log_2 t). Then, we choose capacity = 2^e/(size of reference), unless it is outside the close interval [1, 2^30]. @param mapName mapName. @param percentage percentage. @return compute capacity.
1735 Fills the buffer with a chunk data. No mark is supported. This method assumes that all data in the buffer has already been read in, hence pos > count.
1736 Like read(byte[], int, int), but does not provide a dest buffer, so the read data is discarded. @param len maximum number of bytes to read. @return the number of bytes read. @throws IOException if an I/O error occurs.
1737 Convert to a String.
1738 Convert to a string, checking for valid UTF8. @return the converted string @throws UTFDataFormatException if the underlying bytes contain invalid UTF8 data.
1739 @return Convert a UTF-8 encoded byte array back into a string. @param bytes input bytes. @throws IOException if the byte array is invalid UTF8
1740 @return Read a UTF-8 encoded string. @see DataInput#readUTF() @param in DataInput. @throws IOException raised on errors performing I/O.
1741 Check the rpc response header.
1742 Convert a byte to a hex string. @see #byteToHexString(byte[]) @see #byteToHexString(byte[], int, int) @param b byte @return byte's hex value as a String
1743 Handler for uncaught exceptions: terminate the service. @param thread thread @param exception exception
1744 Exit with the usage exit code {@link #EXIT_USAGE} and message {@link #USAGE_MESSAGE}. @throws ExitUtil.ExitException if exceptions are disabled
1745 Uncaught exception handler. If an error is raised: shutdown The state of the system is unknown at this point -attempting a clean shutdown is dangerous. Instead: exit @param thread thread that failed @param exception the raised exception
1746 Exit the JVM. This is method can be overridden for testing, throwing an exception instead. Any subclassed method MUST raise an {@code ExitException} instance/subclass. The service launcher code assumes that after this method is invoked, no other code in the same method is called. @param exitCode code to exit @param message input message.
1747 Like {@link #terminate(int, Throwable)} without a message. @param status exit code @throws ExitException if {@link System#exit(int)} is disabled.
1748 Prints a message to stderr and exits with a status code. @param status exit code @param msg message
1749 Forcibly terminates the currently running Java virtual machine. @param status status code @throws HaltException if {@link Runtime#halt(int)} is disabled.
1750 Sort the given range of items using quick sort. {@inheritDoc} If the recursion depth falls below {@link #getMaxDepth}, then switch to {@link HeapSort}.
1751 Private constructor. @param file Path file associated to this ACL @param owner String file owner @param group String file group @param stickyBit the sticky bit @param entries the ACL entries @param permission permission of the path
1752 Parse comma separated list of ACL entries to secure generated nodes, e.g. <code>sasl:hdfs/host1@MY.DOMAIN:cdrwa,sasl:hdfs/host2@MY.DOMAIN:cdrwa</code> @param aclString aclString. @return ACL list @throws BadAclFormatException if an ACL is invalid
1753 Parse a comma-separated list of authentication mechanisms. Each such mechanism should be of the form 'scheme:auth' -- the same syntax used for the 'addAuth' command in the ZK CLI. @param authString the comma-separated auth mechanisms @return a list of parsed authentications @throws BadAuthFormatException if the auth format is invalid
1754 Preserve the attributes of the source to the target. The method calls {@link #shouldPreserve(FileAttribute)} to check what attribute to preserve. @param src source to preserve @param target where to preserve attributes @param preserveRawXAttrs true if raw.* xattrs should be preserved @throws IOException if fails to preserve attributes
1755 Translates the given permission bits to the equivalent minimal ACL. @param perm FsPermission to translate @return List&lt;AclEntry&gt; containing exactly 3 entries representing the owner, group and other permissions
1756 If the store is tracking the given key, return the duration tracker for it. If not tracked, return the stub tracker. @param key statistic key prefix @param count #of times to increment the matching counter in this operation. @return a tracker.
1757 Constructor -increments the counter by 1. @param iostats statistics to update @param key prefix of values.
1758 Create the duration text from a {@code String.format()} code call; log output at info level. @param log log to write to @param format format string @param args list of arguments
1759 Wait for a single of future to complete, extracting IOEs afterwards. @param <T> Generics Type T. @param future future to wait for. @throws IOException if one of the called futures raised an IOE. @throws RuntimeException if one of the futures raised one.
1760 Wait for a single of future to complete, ignoring exceptions raised. @param future future to wait for. @param <T> Generics Type T.
1761 Returns a CrcComposer which will collapse all ingested CRCs into a single value. @param type type. @param bytesPerCrcHint bytesPerCrcHint. @throws IOException raised on errors performing I/O. @return a CrcComposer which will collapse all ingested CRCs into a single value.
1762 Updates with a single additional CRC which corresponds to an underlying data size of {@code bytesPerCrc}. @param crcB crcB. @param bytesPerCrc bytesPerCrc. @throws IOException raised on errors performing I/O.
1763 Formats time in ms and appends difference (finishTime - startTime) as returned by formatTimeDiff(). If finish time is 0, empty string is returned, if start time is 0 then difference is not appended to return value. @param dateFormat date format to use @param finishTime finish time @param startTime start time @return formatted value.
1764 Escape commas in the string using the default escape char @param str a string @return an escaped string
1765 Unescape commas in the string using the default escape char @param str a string @return an unescaped string
1766 @return Build a log message for starting up and shutting down. @param classname the class of the server @param args arguments
1767 Get the next source value. This calls {@link #sourceHasNext()} first to verify that there is data. @return the next value @throws IOException failure @throws NoSuchElementException no more data
1768 Given a future, evaluate it. Raised exceptions are extracted and handled. See {@link FutureIO#awaitFuture(Future, long, TimeUnit)}. @param future future to evaluate @param <T> type of the result. @return the result, if all went well. @throws InterruptedIOException future was interrupted @throws IOException if something went wrong @throws RuntimeException any nested RTE thrown
1769 Evaluates a collection of futures and returns their results as a list. <p> This method blocks until all futures in the collection have completed. If any future throws an exception during its execution, this method extracts and rethrows that exception. </p> @param collection collection of futures to be evaluated @param <T> type of the result. @return the list of future's result, if all went well. @throws InterruptedIOException waiting for future completion was interrupted @throws CancellationException if the future itself was cancelled @throws IOException if something went wrong @throws RuntimeException any nested RTE thrown
1770 Given a future, evaluate it. Raised exceptions are extracted and handled. See {@link FutureIO#awaitFuture(Future, long, TimeUnit)}. @param future future to evaluate @param <T> type of the result. @param timeout timeout. @param unit unit. @return the result, if all went well. @throws InterruptedIOException future was interrupted @throws IOException if something went wrong @throws RuntimeException any nested RTE thrown @throws TimeoutException the future timed out.
1771 Evaluates a collection of futures and returns their results as a list, but only waits up to the specified timeout for each future to complete. <p> This method blocks until all futures in the collection have completed or the timeout expires, whichever happens first. If any future throws an exception during its execution, this method extracts and rethrows that exception. @param collection collection of futures to be evaluated @param duration timeout duration @param <T> type of the result. @return the list of future's result, if all went well. @throws InterruptedIOException waiting for future completion was interrupted @throws CancellationException if the future itself was cancelled @throws IOException if something went wrong @throws RuntimeException any nested RTE thrown @throws TimeoutException the future timed out.
1772 Cancels a collection of futures and awaits the specified duration for their completion. <p> This method blocks until all futures in the collection have completed or the timeout expires, whichever happens first. All exceptions thrown by the futures are ignored. as is any TimeoutException. @param collection collection of futures to be evaluated @param interruptIfRunning should the cancel interrupt any active futures? @param duration total timeout duration @param <T> type of the result. @return all futures which completed successfully.
1773 Create an object for the given class and initialize it from conf @param theClass class of which an object is created @param conf Configuration @param argTypes the types of the arguments @param values the values of the arguments @param <T> Generics Type. @return a new object
1774 @return Returns the class of keys in this file.
1775 @return Returns the class of values in this file.
1776 Loads the class of the given name @param name classname @return outcome code
1777 Create an instance of a class @param name classname @return the outcome
1778 Override point: create the base configuration for the service. Subclasses can override to create HDFS/YARN configurations etc. @return the configuration to use as the service initializer.
1779 Return the supplied configuration for testing or otherwise load a new configuration. @return the configuration to use
1780 Empty constructor; passes a new Configuration object instance to its superclass's constructor
1781 Construct a ReconfigurableBase.
1782 Construct a ReconfigurableBase with the {@link Configuration} conf. @param conf configuration.
1783 Fully qualify the path to a binary that should be in a known hadoop bin location. This is primarily useful for disambiguating call-outs to executable sub-components of Hadoop to avoid clashes with other executables that may be in the path. Caveat: this call doesn't just format the path to the bin directory. It also checks for file existence of the composed path. The output of this call should be cached by callers. @param executable executable @return executable file reference @throws FileNotFoundException if the path does not exist @throws IOException on path canonicalization failures
1784 Run the command. @throws IOException raised on errors performing I/O.
1785 Adds a named node to the tree. @param status status. @return Progress.
1786 Utility function to ensure that the configured base znode exists. This recursively creates the znode as well as all of its parents. @param path Path of the znode to create. @throws Exception If it cannot create the file.
1787 Does a path have a given capability? Calls {@code PathCapabilities#hasPathCapability(Path, String)}, mapping IOExceptions to false. @param fs filesystem @param path path to query the capability of. @param capability non-null, non-empty string to query the path for support. @return true if the capability is supported under that part of the FS false if the method is not loaded or the path lacks the capability. @throws IllegalArgumentException invalid arguments
1788 Does an object implement {@code StreamCapabilities} and, if so, what is the result of the probe for the capability? Calls {@code StreamCapabilities#hasCapability(String)}, @param object object to probe @param capability capability string @return true iff the object implements StreamCapabilities and the capability is declared available.
1789 Get the counters of an IOStatisticsSnapshot. @param source source of statistics. @return the map of counters.
1790 Get the gauges of an IOStatisticsSnapshot. @param source source of statistics. @return the map of gauges.
1791 Get the minimums of an IOStatisticsSnapshot. @param source source of statistics. @return the map of minimums.
1792 Get the maximums of an IOStatisticsSnapshot. @param source source of statistics. @return the map of maximums.
1793 Get the means of an IOStatisticsSnapshot. Each value in the map is the (sample, sum) tuple of the values; the mean is then calculated by dividing sum/sample wherever sample is non-zero. @param source source of statistics. @return a map of mean key to (sample, sum) tuples.
1794 Invoke a static method. @param args arguments. @return result. @param <R> type of result.
1795 Checks for an implementation, first finding the given class by name. <p> The name passed to the constructor is the method name used. @param className name of a class @param argClasses argument classes for the method @return this Builder for method chaining
1796 Checks for an implementation, first finding the given class by name. <p> The name passed to the constructor is the method name used. @param className name of a class @param argClasses argument classes for the method @return this Builder for method chaining
1797 Load a static method from the source class, which will be a noop() if the class is null or the method isn't found. If the class and method are not found, then an {@code IllegalStateException} is raised on the basis that this means that the binding class is broken, rather than missing/out of date. @param <T> return type @param source source. If null, the method is a no-op. @param returnType return type class (unused) @param name method name @param parameterTypes parameters @return the method or a no-op. @throws IllegalStateException if the method is not static.
1798 Probe for an object being an instance of {@code IOStatisticsSource}. @param object object to probe @return true if the object is the right type, false if the classes were not found or the object is null/of a different type
1799 Probe for an object being an instance of {@code IOStatisticsSource}. @param object object to probe @return true if the object is the right type, false if the classes were not found or the object is null/of a different type
1800 Probe for an object being an instance of {@code IOStatisticsSnapshot}. @param object object to probe @return true if the object is the right type, false if the classes were not found or the object is null/of a different type
1801 Probe to check if the thread-level IO statistics enabled. If the relevant classes and methods were not found, returns false @return true if the IOStatisticsContext API was found and is enabled.
1802 Get the maximum number of objects/files to delete in a single request. @param fileSystem filesystem @param path path to delete under. @return a number greater than or equal to zero. @throws UnsupportedOperationException bulk delete under that path is not supported. @throws IllegalArgumentException path not valid. @throws IOException problems resolving paths @throws RuntimeException invocation failure.
1803 Delete a list of files/objects. <ul> <li>Files must be under the path provided in {@code base}.</li> <li>The size of the list must be equal to or less than the page size.</li> <li>Directories are not supported; the outcome of attempting to delete directories is undefined (ignored; undetected, listed as failures...).</li> <li>The operation is not atomic.</li> <li>The operation is treated as idempotent: network failures may trigger resubmission of the request -any new objects created under a path in the list may then be deleted.</li> <li>There is no guarantee that any parent directories exist after this call. </li> </ul> @param fs filesystem @param base path to delete under. @param paths list of paths which must be absolute and under the base path. @return a list of all the paths which couldn't be deleted for a reason other than "not found" and any associated error message. @throws UnsupportedOperationException bulk delete under that path is not supported. @throws IllegalArgumentException if a path argument is invalid. @throws IOException IO problems including networking, authentication and more.
1804 OpenFile assistant, easy reflection-based access to {@code FileSystem#openFile(Path)} and blocks awaiting the operation completion. @param fs filesystem @param path path @param policy read policy @param status optional file status @param length optional file length @param options nullable map of other options @return stream of the opened file @throws IOException if the operation was attempted and failed.
1805 Delegate to {@code ByteBufferPositionedReadable#read(long, ByteBuffer)}. @param in input stream @param position position within file @param buf the ByteBuffer to receive the results of the read operation. @throws UnsupportedOperationException if the input doesn't implement the interface or, if when invoked, it is raised. Note: that is the default behaviour of {@code FSDataInputStream#readFully(long, ByteBuffer)}. @throws IOException if the operation was attempted and failed.
1806 Require a IOStatistics to be available. @throws UnsupportedOperationException if the method was not found.
1807 Require IOStatisticsContext methods to be available. @throws UnsupportedOperationException if the classes/methods were not found
1808 @param recommendedLength Recommended size of the internal array. @param sizeLimit the limit of the size of the cache. The limit is disabled if it is &lt;= 0. @param creationExpirationPeriod the time period C &gt; 0 in nanoseconds that the creation of an entry is expired if it is added to the cache longer than C. @param accessExpirationPeriod the time period A &gt;= 0 in nanoseconds that the access of an entry is expired if it is not accessed longer than A.
1809 Constructor. @param vectorSize The vector size of <i>this</i> filter. @param nbHash The number of hash functions to consider. @param hashType type of the hashing function (see {@link Hash}).
1810 Removes a specified key from <i>this</i> counting Bloom filter. <p> <b>Invariant</b>: nothing happens if the specified key does not belong to <i>this</i> counter Bloom filter. @param key The key to remove.
1811 Adds a collection of false positive information to <i>this</i> retouched Bloom filter. @param coll The collection of false positive.
1812 Adds a list of false positive information to <i>this</i> retouched Bloom filter. @param keys The list of false positive.
1813 Adds an array of false positive information to <i>this</i> retouched Bloom filter. @param keys The array of false positive.
1814 Clears a specified bit in the bit vector and keeps up-to-date the KeyList vectors. @param index The position of the bit to clear.
1815 Chooses the bit position that minimizes the number of false negative generated while maximizing. the number of false positive removed. @param h The different bit positions. @return The position that minimizes the number of false negative generated while maximizing.
1816 API compatible with Hadoop 1.x. @param argv argv. @throws Throwable Anything thrown by the example program's main
1817 Get the credential entry by name from a credential provider. Handle key deprecation. @param provider a credential provider @param name alias of the credential @return the credential entry or null if not found
1818 Adds the deprecated key to the global deprecation map. It does not override any existing entries in the deprecation map. This is to be used only by the developers in order to add deprecation of keys, and attempts to call this method after loading resources once, would lead to <tt>UnsupportedOperationException</tt> If a key is deprecated in favor of multiple keys, they are all treated as aliases of each other, and setting any one of them resets all the others to the new value. If you have multiple deprecation entries to add, it is more efficient to use #addDeprecations(DeprecationDelta[] deltas) instead. @param key to be deprecated @param newKeys list of keys that take up the values of deprecated key @param customMessage depcrication message @deprecated use {@link #addDeprecation(String key, String newKey, String customMessage)} instead
1819 Open the main listener for the server @throws Exception
1820 Verify that the argument, if given, in the conf is parseable.
1821 Clear all of the state held within the parent ZNode. This recursively deletes everything within the znode as well as the parent znode itself. It should only be used when it's certain that no electors are currently participating in the election. @throws IOException raised on errors performing I/O. @throws InterruptedException interrupted exception.
1822 If there is a breadcrumb node indicating that another node may need fencing, try to fence that node. @return the Stat of the breadcrumb node that was read, or null if no breadcrumb node existed
1823 Synchronously reads a range from the stream dealing with the combinations of ByteBuffers buffers and PositionedReadable streams. @param stream the stream to read from @param range the range to read @param allocate the function to allocate ByteBuffers @return the CompletableFuture that contains the read data or an exception. @throws IllegalArgumentException the range is invalid other than by offset or being null. @throws EOFException the range offset is negative @throws NullPointerException if the range is null.
1824 Requests that the given block should be copied to the local cache. The block must not be accessed by the caller after calling this method because it will released asynchronously relative to the caller. @throws IllegalArgumentException if data is null.
1825 Indicates that a prefetch operation is in progress. @param actionFuture the {@code Future} of a prefetch action. @throws IllegalArgumentException if actionFuture is null.
1826 Marks the completion of reading data into the buffer. The buffer cannot be modified once in this state. @param expectedCurrentState the collection of states from which transition to READY is allowed.
1827 Gets the size of the given block. @param blockNumber the id of the desired block. @return the size of the given block.
1828 Gets the relative offset corresponding to the given block and the absolute offset. @param blockNumber the id of the given block. @param offset absolute offset in the file. @return the relative offset corresponding to the given block and the absolute offset. @throws IllegalArgumentException if either blockNumber or offset is invalid.
1829 Constructs an instance of {@link BlockData}. @param fileSize the size of a file. @param blockSize the file is divided into blocks of this size. @throws IllegalArgumentException if fileSize is negative. @throws IllegalArgumentException if blockSize is negative. @throws IllegalArgumentException if blockSize is zero or negative.
1830 Gets the id of the current block. @return the id of the current block.
1831 Close all FileSystems in the cache, whether they are marked for automatic closing or not. @throws IOException a problem arose closing one or more FileSystem.
1832 Close all cached FileSystem instances for a given UGI. Be sure those filesystems are not used anymore. @param ugi user group info to close @throws IOException a problem arose closing one or more filesystem.
1833 Write a line of text to a file. Characters are encoded into bytes using UTF-8. This utility method opens the file for writing, creating the file if it does not exist, or overwrites an existing file. @param fileContext the files system with which to create the file @param path the path to the file @param charseq the char sequence to write to the file @return the file context @throws NullPointerException if any of the arguments are {@code null} @throws IOException if an I/O error occurs creating or writing to the file
1834 Writes bytes to a file. This utility method opens the file for writing, creating the file if it does not exist, or overwrites an existing file. All bytes in the byte array are written to the file. @param fs the file system with which to create the file @param path the path to the file @param bytes the byte array with the bytes to write @return the file system @throws NullPointerException if any of the arguments are {@code null} @throws IOException if an I/O error occurs creating or writing to the file
1835 Write lines of text to a file. Each line is a char sequence and is written to the file in sequence with each line terminated by the platform's line separator, as defined by the system property {@code line.separator}. Characters are encoded into bytes using the specified charset. This utility method opens the file for writing, creating the file if it does not exist, or overwrites an existing file. @param fs the file system with which to create the file @param path the path to the file @param lines a Collection to iterate over the char sequences @param cs the charset to use for encoding @return the file system @throws NullPointerException if any of the arguments are {@code null} @throws IOException if an I/O error occurs creating or writing to the file
1836 Write a line of text to a file. Characters are encoded into bytes using the specified charset. This utility method opens the file for writing, creating the file if it does not exist, or overwrites an existing file. @param fs the file system with which to create the file @param path the path to the file @param charseq the char sequence to write to the file @param cs the charset to use for encoding @return the file system @throws NullPointerException if any of the arguments are {@code null} @throws IOException if an I/O error occurs creating or writing to the file
1837 Constructor with host, name, network topology, offset, length and corrupt flag. @param names names. @param hosts hosts. @param topologyPaths topologyPaths. @param offset offset. @param length length. @param corrupt corrupt.
1838 Create a mutable integer counter @param name of the metric @param desc metric description @param iVal initial value @return a new counter object
1839 Create a mutable long integer counter @param name of the metric @param desc metric description @param iVal initial value @return a new counter object
1840 Create a mutable long integer gauge @param name of the metric @param desc metric description @param iVal initial value @return a new gauge object
1841 Create a mutable float gauge @param name of the metric @param desc metric description @param iVal initial value @return a new gauge object
1842 Create a mutable integer gauge @param name of the metric @param desc metric description @param iVal initial value @return a new gauge object
1843 Create a copy of this instance. @return copy.
1844 Extract any statistics from the source and log at debug, if the log is set to log at debug. No-op if logging is not at debug or the source is null/of the wrong type/doesn't provide statistics. @param log log to log to @param message message for log -this must contain "{}" for the statistics report to actually get logged. @param source source object
1845 toString method returns the superclass toString, but if the subclass implements {@link IOStatisticsSource} then those statistics are extracted and included in the output. That is: statistics of subclasses are automatically reported. @return a string value.
1846 Convert IOStatistics to a string form, with all the metrics sorted and empty value stripped. @param statistics A statistics instance; may be null @return string value or the empty string if null
1847 Given an IOException raising callable/lambda expression, execute it and update the relevant statistic, returning the measured duration. {@link #trackDurationOfInvocation(DurationTrackerFactory, String, InvocationRaisingIOE)} with the duration returned for logging etc.; added as a new method to avoid linking problems with any code calling the existing method. @param factory factory of duration trackers @param statistic statistic key @param input input callable. @return the duration of the operation, as measured by the duration tracker. @throws IOException IO failure.
1848 Given a Java supplier, evaluate it while tracking the duration of the operation and success/failure. @param factory factory of duration trackers @param statistic statistic key @param input input callable. @param <B> return type. @return the output of the supplier.
1849 Add the given entry to the head of the linked list and if the LRU cache size exceeds the max limit, evict tail of the LRU linked list. @param entry Block entry to add.
1850 Constructor invoked via the builder. @param counters keys to use for the counter statistics. @param gauges names of gauges @param minimums names of minimums @param maximums names of maximums @param meanStatistics names of mean statistics.
1851 Decryption is buffer based. If there is data in {@link #outBuffer}, then read it out of this buffer. If there is no data in {@link #outBuffer}, then read more from the underlying stream and do the decryption. @param b the buffer into which the decrypted data is read. @param off the buffer offset. @param len the maximum number of decrypted data bytes to read. @return int the total number of decrypted data bytes read into the buffer. @throws IOException raised on errors performing I/O.
1852 Decrypt length bytes in buffer starting at offset. Output is also put into buffer starting at offset. It is thread-safe.
1853 Decrypts the given {@link ByteBuffer} in place. {@code length} bytes are decrypted from {@code buf} starting at {@code start}. {@code buf.position()} and {@code buf.limit()} are unchanged after this method returns. This method is thread-safe. <p> This method decrypts the input buf chunk-by-chunk and writes the decrypted output back into the input buf. It uses two local buffers taken from the {@link #bufferPool} to assist in this process: one is designated as the input buffer and it stores a single chunk of the given buf, the other is designated as the output buffer, which stores the output of decrypting the input buffer. Both buffers are of size {@link #bufferSize}. </p> <p> Decryption is done by using a {@link Decryptor} and the {@link #decrypt(Decryptor, ByteBuffer, ByteBuffer, byte)} method. Once the decrypted data is written into the output buffer, is is copied back into buf. Both buffers are returned back into the pool once the entire buf is decrypted. </p> @param filePosition the current position of the file being read @param buf the {@link ByteBuffer} to decrypt @param length the number of bytes in {@code buf} to decrypt @param start the position in {@code buf} to start decrypting data from
1854 Decrypts the given {@link ByteBuffer} in place. {@code length} bytes are decrypted from {@code buf} starting at {@code start}. {@code buf.position()} and {@code buf.limit()} are unchanged after this method returns. @see #decrypt(long, ByteBuffer, int, int)
1855 Seek to a position.
1856 Skip n bytes
1857 Creates a glob filter with the specified file pattern. @param filePattern the file pattern. @throws IOException thrown if the file pattern is incorrect.
1858 Creates a glob filter with the specified file pattern and an user filter. @param filePattern the file pattern. @param filter user filter in addition to the glob pattern. @throws IOException thrown if the file pattern is incorrect.
1859 Given a Tar File as input it will untar the file in a the untar directory passed as the second parameter This utility will untar ".tar" files and ".tar.gz","tgz" files. @param inputStream The tar file as input. @param untarDir The untar directory where to untar the tar file. @param gzipped The input stream is gzipped TODO Use magic number and PusbackInputStream to identify @throws IOException an exception occurred @throws InterruptedException command interrupted @throws ExecutionException task submit failed
1860 @return Map of uri and statistics for each filesystem instantiated. The uri consists of scheme and authority for the filesystem.
1861 Clears all the statistics stored in AbstractFileSystem, for all the file systems.
1862 Encode with inputs and generates outputs. More see above. @param inputs input buffers to read data from @param outputs output buffers to put the encoded data into, read to read after the call @throws IOException if the encoder is closed.
1863 A thread pool that that blocks clients submitting additional tasks if there are already {@code activeTasks} running threads and {@code waitingTasks} tasks waiting in its queue. @param activeTasks maximum number of active tasks @param waitingTasks maximum number of waiting tasks @param keepAliveTime time until threads are cleaned up in {@code unit} @param unit time unit @param prefixName prefix of name for threads @return BlockingThreadPoolExecutorService.
1864 Associates a buffer with this file. @param bufferData the buffer associated with this file. @param startOffset Start offset of the buffer relative to the start of a file. @param readOffset Offset where reading starts relative to the start of a file. @throws IllegalArgumentException if bufferData is null. @throws IllegalArgumentException if startOffset is negative. @throws IllegalArgumentException if readOffset is negative. @throws IllegalArgumentException if readOffset is outside the range [startOffset, buffer end].
1865 Get the context's {@link IOStatisticsContext} which implements {@link IOStatisticsSource}. This is either a thread-local value or a global empty context. @return instance of {@link IOStatisticsContext}.
1866 Reset the context's IOStatistics. {@link IOStatisticsContext#reset()}
1867 Take a snapshot of the context IOStatistics. {@link IOStatisticsContext#snapshot()} @return an instance of {@link IOStatisticsSnapshot}.
1868 Aggregate into the IOStatistics context the statistics passed in via IOStatistics/source parameter. <p> Returns false if the source is null or does not contain any statistics. @param source implementation of {@link IOStatisticsSource} or {@link IOStatistics} @return true if the the source object was aggregated.
1869 Parallel execution. All tasks run within the same IOStatisticsContext as the thread calling this method. @param task task to execute @param <E> exception which may be raised in execution. @return true if the operation executed successfully @throws E any exception raised. @throws IOException IOExceptions raised by remote iterator or in execution.
1870 Set the IOStatisticsContext for the current thread. @param statisticsContext IOStatistics context instance for the current thread. If null, the context is reset.
1871 Set the statistics context for this thread.
1872 Reset the statistics context if it was set earlier. This unbinds the current thread from any statistics context.
1873 Display an exception prefaced with the command name. Also increments the error count for the command which will result in a non-zero exit code. @param e exception to display
1874 Create a durable, serializable handle to the referent of the given entity. @param stat Referent in the target FileSystem @param opt If absent, assume {@link HandleOpt#path()}. @throws IllegalArgumentException If the FileStatus does not belong to this FileSystem @throws UnsupportedOperationException If {@link #createPathHandle} not overridden by subclass. @throws UnsupportedOperationException If this FileSystem cannot enforce the specified constraints. @return path handle.
1875 Add a token in the storage (in memory). @param alias the alias for the key @param t the token object
1876 AES-CTR will consume all of the input data. It requires enough space in the destination buffer to encrypt entire input buffer.
1877 AES-CTR will consume all of the input data. It requires enough space in the destination buffer to decrypt entire input buffer.
1878 Initialize regex mount point. @throws IOException
1879 Create a new Path based on the child path resolved against the parent path. @param parent the parent path @param child the child path
1880 Construct a path from a String. Path strings are URIs, but with unescaped elements and some additional normalization. @param pathString the path string
1881 Construct a Path from components. @param scheme the scheme @param authority the authority @param path the path
1882 Returns the printable version of the path that is either the path as given on the commandline, or the full path @return String of the path
1883 Get the path-part of a pathname. Checks that URI matches this file system and that the path-part is a valid name. @param p path @return path-part of the Path p
1884 Return the fully-qualified path of path f resolving the path through any internal symlinks or mount point @param p path to be resolved @return fully qualified path @throws FileNotFoundException when file not find throw. @throws AccessControlException when accees control error throw. @throws IOException raised on errors performing I/O. @throws UnresolvedLinkException if symbolic link on path cannot be resolved internally
1885 The specification of this method matches that of {@link FileContext#create(Path, EnumSet, Options.CreateOpts...)} except that the Path f must be fully qualified and the permission is absolute (i.e. umask has been applied). @param f the path. @param createFlag create_flag. @param opts create ops. @throws AccessControlException access controll exception. @throws FileAlreadyExistsException file already exception. @throws FileNotFoundException file not found exception. @throws ParentNotDirectoryException parent not dir exception. @throws UnsupportedFileSystemException unsupported file system exception. @throws UnresolvedLinkException unresolved link exception. @throws IOException raised on errors performing I/O. @return output stream.
1886 Create from unmasked mode and umask. @param mode mode. @param umask umask. @return If the mode is already an FsCreateModes object, return it.
1887 Call {@link #mkdirs(Path, FsPermission)} with default permission. @param f path @return true if the directory was created @throws IOException IO failure
1888 Sets permission. @param permission if permission is null, default value is set
1889 Opens an FSDataOutputStream at the indicated Path with write-progress reporting. Same as create(), except fails if parent directory doesn't already exist. @param f the file name to open @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @param replication required block replication for the file. @param blockSize block size @param progress the progress reporter @throws IOException IO failure @see #setPermission(Path, FsPermission) @return output stream.
1890 Create an immutable {@link FsPermission} object. @param permission permission. @return FsPermission.
1891 Append a key/value pair. @param key input Object key. @param val input Object val. @throws IOException raised on errors performing I/O.
1892 Get the compressed size of the block in progress. @return the number of compressed bytes written to the underlying FS file. The size may be smaller than actual need to compress the all data written due to internal buffering inside the compressor. @throws IOException
1893 Skips over and discards <code>n</code> bytes of data from the input stream. The <code>skip</code> method skips over some smaller number of bytes when reaching end of file before <code>n</code> bytes have been skipped. The actual number of bytes skipped is returned. If <code>n</code> is negative, no bytes are skipped. @param n the number of bytes to be skipped. @return the actual number of bytes skipped. @exception IOException if an I/O error occurs. ChecksumException if the chunk to skip to is corrupted
1894 Return the total size of all files from a specified path.
1895 Return the total size of all files from a specified path.
1896 Simple 'main' to facilitate manual testing of the pause monitor. This main function just leaks memory into a list. Running this class with a 1GB heap will very quickly go into "GC hell" and result in log messages about the GC pauses. @param args args. @throws Exception Exception.
1897 {@inheritDoc} @throws ServiceStateException if the current service state does not permit this action
1898 Enter a state; record this via {@link #recordLifecycleEvent} and log at the info level. @param newState the proposed new state @return the original state it wasn't already in that state, and the state model permits state re-entrancy.
1899 Get the default realm. <p> Not having a default realm may be harmless, so is noted at info. All other invocation failures are downgraded to warn, as follow-on actions may still work. Failure to invoke the method via introspection is considered a failure, as it's a sign of JVM compatibility issues that may have other consequences
1900 Are the two byte sequences equal?
1901 Returns true iff <code>o</code> is a Text with the same length and same contents.
1902 Set the BytesWritable to the contents of the given newData. @param newData the value to set this BytesWritable to.
1903 Decode with inputs and erasedIndexes, generates outputs. How to prepare for inputs: 1. Create an array containing data units + parity units. Please note the data units should be first or before the parity units. 2. Set null in the array locations specified via erasedIndexes to indicate they're erased and no data are to read from; 3. Set null in the array locations for extra redundant items, as they're not necessary to read when decoding. For example in RS-6-3, if only 1 unit is really erased, then we have 2 extra items as redundant. They can be set as null to indicate no data will be used from them. For an example using RS (6, 3), assuming sources (d0, d1, d2, d3, d4, d5) and parities (p0, p1, p2), d2 being erased. We can and may want to use only 6 units like (d1, d3, d4, d5, p0, p2) to recover d2. We will have: inputs = [null(d0), d1, null(d2), d3, d4, d5, p0, null(p1), p2] erasedIndexes = [2] // index of d2 into inputs array outputs = [a-writable-buffer] Note, for both inputs and outputs, no mixing of on-heap buffers and direct buffers are allowed. If the coder option ALLOW_CHANGE_INPUTS is set true (false by default), the content of input buffers may change after the call, subject to concrete implementation. @param inputs input buffers to read data from. The buffers' remaining will be 0 after decoding @param erasedIndexes indexes of erased units in the inputs array @param outputs output buffers to put decoded data into according to erasedIndexes, ready for read after the call @throws IOException raised on errors performing I/O.
1904 Decode with inputs and erasedIndexes, generates outputs. More see above. @param inputs input buffers to read data from @param erasedIndexes indexes of erased units in the inputs array @param outputs output buffers to put decoded data into according to erasedIndexes, ready for read after the call @throws IOException if the decoder is closed.
1905 Skips bytes in the stream until the start marker of a block is reached or end of stream is reached. Used for testing purposes to identify the start offsets of blocks.
1906 Constructs a new <tt>CBZip2OutputStream</tt> with a blocksize of 900k. <p> <b>Attention: </b>The caller is resonsible to write the two BZip2 magic bytes <tt>"BZ"</tt> to the specified stream prior to calling this constructor. </p> @param out * the destination stream. @throws IOException if an I/O error occurs in the specified stream. @throws NullPointerException if <code>out == null</code>.
1907 Create a {@link BlockDecompressorStream}. @param in input stream @param decompressor decompressor to use @throws IOException raised on errors performing I/O.
1908 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream}. @param out the location for the final output stream @return a stream the user can write uncompressed data to have it compressed @throws IOException raised on errors performing I/O.
1909 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream}. @param out the location for the final output stream @return a stream the user can write uncompressed data to, to have it compressed @throws IOException raised on errors performing I/O.
1910 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream}. @param out the location for the final output stream @return a stream the user can write uncompressed data to have compressed @throws IOException raised on errors performing I/O.
1911 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream}. @param out the location for the final output stream @return a stream the user can write uncompressed data to have it compressed @throws IOException raised on errors performing I/O.
1912 Close the map.
1913 Finishing up the current block.
1914 Create a {@link CompressionInputStream} that will read from the given input stream. @param in the stream to read compressed bytes from @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
1915 Create a {@link CompressionInputStream} that will read from the given input stream and return a stream for uncompressed data. @param in the stream to read compressed bytes from @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
1916 Create a {@link CompressionInputStream} that will read from the given input stream. @param in the stream to read compressed bytes from @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
1917 Create a {@link CompressionInputStream} that will read from the given input stream. @param in the stream to read compressed bytes from @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
1918 Close the map. @throws IOException raised on errors performing I/O.
1919 closes the underlying reader
1920 {@inheritDoc}
1921 Write and flush the file header.
1922 Stores all the keys to DataOutput. @param out DataOutput. @throws IOException raised on errors performing I/O.
1923 Read the next 'compressed' block
1924 Position valLenIn/valIn to the 'value' corresponding to the 'current' key
1925 @return Read a UTF8 encoded string from in. @param in input in. @throws IOException raised on errors performing I/O.
1926 Obtains the DelegationKey from the SQL database. @param keyId KeyId of the DelegationKey to obtain. @return DelegationKey that matches the given keyId or null if it doesn't exist in the database.
1927 Select a delegation token from all tokens in credentials, based on url. @param url url. @param creds credentials. @return token.
1928 Try to locate the required token for the server. @param authType of the SASL client @return Token for server, or null if no token available @throws IOException - token selector cannot be instantiated
1929 Set the given token's service to the format expected by the RPC client @param token a delegation token @param addr the socket for the rpc connection
1930 Get a token from a TokenProto payload. @param tokenProto marshalled token @return the token.
1931 Get the ByteString for frequently used fixed and small set strings. @param key Hadoop Writable Text string @return the ByteString for frequently used fixed and small set strings.
1932 Clone a token. @param other the token to clone
1933 Read from the InputStream into the given Text. @param str the object to store the given line @param maxLineLength the maximum number of bytes to store into str. @return the number of bytes read including the newline @throws IOException if the underlying stream throws
1934 Read from the InputStream into the given Text. @param str the object to store the given line @return the number of bytes read including the newline @throws IOException if the underlying stream throws
1935 Create a instrumented lock instance which logs a warning message when lock held time is above given threshold. @param name the identifier of the lock object @param logger this class does not have its own logger, will log to the given logger instead @param minLoggingGapMs the minimum time gap between two log messages, this is to avoid spamming to many logs @param lockWarningThresholdMs the time threshold to view lock held time as being "too long"
1936 <p> Create a proxy for an interface of an implementation class using the same retry policy for each method in the interface. </p> @param iface the interface that the retry will implement @param implementation the instance whose methods should be retried @param retryPolicy the policy for retrying method call failures @param <T> T. @return the retry proxy
1937 It first processes the wait time, if there is any, and then invokes {@link #processRetryInfo()}. If the wait time is positive, it either sleeps for synchronous calls or immediately returns for asynchronous calls. @return {@link CallReturn#RETRY} if the retryInfo is processed; otherwise, return {@link CallReturn#WAIT_RETRY}.
1938 Constructor @param fsdos output stream for writing. Must be at position 0. @param minBlockSize Minimum compressed block size in bytes. A compression block will not be closed until it reaches this size except for the last block. @param compressName Name of the compression algorithm. Must be one of the strings returned by {@link TFile#getSupportedCompressionAlgorithms()}. @param comparator Leave comparator as null or empty string if TFile is not sorted. Otherwise, provide the string name for the comparison algorithm for keys. Two kinds of comparators are supported. <ul> <li>Algorithmic comparator: binary comparators that is language independent. Currently, only "memcmp" is supported. <li>Language-specific comparator: binary comparators that can only be constructed in specific language. For Java, the syntax is "jclass:", followed by the class name of the RawComparator. Currently, we only support RawComparators that can be constructed through the default constructor (with no parameters). Parameterized RawComparators such as {@link WritableComparator} or {@link JavaSerializationComparator} may not be directly used. One should write a wrapper class that inherits from such classes and use its default constructor to perform proper initialization. </ul> @param conf The configuration object. @throws IOException raised on errors performing I/O.
1939 Have we reached the last chunk. @return true if we have reached the last chunk. @throws java.io.IOException
1940 How many bytes remain in the current chunk? @return remaining bytes left in the current chunk. @throws java.io.IOException
1941 Compare the entry key to another key. Synonymous to compareTo(new ByteArray(buf, offset, length) @param buf The key buffer @param offset offset into the key buffer. @param length the length of the key. @return comparison result between the entry key with the input key.
1942 Close the file.
1943 Append a key/value pair.
1944 Append a key/value pair.
1945 Make a copy of the writable object using serialization to a buffer. @param dst the object to copy from @param src the object to copy into, which is destroyed @throws IOException raised on errors performing I/O. @deprecated use ReflectionUtils.cloneInto instead.
1946 Randomly choose one node from <i>scope</i>. If scope starts with ~, choose one from the all nodes except for the ones in <i>scope</i>; otherwise, choose one from <i>scope</i>. If excludedNodes is given, choose a node that's not in excludedNodes. @param scope range of nodes from which a node will be chosen @param excludedNodes nodes to be excluded from @return the chosen node
1947 Sort nodes array by network distance to <i>reader</i>. <p> In a three-level topology, a node can be either local, on the same rack, or on a different rack from the reader. Sorting the nodes based on network distance from the reader reduces network traffic and improves performance. <p> As an additional twist, we also randomize the nodes at each network distance. This helps with load balancing when there is data skew. @param reader Node where data will be read @param nodes Available replicas with the requested data @param activeLen Number of active nodes at the front of the array
1948 Sort nodes array by network distance to <i>reader</i> with secondary sort. <p> using network location. This is used when the reader is not a datanode. Sorting the nodes based on network distance from the reader reduces network traffic and improves performance. </p> @param reader Node where data will be read @param nodes Available replicas with the requested data @param activeLen Number of active nodes at the front of the array
1949 Same as SocketInputStream(socket.getChannel(), timeout): <br><br> Create a new input stream with the given timeout. If the timeout is zero, it will be treated as infinite timeout. The socket's channel will be configured to be non-blocking. @see SocketInputStream#SocketInputStream(ReadableByteChannel, long) @param socket should have a channel associated with it. @param timeout timeout timeout in milliseconds. must not be negative. @throws IOException raised on errors performing I/O.
1950 Same as SocketInputStream(socket.getChannel(), socket.getSoTimeout()) :<br><br> Create a new input stream with the given timeout. If the timeout is zero, it will be treated as infinite timeout. The socket's channel will be configured to be non-blocking. @see SocketInputStream#SocketInputStream(ReadableByteChannel, long) @param socket should have a channel associated with it. @throws IOException raised on errors performing I/O.
1951 Same as SocketOutputStream(socket.getChannel(), timeout):<br><br> Create a new ouput stream with the given timeout. If the timeout is zero, it will be treated as infinite timeout. The socket's channel will be configured to be non-blocking. @see SocketOutputStream#SocketOutputStream(WritableByteChannel, long) @param socket should have a channel associated with it. @param timeout timeout timeout in milliseconds. must not be negative. @throws IOException raised on errors performing I/O.
1952 Add a leaf node Update node counter &amp; rack counter if necessary @param node node to be added; can be null @exception IllegalArgumentException if add a node to a leave or node to be added is not a leaf
1953 Performs one IO and returns number of bytes read or written. It waits up to the specified timeout. If the channel is not read before the timeout, SocketTimeoutException is thrown. @param buf buffer for IO @param ops Selection Ops used for waiting. Suggested values: SelectionKey.OP_READ while reading and SelectionKey.OP_WRITE while writing. @return number of bytes read or written. negative implies end of stream. @throws IOException
1954 The contract is similar to {@link SocketChannel#connect(SocketAddress)} with a timeout. @see SocketChannel#connect(SocketAddress) @param channel - this should be a {@link SelectableChannel} @param endpoint @throws IOException
1955 This is similar to {@link #doIO(ByteBuffer, int)} except that it does not perform any I/O. It just waits for the channel to be ready for I/O as specified in ops. @param ops Selection Ops used for waiting @throws SocketTimeoutException if select on the channel times out. @throws IOException if any other I/O error occurs.
1956 Returns the default (first) host name associated by the default nameserver with the address bound to the specified network interface @param strInterface The name of the network interface to query (e.g. eth0). Must not be null. @return The default host name associated with IPs bound to the network interface @throws UnknownHostException If one is encountered while querying the default interface
1957 @return Returns the default (first) host name associated by the provided nameserver with the address bound to the specified network interface. @param strInterface The name of the network interface to query (e.g. eth0) @param nameserver The DNS host name @throws UnknownHostException If one is encountered while querying the default interface
1958 Reattach the class's metrics to a new metric system.
1959 Instantiates a new {@link MutableInverseQuantiles} for a metric that rolls itself over on the specified time interval. @param name of the metric @param description long-form textual description of the metric @param sampleName type of items in the stream (e.g., "Ops") @param valueName type of the values @param intervalSecs rollover interval (in seconds) of the estimator
1960 Create a mutable metric that estimates quantiles of a stream of values @param name of the metric @param desc metric description @param sampleName of the metric (e.g., "Ops") @param valueName of the metric (e.g., "Time" or "Latency") @param interval rollover interval of estimator in seconds @return a new quantile estimator object @throws MetricsException if interval is not a positive integer
1961 Create a mutable metric with stats @param name of the metric @param desc metric description @param sampleName of the metric (e.g., "Ops") @param valueName of the metric (e.g., "Time" or "Latency") @return a new mutable metric object
1962 Add a tag to the metrics @param name of the tag @param description of the tag @param value of the tag @return the registry (for keep adding tags)
1963 @param name name of metric @param value value of metric
1964 Instrument a Call queue time based on its priority. @param priority of the RPC call @param queueTime of the RPC call in the queue of the priority
1965 Instrument a Call processing time based on its priority. @param priority of the RPC call @param processingTime of the RPC call in the queue of the priority
1966 Add an overall RPC processing time sample. @param rpcCallName of the RPC call @param overallProcessingTime the overall RPC processing time
1967 Locate the {@code krb5.conf} file and dump it. No-op on windows. @throws IOException problems reading the file.
1968 Assert that a condition must hold. If not, an exception is raised, or, if {@link #nofail} is set, an error will be logged and the method return false. @param condition condition which must hold @param category category for exception @param message string formatting message @param args any arguments for the formatting @return true if the verification succeeded, false if it failed but an exception was not raised. @throws KerberosDiagsFailure containing the formatted text if the condition was met
1969 Conditional failure with string formatted arguments. There is no chek for the {@link #nofail} value. @param condition failure condition @param category category for exception @param message string formatting message @param args any arguments for the formatting @throws KerberosDiagsFailure containing the formatted text if the condition was met
1970 Create a user from a login name. It is intended to be used for remote users in RPC, since it won't have any credentials. @param user the full user principal name, must not be empty or null @return the UserGroupInformation for the remote user.
1971 Verifies that the given identifier and password are valid and match. @param identifier Token identifier. @param password Password in the token. @throws InvalidToken InvalidToken.
1972 Spawn a thread to do periodic renewals of kerberos credentials from a keytab file.
1973 Constructor @deprecated invoke via {@link FsShell} @param cmd the count command @param pos the starting index of the arguments @param conf configuration
1974 Get a new zookeeper client instance. protected so that test class can inherit and mock out the zookeeper instance @return new zookeeper client instance @throws IOException raised on errors performing I/O. @throws KeeperException zookeeper connectionloss exception
1975 This removes the value currently at the head of the Queue for the provided key. Will immediately fire the Queue filler function if key does not exist. If Queue exists but all values are drained, It will ask the generator function to add 1 value to Queue and then drain it. @param keyName String key name @return E the next value in the Queue @throws IOException raised on errors performing I/O. @throws ExecutionException executionException.
1976 Resolves a host subject to the security requirements determined by hadoop.security.token.service.use_ip. Optionally logs slow resolutions. @param hostname host or ip to resolve @return a resolved host @throws UnknownHostException if the host doesn't exist
1977 Get a server protocol's signature @param server server implementation @param protocol server protocol @param clientVersion client's version @param clientMethodsHash client's protocol's hash code @return the server protocol's signature @throws IOException if any error occurs
1978 Check if a method is supported by the server or not. @param methodName a method's name in String format @param parameterTypes a method's parameter types @return true if the method is supported by the server @throws IOException raised on errors performing I/O.
1979 Verify RPC header is valid @param header - RPC request header @throws RpcServerException - header contains invalid values
1980 Decode the a protobuf from the given input stream @return Message - decoded protobuf @throws RpcServerException - deserialization failed
1981 poll() provides no strict consistency: it is possible for poll to return null even though an element is in the queue.
1982 Try to set up the response to indicate that the client version is incompatible with the server. This can contain special-case code to speak enough of past IPC protocols to pass back an exception to the caller. @param clientVersion the version the caller is using @throws IOException
1983 {@inheritDoc}
1984 constructors for har input stream. @param fs the underlying filesystem @param p The path in the underlying filesystem @param start the start position in the part file @param length the length of valid data in the part file @param bufsize the buffer size @throws IOException raised on errors performing I/O.
1985 Evict expired entries.
1986 Evict entries in order to enforce the size limit of the cache.
1987 Return the string representation of the object in the output format. For description of the options, @see #toString(boolean, boolean, boolean, boolean, List) @param qOption a flag indicating if quota needs to be printed or not @param hOption a flag indicating if human readable output is to be used @param xOption a flag indicating if calculation from snapshots is to be included in the output @return the string representation of the object
1988 Return the string representation of the object in the output format. For description of the options, @see #toString(boolean, boolean, boolean, boolean, List) @param qOption a flag indicating if quota needs to be printed or not @param hOption a flag indicating if human readable output if to be used @param tOption a flag indicating if display quota by storage types @param types Storage types to display @return the string representation of the object
1989 Return the string representation of the object in the output format. if hOption is false file sizes are returned in bytes if hOption is true file sizes are returned in human readable @param hOption a flag indicating if human readable output if to be used @param tOption type option. @param types storage types. @return the string representation of the object.
1990 Wait for a list of futures to complete. If the list is empty, return immediately. @param futures list of futures. @param <T> Generics Type T. @throws IOException if one of the called futures raised an IOE. @throws RuntimeException if one of the futures raised one.
1991 Block awaiting completion for any non-null future passed in; No-op if a null arg was supplied. @param future future @throws IOException if one of the called futures raised an IOE. @throws RuntimeException if one of the futures raised one.
1992 Composes length / CRC_SIZE_IN_BYTES more CRCs from crcBuffer, with each CRC expected to correspond to exactly {@code bytesPerCrc} underlying data bytes. @param crcBuffer crcBuffer. @param offset offset. @param length must be a multiple of the expected byte-size of a CRC. @param bytesPerCrc bytesPerCrc. @throws IOException raised on errors performing I/O.
1993 Composes {@code numChecksumsToRead} additional CRCs into the current digest out of {@code checksumIn}, with each CRC expected to correspond to exactly {@code bytesPerCrc} underlying data bytes. @param checksumIn checksumIn. @param numChecksumsToRead numChecksumsToRead. @param bytesPerCrc bytesPerCrc. @throws IOException raised on errors performing I/O.
1994 Create an object for the given class and initialize it from conf @param theClass class of which an object is created @param conf Configuration @param <T> Generics Type T. @return a new object
1995 Returns the class of keys in this file. @return keyClass.
1996 Returns the class of values in this file. @return Value Class.
1997 Run the class/resource find or load operation @param args command specific arguments. @return the outcome @throws Exception if something went very wrong
1998 Construct from a {@link FileContext}. @param fc FileContext @param path path. @throws IOException failure
1999 Creates a DataChecksum from HEADER_LEN bytes from arr[offset]. @param bytes bytes. @param offset offset. @return DataChecksum of the type in the array or null in case of an error. @throws IOException raised on errors performing I/O.
2000 This constructs a DataChecksum by reading HEADER_LEN bytes from input stream <i>in</i>. @param in data input stream. @throws IOException raised on errors performing I/O. @return DataChecksum by reading HEADER_LEN bytes from input stream.
2001 Check to see if a command needs to be executed and execute if needed. @throws IOException raised on errors performing I/O.
2002 Aggregate an existing {@code IOStatisticsSnapshot} with the supplied statistics. @param snapshot snapshot to update @param statistics IOStatistics to add @return true if the snapshot was updated. @throws IllegalArgumentException if the {@code statistics} argument is not null but not an instance of IOStatistics, or if {@code snapshot} is invalid. @throws UnsupportedOperationException if the IOStatistics classes were not found
2003 Create a new {@code IOStatisticsSnapshot} instance. @return an empty IOStatisticsSnapshot. @throws UnsupportedOperationException if the IOStatistics classes were not found
2004 Create a new {@code IOStatisticsSnapshot} instance. @param source optional source statistics @return an IOStatisticsSnapshot. @throws ClassCastException if the {@code source} is not valid. @throws UnsupportedOperationException if the IOStatistics classes were not found
2005 Save IOStatisticsSnapshot to a JSON string. @param snapshot statistics; may be null or of an incompatible type @return JSON string value or null if source is not an IOStatisticsSnapshot @throws UncheckedIOException Any IO/jackson exception. @throws UnsupportedOperationException if the IOStatistics classes were not found
2006 Load IOStatisticsSnapshot from a JSON string. @param json JSON string value. @return deserialized snapshot. @throws UncheckedIOException Any IO/jackson exception. @throws UnsupportedOperationException if the IOStatistics classes were not found
2007 Load IOStatisticsSnapshot from a Hadoop filesystem. @param fs filesystem @param path path @return the loaded snapshot @throws UncheckedIOException Any IO exception. @throws UnsupportedOperationException if the IOStatistics classes were not found
2008 Extract the IOStatistics from an object in a serializable form. @param source source object, may be null/not a statistics source/instance @return {@code IOStatisticsSnapshot} or null if the object is null/doesn't have statistics @throws UnsupportedOperationException if the IOStatistics classes were not found
2009 Save IOStatisticsSnapshot to a Hadoop filesystem as a JSON file. @param snapshot statistics @param fs filesystem @param path path @param overwrite should any existing file be overwritten? @throws UncheckedIOException Any IO exception. @throws UnsupportedOperationException if the IOStatistics classes were not found
2010 Convert IOStatistics to a string form, with all the metrics sorted and empty value stripped. @param statistics A statistics instance. @return string value or the empty string if null @throws UnsupportedOperationException if the IOStatistics classes were not found
2011 Get the context's {@code IOStatisticsContext} which implements {@code IOStatisticsSource}. This is either a thread-local value or a global empty context. @return instance of {@code IOStatisticsContext}. @throws UnsupportedOperationException if the IOStatisticsContext API was not found
2012 Set the IOStatisticsContext for the current thread. @param statisticsContext IOStatistics context instance for the current thread. If null, the context is reset. @throws UnsupportedOperationException if the IOStatisticsContext API was not found
2013 Reset the context's IOStatistics. {@code IOStatisticsContext#reset()} @throws UnsupportedOperationException if the IOStatisticsContext API was not found
2014 Take a snapshot of the context IOStatistics. {@code IOStatisticsContext#snapshot()} @return an instance of {@code IOStatisticsSnapshot}. @throws UnsupportedOperationException if the IOStatisticsContext API was not found
2015 Aggregate into the IOStatistics context the statistics passed in via IOStatistics/source parameter. <p> Returns false if the source is null or does not contain any statistics. @param source implementation of {@link IOStatisticsSource} or {@link IOStatistics} @return true if the the source object was aggregated.
2016 Compares two version name strings using maven's ComparableVersion class. @param version1 the first version to compare @param version2 the second version to compare @return a negative integer if version1 precedes version2, a positive integer if version2 precedes version1, and 0 if and only if the two versions are equal.
2017 Constructor @param vectorSize The vector size of <i>this</i> filter. @param nbHash The number of hash function to consider. @param hashType type of the hashing function (see {@link org.apache.hadoop.util.hash.Hash}).
2018 Constructor @param vectorSize The vector size of <i>this</i> filter. @param nbHash The number of hash function to consider. @param hashType type of the hashing function (see {@link org.apache.hadoop.util.hash.Hash}).
2019 Checks if this MapFile has the indicated key. The membership test is performed using a Bloom filter, so the result has always non-zero probability of false positives. @param key key to check @return false iff key doesn't exist, true if key probably exists. @throws IOException raised on errors performing I/O.
2020 Performs the selective clearing for a given key. @param k The false positive key to remove from <i>this</i> retouched Bloom filter. @param scheme The selective clearing scheme to apply.
2021 Adds the deprecated key to the global deprecation map. It does not override any existing entries in the deprecation map. This is to be used only by the developers in order to add deprecation of keys, and attempts to call this method after loading resources once, would lead to <tt>UnsupportedOperationException</tt> If you have multiple deprecation entries to add, it is more efficient to use #addDeprecations(DeprecationDelta[] deltas) instead. @param key to be deprecated @param newKey key that take up the values of deprecated key @param customMessage deprecation message
2022 Adds the deprecated key to the global deprecation map when no custom message is provided. It does not override any existing entries in the deprecation map. This is to be used only by the developers in order to add deprecation of keys, and attempts to call this method after loading resources once, would lead to <tt>UnsupportedOperationException</tt> If a key is deprecated in favor of multiple keys, they are all treated as aliases of each other, and setting any one of them resets all the others to the new value. If you have multiple deprecation entries to add, it is more efficient to use #addDeprecations(DeprecationDelta[] deltas) instead. @param key Key that is to be deprecated @param newKeys list of keys that take up the values of deprecated key @deprecated use {@link #addDeprecation(String key, String newKey)} instead
2023 Adds the deprecated key to the global deprecation map when no custom message is provided. It does not override any existing entries in the deprecation map. This is to be used only by the developers in order to add deprecation of keys, and attempts to call this method after loading resources once, would lead to <tt>UnsupportedOperationException</tt> If you have multiple deprecation entries to add, it is more efficient to use #addDeprecations(DeprecationDelta[] deltas) instead. @param key Key that is to be deprecated @param newKey key that takes up the value of deprecated key
2024 Start the server. Does not wait for the server to start. @throws IOException raised on errors performing I/O.
2025 Write the "ActiveBreadCrumb" node, indicating that this node may need to be fenced on failover. @param oldBreadcrumbStat
2026 Try to delete the "ActiveBreadCrumb" node when gracefully giving up active status. If this fails, it will simply warn, since the graceful release behavior is only an optimization.
2027 This is the default implementation which iterates through the ranges to read each synchronously, but the intent is that subclasses can make more efficient readers. The data or exceptions are pushed into {@link FileRange#getData()}. @param stream the stream to read the data from @param ranges the byte ranges to read @param allocate the byte buffer allocation @throws IllegalArgumentException if there are overlapping ranges or a range is invalid @throws EOFException the range offset is negative
2028 Requests cancellation of any previously issued prefetch requests.
2029 Gets the block having the given {@code blockNumber}. The entire block is read into memory and returned as a {@code BufferData}. The blocks are treated as a limited resource and must be released when one is done reading them. @param blockNumber the number of the block to be read and returned. @return {@code BufferData} having data from the given block. @throws IOException if there an error reading the given block. @throws IllegalArgumentException if blockNumber is negative.
2030 Constructs an instance of {@link FilePosition}. @param fileSize size of the associated file. @param blockSize size of each block within the file. @throws IllegalArgumentException if fileSize is negative. @throws IllegalArgumentException if blockSize is zero or negative.
2031 Determines whether the current block is the last block in this file. @return true if the current block is the last block in this file, false otherwise.
2032 Close all cached FileSystem instances. After this operation, they may not be used in any operations. @throws IOException a problem arose closing one or more filesystem.
2033 Write a line of text to a file. Characters are encoded into bytes using UTF-8. This utility method opens the file for writing, creating the file if it does not exist, or overwrites an existing file. @param fs the files system with which to create the file @param path the path to the file @param charseq the char sequence to write to the file @return the file system @throws NullPointerException if any of the arguments are {@code null} @throws IOException if an I/O error occurs creating or writing to the file
2034 Constructor with host, name, offset, length and corrupt flag. @param names names. @param hosts hosts. @param offset offset. @param length length. @param corrupt corrupt.
2035 Constructor with host, name, network topology, offset and length. @param names names. @param hosts hosts. @param topologyPaths topologyPaths. @param offset offset. @param length length.
2036 Aggregate the mean statistics. This returns a new instance. @param l left value @param r right value @return aggregate value
2037 Take a snapshot. This completely overwrites the map data with the statistics from the source. @param source statistics source.
2038 Extract any statistics from the source and log to this class's log at debug, if the log is set to log at debug. No-op if logging is not at debug or the source is null/of the wrong type/doesn't provide statistics. @param message message for log -this must contain "{}" for the statistics report to actually get logged. @param source source object
2039 A method to log IOStatistics from a source at different levels. @param log Logger for logging. @param level LOG level. @param source Source to LOG.
2040 Clean up after an iteration. If the log is at debug, calculate and log the IOStatistics. If the iterator is closeable, cast and then cleanup the iterator @param source iterator source @param <T> type of source
2041 Given an IOException raising callable/lambda expression, execute it and update the relevant statistic. @param factory factory of duration trackers @param statistic statistic key @param input input callable. @throws IOException IO failure.
2042 Positioned read. It is thread-safe
2043 Positioned read fully. It is thread-safe
2044 Positioned read using {@link ByteBuffer}s. This method is thread-safe.
2045 Positioned readFully using {@link ByteBuffer}s. This method is thread-safe.
2046 ByteBuffer read.
2047 Write a {@link Writable}, {@link String}, primitive type, or an array of the preceding. @param allowCompactArrays - set true for RPC and internal or intra-cluster usages. Set false for inter-cluster, File, and other persisted output usages, to preserve the ability to interchange files with other clusters that may not be running the same version of software. Sometime in ~2013 we can consider removing this parameter and always using the compact format. @param conf configuration. @param out dataoutput. @param declaredClass declaredClass. @param instance instance. @throws IOException raised on errors performing I/O.
2048 Acquires a buffer if one is immediately available. Otherwise returns null. @param blockNumber the id of the block to try acquire. @return the acquired block's {@code BufferData} or null.
2049 Number of ByteBuffers available to be acquired. @return the number of available buffers.
2050 Execute the task across the data. @param task task to execute @param <E> exception which may be raised in execution. @return true if the operation executed successfully @throws E any exception raised. @throws IOException IOExceptions raised by remote iterator or in execution.
2051 Iterates over the given expanded paths and invokes {@link #processPath(PathData)} on each element. If "recursive" is true, will do a post-visit DFS on directories. @param parent if called via a recurse, will be the parent dir, else null @param items a list of {@link PathData} objects to process @throws IOException if anything goes wrong...
2052 Utility function for mapping {@link FileSystem#getPathHandle} to a fixed set of handle options. @param fs Target filesystem @param opt Options to bind in partially evaluated function @return Function reference with options fixed
2053 Create a ShellCommandExecutor object using the user's name. @param userName user's name @return a ShellCommandExecutor object
2054 Create a ShellCommandExecutor object for fetch a user's group id list. @param userName the user's name @return a ShellCommandExecutor object
2055 Populates keys/values from proto buffer storage. @param in - stream ready to read a serialized proto buffer message
2056 NEVER call this method directly. @param issuer issuer. @param renewer renewer. @param credentials cache in which to add new delegation tokens. @param tokens list of new delegation tokens. @throws IOException raised on errors performing I/O.
2057 Add a named token to this UGI @param alias Name of the token @param token Token to be added @return true on successful add of new token
2058 Resolve against given working directory. @param workDir @param path @return absolute path
2059 Resolve against given working directory. * @param workDir @param path @return
2060 Convert a path to a File. @param path the path. @return file.
2061 See {@link FileContext#fixRelativePart}. @param p the path. @return relative part.
2062 Returns a qualified path object. @param defaultUri if this path is missing the scheme or authority components, borrow them from this URI @param workingDir if this path isn't absolute, treat it as relative to this working directory @return this path if it contains a scheme and authority and is absolute, or a new path that includes a path and authority and is fully qualified
2063 return the top level archive.
2064 return the top level archive path.
2065 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2066 Get the FileStatus info @param ignoreFNF if true, stat will be null if the path doesn't exist @return FileStatus for the given path @throws IOException if anything goes wrong
2067 @return Path that generated the exception
2068 @return Path if the operation involved copying or moving, else null
2069 Return the total size of all files in the filesystem. @throws IOException IO failure @return the number of path used.
2070 Constructor @param fs base file system @param uri base uri @throws IOException
2071 Return remaining path from specified index to the end of the path array. @param path An array of path components split by slash @param startIndex the specified start index of the path array @return remaining path.
2072 Get the target of the link. If a merge link then it returned as "," separated URI list. @return the path.
2073 Create a new Path based on the child path resolved against the parent path. @param parent the parent path @param child the child path
2074 Create a new Path based on the child path resolved against the parent path. @param parent the parent path @param child the child path
2075 Create a new Path based on the child path resolved against the parent path. @param parent the parent path @param child the child path
2076 Renames an existing map directory. @param fs fs. @param oldName oldName. @param newName newName. @throws IOException raised on errors performing I/O.
2077 Add the service prefix for a local filesystem.
2078 Convert a nested URI to decode the underlying path. The translation takes the authority and parses it into the underlying scheme and authority. For example, "myscheme://hdfs@nn/my/path" is converted to "hdfs://nn/my/path". @param nestedUri the URI from the nested URI @return the unnested path
2079 stringToPath. @param str str. @return path array.
2080 Return a version of the given Path without the scheme information. @param path the source Path @return a copy of this Path without the scheme information
2081 Merge 2 paths such that the second path is appended relative to the first. The returned path has the scheme and authority of the first path. On Windows, the drive specification in the second path is discarded. @param path1 the first path @param path2 the second path, to be appended relative to path1 @return the merged path
2082 Ensure that the file exists and if it is or is not a directory @param typeRequirement Set it to the desired requirement. @throws PathIOException if file doesn't exist or the type does not match what was specified in typeRequirement.
2083 Given a child of this directory, use the directory's path and the child's basename to construct the string to the child. This preserves relative paths since Path will fully qualify. @param childPath a path contained within this directory @return String of the path relative to this directory
2084 Provides a hook for handling paths that don't exist. By default it will throw an exception. Primarily overriden by commands that create paths such as mkdir or touch. @param item the {@link PathData} that doesn't exist @throws FileNotFoundException if arg is a path and it doesn't exist @throws IOException if anything else goes wrong...
2085 Get the file system of supplied path. @param absOrFqPath - absolute or fully qualified path @return the file system of the path @throws UnsupportedFileSystemException If the file system for <code>absOrFqPath</code> is not supported. @throws IOException If the file system for <code>absOrFqPath</code> could not be instantiated.
2086 Create a directory with the provided permission. The permission of the directory is set to be the provided permission as in setPermission, not permission{@literal &~}umask @see #create(FileSystem, Path, FsPermission) @param fs FileSystem handle @param dir the name of the directory to be created @param permission the permission of the directory @return true if the directory creation succeeds; false otherwise @throws IOException A problem creating the directories.
2087 Constructor. @param length a file's length @param isdir if the path is a directory @param block_replication the file's replication factor @param blocksize a file's block size @param modification_time a file's modification time @param access_time a file's access time @param permission a file's permission @param owner a file's owner @param group a file's group @param symlink symlink if the path is a symbolic link @param path the path's qualified name @param attr Attribute flags (See {@link FileStatus.AttrFlags}). @param locations a file's block locations
2088 Append a key/value pair. @param key input Writable key. @param val input Writable val. @throws IOException raised on errors performing I/O.
2089 Writes records from RawKeyValueIterator into a file represented by the passed writer. @param records the RawKeyValueIterator @param writer the Writer created earlier @throws IOException raised on errors performing I/O.
2090 {@inheritDoc} This invokes {@link #serviceInit} @param conf the configuration of the service. This must not be null @throws ServiceStateException if the configuration was null, the state change not permitted, or something else went wrong
2091 {@inheritDoc}
2092 Whether this is a private clone of a public token. @param thePublicService the public service name @return true when the public service is the same as specified
2093 Match token service field to alias text. True if alias is null.
2094 Match fetcher's service name to the service text and/or url prefix.
2095 Create the directory if it doesn't exist and check that dir is readable, writable and executable @param dir dir. @throws DiskErrorException disk problem.
2096 Create the directory if it doesn't exist and check that dir is readable, writable and executable. Perform some disk IO to ensure that the disk is usable for writes. @param dir dir. @throws DiskErrorException disk problem.
2097 Checksums all complete data chunks and flushes them to the underlying stream. If there is a trailing partial chunk, it is not flushed and is maintained in the buffer.
2098 Validate outputs decoded from inputs, by decoding an input back from the outputs and comparing it with the original one. For instance, in RS (6, 3), let (d0, d1, d2, d3, d4, d5) be sources and (p0, p1, p2) be parities, and assume inputs = [d0, null (d1), d2, d3, d4, d5, null (p0), p1, null (p2)]; erasedIndexes = [1, 6]; outputs = [d1, p0]. Then 1. Create new inputs, erasedIndexes and outputs for validation so that the inputs could contain the decoded outputs, and decode them: newInputs = [d1, d2, d3, d4, d5, p0] newErasedIndexes = [0] newOutputs = [d0'] 2. Compare d0 and d0'. The comparison will fail with high probability when the initial outputs are wrong. Note that the input buffers' positions must be the ones where data are read: If the input buffers have been processed by a decoder, the buffers' positions must be reset before being passed into this method. This method does not change outputs and erasedIndexes. @param inputs input buffers used for decoding. The buffers' position are moved to the end after this method. @param erasedIndexes indexes of erased units used for decoding @param outputs decoded output buffers, which are ready to be read after the call @throws IOException raised on errors performing I/O.
2099 Decode with inputs and erasedIndexes, generates outputs. More see above. Note, for both input and output ECChunks, no mixing of on-heap buffers and direct buffers are allowed. @param inputs input buffers to read data from @param erasedIndexes indexes of erased units in the inputs array @param outputs output buffers to put decoded data into according to erasedIndexes, ready for read after the call @throws IOException if the decoder is closed
2100 Signaling the end of write to the block. The block register will be called for registering the finished block.
2101 The default cleanup. Subclasses can override this with a custom cleanup. @throws IOException raised on errors performing I/O.
2102 Finishing reading the block. Release all resources.
2103 Loads all the keys. @param in DataInput. @throws IOException raised on errors performing I/O.
2104 Read 'raw' keys. @param key - The buffer into which the key is read @return Returns the key length or -1 for end of file @throws IOException raised on errors performing I/O.
2105 Get the 'value' corresponding to the last read 'key'. @param val : The 'value' to be read. @throws IOException raised on errors performing I/O.
2106 @return Get the 'value' corresponding to the last read 'key'. @param val : The 'value' to be read. @throws IOException raised on errors performing I/O.
2107 Read 'raw' records. @param key - The buffer into which the key is read @param val - The 'raw' value @return Returns the total record length or -1 for end of file @throws IOException raised on errors performing I/O.
2108 Read 'raw' values. @param val - The 'raw' value @return Returns the value length @throws IOException raised on errors performing I/O.
2109 Obtains the DelegationTokenInformation associated with the given TokenIdentifier in the SQL database. @param ident Existing TokenIdentifier in the SQL database. @return DelegationTokenInformation that matches the given TokenIdentifier or null if it doesn't exist in the database.
2110 Create and initialize a {@link PermissionStatus} from {@link DataInput}. @param in data input. @throws IOException raised on errors performing I/O. @return PermissionStatus.
2111 Read an Enum value from DataInput, Enums are read and written using String values. @param <T> Enum type @param in DataInput to read from @param enumType Class type of Enum @return Enum represented by String read from DataInput @throws IOException raised on errors performing I/O.
2112 Deserializes the AccessControlList object
2113 Get the ByteString for frequently used fixed and small set strings. @param key string @return the ByteString for frequently used fixed and small set strings.
2114 Create a {@code TokenProto} instance from a hadoop token. This builds and caches the fields (identifier, password, kind, service) but not renewer or any payload. @param tok token @return a marshallable protobuf class.
2115 Create a new delegation token identifier @param kind token kind @param owner the effective username of the token owner @param renewer the username of the renewer @param realUser the real username of the token owner
2116 Invoke the call once without retrying.
2117 check whether we have already successfully obtained the key. It also initializes the valueInputStream.
2118 Copy the value into BytesWritable. The input BytesWritable will be automatically resized to the actual value size. The implementation directly uses the buffer inside BytesWritable for storing the value. The call does not require the value length to be known. @param value value. @throws IOException raised on errors performing I/O. @return long value.
2119 Writing the value to the output stream. This method avoids copying value data from Scanner into user buffer, then writing to the output stream. It does not require the value length to be known. @param out The output stream @return the length of the value @throws IOException raised on errors performing I/O.
2120 Compare the entry key to another key. Synonymous to compareTo(key, 0, key.length). @param buf The key buffer. @return comparison result between the entry key with the input key.
2121 Compare whether this and other points to the same key value.
2122 Requests a delegation token using the configured <code>Authenticator</code> for authentication. @param url the URL to get the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token being used for the user where the Delegation token will be stored. @param renewer the renewer user. @param doAsUser the user to do as, which will be the token owner. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred. @return abstract delegation token identifier.
2123 Renews a delegation token from the server end-point using the configured <code>Authenticator</code> for authentication. @param url the URL to renew the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to renew. @param doAsUser the user to do as, which will be the token owner. @param dToken abstract delegation token identifier. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred. @return delegation token long value.
2124 Cancels a delegation token from the server end-point. It does not require being authenticated by the configured <code>Authenticator</code>. @param url the URL to cancel the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to cancel. @param dToken abstract delegation token identifier. @param doAsUser the user to do as, which will be the token owner. @throws IOException if an IO error occurred.
2125 Randomly choose a node. @param scope range of nodes from which a node will be chosen @return the chosen node @see #chooseRandom(String, Collection)
2126 Sort nodes array by their distances to <i>reader</i>. <p> This is the same as {@link NetworkTopology#sortByDistance(Node, Node[], int)} except with a four-level network topology which contains the additional network distance of a "node group" which is between local and same rack. @param reader Node where data will be read @param nodes Available replicas with the requested data @param activeLen Number of active nodes at the front of the array
2127 Return a {@link SocketInputWrapper} for the socket and set the given timeout. If the socket does not have an associated channel, then its socket timeout will be set to the specified value. Otherwise, a {@link SocketInputStream} will be created which reads with the configured timeout. Any socket created using socket factories returned by {@link #NetUtils}, must use this interface instead of {@link Socket#getInputStream()}. In general, this should be called only once on each socket: see the note in {@link SocketInputWrapper#setTimeout(long)} for more information. @see Socket#getChannel() @param socket socket. @param timeout timeout in milliseconds. zero for waiting as long as necessary. @return SocketInputWrapper for reading from the socket. @throws IOException raised on errors performing I/O.
2128 Returns OutputStream for the socket. If the socket has an associated SocketChannel then it returns a {@link SocketOutputStream} with the given timeout. If the socket does not have a channel, {@link Socket#getOutputStream()} is returned. In the later case, the timeout argument is ignored and the write will wait until data is available.<br><br> Any socket created using socket factories returned by {@link NetUtils}, must use this interface instead of {@link Socket#getOutputStream()}. @see Socket#getChannel() @param socket socket. @param timeout timeout in milliseconds. This may not always apply. zero for waiting as long as necessary. @return OutputStream for writing to the socket. @throws IOException raised on errors performing I/O.
2129 Like {@link NetUtils#connect(Socket, SocketAddress, int)} but also takes a local address and port to bind the socket to. @param socket socket. @param endpoint the remote address @param localAddr the local address to bind the socket to @param timeout timeout in milliseconds @throws IOException raised on errors performing I/O.
2130 Register the MBean using our standard MBeanName format "hadoop:service={@literal <serviceName>,name=<nameName>}" Where the {@literal <serviceName> and <nameName>} are the supplied parameters. @param serviceName serviceName. @param nameName nameName. @param properties - Key value pairs to define additional JMX ObjectName properties. @param theMbean - the MBean to register @return the named used to register the MBean
2131 Create a mutable inverse metric that estimates inverse quantiles of a stream of values @param name of the metric @param desc metric description @param sampleName of the metric (e.g., "Ops") @param valueName of the metric (e.g., "Rate") @param interval rollover interval of estimator in seconds @return a new inverse quantile estimator object @throws MetricsException if interval is not a positive integer
2132 Constructor @param cacheName name to identify the cache by @param percentage percentage of total java heap space used by this cache @param expirationTime time for an entry to expire in nanoseconds
2133 Initialize the registry with all the methods in a protocol so they all show up in the first snapshot. Convenient for JMX implementations. @param protocol the protocol class
2134 Initialize the registry with all rate names passed in. This is an alternative to the above init function since this metric can be used more than just for rpc name. @param names the array of all rate names
2135 Aggregates the thread's local samples into the global metrics. The caller should ensure its thread safety.
2136 Create a mutable rate metric (for throughput measurement). @param name of the metric @param desc description @param extended produce extended stat (stdev/min/max etc.) if true @return a new mutable rate metric object
2137 Initialize the registry with all the methods in a protocol so they all show up in the first snapshot. Convenient for JMX implementations. @param protocol the protocol class
2138 Add {@link MutableMetric} for a method annotated with {@link Metric}
2139 Validate the UGI: verify it is kerberized. @param messagePrefix message in exceptions @param user user to validate
2140 Verify that a file is valid: it is a file, non-empty and readable. @param file file @param category category for exceptions @param text text message @return true if the validation held; false if it did not <i>and</i> {@link #nofail} has disabled raising exceptions.
2141 Verify whether auth_to_local rules transform a principal name <p> Having a local user name "bar@foo.com" may be harmless, so it is noted at info. However if what was intended is a transformation to "bar" it can be difficult to debug, hence this check.
2142 Get the username encoded in the token identifier @return the username or owner
2143 Default constructor for the Find command.
2144 Constructor
2145 Force re-Login a user in from a keytab file irrespective of the last login time. Loads a user identity from a keytab file and logs them in. They become the currently logged-in user. This method assumes that {@link #loginUserFromKeytab(String, String)} had happened already. The Subject field of this UserGroupInformation object is updated to have the new credentials. @throws IOException raised on errors performing I/O. @throws KerberosAuthException on a failure
2146 Force re-Login a user in from the ticket cache irrespective of the last login time. This method assumes that login had happened already. The Subject field of this UserGroupInformation object is updated to have the new credentials. @throws IOException raised on errors performing I/O. @throws KerberosAuthException on a failure
2147 Re-Login a user in from the ticket cache. This method assumes that login had happened already. The Subject field of this UserGroupInformation object is updated to have the new credentials. @throws IOException raised on errors performing I/O. @throws KerberosAuthException on a failure
2148 Create a socket address with the given host and port. The hostname might be replaced with another host that was set via {@link #addStaticResolution(String, String)}. The value of hadoop.security.token.service.use_ip will determine whether the standard java host resolver is used, or if the fully qualified resolver is used. @param host the hostname or IP use to instantiate the object @param port the port number @return InetSocketAddress
2149 Checks if {@code host} is a local host name and return {@link InetAddress} corresponding to that address. @param host the specified host @return a valid local {@link InetAddress} or null @throws SocketException if an I/O error occurs
2150 Initiates a rpc call by sending the rpc request to the remote server. Note: this is not called from the current thread, but by another thread, so that if the current thread is interrupted that the socket state isn't corrupted with a partially written message. @param call - the rpc request
2151 Process an RPC Request - the connection headers and context must have been already read. - Based on the rpcKind, decode the rpcRequest. - A successfully decoded RpcCall will be deposited in RPC-Q and its response will be sent later when the request is processed. @param header - RPC request header @param buffer - stream to request payload @throws RpcServerException - generally due to fatal rpc layer issues such as invalid header or deserialization error. The call queue may also throw a fatal or non-fatal exception on overflow. @throws IOException - fatal internal error that should/could not be sent to client. @throws InterruptedException
2152 Setup response for the IPC Call. @param call {@link Call} to which we are setting up the response @param status of the IPC call @param rv return value for the IPC Call, if the call was successful @param errorClass error class, if the the call failed @param error error message, if the call failed @throws IOException
2153 Reloads the ip list
2154 Test the {@link SysInfoLinux}. @param args - arguments to this calculator test
2155 Return the string representation of the object in the output format. For description of the options, @see #toString(boolean, boolean, boolean, boolean, List) @param qOption a flag indicating if quota needs to be printed or not @param hOption a flag indicating if human readable output if to be used @return the string representation of the object
2156 Read checksum verified bytes from this byte-input stream into the specified byte array, starting at the given offset. <p> This method implements the general contract of the corresponding <code>{@link InputStream#read(byte[], int, int) read}</code> method of the <code>{@link InputStream}</code> class. As an additional convenience, it attempts to read as many bytes as possible by repeatedly invoking the <code>read</code> method of the underlying stream. This iterated <code>read</code> continues until one of the following conditions becomes true: <ul> <li> The specified number of bytes have been read, <li> The <code>read</code> method of the underlying stream returns <code>-1</code>, indicating end-of-file. </ul> If the first <code>read</code> on the underlying stream returns <code>-1</code> to indicate end-of-file then this method returns <code>-1</code>. Otherwise this method returns the number of bytes actually read. @param b destination buffer. @param off offset at which to start storing bytes. @param len maximum number of bytes to read. @return the number of bytes read, or <code>-1</code> if the end of the stream has been reached. @exception IOException if an I/O error occurs. ChecksumException if any checksum error occurs
2157 Creates an instance of the requested {@link Expression} class. @param expressionClass {@link Expression} class to be instantiated @param conf the Hadoop configuration @return a new instance of the requested {@link Expression} class
2158 Get an instance of the requested command @param cmdName name of the command to lookup @param conf the hadoop configuration @return the {@link Command} or null if the command is unknown
2159 Construct a new {@link WritableComparable} instance. @return WritableComparable.
2160 Create a new instance of a class with a defined factory. @param c input c. @param conf input configuration. @return a new instance of a class with a defined factory.
2161 Get the socket factory corresponding to the given proxy URI. If the given proxy URI corresponds to an absence of configuration parameter, returns null. If the URI is malformed raises an exception. @param conf configuration. @param propValue the property which is the class name of the SocketFactory to instantiate; assumed non null and non empty. @return a socket factory as defined in the property value.
2162 Get the token identifier object, or null if it could not be constructed (because the class could not be loaded, for example). @return the token identifier, or null if there was no class found for it @throws IOException failure to unmarshall the data @throws RuntimeException if the token class could not be instantiated.
2163 Returns a {@link DiskValidator} instance corresponding to the passed clazz. @param clazz a class extends {@link DiskValidator} @return disk validator.
2164 Constructor. <p> Builds an empty Dynamic Bloom filter. @param vectorSize The number of bits in the vector. @param nbHash The number of hash function to consider. @param hashType type of the hashing function (see {@link org.apache.hadoop.util.hash.Hash}). @param nr The threshold for the maximum number of keys to record in a dynamic Bloom filter row.
2165 Adds a new row to <i>this</i> dynamic Bloom filter.
2166 Constructor @param vectorSize The vector size of <i>this</i> filter. @param nbHash The number of hash function to consider. @param hashType type of the hashing function (see {@link org.apache.hadoop.util.hash.Hash}).
2167 Loads the resource at a given index into the properties. @param props the object containing the loaded properties. @param startIdx the index where the new resource has been added. @param fullReload flag whether we do complete reload of the conf instead of just loading the new resource.
2168 Any service instance can drop out of the election by calling quitElection. <br> This will lose any leader status, if held, and stop monitoring of the lock node. <br> If the instance wants to participate in election again, then it needs to call joinElection(). <br> This allows service instances to take themselves out of rotation for known impending unavailable states (e.g. long GC pause or software upgrade). @param needFence true if the underlying daemon may need to be fenced if a failover occurs due to dropping out of the election.
2169 Read fully a list of file ranges asynchronously from this file. The default iterates through the ranges to read each synchronously, but the intent is that FSDataInputStream subclasses can make more efficient readers. As a result of the call, each range will have FileRange.setData(CompletableFuture) called with a future that when complete will have a ByteBuffer with the data from the file's range. <p> The position returned by getPos() after readVectored() is undefined. </p> <p> If a file is changed while the readVectored() operation is in progress, the output is undefined. Some ranges may have old data, some may have new and some may have both. </p> <p> While a readVectored() operation is in progress, normal read api calls may block. </p> @param ranges the byte ranges to read @param allocate the function to allocate ByteBuffer @throws IOException any IOE. @throws IllegalArgumentException if the any of ranges are invalid, or they overlap.
2170 Constructor with host, name, offset and length. @param names names array. @param hosts host array. @param offset offset. @param length length.
2171 Constructor. @param key Statistic key. @param success Are these success or failure statistics. @param count Count of operation invocations. @param max Max duration; -1 if unknown. @param min Min duration; -1 if unknown. @param mean Mean duration -may be null. (will be cloned)
2172 Aggregate the current statistics with the source reference passed in. The operation is synchronized. @param source source; may be null @return true if a merge took place.
2173 Construct, taking a snapshot of the source statistics data if the source is non-null. If the source is null, the empty maps are created @param source statistics source. Nullable.
2174 Apply an operation to all values of a RemoteIterator. If the iterator is an IOStatisticsSource returning a non-null set of statistics, <i>and</i> this classes log is set to DEBUG, then the statistics of the operation are evaluated and logged at debug. <p> The number of entries processed is returned, as it is useful to know this, especially during tests or when reporting values to users. </p> This does not close the iterator afterwards. @param source iterator source @param consumer consumer of the values. @return the number of elements processed @param <T> type of source @throws IOException if the source RemoteIterator or the consumer raise one.
2175 Write a {@link Writable}, {@link String}, primitive type, or an array of the preceding. @param out DataOutput. @param instance instance. @param conf Configuration. @param declaredClass declaredClass. @throws IOException raised on errors performing I/O.
2176 Requests optional prefetching of the given block. The block is prefetched only if we can acquire a free buffer. @throws IllegalArgumentException if blockNumber is negative.
2177 Acquires a {@code ByteBuffer}; blocking if necessary until one becomes available. @param blockNumber the id of the block to acquire. @return the acquired block's {@code BufferData}.
2178 This is the last chance to modify an argument before going into the (possibly) recursive {@link #processPaths(PathData, PathData...)} {@literal ->} {@link #processPath(PathData)} loop. Ex. ls and du use this to expand out directories. @param item a {@link PathData} representing a path which exists @throws IOException if anything goes wrong...
2179 Iterates over the given expanded paths and invokes {@link #processPath(PathData)} on each element. If "recursive" is true, will do a post-visit DFS on directories. @param parent if called via a recurse, will be the parent dir, else null @param itemsIterator a iterator of {@link PathData} objects to process @throws IOException if anything goes wrong...
2180 Attempt to partially resolve group names. @param userName the user's name @param errMessage error message from the shell command @param groupNames the incomplete list of group names @return a set of resolved group names @throws PartialGroupNameException if the resolution fails or times out
2181 Static method to execute a shell command. Covers most of the simple cases without requiring the user to implement the <code>Shell</code> interface. @param cmd shell command to execute. @return the output of the executed command. @throws IOException raised on errors performing I/O.
2182 Static method to execute a shell command. Covers most of the simple cases without requiring the user to implement the <code>Shell</code> interface. @param env the map of environment key=value @param cmd shell command to execute. @return the output of the executed command. @throws IOException on any problem.
2183 Copy all of the credentials from one credential object into another. Existing secrets and tokens are overwritten. @param other the credentials to copy
2184 Copy all of the credentials from one credential object into another. Existing secrets and tokens are not overwritten. @param other the credentials to copy
2185 Given a renewer, add delegation tokens for issuer and it's child issuers to the <code>Credentials</code> object if it is not already present. <p> Note: This method is not intended to be overridden. Issuers should implement getCanonicalService and getDelegationToken to ensure consistent token acquisition behavior. @param renewer the user allowed to renew the delegation tokens @param credentials cache in which to add new delegation tokens @return list of new delegation tokens @throws IOException thrown if IOException if an IO error occurs.
2186 Add a token to this UGI @param token Token to be added @return true on successful add of new token
2187 Set the working directory to the given directory.
2188 Sets the {@link Path}'s last modified time and last access time to the given valid times. @param mtime the modification time to set (only if no less than zero). @param atime the access time to set (only if no less than zero). @throws IOException if setting the times fails.
2189 Convert a path to a File. @param path the path. @return file.
2190 Make the path Absolute and get the path-part of a pathname. Checks that URI matches this file system and that the path-part is a valid name. @param p path @return path-part of the Path p
2191 Returns a qualified path object for the {@link FileSystem}'s working directory. @param fs the target FileSystem @return a qualified path object for the FileSystem's working directory @deprecated use {@link #makeQualified(URI, Path)}
2192 Make the path fully qualified if it is isn't. A Fully-qualified path has scheme and authority specified and an absolute path. Use the default file system and working dir in this FileContext to qualify. @param path the path. @return qualified path
2193 Make the path fully qualified to this file system @param path the path. @return the qualified path
2194 List the statuses of the files/directories in the given path if the path is a directory. @param f is the path @return an array that contains statuses of the files/directories in the given path @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2195 Delete a file. @param f the path to delete. @param recursive if path is a directory and set to true, the directory is deleted else throws an exception. In case of a file the recursive can be set to either true or false. @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>f</code> is invalid @return if delete success true, not false.
2196 Opens an FSDataInputStream at the indicated Path using default buffersize. @param f the file name to open @throws AccessControlException If access is denied @throws FileNotFoundException If file <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server @return input stream.
2197 Opens an FSDataInputStream at the indicated Path. @param f the file name to open @param bufferSize the size of the buffer to be used. @throws AccessControlException If access is denied @throws FileNotFoundException If file <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server @return output stream.
2198 Truncate the file in the indicated path to the indicated size. <ul> <li>Fails if path is a directory. <li>Fails if path does not exist. <li>Fails if path is not closed. <li>Fails if new size is greater than current size. </ul> @param f The path to the file to be truncated @param newLength The size the file is to be truncated to @return <code>true</code> if the file has been truncated to the desired <code>newLength</code> and is immediately available to be reused for write operations such as <code>append</code>, or <code>false</code> if a background process of adjusting the length of the last block has been started, and clients should wait for it to complete before proceeding with further file updates. @throws AccessControlException If access is denied @throws FileNotFoundException If file <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2199 Set replication for an existing file. @param f file name @param replication new replication @return true if successful @throws AccessControlException If access is denied @throws FileNotFoundException If file <code>f</code> does not exist @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2200 Set permission of a path. @param f the path. @param permission - the new absolute permission (umask is not applied) @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2201 Set owner of a path (i.e. a file or a directory). The parameters username and groupname cannot both be null. @param f The path @param username If it is null, the original username remains unchanged. @param groupname If it is null, the original groupname remains unchanged. @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws HadoopIllegalArgumentException If <code>username</code> or <code>groupname</code> is invalid.
2202 Set access time of a file. @param f The path @param mtime Set the modification time of this file. The number of milliseconds since epoch (Jan 1, 1970). A value of -1 means that this call should not set modification time. @param atime Set the access time of this file. The number of milliseconds since Jan 1, 1970. A value of -1 means that this call should not set access time. @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2203 Get the checksum of a file. @param f file path @return The file checksum. The default return value is null, which indicates that no checksum algorithm is implemented in the corresponding FileSystem. @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2204 Return a file status object that represents the path. @param f The path we want information from @return a FileStatus object @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2205 Checks if the user can access a path. The mode specifies which access checks to perform. If the requested permissions are granted, then the method returns normally. If access is denied, then the method throws an {@link AccessControlException}. <p> The default implementation of this method calls {@link #getFileStatus(Path)} and checks the returned permissions against the requested permissions. Note that the getFileStatus call will be subject to authorization checks. Typically, this requires search (execute) permissions on each directory in the path's prefix, but this is implementation-defined. Any file system that provides a richer authorization model (such as ACLs) may override the default implementation so that it checks against that model instead. <p> In general, applications should avoid using this method, due to the risk of time-of-check/time-of-use race conditions. The permissions on a file may change immediately after the access call returns. Most applications should prefer running specific file system actions as the desired user represented by a {@link UserGroupInformation}. @param path Path to check @param mode type of access to check @throws AccessControlException if access is denied @throws FileNotFoundException if the path does not exist @throws UnsupportedFileSystemException if file system for <code>path</code> is not supported @throws IOException see specific implementation Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2206 Return a file status object that represents the path. If the path refers to a symlink then the FileStatus of the symlink is returned. The behavior is equivalent to #getFileStatus() if the underlying file system does not support symbolic links. @param f The path we want information from. @return A FileStatus object @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred
2207 Returns the target of the given symbolic link as it was specified when the link was created. Links in the path leading up to the final path component are resolved transparently. @param f the path to return the target of @return The un-interpreted target of the symbolic link. @throws AccessControlException If access is denied @throws FileNotFoundException If path <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If the given path does not refer to a symlink or an I/O error occurred
2208 Return blockLocation of the given file for the given offset and len. For a nonexistent file or regions, null will be returned. This call is most helpful with DFS, where it returns hostnames of machines that contain the given file. In HDFS, if file is three-replicated, the returned array contains elements like: <pre> BlockLocation(offset: 0, length: BLOCK_SIZE, hosts: {"host1:9866", "host2:9866, host3:9866"}) BlockLocation(offset: BLOCK_SIZE, length: BLOCK_SIZE, hosts: {"host2:9866", "host3:9866, host4:9866"}) </pre> And if a file is erasure-coded, the returned BlockLocation are logical block groups. Suppose we have a RS_3_2 coded file (3 data units and 2 parity units). 1. If the file size is less than one stripe size, say 2 * CELL_SIZE, then there will be one BlockLocation returned, with 0 offset, actual file size and 4 hosts (2 data blocks and 2 parity blocks) hosting the actual blocks. 3. If the file size is less than one group size but greater than one stripe size, then there will be one BlockLocation returned, with 0 offset, actual file size with 5 hosts (3 data blocks and 2 parity blocks) hosting the actual blocks. 4. If the file size is greater than one group size, 3 * BLOCK_SIZE + 123 for example, then the result will be like: <pre> BlockLocation(offset: 0, length: 3 * BLOCK_SIZE, hosts: {"host1:9866", "host2:9866","host3:9866","host4:9866","host5:9866"}) BlockLocation(offset: 3 * BLOCK_SIZE, length: 123, hosts: {"host1:9866", "host4:9866", "host5:9866"}) </pre> @param f - get blocklocations of this file @param start position (byte offset) @param len (in bytes) @return block locations for given file at specified offset of len @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>f</code> is invalid
2209 Returns a status object describing the use and capacity of the file system denoted by the Parh argument p. If the file system has multiple partitions, the use and capacity of the partition pointed to by the specified path is reflected. @param f Path for which status should be obtained. null means the root partition of the default file system. @return a FsStatus object @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2210 Creates a symbolic link to an existing file. An exception is thrown if the symlink exits, the user does not have permission to create symlink, or the underlying file system does not support symlinks. Symlink permissions are ignored, access to a symlink is determined by the permissions of the symlink target. Symlinks in paths leading up to the final path component are resolved transparently. If the final path component refers to a symlink some functions operate on the symlink itself, these are: - delete(f) and deleteOnExit(f) - Deletes the symlink. - rename(src, dst) - If src refers to a symlink, the symlink is renamed. If dst refers to a symlink, the symlink is over-written. - getLinkTarget(f) - Returns the target of the symlink. - getFileLinkStatus(f) - Returns a FileStatus object describing the symlink. Some functions, create() and mkdir(), expect the final path component does not exist. If they are given a path that refers to a symlink that does exist they behave as if the path referred to an existing file or directory. All other functions fully resolve, ie follow, the symlink. These are: open, setReplication, setOwner, setTimes, setWorkingDirectory, setPermission, getFileChecksum, setVerifyChecksum, getFileBlockLocations, getFsStatus, getFileStatus, exists, and listStatus. Symlink targets are stored as given to createSymlink, assuming the underlying file system is capable of storing a fully qualified URI. Dangling symlinks are permitted. FileContext supports four types of symlink targets, and resolves them as follows <pre> Given a path referring to a symlink of form: {@literal <---}X{@literal --->} fs://host/A/B/link {@literal <-----}Y{@literal ----->} In this path X is the scheme and authority that identify the file system, and Y is the path leading up to the final path component "link". If Y is a symlink itself then let Y' be the target of Y and X' be the scheme and authority of Y'. Symlink targets may: 1. Fully qualified URIs fs://hostX/A/B/file Resolved according to the target file system. 2. Partially qualified URIs (eg scheme but no host) fs:///A/B/file Resolved according to the target file system. Eg resolving a symlink to hdfs:///A results in an exception because HDFS URIs must be fully qualified, while a symlink to file:///A will not since Hadoop's local file systems require partially qualified URIs. 3. Relative paths path Resolves to [Y'][path]. Eg if Y resolves to hdfs://host/A and path is "../B/file" then [Y'][path] is hdfs://host/B/file 4. Absolute paths path Resolves to [X'][path]. Eg if Y resolves hdfs://host/A/B and path is "/file" then [X][path] is hdfs://host/file </pre> @param target the target of the symbolic link @param link the path to be created that points to target @param createParent if true then missing parent dirs are created if false then parent must exist @throws AccessControlException If access is denied @throws FileAlreadyExistsException If file <code>link</code> already exists @throws FileNotFoundException If <code>target</code> does not exist @throws ParentNotDirectoryException If parent of <code>link</code> is not a directory. @throws UnsupportedFileSystemException If file system for <code>target</code> or <code>link</code> is not supported @throws IOException If an I/O error occurred
2211 List the statuses of the files/directories in the given path if the path is a directory. @param f is the path @return an iterator that traverses statuses of the files/directories in the given path @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2212 List CorruptFile Blocks. @param path the path. @return an iterator over the corrupt files under the given path (may contain duplicates if a file has more than one corrupt block) @throws IOException If an I/O error occurred.
2213 List the statuses of the files/directories in the given path if the path is a directory. Return the file's status and block locations If the path is a file. If a returned status is a file, it contains the file's block locations. @param f is the path @return an iterator that traverses statuses of the files/directories in the given path If any IO exception (for example the input directory gets deleted while listing is being executed), next() or hasNext() of the returned iterator may throw a RuntimeException with the io exception as the cause. @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2214 Returns the list of AbstractFileSystems accessed in the path. The list may contain more than one AbstractFileSystems objects in case of symlinks. @param f Path which needs to be resolved @return List of AbstractFileSystems accessed in the path @throws IOException If an I/O error occurred.
2215 Modifies ACL entries of files and directories. This method can add new ACL entries or modify the permissions on existing ACL entries. All existing ACL entries that are not specified in this call are retained without changes. (Modifications are merged into the current ACL.) @param path Path to modify @param aclSpec List{@literal <}AclEntry{@literal >} describing modifications @throws IOException if an ACL could not be modified
2216 Removes ACL entries from files and directories. Other ACL entries are retained. @param path Path to modify @param aclSpec List{@literal <}AclEntry{@literal >} describing entries to remove @throws IOException if an ACL could not be modified
2217 Removes all default ACL entries from files and directories. @param path Path to modify @throws IOException if an ACL could not be modified
2218 Removes all but the base ACL entries of files and directories. The entries for user, group, and others are retained for compatibility with permission bits. @param path Path to modify @throws IOException if an ACL could not be removed
2219 Fully replaces ACL of files and directories, discarding all existing entries. @param path Path to modify @param aclSpec List{@literal <}AclEntry{@literal >} describing modifications, must include entries for user, group, and others for compatibility with permission bits. @throws IOException if an ACL could not be modified
2220 Gets the ACLs of files and directories. @param path Path to get @return RemoteIterator{@literal <}AclStatus{@literal >} which returns each AclStatus @throws IOException if an ACL could not be read
2221 Set an xattr of a file or directory. The name must be prefixed with the namespace followed by ".". For example, "user.attr". <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to modify @param name xattr name. @param value xattr value. @param flag xattr set flag @throws IOException If an I/O error occurred.
2222 Get an xattr for a file or directory. The name must be prefixed with the namespace followed by ".". For example, "user.attr". <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to get extended attribute @param name xattr name. @return byte[] xattr value. @throws IOException If an I/O error occurred.
2223 Get all of the xattrs for a file or directory. Only those xattrs for which the logged-in user has permissions to view are returned. <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to get extended attributes @return Map{@literal <}String, byte[]{@literal >} describing the XAttrs of the file or directory @throws IOException If an I/O error occurred.
2224 Get all of the xattrs for a file or directory. Only those xattrs for which the logged-in user has permissions to view are returned. <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to get extended attributes @param names XAttr names. @return Map{@literal <}String, byte[]{@literal >} describing the XAttrs of the file or directory @throws IOException If an I/O error occurred.
2225 Remove an xattr of a file or directory. The name must be prefixed with the namespace followed by ".". For example, "user.attr". <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to remove extended attribute @param name xattr name @throws IOException If an I/O error occurred.
2226 Get all of the xattr names for a file or directory. Only those xattr names which the logged-in user has permissions to view are returned. <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to get extended attributes @return List{@literal <}String{@literal >} of the XAttr names of the file or directory @throws IOException If an I/O error occurred.
2227 Create a snapshot. @param path The directory where snapshots will be taken. @param snapshotName The name of the snapshot @return the snapshot path. @throws IOException If an I/O error occurred <p>Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2228 Rename a snapshot. @param path The directory path where the snapshot was taken @param snapshotOldName Old name of the snapshot @param snapshotNewName New name of the snapshot @throws IOException If an I/O error occurred <p>Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2229 Delete a snapshot of a directory. @param path The directory that the to-be-deleted snapshot belongs to @param snapshotName The name of the snapshot @throws IOException If an I/O error occurred <p>Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2230 Set the source path to satisfy storage policy. @param path The source path referring to either a directory or a file. @throws IOException If an I/O error occurred.
2231 Set the storage policy for a given file or directory. @param path file or directory path. @param policyName the name of the target storage policy. The list of supported Storage policies can be retrieved via {@link #getAllStoragePolicies}. @throws IOException If an I/O error occurred.
2232 Unset the storage policy set for a given file or directory. @param src file or directory path. @throws IOException If an I/O error occurred.
2233 Query the effective storage policy ID for the given file or directory. @param path file or directory path. @return storage policy for give file. @throws IOException If an I/O error occurred.
2234 Return the path capabilities of the bonded {@code AbstractFileSystem}. @param path path to query the capability of. @param capability string to query the stream support for. @return true iff the capability is supported under that FS. @throws IOException path resolution or other IO failure @throws IllegalArgumentException invalid arguments
2235 Return a set of server default configuration values based on path. @param path path to fetch server defaults @return server default configuration values for path @throws IOException an I/O error occurred
2236 Create a multipart uploader. @param basePath file path under which all files are uploaded @return a MultipartUploaderBuilder object to build the uploader @throws IOException if some early checks cause IO failures. @throws UnsupportedOperationException if support is checked early.
2237 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2238 Updates the paths's file status @return the updated FileStatus @throws IOException if anything goes wrong...
2239 Return the total size of all files in the filesystem.
2240 Get resolved path from regex mount points. E.g. link: ^/user/(?<username>\\w+) => s3://$user.apache.com/_${user} srcPath: is /user/hadoop/dir1 resolveLastComponent: true then return value is s3://hadoop.apache.com/_hadoop @param srcPath - the src path to resolve @param resolveLastComponent - whether resolve the path after last `/` @return mapped path of the mount point.
2241 We search through all the configured dirs for the file's existence and return true when we find one
2242 Deletes the named map file. @param fs input fs. @param name input name. @throws IOException raised on errors performing I/O.
2243 Use the given time to determine the current directory. The current directory will be based on the {@link #rollIntervalMinutes}. @param now the current time @return the current directory
2244 Open the specified File for write access, ensuring that it does not exist. @param f the file that we want to create @param permissions we want to have on the file (if security is enabled) @throws AlreadyExistsException if the file already exists @throws IOException if any other error occurred @return createForWrite FileOutputStream.
2245 Check the source and target paths to ensure that they are either both in /.reserved/raw or neither in /.reserved/raw. If neither src nor target are in /.reserved/raw, then return false, indicating not to preserve raw.* xattrs. If both src/target are in /.reserved/raw, then return true, indicating raw.* xattrs should be preserved. If only one of src/target is in /.reserved/raw then throw an exception. @param src The source path to check. This should be a fully-qualified path, not relative. @param target The target path to check. This should be a fully-qualified path, not relative. @return true if raw.* xattrs should be preserved. @throws PathOperationException is only one of src/target are in /.reserved/raw.
2246 Returns the parent of a path or null if at root. Better alternative is {@link #getOptionalParentPath()} to handle nullable value for root path. @return the parent of a path or null if at root
2247 Returns the parent of a path as {@link Optional} or {@link Optional#empty()} i.e an empty Optional if at root. @return Parent of path wrappen in {@link Optional}. {@link Optional#empty()} i.e an empty Optional if at root.
2248 Returns a RemoteIterator for PathData objects of the items contained in the given directory. @return remote iterator of PathData objects for its children @throws IOException if anything else goes wrong...
2249 Construct from a {@link FileContext}. @param fc FileContext @param p path. @throws IOException failure
2250 Set the verify checksum flag for the file system denoted by the path. This is only applicable if the corresponding FileSystem supports checksum. By default doesn't do anything. @param verifyChecksum verify check sum. @param f set the verifyChecksum for the Filesystem containing this path @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2251 Read instance encoded as protobuf from stream. @param in Input stream @see PBHelper#convert(FileStatus) @deprecated Use the {@link PBHelper} and protobuf serialization directly.
2252 Constructor. @param length a file's length @param isdir if the path is a directory @param block_replication the file's replication factor @param blocksize a file's block size @param modification_time a file's modification time @param access_time a file's access time @param permission a file's permission @param owner a file's owner @param group a file's group @param symlink symlink if the path is a symbolic link @param path the path's qualified name @param hasAcl entity has associated ACLs @param isEncrypted entity is encrypted @param isErasureCoded entity is erasure coded @param locations a file's block locations
2253 Append a key/value pair to the map. The key must be greater or equal to the previous key added to the map. @param key key. @param val value. @throws IOException raised on errors performing I/O.
2254 Relay to {@link #stop()} @throws IOException raised on errors performing I/O.
2255 Write one byte
2256 Write a portion of an array, flushing to the underlying stream at most once if necessary.
2257 Validate outputs decoded from inputs, by decoding an input back from those outputs and comparing it with the original one. @param inputs input buffers used for decoding @param erasedIndexes indexes of erased units used for decoding @param outputs decoded output buffers @throws IOException raised on errors performing I/O.
2258 Close the current data block if necessary. @param bForceFinish Force the closure regardless of the block size. @throws IOException
2259 Convenience method for reading a token from a DataInputStream. @param in DataInputStream. @throws IOException raised on errors performing I/O.
2260 Obtain a list of tokens that will be considered for cleanup, based on the last time the token was updated in SQL. This list may include tokens that are not expired and should not be deleted (e.g. if the token was last renewed using a higher renewal interval). The number of results is limited to reduce performance impact. Some level of contention is expected when multiple routers run cleanup simultaneously. @return Map of tokens that have not been updated in SQL after the token renewal period.
2261 Fills up the passed rawValue with the value corresponding to the key read earlier. @param rawValue input ValueBytes rawValue. @return the length of the value @throws IOException raised on errors performing I/O.
2262 Write contents of this instance as CredentialsProto message to DataOutput. @param out @throws IOException
2263 Create a {@code TokenProto} instance from a hadoop token. This builds and caches the fields (identifier, password, kind, service) but not renewer or any payload. @param tok token @return a marshallable protobuf class.
2264 Get an entry to access the key and value. @return The Entry object to access the key and value. @throws IOException raised on errors performing I/O.
2265 Internal API. Comparing the key at cursor to user-specified key. @param other user-specified key. @return negative if key at cursor is smaller than user key; 0 if equal; and positive if key at cursor greater than user key. @throws IOException
2266 Copy the key and value in one shot into BytesWritables. This is equivalent to getKey(key); getValue(value); @param key BytesWritable to hold key. @param value BytesWritable to hold value @throws IOException raised on errors performing I/O.
2267 Advance cursor by n positions within the block. @param n Number of key-value pairs to skip in block. @throws IOException
2268 Requests a delegation token using the configured <code>Authenticator</code> for authentication. @param url the URL to get the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token being used for the user where the Delegation token will be stored. @param renewer the renewer user. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred. @return abstract delegation token identifier.
2269 Renews a delegation token from the server end-point using the configured <code>Authenticator</code> for authentication. @param url the URL to renew the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to renew. @param dToken abstract delegation token identifier. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred. @return delegation token long value.
2270 Cancels a delegation token from the server end-point. It does not require being authenticated by the configured <code>Authenticator</code>. @param url the URL to cancel the delegation token from. Only HTTP/S URLs are supported. @param token the authentication token with the Delegation Token to cancel. @param dToken abstract delegation token identifier. @throws IOException if an IO error occurred.
2271 Same as <code>getInputStream(socket, socket.getSoTimeout()).</code> @param socket socket. @throws IOException raised on errors performing I/O. @return SocketInputWrapper for reading from the socket. @see #getInputStream(Socket, long)
2272 Same as getOutputStream(socket, 0). Timeout of zero implies write will wait until data is available.<br><br> From documentation for {@link #getOutputStream(Socket, long)} : <br> Returns OutputStream for the socket. If the socket has an associated SocketChannel then it returns a {@link SocketOutputStream} with the given timeout. If the socket does not have a channel, {@link Socket#getOutputStream()} is returned. In the later case, the timeout argument is ignored and the write will wait until data is available.<br><br> Any socket created using socket factories returned by {@link NetUtils}, must use this interface instead of {@link Socket#getOutputStream()}. @see #getOutputStream(Socket, long) @param socket socket. @return OutputStream for writing to the socket. @throws IOException raised on errors performing I/O.
2273 This is a drop-in replacement for {@link Socket#connect(SocketAddress, int)}. In the case of normal sockets that don't have associated channels, this just invokes <code>socket.connect(endpoint, timeout)</code>. If <code>socket.getChannel()</code> returns a non-null channel, connect is implemented using Hadoop's selectors. This is done mainly to avoid Sun's connect implementation from creating thread-local selectors, since Hadoop does not have control on when these are closed and could end up taking all the available file descriptors. @see java.net.Socket#connect(java.net.SocketAddress, int) @param socket socket. @param address the remote address @param timeout timeout in milliseconds @throws IOException raised on errors performing I/O.
2274 Sample all the sources for a snapshot of metrics/tags @return the metrics buffer containing the snapshot
2275 Register the MBean using our standard MBeanName format "hadoop:service={@literal <serviceName>,name=<nameName>}" Where the {@literal <serviceName> and <nameName>} are the supplied parameters. @param serviceName serviceName. @param nameName nameName. @param theMbean - the MBean to register @return the named used to register the MBean
2276 Get a metric by given directory name. @param dirName directory name @return the metric
2277 Initialize the metrics for JMX with priority levels. @param numLevels input numLevels.
2278 Collects states maintained in {@link ThreadLocal}, if any.
2279 Create a mutable rate metric @param name of the metric @return a new mutable metric object
2280 Create a mutable rate metric @param name of the metric @param description of the metric @return a new mutable rate metric object
2281 Dump a keytab: list all principals. @param keytabFile the keytab file @throws IOException IO problems
2282 Validate any JAAS entry referenced in the {@link #SUN_SECURITY_JAAS_FILE} property. @param jaasRequired is JAAS required
2283 Return the real owner for a token. If this is a token from a proxy user, the real/effective user will be returned. @param id @return real owner
2284 Utility function to ensure that the configured base znode exists. This recursively creates the znode as well as all of its parents. @throws IOException raised on errors performing I/O. @throws InterruptedException interrupted exception. @throws KeeperException other zookeeper operation errors.
2285 get data set by the active leader @return data set by the active instance @throws ActiveNotFoundException when there is no active leader @throws KeeperException other zookeeper operation errors @throws InterruptedException interrupted exception. @throws IOException when ZooKeeper connection could not be established
2286 Re-login a user from keytab if TGT is expired or is close to expiry. @throws IOException raised on errors performing I/O. @throws KerberosAuthException if it's a kerberos login exception.
2287 Re-Login a user in from a keytab file. Loads a user identity from a keytab file and logs them in. They become the currently logged-in user. This method assumes that {@link #loginUserFromKeytab(String, String)} had happened already. The Subject field of this UserGroupInformation object is updated to have the new credentials. @throws IOException raised on errors performing I/O. @throws KerberosAuthException on a failure
2288 Returns an InetSocketAddress that a client can use to connect to the given listening address. @param addr of a listener @return socket address that a client can use to connect to the server.
2289 Update the server address if the address corresponding to the host name has changed. @return true if an addr change was detected. @throws IOException when the hostname cannot be resolved.
2290 Resolve the uri's hostname and add the default port if not in the uri @param uri to resolve @param defaultPort if none is given @return URI
2291 Make a call, passing <code>rpcRequest</code>, to the IPC server defined by <code>remoteId</code>, returning the rpc response. @param rpcKind @param rpcRequest - contains serialized method and method parameters @param remoteId - the target rpc server @param serviceClass - service class for RPC @param fallbackToSimpleAuth - set to true or false during this method to indicate if a secure client falls back to simple auth @param alignmentContext - state alignment context @return the rpc response Throws exceptions if there are network problems or if the remote code threw an exception.
2292 This method handles the following conditions: <ul> <li>If retry is not to be processed, return null</li> <li>If there is no cache entry, add a new entry {@code newEntry} and return it.</li> <li>If there is an existing entry, wait for its completion. If the completion state is {@link CacheEntry#FAILED}, the expectation is that the thread that waited for completion, retries the request. the {@link CacheEntry} state is set to {@link CacheEntry#INPROGRESS} again. <li>If the completion state is {@link CacheEntry#SUCCESS}, the entry is returned so that the thread that waits for it can can return previous response.</li> <ul> @return {@link CacheEntry}.
2293 Add a new cache entry into the retry cache. The cache entry consists of clientId and callId extracted from editlog. @param clientId input clientId. @param callId input callId.
2294 Return the string representation of the object in the output format. if qOption is false, output directory count, file count, and content size; if qOption is true, output quota and remaining quota as well. @param qOption a flag indicating if quota needs to be printed or not @return the string representation of the object
2295 Get an instance of the requested expression @param expressionName name of the command to lookup @param conf the Hadoop configuration @return the {@link Expression} or null if the expression is unknown
2296 Creates an instance of the requested {@link Expression} class. @param expressionClassname name of the {@link Expression} class to be instantiated @param conf the Hadoop configuration @return a new instance of the requested {@link Expression} class
2297 Build the description used by the help command.
2298 Gets an instance of an expression from the factory.
2299 Returns an instance of the class implementing the given command. The class must have been registered via {@link #addClass(Class, String...)} @param cmd name of the command @return instance of the requested command
2300 Read a {@link Writable}, {@link String}, primitive type, or an array of the preceding. @param in DataInput. @param objectWritable objectWritable. @param conf configuration. @return Object. @throws IOException raised on errors performing I/O.
2301 Create a new instance of a class with a defined factory. @param c input c. @return a new instance of a class with a defined factory.
2302 Decode the token identifier. The subclass can customize the way to decode the token identifier. @param token the token where to extract the identifier @return the delegation token identifier @throws IOException raised on errors performing I/O.
2303 Print out a Credentials object. @param creds the Credentials object to be printed out. @param alias print only tokens matching alias (null matches all). @param out print to this stream. @throws IOException failure to unmarshall a token identifier.
2304 Returns {@link DiskValidator} instance corresponding to its name. The diskValidator parameter can be "basic" for {@link BasicDiskValidator} or "read-write" for {@link ReadWriteDiskValidator}. @param diskValidator canonical class name, for example, "basic" @throws DiskErrorException if the class cannot be located @return disk validator.
2305 Default Constructor.
2306 Return an array containing hostnames, offset and size of portions of the given file. For nonexistent file or regions, {@code null} is returned. <pre> if f == null : result = null elif f.getLen() {@literal <=} start: result = [] else result = [ locations(FS, b) for b in blocks(FS, p, s, s+l)] </pre> This call is most helpful with and distributed filesystem where the hostnames of machines that contain blocks of the given file can be determined. The default implementation returns an array containing one element: <pre> BlockLocation( { "localhost:9866" }, { "localhost" }, 0, file.getLen()) </pre> In HDFS, if file is three-replicated, the returned array contains elements like: <pre> BlockLocation(offset: 0, length: BLOCK_SIZE, hosts: {"host1:9866", "host2:9866, host3:9866"}) BlockLocation(offset: BLOCK_SIZE, length: BLOCK_SIZE, hosts: {"host2:9866", "host3:9866, host4:9866"}) </pre> And if a file is erasure-coded, the returned BlockLocation are logical block groups. Suppose we have a RS_3_2 coded file (3 data units and 2 parity units). 1. If the file size is less than one stripe size, say 2 * CELL_SIZE, then there will be one BlockLocation returned, with 0 offset, actual file size and 4 hosts (2 data blocks and 2 parity blocks) hosting the actual blocks. 3. If the file size is less than one group size but greater than one stripe size, then there will be one BlockLocation returned, with 0 offset, actual file size with 5 hosts (3 data blocks and 2 parity blocks) hosting the actual blocks. 4. If the file size is greater than one group size, 3 * BLOCK_SIZE + 123 for example, then the result will be like: <pre> BlockLocation(offset: 0, length: 3 * BLOCK_SIZE, hosts: {"host1:9866", "host2:9866","host3:9866","host4:9866","host5:9866"}) BlockLocation(offset: 3 * BLOCK_SIZE, length: 123, hosts: {"host1:9866", "host4:9866", "host5:9866"}) </pre> @param file FilesStatus to get data from @param start offset into the given file @param len length for which to get locations for @throws IOException IO failure @return block location array.
2307 Fetch the duration timing summary of success or failure operations from an IO Statistics source. If the duration key is unknown, the summary will be incomplete. @param source source of data @param key duration statistic key @param success fetch success statistics, or if false, failure stats. @return a summary of the statistics.
2308 Returns a snapshot of the current thread's IOStatistics. @return IOStatisticsSnapshot of the context.
2309 Take a snapshot of the current statistics state. <p> This is not an atomic option. <p> The instance can be serialized, and its {@code toString()} method lists all the values. @param statistics statistics @return a snapshot of the current values.
2310 Create a new {@link IOStatisticsSnapshot} instance. @param source optional source statistics @return an IOStatisticsSnapshot. @throws ClassCastException if the {@code source} is not null and not an IOStatistics instance
2311 Build a list from a RemoteIterator. @param source source iterator @param <T> type @return a list of the values. @throws IOException if the source RemoteIterator raises it.
2312 Processes a {@link PathData} item, calling {@link #processPathArgument(PathData)} or {@link #processNonexistentPath(PathData)} on each item. @param item {@link PathData} item to process @throws IOException if anything goes wrong...
2313 Get the current user's group list from Unix by running the command 'groups' NOTE. For non-existing user it will return EMPTY list. @param user get groups for this user @return the groups list that the <code>user</code> belongs to. The primary group is returned first. @throws IOException if encounter any error when running the command
2314 Build and execute the resolution command. The command is executed in the directory specified by the system property "user.dir" if set; otherwise the current working directory is used. @param args a list of arguments @param commandScriptName input commandScriptName. @return null if the number of arguments is out of range, or the output of the command.
2315 Returns the target of the given symlink. Returns the empty string if the given path does not refer to a symlink or there is an error accessing the symlink. @param f File representing the symbolic link. @return The target of the symbolic link, empty string on error or if not a symlink.
2316 Use the command chmod to set permission.
2317 Calls shell to get users for a netgroup by calling getent netgroup, this is a low level function that just returns string that @param netgroup get users for this netgroup @return string of users for a given netgroup in getent netgroups format @throws IOException raised on errors performing I/O.
2318 Create a copy of the given credentials. @param credentials to copy
2319 Add the given Credentials to this user. @param credentials of tokens and secrets
2320 Get the path to a local file @return File representing the local path @throws IllegalArgumentException if this.fs is not the LocalFileSystem
2321 Create the directory or check permissions if it already exists. The semantics of mkdirsWithExistsAndPermissionCheck method is different from the mkdirs method provided in the Sun's java.io.File class in the following way: While creating the non-existent parent directories, this method checks for the existence of those directories if the mkdir fails at any point (since that directory might have just been created by some other process). If both mkdir() and the exists() check fails for any seemingly non-existent directory, then we signal an error; Sun's mkdir would signal an error (return false) if a directory it is attempting to create already exists or the mkdir fails. @param localFS local filesystem @param dir directory to be created or checked @param expected expected permission @throws IOException
2322 Calls out to platform's native stat(1) implementation to get file metadata (permissions, user, group, atime, mtime, etc). This works around the lack of lstat(2) in Java 6. Currently, the {@link Stat} class used to do this only supports Linux and FreeBSD, so the old {@link #deprecatedGetFileLinkStatusInternal(Path)} implementation (deprecated) remains further OS support is added. @param f File to stat @param dereference whether to dereference symlinks @return FileStatus of f @throws IOException
2323 Return path of the enclosing root for a given path The enclosing root path is a common ancestor that should be used for temp and staging dirs as well as within encryption zones and other restricted directories. Call makeQualified on the param path to ensure its part of the correct filesystem @param path file path to find the enclosing root path for @return a path to the enclosing root @throws IOException early checks like failure to resolve path cause IO failures
2324 Delete all the paths that were marked as delete-on-exit.
2325 Does the file exist? Note: Avoid using this method if you already have FileStatus in hand. Instead reuse the FileStatus @param f the file or dir to be checked @throws AccessControlException If access is denied @throws IOException If an I/O error occurred @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server @return if f exists true, not false.
2326 Set the working directory for wd-relative names (such a "foo/bar"). Working directory feature is provided by simply prefixing relative names with the working dir. Note this is different from Unix where the wd is actually set to the inode. Hence setWorkingDir does not follow symlinks etc. This works better in a distributed environment that has multiple independent roots. {@link #getWorkingDirectory()} should return what setWorkingDir() set. @param newWDir new working directory @throws IOException <br> NewWdir can be one of: <ul> <li>relative path: "foo/bar";</li> <li>absolute without scheme: "/foo/bar"</li> <li>fully qualified with scheme: "xx://auth/foo/bar"</li> </ul> <br> Illegal WDs: <ul> <li>relative with scheme: "xx:foo/bar"</li> <li>non existent directory</li> </ul>
2327 Check if copying srcName to dst would overwrite an existing file or directory. @param srcName File or directory to be copied. @param dst Destination to copy srcName to. @param overwrite Whether it's ok to overwrite an existing file. @throws AccessControlException If access is denied. @throws IOException If dst is an existing directory, or dst is an existing file and the overwrite option is not passed.
2328 Return the {@link ContentSummary} of path f. @param f path @return the {@link ContentSummary} of path f. @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2329 Get delegation tokens for the file systems accessed for a given path. @param p Path for which delegations tokens are requested. @param renewer the account name that is allowed to renew the token. @return List of delegation tokens. @throws IOException If an I/O error occurred.
2330 Set an xattr of a file or directory. The name must be prefixed with the namespace followed by ".". For example, "user.attr". <p> Refer to the HDFS extended attributes user documentation for details. @param path Path to modify @param name xattr name. @param value xattr value. @throws IOException If an I/O error occurred.
2331 Create a snapshot with a default name. @param path The directory where snapshots will be taken. @return the snapshot path. @throws IOException If an I/O error occurred <p>Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2332 Construct from a {@link FileContext}. @param fc FileContext @param p path. @throws IOException failure
2333 Wait for all files in waitList to have length equal to newLength.
2334 Walk through all regex mount points to see whether the path match any regex expressions. E.g. link: ^/user/(?&lt;username&gt;\\w+) =&gt; s3://$user.apache.com/_${user} srcPath: is /user/hadoop/dir1 resolveLastComponent: true then return value is s3://hadoop.apache.com/_hadoop @param srcPath srcPath. @param resolveLastComponent resolveLastComponent. @return ResolveResult.
2335 We search through all the configured dirs for the file's existence and return true when we find. @param pathStr the requested file (this will be searched) @param conf the Configuration object @return true if files exist. false otherwise
2336 this method returns the path inside the har filesystem. this is relative path inside the har filesystem. @param path the fully qualified path in the har filesystem. @return relative path in the filesystem.
2337 Return the name of the checksum file associated with a file. @param file the file path. @return the checksum file associated with a file.
2338 Test if the parent directory exists @return boolean indicating parent exists @throws IOException upon unexpected error
2339 This version of the mkdirs method assumes that the permission is absolute. It has been added to support the FileContext that processes the permission with umask before calling this method. This a temporary method added to support the transition from FileSystem to FileContext for user applications. @param f the path. @param absolutePermission permission. @param createParent create parent. @throws IOException IO failure.
2340 Renames Path src to Path dst <ul> <li>Fails if src is a file and dst is a directory.</li> <li>Fails if src is a directory and dst is a file.</li> <li>Fails if the parent of dst does not exist or is a file.</li> </ul> <p> If OVERWRITE option is not passed as an argument, rename fails if the dst already exists. </p> <p> If OVERWRITE option is passed as an argument, rename overwrites the dst if it is a file or an empty directory. Rename fails if dst is a non-empty directory. </p> Note that atomicity of rename is dependent on the file system implementation. Please refer to the file system documentation for details. This default implementation is non atomic. <p> This method is deprecated since it is a temporary method added to support the transition from FileSystem to FileContext for user applications. </p> @param src path to be renamed @param dst new path after rename @param options rename options. @throws FileNotFoundException src path does not exist, or the parent path of dst does not exist. @throws FileAlreadyExistsException dest path exists and is a file @throws ParentNotDirectoryException if the parent path of dest is not a directory @throws IOException on failure
2341 Return the name of the checksum file associated with a file. @param file the file path. @return name of the checksum file associated with a file.
2342 Check if a given path is the base path or under the base path. @param p path to check. @param basePath base path. @return true if the given path is the base path or under the base path.
2343 Returns true if and only if this path represents the root of a file system. @return true if and only if this path represents the root of a file system
2344 Adds a suffix to the final name in the path. @param suffix the suffix to add @return a new path with the suffix added
2345 Return a fully-qualified version of the given symlink target if it has no scheme and authority. Partially and fully-qualified paths are returned unmodified. @param pathURI URI of the filesystem of pathWithLink @param pathWithLink Path that contains the symlink @param target The symlink's absolute target @return Fully qualified version of the target.
2346 The specification of this method matches that of {@link FileContext#rename(Path, Path, Options.Rename...)} except that Path f must be for this file system. @param src src. @param dst dst. @param overwrite overwrite flag. @throws AccessControlException access control exception. @throws FileAlreadyExistsException file already exists exception. @throws FileNotFoundException file not found exception. @throws ParentNotDirectoryException parent not directory exception. @throws UnresolvedLinkException unresolved link exception. @throws IOException raised on errors performing I/O.
2347 Constructor for file systems on which symbolic links are not supported @param length length. @param isdir isdir. @param block_replication block replication. @param blocksize block size. @param modification_time modification time. @param access_time access_time. @param permission permission. @param owner owner. @param group group. @param path the path.
2348 Copy constructor. @param other FileStatus to copy @throws IOException raised on errors performing I/O.
2349 Constructor @param stat a file status @param locations a file's block locations
2350 Constructor @param length a file's length @param isdir if the path is a directory @param block_replication the file's replication factor @param blocksize a file's block size @param modification_time a file's modification time @param access_time a file's access time @param permission a file's permission @param owner a file's owner @param group a file's group @param symlink symlink if the path is a symbolic link @param path the path's qualified name @param locations a file's block locations
2351 Append a value to the file. @param value value. @throws IOException raised on errors performing I/O.
2352 Writes <code>len</code> bytes from the specified byte array starting at offset <code>off</code> and generate a checksum for each data chunk. <p> This method stores bytes from the given array into this stream's buffer before it gets checksumed. The buffer gets checksumed and flushed to the underlying output stream when all data in a checksum chunk are in the buffer. If the buffer is empty and requested length is at least as large as the size of next checksum chunk size, this method will checksum and write the chunk directly to the underlying output stream. Thus it avoids unnecessary data copy. @param b the data. @param off the start offset in the data. @param len the number of bytes to write. @exception IOException if an I/O error occurs.
2353 Overriden to close the stream.
2354 Seek to the end of the scanner. The entry returned by the previous entry() call will be invalid. @throws IOException raised on errors performing I/O.
2355 Close the scanner. Release all resources. The behavior of using the scanner after calling close is not defined. The entry returned by the previous entry() call will be invalid.
2356 Convenience method for reading a token storage file and loading its Tokens. @param filename filename. @param conf configuration. @throws IOException raised on errors performing I/O. @return Token.
2357 Advance cursor in block until we find a key that is greater than or equal to the input key. @param key Key to compare. @param greater advance until we find a key greater than the input key. @return true if we find a equal key. @throws IOException
2358 Requests an immediate publish of all metrics from sources to sinks.
2359 Initialize the metrics for JMX with protocol methods @param protocol the protocol class
2360 Collects states maintained in {@link ThreadLocal}, if any.
2361 Add sample to a stat metric by name. @param name of the metric @param value of the snapshot to add
2362 Add token stats to the owner to token count mapping. @param id token id.
2363 Remove token stats to the owner to token count mapping. @param id
2364 @return an {@link HAServiceTarget} for the current active node in the cluster, or null if no node is active. @throws IOException if a ZK-related issue occurs @throws InterruptedException if thread is interrupted
2365 Create a new ActiveStandbyElector object <br> The elector is created by providing to it the Zookeeper configuration, the parent znode under which to create the znode and a reference to the callback interface. <br> The parent znode name must be the same for all service instances and different across services. <br> After the leader has been lost, a new leader will be elected after the session timeout expires. Hence, the app must set this parameter based on its needs for failure response time. The session timeout must be greater than the Zookeeper disconnect timeout and is recommended to be 3X that value to enable Zookeeper to retry transient disconnections. Setting a very short session timeout may result in frequent transitions between active and standby states during issues like network outages/GS pauses. @param zookeeperHostPorts ZooKeeper hostPort for all ZooKeeper servers @param zookeeperSessionTimeout ZooKeeper session timeout @param parentZnodeName znode under which to create the lock @param acl ZooKeeper ACL's @param authInfo a list of authentication credentials to add to the ZK connection @param app reference to callback interface object @param failFast whether need to add the retry when establishing ZK connection. @param maxRetryNum max Retry Num @param truststoreKeystore truststore keystore, that we will use for ZK if SSL/TLS is enabled @throws IOException raised on errors performing I/O. @throws HadoopIllegalArgumentException if valid data is not supplied. @throws KeeperException other zookeeper operation errors.
2366 Create an InetSocketAddress from the given target string and default port. If the string cannot be parsed correctly, the <code>configName</code> parameter is used as part of the exception message, allowing the user to better diagnose the misconfiguration. @param target a string of either "host" or "host:port" @param defaultPort the default port if <code>target</code> does not include a port number @param configName the name of the configuration from which <code>target</code> was loaded. This is used in the exception message in the case that parsing fails. @param useCacheIfPresent Whether use cache when create URI @return socket addr
2367 Returns InetSocketAddress that a client can use to connect to the server. Server.getListenerAddress() is not correct when the server binds to "0.0.0.0". This returns "hostname:port" of the server, or "127.0.0.1:port" when the getListenerAddress() returns "0.0.0.0:port". @param server server. @return socket address that a client can use to connect to the server.
2368 Make a call, passing <code>rpcRequest</code>, to the IPC server defined by <code>remoteId</code>, returning the rpc respond. @param rpcKind - input rpcKind. @param rpcRequest - contains serialized method and method parameters @param remoteId - the target rpc server @param fallbackToSimpleAuth - set to true or false during this method to indicate if a secure client falls back to simple auth @return the rpc response Throws exceptions if there are network problems or if the remote code threw an exception. @throws IOException raised on errors performing I/O.
2369 Static method that provides null check for retryCache. @param cache input Cache. @param clientId client id of this request @param callId client call id of this request @return CacheEntry.
2370 Static method that provides null check for retryCache. @param cache input cache. @param payload input payload. @param clientId client id of this request @param callId client call id of this request @return CacheEntryWithPayload.
2371 Gets a named expression from the factory.
2372 Get a comparator for a {@link WritableComparable} implementation. @param c class. @param conf configuration. @return WritableComparator.
2373 Construct for a {@link WritableComparable} implementation. @param keyClass WritableComparable Class.
2374 Create an allocator object. @param contextCfgItemName contextCfgItemName.
2375 Sets all deprecated properties that are not currently set but have a corresponding new property that is set. Useful for iterating the properties when all deprecated properties for currently set properties need to be present.
2376 A new configuration with the same settings cloned from another. @param other the configuration from which to clone settings.
2377 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param conf Configuration object from which to load properties
2378 Returns alternative names (non-deprecated keys or previously-set deprecated keys) for a given non-deprecated key. If the given key is deprecated, return null. @param name property name. @return alternative names.
2379 Gets information about why a property was set. Typically this is the path to the resource objects (file, URL, etc.) the property came from, but it can also indicate that it was set programmatically, or because of the command line. @param name - The property name to get the source of. @return null - If the property or its source wasn't found. Otherwise, returns a list of the sources of the resource. The older sources are the first ones in the list. So for example if a configuration is set from the command line, and then written out to a file that is read back in the first entry would indicate that it was set from the command line, while the second one would indicate the file that the new configuration was read in from.
2380 Return the number of keys in the configuration. @return number of keys in the configuration.
2381 Clears all keys from the configuration.
2382 Get an {@link Iterator} to go through the list of <code>String</code> key-value pairs in the configuration. @return an iterator over the entries.
2383 get keys matching the the regex. @param regex the regex to match against. @return {@literal Map<String,String>} with matching keys
2384 Vectored read. If the file has no checksums: delegate to the underlying stream. If the file is checksummed: calculate the checksum ranges as well as the data ranges, read both, and validate the checksums as well as returning the data. @param ranges the byte ranges to read @param allocate the function to allocate ByteBuffer @throws IOException
2385 Gets the block having the given {@code blockNumber}. @throws IllegalArgumentException if blockNumber is negative.
2386 Wait for all files in waitList to have replication number equal to rep.
2387 Return an array containing hostnames, offset and size of portions of the given file. For a nonexistent file or regions, {@code null} is returned. This call is most helpful with location-aware distributed filesystems, where it returns hostnames of machines that contain the given file. A FileSystem will normally return the equivalent result of passing the {@code FileStatus} of the path to {@link #getFileBlockLocations(FileStatus, long, long)} @param p path is used to identify an FS since an FS could have another FS that it could be delegating the call to @param start offset into the given file @param len length for which to get locations for @throws FileNotFoundException when the path does not exist @throws IOException IO failure @return block location array.
2388 Fetch the duration timing summary from an IOStatistics source. If the duration key is unknown, the summary will be incomplete. @param source source of data @param key duration statistic key @return a summary of the statistics.
2389 Create a new {@link IOStatisticsSnapshot} instance. @return an empty IOStatisticsSnapshot.
2390 Extract the IOStatistics from an object in a serializable form. @param source source object, may be null/not a statistics source/instance @return {@link IOStatisticsSnapshot} or null if the object is null/doesn't have statistics
2391 Build an array from a RemoteIterator. @param source source iterator @param a destination array; if too small a new array of the same type is created @param <T> type @return an array of the values. @throws IOException if the source RemoteIterator raises it.
2392 Renew a delegation token. @param token the token to renew @param renewer the full principal name of the user doing the renewal @return the new expiration time @throws InvalidToken if the token is invalid @throws AccessControlException if the user can't renew token
2393 Cancel a token by removing it from cache. @param token token. @param canceller canceller. @return Identifier of the canceled token @throws InvalidToken for invalid token @throws AccessControlException if the user isn't allowed to cancel
2394 Processes the command's list of expanded arguments. {@link #processArgument(PathData)} will be invoked with each item in the list. The loop catches IOExceptions, increments the error count, and displays the exception. @param args a list of {@link PathData} to process @throws IOException if anything goes wrong...
2395 Returns list of groups for a user @param userName get groups for this user @return list of groups for a given user
2396 Retrieves the number of links to the specified file. @param fileName file name. @throws IOException raised on errors performing I/O. @return link count.
2397 Create a soft link between a src and destination only on a local disk. HDFS does not support this. On Windows, when symlink creation fails due to security setting, we will log a warning. The return code in this case is 2. @param target the target for symlink @param linkname the symlink @return 0 on success @throws IOException raised on errors performing I/O.
2398 Change the permissions on a file / directory, recursively, if needed. @param filename name of the file whose permissions are to change @param perm permission string @param recursive true, if permissions should be changed recursively @return the exit code from the command. @throws IOException raised on errors performing I/O.
2399 Look for <code>setsid</code>. @return true if <code>setsid</code> was present
2400 Set the ownership on a file / directory. User name and group name cannot both be null. @param file the file to change @param username the new user owner name @param groupname the new group owner name @throws IOException raised on errors performing I/O.
2401 Gets users for a netgroup @param netgroup return users for this netgroup @return list of users for a given netgroup @throws IOException raised on errors performing I/O.
2402 Obtain the tokens in credentials form associated with this user. @return Credentials of tokens associated with this user
2403 Filter files/directories in the given path using the user-supplied path filter. @param f is the path name @param filter is the user-supplied path filter @return an array of FileStatus objects for the files under the given path after applying the filter @throws AccessControlException If access is denied @throws FileNotFoundException If <code>f</code> does not exist @throws UnsupportedFileSystemException If file system for <code>pathPattern</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2404 Filter files/directories in the given list of paths using user-supplied path filter. @param files is a list of paths @param filter is the filter @return a list of statuses for the files under the given paths after applying the filter @throws AccessControlException If access is denied @throws FileNotFoundException If a file in <code>files</code> does not exist @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2405 Resolve the pathname p relative to root InodeDir. @param p - input path @param resolveLastComponent resolveLastComponent. @return ResolveResult which allows further resolution of the remaining path @throws IOException raised on errors performing I/O.
2406 Set replication for an existing file. Implement the abstract <tt>setReplication</tt> of <tt>FileSystem</tt> @param src file name @param replication new replication @throws IOException if an I/O error occurs. @return true if successful; false if file does not exist or is a directory
2407 Implement the delete(Path, boolean) in checksum file system.
2408 Rename files/dirs
2409 Implement the delete(Path, boolean) in checksum file system.
2410 Returns true if the target is an ancestor of the source.
2411 @param path @return return full path including the chroot
2412 Strip out the root from the path. @param p - fully qualified path p @return - the remaining path without the beginning /
2413 Strip out the root from the path. @param p - fully qualified path p @return - the remaining path without the beginning / @throws IOException if the p is not prefixed with root
2414 Performs the operation specified by the next function, calling it repeatedly until all symlinks in the given path are resolved. @param fc FileContext used to access file systems. @param path The path to resolve symlinks on. @return Generic type determined by the implementation of next. @throws IOException raised on errors performing I/O.
2415 The specification of this method matches that of {@link FileContext#rename(Path, Path, Options.Rename...)} except that Path f must be for this file system. @param src src. @param dst dst. @param options options. @throws AccessControlException access control exception. @throws FileAlreadyExistsException file already exists exception. @throws FileNotFoundException file not found exception. @throws ParentNotDirectoryException parent not directory exception. @throws UnresolvedLinkException unresolved link exception. @throws IOException raised on errors performing I/O.
2416 Combine the status stored in the index and the underlying status. @param h status stored in the index @return the combined file status @throws IOException raised on errors performing I/O.
2417 Convert the file information in FTPFile to a {@link FileStatus} object. * @param ftpFile @param parentPath @return FileStatus
2418 Verify that tokenFile contains valid Credentials. If not, an exception is raised, or, if {@link #nofail} is set, an error will be logged and the method return false.
2419 Print out a Credentials file from the local filesystem. @param tokenFile a local File object. @param alias print only tokens matching alias (null matches all). @param conf Configuration object passed along. @param out print to this stream. @throws IOException raised on errors performing I/O.
2420 This method synchronizes the state of a delegation token information in local cache with its actual value in Zookeeper. @param ident Identifier of the token
2421 Construct the metrics system @param prefix for the system
2422 This implementation is same as ProtobufRpcEngine2.Server.ProtobufInvoker#call(..) except this implementation uses non-shaded protobuf classes from legacy protobuf version (default 2.5.0).
2423 Add a rate sample for a rate metric @param name of the rate metric @param elapsed time
2424 This method is intended to be used for recovering persisted delegation tokens. Tokens that have an unknown <code>DelegationKey</code> are marked as expired and automatically cleaned up. This method must be called before this secret manager is activated (before startThreads() is called) @param identifier identifier read from persistent storage @param renewDate token renew time @throws IOException raised on errors performing I/O.
2425 This method syncs token information from currentTokens to tokenOwnerStats. It is used when the currentTokens is initialized or refreshed. This is called from a single thread thus no synchronization is needed.
2426 Remove expired delegation tokens from cache
2427 Create a new ActiveStandbyElector object <br> The elector is created by providing to it the Zookeeper configuration, the parent znode under which to create the znode and a reference to the callback interface. <br> The parent znode name must be the same for all service instances and different across services. <br> After the leader has been lost, a new leader will be elected after the session timeout expires. Hence, the app must set this parameter based on its needs for failure response time. The session timeout must be greater than the Zookeeper disconnect timeout and is recommended to be 3X that value to enable Zookeeper to retry transient disconnections. Setting a very short session timeout may result in frequent transitions between active and standby states during issues like network outages/GS pauses. @param zookeeperHostPorts ZooKeeper hostPort for all ZooKeeper servers @param zookeeperSessionTimeout ZooKeeper session timeout @param parentZnodeName znode under which to create the lock @param acl ZooKeeper ACL's @param authInfo a list of authentication credentials to add to the ZK connection @param app reference to callback interface object @param maxRetryNum maxRetryNum. @param truststoreKeystore truststore keystore, that we will use for ZK if SSL/TLS is enabled @throws IOException raised on errors performing I/O. @throws HadoopIllegalArgumentException if valid data is not supplied. @throws KeeperException other zookeeper operation errors.
2428 To participate in election, the app will call joinElection. The result will be notified by a callback on either the becomeActive or becomeStandby app interfaces. <br> After this the elector will automatically monitor the leader status and perform re-election if necessary<br> The app could potentially start off in standby mode and ignore the becomeStandby call. @param data to be set by the app. non-null data must be set. @throws HadoopIllegalArgumentException if valid data is not supplied
2429 Create an InetSocketAddress from the given target string and default port. If the string cannot be parsed correctly, the <code>configName</code> parameter is used as part of the exception message, allowing the user to better diagnose the misconfiguration. @param target a string of either "host" or "host:port" @param defaultPort the default port if <code>target</code> does not include a port number @param configName the name of the configuration from which <code>target</code> was loaded. This is used in the exception message in the case that parsing fails. @return socket addr.
2430 This is the client side invoker of RPC method. It only throws ServiceException, since the invocation proxy expects only ServiceException to be thrown by the method in case protobuf service. ServiceException has the following causes: <ol> <li>Exceptions encountered on the client side in this method are set as cause in ServiceException as is.</li> <li>Exceptions from the server are wrapped in RemoteException and are set as cause in ServiceException</li> </ol> Note that the client calling protobuf RPC methods, must handle ServiceException by getting the cause from the ServiceException. If the cause is RemoteException, then unwrap it to get the exception thrown by the server.
2431 This is the client side invoker of RPC method. It only throws ServiceException, since the invocation proxy expects only ServiceException to be thrown by the method in case protobuf service. ServiceException has the following causes: <ol> <li>Exceptions encountered on the client side in this method are set as cause in ServiceException as is.</li> <li>Exceptions from the server are wrapped in RemoteException and are set as cause in ServiceException</li> </ol> Note that the client calling protobuf RPC methods, must handle ServiceException by getting the cause from the ServiceException. If the cause is RemoteException, then unwrap it to get the exception thrown by the server.
2432 Parse a list of arguments to to extract the {@link Expression} elements. The input Deque will be modified to remove the used elements. @param args arguments to be parsed @return list of {@link Expression} elements applicable to this command @throws IOException if list can not be parsed
2433 For backwards compatibility. @param c WritableComparable Type. @return WritableComparator.
2434 Authenticates a request looking for the <code>delegation</code> query-string parameter and verifying it is a valid token. If there is not <code>delegation</code> query-string parameter, it delegates the authentication to the {@link KerberosAuthenticationHandler} unless it is disabled. @param request the HTTP client request. @param response the HTTP client response. @return the authentication token for the authenticated request. @throws IOException thrown if an IO error occurred. @throws AuthenticationException thrown if the authentication failed.
2435 Checks for the presence of the property <code>name</code> in the deprecation map. Returns the first of the list of new keys if present in the deprecation map or the <code>name</code> itself. If the property is not presently set but the property map contains an entry for the deprecated key, the value of the deprecated key is set as the value for the provided property name. Also updates properties and overlays with deprecated keys, if the new key does not already exist. @param deprecations deprecation context @param name the property name @return the first property in the list of properties mapping the <code>name</code> or the <code>name</code> itself.
2436 Set the environment of the subprocess to be the Configuration, with '.'s replaced by '_'s.
2437 Cancels a token by removing it from the SQL database. This will call the corresponding method in {@link AbstractDelegationTokenSecretManager} to perform validation and remove the token from the cache. @return Identifier of the canceled token
2438 Get unix groups (parent) and netgroups for given user @param user get groups and netgroups for this user @return groups and netgroups for user
2439 Given a Tar File as input it will untar the file in a the untar directory passed as the second parameter This utility will untar ".tar" files and ".tar.gz","tgz" files. @param inFile The tar file as input. @param untarDir The untar directory where to untar the tar file. @throws IOException an exception occurred.
2440 Change the permissions on a filename. @param filename the name of the file to change @param perm the permission string @return the exit code from the command @throws IOException raised on errors performing I/O. @throws InterruptedException command interrupted.
2441 Platform independent implementation for {@link File#setReadable(boolean)} File#setReadable does not work as expected on Windows. @param f input file @param readable readable. @return true on success, false otherwise
2442 Platform independent implementation for {@link File#setWritable(boolean)} File#setWritable does not work as expected on Windows. @param f input file @param writable writable. @return true on success, false otherwise
2443 Platform independent implementation for {@link File#setExecutable(boolean)} File#setExecutable does not work as expected on Windows. Note: revoking execute permission on folders does not have the same behavior on Windows as on Unix platforms. Creating, deleting or renaming a file within that folder will still succeed on Windows. @param f input file @param executable executable. @return true on success, false otherwise
2444 Load file permission information (UNIX symbol rwxrwxrwx, sticky bit info). To improve peformance, give priority to native stat() call. First try get permission information by using native JNI call then fall back to use non native (ProcessBuilder) call in case native lib is not loaded or native call is not successful
2445 Use the command chown to set owner.
2446 Set permissions to the required value. Uses the java primitives instead of forking if group == other. @param f the file to change @param permission the new permissions @throws IOException raised on errors performing I/O.
2447 Add a group to cache, only netgroups are cached @param groups list of group names to add to cache
2448 Dump all tokens of a UGI. @param ugi UGI to examine
2449 Log current UGI and token information into specified log. @param ugi - UGI @param log log. @param caption caption.
2450 Create the local directory if necessary, check permissions and also ensure it can be read from and written into. @param localFS local filesystem @param dir directory @param expected permission @throws DiskErrorException disk problem. @throws IOException raised on errors performing I/O.
2451 Create the local directory if necessary, also ensure permissions allow it to be read from and written into. Perform some diskIO to ensure that the disk is usable for writes. @param localFS local filesystem @param dir directory @param expected permission @throws DiskErrorException disk problem. @throws IOException raised on errors performing I/O.
2452 See {@link #listStatus(Path[], PathFilter)} @param files files. @throws AccessControlException If access is denied. @throws FileNotFoundException If <code>files</code> does not exist. @throws IOException If an I/O error occurred. @return file status array.
2453 Return the total size of all files under "/", if {@link Constants#CONFIG_VIEWFS_LINK_MERGE_SLASH} is supported and is a valid mount point. Else, throw NotInMountpointException. @throws IOException raised on errors performing I/O.
2454 Get block locations from the underlying fs and fix their offsets and lengths. @param file the input file status to get block locations @param start the start of the desired range in the contained file @param len the length of the desired range @return block locations for this segment of file @throws IOException raised on errors performing I/O.
2455 Returns a har input stream which fakes end of file. It reads the index files to get the part file name and the size and start of the file.
2456 Opens an FSDataInputStream at the indicated Path. @param f the file name to open @param bufferSize the size of the buffer to be used.
2457 Opens an FSDataInputStream at the indicated Path. @param f the file name to open @param bufferSize the size of the buffer to be used. @throws IOException if an I/O error occurs.
2458 Rename files/dirs.
2459 Renames Path src to Path dst <ul> <li>Fails if src is a file and dst is a directory. <li>Fails if src is a directory and dst is a file. <li>Fails if the parent of dst does not exist or is a file. </ul> <p> If OVERWRITE option is not passed as an argument, rename fails if the dst already exists. <p> If OVERWRITE option is passed as an argument, rename overwrites the dst if it is a file or an empty directory. Rename fails if dst is a non-empty directory. <p> Note that atomicity of rename is dependent on the file system implementation. Please refer to the file system documentation for details <p> @param src path to be renamed @param dst new path after rename @param options rename options. @throws AccessControlException If access is denied @throws FileAlreadyExistsException If <code>dst</code> already exists and <code>options</code> has {@link Options.Rename#OVERWRITE} option false. @throws FileNotFoundException If <code>src</code> does not exist @throws ParentNotDirectoryException If parent of <code>dst</code> is not a directory @throws UnsupportedFileSystemException If file system for <code>src</code> and <code>dst</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2460 Get filestatuses of all the children of a given directory. This just reads through index file and reads line by line to get all statuses for children of a directory. Its a brute force way of getting all such filestatuses @param parent the parent path directory @param statuses the list to add the children filestatuses to
2461 return the filestatus of files in har archive. The permission returned are that of the archive index files. The permissions are not persisted while creating a hadoop archive. @param f the path in har filesystem @return filestatus. @throws IOException raised on errors performing I/O.
2462 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2463 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2464 Construct the system but not initializing (read config etc.) it.
2465 Constructor for {@link MutableRollingAverages}. @param metricValueName input metricValueName.
2466 This method is for testing only to replace the scheduledTask.
2467 Check the current state of the service, and join the election if it should be in the election.
2468 We failed to become active. Re-join the election, but sleep for a few seconds after terminating our existing session, so that other nodes have a chance to become active. The failure to become active is already logged inside becomeActive().
2469 interface implementation of Zookeeper watch events (connection and node), proxied by {@link WatcherWithClientRef}.
2470 Util method to build socket addr from either. {@literal <host>} {@literal <host>:<port>} {@literal <fs>://<host>:<port>/<path>} @param target target. @param defaultPort default port. @return socket addr.
2471 This method is overridden to restrict HTTP authentication schemes available for delegation token management functionality. The authentication schemes to be used for delegation token management are configured using {@link DELEGATION_TOKEN_SCHEMES_PROPERTY} The basic logic here is to check if the current request is for delegation token management. If yes then check if the request contains an "Authorization" header. If it is missing, then return the HTTP 401 response with WWW-Authenticate header for each scheme configured for delegation token management. It is also possible for a client to preemptively send Authorization header for a scheme not configured for delegation token management. We detect this case and return the HTTP 401 response with WWW-Authenticate header for each scheme configured for delegation token management. If a client has sent a request with "Authorization" header for a scheme configured for delegation token management, then it is forwarded to underlying {@link MultiSchemeAuthenticationHandler} for actual authentication. Finally all other requests (excluding delegation token management) are forwarded to underlying {@link MultiSchemeAuthenticationHandler} for actual authentication.
2472 Return existence of the <code>name</code> property, but only for names which have no valid value, usually non-existent or commented out in XML. @param name the property name @return true if the property <code>name</code> exists without value
2473 Get the value of the <code>name</code> property, without doing <a href="#VariableExpansion">variable expansion</a>.If the key is deprecated, it returns the value of the first key which replaces the deprecated key and is not null. @param name the property name. @return the value of the <code>name</code> property or its replacing property and null if no such property exists.
2474 Set the <code>value</code> of the <code>name</code> property. If <code>name</code> is deprecated, it also sets the <code>value</code> to the keys that replace the deprecated key. Name will be trimmed before put into configuration. @param name property name. @param value property value. @param source the place that this configuration value came from (For debugging). @throws IllegalArgumentException when the value or name is null.
2475 Unset a previously set property. @param name the property name
2476 {@inheritDoc}
2477 {@inheritDoc}
2478 {@inheritDoc}
2479 {@inheritDoc}
2480 {@inheritDoc}
2481 {@inheritDoc}
2482 {@inheritDoc}
2483 {@inheritDoc}
2484 {@inheritDoc}
2485 {@inheritDoc}
2486 {@inheritDoc}
2487 Refresh the netgroup cache
2488 Update FsStatus for the given the mount point. @param viewFileSystem @param mountPointMap @param mountPoint @param path
2489 liststatus returns the children of a directory after looking up the index files.
2490 Public {@link FileStatus} methods delegate to this function, which in turn either call the new {@link Stat} based implementation or the deprecated methods based on platform support. @param f Path to stat @param dereference whether to dereference the final path component if a symlink @return FileStatus of f @throws IOException
2491 {@inheritDoc} If the given path is a symlink(mount link), the path will be resolved to a target path and it will get the resolved path's FileStatus object. It will not be represented as a symlink and isDirectory API returns true if the resolved path is a directory, false otherwise.
2492 {@inheritDoc} Note: listStatus considers listing from fallbackLink if available. If the same directory path is present in configured mount path as well as in fallback fs, then only the fallback path will be listed in the returned result except for link. If any of the the immediate children of the given path f is a symlink(mount link), the returned FileStatus object of that children would be represented as a symlink. It will not be resolved to the target path and will not get the target path FileStatus object. The target path will be available via getSymlink on that children's FileStatus object. Since it represents as symlink, isDirectory on that children's FileStatus will return false. This behavior can be changed by setting an advanced configuration fs.viewfs.mount.links.as.symlinks to false. In this case, mount points will be represented as non-symlinks and all the file/directory attributes like permissions, isDirectory etc will be assigned from it's resolved target directory/file. If you want to get the FileStatus of target path for that children, you may want to use GetFileStatus API with that children's symlink path. Please see {@link ViewFs#getFileStatus(Path f)} Note: In ViewFs, by default the mount links are represented as symlinks.
2493 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @throws IOException
2494 Convert the file information in LsEntry to a {@link FileStatus} object. * @param sftpFile @param parentPath @return file status @throws IOException
2495 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @throws IOException
2496 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @throws IOException on IO problems other than FileNotFoundException
2497 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2498 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2499 Constructs a new CBZip2InputStream which decompresses bytes read from the specified stream. <p> Although BZip2 headers are marked with the magic <tt>"Bz"</tt> this constructor expects the next byte in the stream to be the first one after the magic. Thus callers have to skip the first two bytes. Otherwise this constructor will throw an exception. </p> @param in in. @param readMode READ_MODE. @throws IOException if the stream content is malformed or an I/O error occurs. @throws NullPointerException if <tt>in == null</tt>
2500 Returns the number of bytes between the current stream position and the immediate next BZip2 block marker. @param in The InputStream @return long Number of bytes between current stream position and the next BZip2 block start marker. @throws IOException raised on errors performing I/O.
2501 interface implementation of Zookeeper callback for create
2502 interface implementation of Zookeeper callback for monitor (exists)
2503 Util method to build socket addr from either. {@literal <host>:<port>} {@literal <fs>://<host>:<port>/<path>} @param target target. @return socket addr.
2504 Parses a space and/or comma separated sequence of server specifications of the form <i>hostname</i> or <i>hostname:port</i>. If the specs string is null, defaults to localhost:defaultPort. @param specs server specs (see description) @param defaultPort the default port if not specified @return a list of InetSocketAddress objects.
2505 create the service name for a Delegation token @param uri of the service @param defPort is used if the uri lacks a port @return the token service, or null if no authority @see #buildTokenService(InetSocketAddress)
2506 Return the XML DOM corresponding to this Configuration.
2507 Attempts to repeatedly expand the value {@code expr} by replacing the left-most substring of the form "${var}" in the following precedence order <ol> <li>by the value of the environment variable "var" if defined</li> <li>by the value of the Java system property "var" if defined</li> <li>by the value of the configuration key "var" if defined</li> </ol> If var is unbounded the current state of expansion "prefix${var}suffix" is returned. <p> This function also detects self-referential substitutions, i.e. <pre> {@code foo.bar = ${foo.bar} } </pre> If a cycle is detected then the original expr is returned. Loops involving multiple substitutions are not detected. In order not to introduce breaking changes (as Oozie for example contains a method with the same name and same signature) do not make this method public, use substituteCommonVariables in this case. @param expr the literal value of a config key @return null if expr is null, otherwise the value resulting from expanding expr using the algorithm above. @throws IllegalArgumentException when more than {@link Configuration#MAX_SUBST} replacements are required
2508 Apply configuratio changes after admin has approved them.
2509 Set the <code>value</code> of the <code>name</code> property. If <code>name</code> is deprecated or there is a deprecated name associated to it, it sets the value to both names. Name will be trimmed before put into configuration. @param name property name. @param value property value.
2510 See {@link Configuration#set(String, String, String)}.
2511 Delete a directory and all its contents. If we return false, the directory may be partially-deleted. (1) If dir is symlink to a file, the symlink is deleted. The file pointed to by the symlink is not deleted. (2) If dir is symlink to a directory, symlink is deleted. The directory pointed to by symlink is not deleted. (3) If dir is a normal file, it is deleted. (4) If dir is a normal directory, then dir and all its contents recursively are deleted. @param dir the file or directory to be deleted @param tryGrantPermissions true if permissions should be modified to delete a file. @return true on success false on failure.
2512 {@inheritDoc}
2513 Get FsStatus for all ViewFsMountPoints matching path for the given ViewFileSystem. Say ViewFileSystem has following mount points configured (1) hdfs://NN0_host:port/sales mounted on /dept/sales (2) hdfs://NN1_host:port/marketing mounted on /dept/marketing (3) hdfs://NN2_host:port/eng_usa mounted on /dept/eng/usa (4) hdfs://NN3_host:port/eng_asia mounted on /dept/eng/asia For the above config, here is a sample list of paths and their matching mount points while getting FsStatus Path Description Matching MountPoint "/" Root ViewFileSystem lists all (1), (2), (3), (4) mount points. "/dept" Not a mount point, but a valid (1), (2), (3), (4) internal dir in the mount tree and resolved down to "/" path. "/dept/sales" Matches a mount point (1) "/dept/sales/india" Path is over a valid mount point (1) and resolved down to "/dept/sales" "/dept/eng" Not a mount point, but a valid (1), (2), (3), (4) internal dir in the mount tree and resolved down to "/" path. "/erp" Doesn't match or leads to or over any valid mount points None @param fileSystem - ViewFileSystem on which mount point exists @param path - URI for which FsStatus is requested @return Map of ViewFsMountPoint and FsStatus @throws IOException raised on errors performing I/O.
2514 Return a FileStatus representing the given path. If the path refers to a symlink return a FileStatus representing the link rather than the object the link refers to.
2515 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @param channel @param src @param dst @return rename successful? @throws IOException
2516 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2517 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2518 <p>Return all the files that match filePattern and are not checksum files. Results are sorted by their names. <p> A filename pattern is composed of <i>regular</i> characters and <i>special pattern matching</i> characters, which are: <dl> <dd> <dl> <dt> <tt> ? </tt> <dd> Matches any single character. <dt> <tt> * </tt> <dd> Matches zero or more characters. <dt> <tt> [<i>abc</i>] </tt> <dd> Matches a single character from character set <tt>{<i>a,b,c</i>}</tt>. <dt> <tt> [<i>a</i>-<i>b</i>] </tt> <dd> Matches a single character from the character range <tt>{<i>a...b</i>}</tt>. Note: character <tt><i>a</i></tt> must be lexicographically less than or equal to character <tt><i>b</i></tt>. <dt> <tt> [^<i>a</i>] </tt> <dd> Matches a single char that is not from character set or range <tt>{<i>a</i>}</tt>. Note that the <tt>^</tt> character must occur immediately to the right of the opening bracket. <dt> <tt> \<i>c</i> </tt> <dd> Removes (escapes) any special meaning of character <i>c</i>. <dt> <tt> {ab,cd} </tt> <dd> Matches a string from the string set <tt>{<i>ab, cd</i>} </tt> <dt> <tt> {ab,c{de,fh}} </tt> <dd> Matches a string from string set <tt>{<i>ab, cde, cfh</i>}</tt> </dl> </dd> </dl> @param pathPattern a glob specifying a path pattern @return an array of paths that match the path pattern @throws AccessControlException If access is denied @throws UnsupportedFileSystemException If file system for <code>pathPattern</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2519 Return an array of FileStatus objects whose path names match pathPattern and is accepted by the user-supplied path filter. Results are sorted by their path names. Return null if pathPattern has no glob and the path does not exist. Return an empty array if pathPattern has a glob and no path matches it. @param pathPattern glob specifying the path pattern @param filter user-supplied path filter @return an array of FileStatus objects @throws AccessControlException If access is denied @throws UnsupportedFileSystemException If file system for <code>pathPattern</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2520 <p>Return all the files that match filePattern and are not checksum files. Results are sorted by their names. <p> A filename pattern is composed of <i>regular</i> characters and <i>special pattern matching</i> characters, which are: <dl> <dd> <dl> <dt> <tt> ? </tt> <dd> Matches any single character. <dt> <tt> * </tt> <dd> Matches zero or more characters. <dt> <tt> [<i>abc</i>] </tt> <dd> Matches a single character from character set <tt>{<i>a,b,c</i>}</tt>. <dt> <tt> [<i>a</i>-<i>b</i>] </tt> <dd> Matches a single character from the character range <tt>{<i>a...b</i>}</tt>. Note that character <tt><i>a</i></tt> must be lexicographically less than or equal to character <tt><i>b</i></tt>. <dt> <tt> [^<i>a</i>] </tt> <dd> Matches a single character that is not from character set or range <tt>{<i>a</i>}</tt>. Note that the <tt>^</tt> character must occur immediately to the right of the opening bracket. <dt> <tt> \<i>c</i> </tt> <dd> Removes (escapes) any special meaning of character <i>c</i>. <dt> <tt> {ab,cd} </tt> <dd> Matches a string from the string set <tt>{<i>ab, cd</i>} </tt> <dt> <tt> {ab,c{de,fh}} </tt> <dd> Matches a string from the string set <tt>{<i>ab, cde, cfh</i>}</tt> </dl> </dd> </dl> @param pathPattern a glob specifying a path pattern @return an array of paths that match the path pattern @throws IOException IO failure
2521 Return an array of {@link FileStatus} objects whose path names match {@code pathPattern} and is accepted by the user-supplied path filter. Results are sorted by their path names. @param pathPattern a glob specifying the path pattern @param filter a user-supplied path filter @return null if {@code pathPattern} has no glob and the path does not exist an empty array if {@code pathPattern} has a glob and no path matches it else an array of {@link FileStatus} objects matching the pattern @throws IOException if any I/O error occurs when fetching file status
2522 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection. @param client @param src @param dst @return @throws IOException
2523 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2524 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2525 Attempt to normalize the given string to "host:port" if it like "ip:port". @param ipPort maybe lik ip:port or host:port. @return host:port
2526 Decode the given token's service field into an InetAddress @param token from which to obtain the service @return InetAddress for the service
2527 Construct the service key for a token @param uri of remote connection with a token @return "ip:port" or "host:port" depending on the value of hadoop.security.token.service.use_ip
2528 Get a canonical service name for this FileSystem. The token cache is the only user of the canonical service name, and uses it to lookup this FileSystem's service tokens. If the file system provides a token of its own then it must have a canonical name, otherwise the canonical name can be null. Default implementation: If the FileSystem has child file systems (such as an embedded file system) then it is assumed that the FS has no tokens of its own and hence returns a null name; otherwise a service name is built using Uri and port. @return a service string that uniquely identifies this file system, null if the filesystem does not implement tokens @see SecurityUtil#buildDTServiceName(URI, int)
2529 Get a canonical name for this file system. @return a URI string that uniquely identifies this file system
2530 Provides a public wrapper over substituteVars in order to avoid compatibility issues. See HADOOP-18021 for further details. @param expr the literal value of a config key @return null if expr is null, otherwise the value resulting from expanding expr using the algorithm above. @throws IllegalArgumentException when more than {@link Configuration#MAX_SUBST} replacements are required
2531 Get the value of the <code>name</code> property, <code>null</code> if no such property exists. If the key is deprecated, it returns the value of the first key which replaces the deprecated key and is not null. Values are processed for <a href="#VariableExpansion">variable expansion</a> before being returned. As a side effect get loads the properties from the sources if called for the first time as a lazy init. @param name the property name, will be trimmed before get value. @return the value of the <code>name</code> or its replacing property, or null if no such property exists.
2532 Get the value of the <code>name</code>. If the key is deprecated, it returns the value of the first key which replaces the deprecated key and is not null. If no such property exists, then <code>defaultValue</code> is returned. @param name property name, will be trimmed before get value. @param defaultValue default value. @return property value, or <code>defaultValue</code> if the property doesn't exist.
2533 Set optional Builder parameter.
2534 Set mandatory option to the Builder. If the option is not supported or unavailable on the {@link FileSystem}, the client should expect {@link #build()} throws IllegalArgumentException.
2535 Set the default FileSystem URI in a configuration. @param conf the configuration to alter @param uri the new default filesystem uri
2536 Add a link to the config for the specified mount table @param conf - add the link to this conf @param mountTableName mountTable. @param src - the src path name @param target - the target URI link
2537 Add a LinkMergeSlash to the config for the specified mount table. @param conf configuration. @param mountTableName mountTable. @param target target.
2538 Add a LinkFallback to the config for the specified mount table. @param conf configuration. @param mountTableName mountTable. @param target targets.
2539 Add a LinkMerge to the config for the specified mount table. @param conf configuration. @param mountTableName mountTable. @param targets targets.
2540 Add nfly link to configuration for the given mount table. @param conf configuration. @param mountTableName mount table. @param src src. @param settings settings. @param targets targets.
2541 Add a LinkRegex to the config for the specified mount table. @param conf - get mountable config from this conf @param mountTableName - the mountable name of the regex config item @param srcRegex - the src path regex expression that applies to this config @param targetStr - the string of target path @param interceptorSettings - the serialized interceptor string to be applied while resolving the mapping
2542 Add config variable for homedir the specified mount table @param conf - add to this conf @param homedir - the home dir path starting with slash @param mountTableName - the mount table.
2543 Set the user file creation mask (umask) @param conf configuration. @param umask umask.
2544 Sets a list of codec classes in the configuration. In addition to any classes specified using this method, {@link CompressionCodec} classes on the classpath are discovered using a Java ServiceLoader. @param conf the configuration to modify @param classes the list of classes to set
2545 Set the default compression type for sequence files. @param job the configuration to modify @param val the new compression type (none, block, record)
2546 Returns the proxyuser configuration. All returned properties must start with <code>proxyuser.</code>' <p> Subclasses may override this method if the proxyuser configuration is read from other place than the filter init parameters. @param filterConfig filter configuration object @return the proxyuser configuration properties. @throws ServletException thrown if the configuration could not be created.
2547 Parse the command line arguments and initialize the data. <pre> % hadoop credential create alias [-provider providerPath] % hadoop credential list [-provider providerPath] % hadoop credential check alias [-provider providerPath] % hadoop credential delete alias [-provider providerPath] [-f] </pre> @param args args. @return 0 if the argument(s) were recognized, 1 otherwise @throws IOException raised on errors performing I/O.
2548 Set the value of the <code>name</code> property to an <code>int</code>. @param name property name. @param value <code>int</code> value of the property.
2549 Set the value of the <code>name</code> property to a <code>long</code>. @param name property name. @param value <code>long</code> value of the property.
2550 Set the value of the <code>name</code> property to a <code>float</code>. @param name property name. @param value property value.
2551 Set the value of the <code>name</code> property to a <code>double</code>. @param name property name. @param value property value.
2552 Set the value of the <code>name</code> property to a <code>boolean</code>. @param name property name. @param value <code>boolean</code> value of the property.
2553 Set the value of <code>name</code> to the given time duration. This is equivalent to <code>set(&lt;name&gt;, value + &lt;time suffix&gt;)</code>. @param name Property name @param value Time duration @param unit Unit of time
2554 Sets Storage Size for the specified key. @param name - Key to set. @param value - The numeric value to set. @param unit - Storage Unit to be used.
2555 Set the given property to <code>Pattern</code>. If the pattern is passed as null, sets the empty pattern which results in further calls to getPattern(...) returning the default value. @param name property name @param pattern new value
2556 Set the array of string values for the <code>name</code> property as as comma delimited values. @param name property name. @param values The values
2557 Set the socket address for the <code>name</code> property as a <code>host:port</code>. @param name property name. @param addr inetSocketAddress addr.
2558 Set the value of the <code>name</code> property to the name of a <code>theClass</code> implementing the given interface <code>xface</code>. An exception is thrown if <code>theClass</code> does not implement the interface <code>xface</code>. @param name property name. @param theClass property value. @param xface the interface implemented by the named class.
2559 Delete a directory and all its contents. If we return false, the directory may be partially-deleted. (1) If dir is symlink to a file, the symlink is deleted. The file pointed to by the symlink is not deleted. (2) If dir is symlink to a directory, symlink is deleted. The directory pointed to by symlink is not deleted. (3) If dir is a normal file, it is deleted. (4) If dir is a normal directory, then dir and all its contents recursively are deleted. @param dir dir. @return fully delete status.
2560 Delete the contents of a directory, not the directory itself. If we return false, the directory may be partially-deleted. If dir is a symlink to a directory, all the contents of the actual directory pointed to by dir will be deleted. @param dir dir. @param tryGrantPermissions if 'true', try grant +rwx permissions to this and all the underlying directories before trying to delete their contents. @return fully delete contents status.
2561 {@inheritDoc} (<b>Note</b>: Returned list is not sorted in any given order, due to reliance on Java's {@link File#list()} API.)
2562 Deprecated. Remains for legacy support. Should be removed when {@link Stat} gains support for Windows and other operating systems.
2563 Convenience method, so that we don't open a new connection when using this method from within another method. Otherwise every API invocation incurs the overhead of opening/closing a TCP connection.
2564 Creates CompressionInputStream to be used to read off uncompressed data in one of the two reading modes. i.e. Continuous or Blocked reading modes @param seekableIn The InputStream @param start The start offset into the compressed stream @param end The end offset into the compressed stream @param readMode Controls whether progress is reported continuously or only at block boundaries. @return CompressionInputStream for BZip2 aligned at block boundaries
2565 Change the declared field {@code field} in {@code source} Object to {@link MutableMetric}
2566 Get the configured values for different StorageType. @param conf - absolute or fully qualified path @param t - the StorageType @param name - the sub-name of key @return the file system of the path
2567 Set FTP's transfer mode based on configuration. Valid values are STREAM_TRANSFER_MODE, BLOCK_TRANSFER_MODE and COMPRESSED_TRANSFER_MODE. <p> Defaults to BLOCK_TRANSFER_MODE. @param conf @return
2568 Set the FTPClient's data connection mode based on configuration. Valid values are ACTIVE_LOCAL_DATA_CONNECTION_MODE, PASSIVE_LOCAL_DATA_CONNECTION_MODE and PASSIVE_REMOTE_DATA_CONNECTION_MODE. <p> Defaults to ACTIVE_LOCAL_DATA_CONNECTION_MODE. @param client @param conf @throws IOException
2569 Get the value of the home dir conf value for specified mount table @param conf - from this conf @param mountTableName - the mount table @return home dir value, null if variable is not in conf
2570 Get the user file creation mask (umask) {@code UMASK_LABEL} config param has umask value that is either symbolic or octal. Symbolic umask is applied relative to file mode creation mask; the permission op characters '+' clears the corresponding bit in the mask, '-' sets bits in the mask. Octal umask, the specified bits are set in the file mode creation mask. @param conf configuration. @return FsPermission UMask.
2571 Get the list of codecs discovered via a Java ServiceLoader, or listed in the configuration. Codecs specified in configuration come later in the returned list, and are considered to override those from the ServiceLoader. @param conf the configuration to look in @return a list of the {@link CompressionCodec} classes
2572 Get the compression type for the reduce outputs @param job the job config to look in @return the kind of compression to use
2573 Turn a security property into a nicely formatted set of <i>name=value</i> strings, allowing for either the property or the configuration not to be set. @param property the property to stringify @return the stringified property
2574 Validate that hadoop.token.files (if specified) exist and are valid. @throws ClassNotFoundException @throws SecurityException @throws NoSuchMethodException @throws KerberosDiagsFailure
2575 Open up and initialize the keyStore. @throws IOException If there is a problem reading the password file or a problem reading the keystore.
2576 Retrieve the name of the current host. Multihomed hosts may restrict the hostname lookup to a specific interface and nameserver with {@link org.apache.hadoop.fs.CommonConfigurationKeysPublic#HADOOP_SECURITY_DNS_INTERFACE_KEY} and {@link org.apache.hadoop.fs.CommonConfigurationKeysPublic#HADOOP_SECURITY_DNS_NAMESERVER_KEY} @param conf Configuration object. May be null. @return @throws UnknownHostException
2577 Look up the client principal for a given protocol. It searches all known SecurityInfo providers. @param protocol the protocol class to get the information for @param conf configuration object @return client principal or null if it has no client principal defined.
2578 Get the value of the <code>name</code> property as a trimmed <code>String</code>, <code>null</code> if no such property exists. If the key is deprecated, it returns the value of the first key which replaces the deprecated key and is not null Values are processed for <a href="#VariableExpansion">variable expansion</a> before being returned. @param name the property name. @return the value of the <code>name</code> or its replacing property, or null if no such property exists.
2579 Sets a property if it is currently unset. @param name the property name @param value the new value
2580 Return time duration in the given time unit. Valid units are encoded in properties as suffixes: nanoseconds (ns), microseconds (us), milliseconds (ms), seconds (s), minutes (m), hours (h), and days (d). If no unit is provided, the default unit is applied. @param name Property name @param defaultValue Value returned if no mapping exists. @param defaultUnit Default time unit if no valid suffix is provided. @param returnUnit The unit used for the returned value. @throws NumberFormatException If the property stripped of its unit is not a number @return time duration in given time unit
2581 Gets the Storage Size from the config, or returns the defaultValue. The unit of return value is specified in target unit. @param name - Key Name @param defaultValue - Default Value -- e.g. 100MB @param targetUnit - The units that we want result to be in. @return double -- formatted in target Units
2582 Gets storage size from a config file. @param name - Key to read. @param defaultValue - The default value to return in case the key is not present. @param targetUnit - The Storage unit that should be used for the return value. @return - double value in the Storage Unit specified.
2583 Get the value of the <code>name</code> property as a <code>Pattern</code>. If no such property is specified, or if the specified value is not a valid <code>Pattern</code>, then <code>DefaultValue</code> is returned. Note that the returned value is NOT trimmed by this method. @param name property name @param defaultValue default value @return property value as a compiled Pattern, or defaultValue
2584 Get the comma delimited values of the <code>name</code> property as a collection of <code>String</code>s. If no such property is specified then empty collection is returned. <p> This is an optimized version of {@link #getStrings(String)} @param name property name. @return property value as a collection of <code>String</code>s.
2585 Get the comma delimited values of the <code>name</code> property as an array of <code>String</code>s. If no such property is specified then <code>null</code> is returned. @param name property name. @return property value as an array of <code>String</code>s, or <code>null</code>.
2586 Get the comma delimited values of the <code>name</code> property as an array of <code>String</code>s. If no such property is specified then default value is returned. @param name property name. @param defaultValue The default value @return property value as an array of <code>String</code>s, or default value.
2587 Get the comma delimited values of the <code>name</code> property as a collection of <code>String</code>s, trimmed of the leading and trailing whitespace. If no such property is specified then empty <code>Collection</code> is returned. @param name property name. @return property value as a collection of <code>String</code>s, or empty <code>Collection</code>
2588 Get the comma delimited values of the <code>name</code> property as an array of <code>String</code>s, trimmed of the leading and trailing whitespace. If no such property is specified then an empty array is returned. @param name property name. @return property value as an array of trimmed <code>String</code>s, or empty array.
2589 Get the comma delimited values of the <code>name</code> property as an array of <code>String</code>s, trimmed of the leading and trailing whitespace. If no such property is specified then default value is returned. @param name property name. @param defaultValue The default value @return property value as an array of trimmed <code>String</code>s, or default value.
2590 Constructs a mapping of configuration and includes all properties that start with the specified configuration prefix. Property names in the mapping are trimmed to remove the configuration prefix. @param confPrefix configuration prefix @return mapping of configuration properties with prefix stripped
2591 Write property and its attributes as json format to given {@link JsonGenerator}. @param jsonGen json writer @param config configuration @param name property name @throws IOException raised on errors performing I/O.
2592 {@inheritDoc} This method makes the change to this objects {@link Configuration} and calls reconfigurePropertyImpl to update internal data structures. This method cannot be overridden, subclasses should instead override reconfigurePropertyImpl.
2593 See {@link Configuration#get(String)}.
2594 Get the name of the default mount table to use. If {@link Constants#CONFIG_VIEWFS_DEFAULT_MOUNT_TABLE_NAME_KEY} is specified, it's value is returned. Otherwise, {@link Constants#CONFIG_VIEWFS_DEFAULT_MOUNT_TABLE} is returned. @param conf Configuration to use. @return the name of the default mount table to use.
2595 Check if native-bzip2 code is loaded &amp; initialized correctly and can be loaded for this job. @param conf configuration @return <code>true</code> if native-bzip2 is loaded &amp; initialized and can be loaded for this job, else <code>false</code>
2596 Get the default socket factory as specified by the configuration parameter <tt>hadoop.rpc.socket.factory.default</tt> @param conf the configuration @return the default socket factory as specified in the configuration or the JVM default socket factory if the configuration does not contain a default socket factory property.
2597 Retrieve the static username from the configuration.
2598 Print a configuration option, or {@link #UNSET} if unset. @param option option to print
2599 Configuration for the ZooKeeper connection when SSL/TLS is enabled. When a value is not configured, ensure that empty string is set instead of null. @param conf ZooKeeper Client configuration
2600 Spawn a thread to do periodic renewals of kerberos credentials. NEVER directly call this method. This method should only be used for ticket cache based kerberos credentials. @param force - used by tests to forcibly spawn thread
2601 Constructor. @param conf configuration for the provider
2602 Utility method to fetch the ZK ACLs from the configuration. @param conf configuration. @throws java.io.IOException if the Zookeeper ACLs configuration file cannot be read @return acl list.
2603 This utility method converts the name of the configured hash type to a symbolic constant. @param conf configuration @return one of the predefined constants
2604 Build an enumset from a comma separated list of values. Case independent. Special handling of "*" meaning: all values. @param key key to look for @param enumClass class of enum @param ignoreUnknown should unknown values raise an exception? @return a mutable set of the identified enum values declared in the configuration @param <E> enumeration type @throws IllegalArgumentException if one of the entries was unknown and ignoreUnknown is false, or there are two entries in the enum which differ only by case.
2605 Parse the given attribute as a set of integer ranges. @param name the attribute name @param defaultValue the default value if it is not set @return a new set of ranges from the configured value
2606 See {@link Configuration#get(String, String)}.
2607 Set optional boolean parameter for the Builder. @see #opt(String, String)
2608 Set optional double parameter for the Builder. @see #opt(String, String)
2609 Set mandatory boolean option. @see #must(String, String)
2610 Set optional double parameter for the Builder. @see #opt(String, String)
2611 Set the default FileSystem URI in a configuration. @param conf the configuration to alter @param uri the new default filesystem uri
2612 Add nfly link to configuration for the given mount table. @param conf configuration. @param mountTableName mount table. @param src src. @param settings settings. @param targets targets.
2613 Sets the index interval and stores it in conf. @see #getIndexInterval() @param conf configuration. @param interval interval.
2614 set the ping interval value in configuration @param conf Configuration @param pingInterval the ping interval
2615 set the connection timeout value in configuration @param conf Configuration @param timeout the socket connect timeout value
2616 Set the bool value isNestedMountPointSupported in config. @param conf - from this conf @param isNestedMountPointSupported - whether nested mount point is supported
2617 Set an array of string values as optional parameter for the Builder. @see #opt(String, String)
2618 Set a string array as mandatory option. @see #must(String, String)
2619 Set the socket address a client can use to connect for the <code>name</code> property as a <code>host:port</code>. The wildcard address is replaced with the local host's address. @param name property name. @param addr InetSocketAddress of a listener to store in the given property @return InetSocketAddress for clients to connect
2620 Set a protocol to use a non-default RpcEngine if one is not specified in the configuration. @param conf configuration to use @param protocol the protocol interface @param engine the RpcEngine impl
2621 Delete the given path to a file or directory. @param p the path to delete @param recursive to delete sub-directories @return true if the file or directory and all its contents were deleted @throws IOException if p is non-empty and recursive is false
2622 Delete the contents of a directory, not the directory itself. If we return false, the directory may be partially-deleted. If dir is a symlink to a directory, all the contents of the actual directory pointed to by dir will be deleted. @param dir dir. @return fullyDeleteContents Status.
2623 {@inheritDoc} If the given path is a symlink(mount link), the path will be resolved to a target path and it will get the resolved path's FileStatus object. It will not be represented as a symlink and isDirectory API returns true if the resolved path is a directory, false otherwise.
2624 {@inheritDoc} Note: listStatus considers listing from fallbackLink if available. If the same directory path is present in configured mount path as well as in fallback fs, then only the fallback path will be listed in the returned result except for link. If any of the the immediate children of the given path f is a symlink(mount link), the returned FileStatus object of that children would be represented as a symlink. It will not be resolved to the target path and will not get the target path FileStatus object. The target path will be available via getSymlink on that children's FileStatus object. Since it represents as symlink, isDirectory on that children's FileStatus will return false. This behavior can be changed by setting an advanced configuration fs.viewfs.mount.links.as.symlinks to false. In this case, mount points will be represented as non-symlinks and all the file/directory attributes like permissions, isDirectory etc will be assigned from it's resolved target directory/file. If you want to get the FileStatus of target path for that children, you may want to use GetFileStatus API with that children's symlink path. Please see {@link ViewFileSystem#getFileStatus(Path f)} Note: In ViewFileSystem, by default the mount links are represented as symlinks.
2625 Create an FSDataOutputStream at the indicated Path with write-progress reporting. @param f the file name to open @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @param replication required block replication for the file. @param blockSize the size of the buffer to be used. @param progress to report progress. @throws IOException IO failure @return output stream.
2626 @return the umask of this FileContext
2627 Create a factory. @param keyToBufferDir Key to buffer directory config for a FS. @param configuration factory configurations. @param name factory name -the option from {@link CommonConfigurationKeys}. @return the factory, ready to be initialized. @throws IllegalArgumentException if the name is unknown.
2628 Find the codecs specified in the config value io.compression.codecs and register them. Defaults to gzip and deflate. @param conf configuration.
2629 Get the value of the <code>name</code> property as a trimmed <code>String</code>, <code>defaultValue</code> if no such property exists. See @{Configuration#getTrimmed} for more details. @param name the property name. @param defaultValue the property default value. @return the value of the <code>name</code> or defaultValue if it is not set.
2630 Get the value of the <code>name</code> property as an <code>int</code>. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>int</code>, then an error is thrown. @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as an <code>int</code>, or <code>defaultValue</code>.
2631 Get the value of the <code>name</code> property as a <code>long</code>. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>long</code>, then an error is thrown. @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as a <code>long</code>, or <code>defaultValue</code>.
2632 Get the value of the <code>name</code> property as a <code>long</code> or human readable format. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>long</code> or human readable format, then an error is thrown. You can use the following suffix (case insensitive): k(kilo), m(mega), g(giga), t(tera), p(peta), e(exa) @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as a <code>long</code>, or <code>defaultValue</code>.
2633 Get the value of the <code>name</code> property as a <code>float</code>. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>float</code>, then an error is thrown. @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as a <code>float</code>, or <code>defaultValue</code>.
2634 Get the value of the <code>name</code> property as a <code>double</code>. If no such property exists, the provided default value is returned, or if the specified value is not a valid <code>double</code>, then an error is thrown. @param name property name. @param defaultValue default value. @throws NumberFormatException when the value is invalid @return property value as a <code>double</code>, or <code>defaultValue</code>.
2635 Get the value of the <code>name</code> property as a <code>boolean</code>. If no such property is specified, or if the specified value is not a valid <code>boolean</code>, then <code>defaultValue</code> is returned. @param name property name. @param defaultValue default value. @return property value as a <code>boolean</code>, or <code>defaultValue</code>.
2636 Get the value of the <code>name</code> property as a <code>Class</code>. If no such property is specified, then <code>defaultValue</code> is returned. @param name the conf key name. @param defaultValue default value. @return property value as a <code>Class</code>, or <code>defaultValue</code>.
2637 Set the given property, if it is currently unset. @param name property name @param value new value
2638 Return time duration in the given time unit. Valid units are encoded in properties as suffixes: nanoseconds (ns), microseconds (us), milliseconds (ms), seconds (s), minutes (m), hours (h), and days (d). @param name Property name @param defaultValue Value returned if no mapping exists. @param unit Unit to convert the stored property, if it exists. @throws NumberFormatException If the property stripped of its unit is not a number @return time duration in given time unit
2639 A util function to retrieve specific additional sasl property from config. Used by subclasses to read sasl properties used by themselves. @param conf the configuration @param configKey the config key to look for @param defaultQOP the default QOP if the key is missing @return sasl property associated with the given key
2640 Get the value of the <code>name</code> property as a set of comma-delimited <code>int</code> values. If no such property exists, an empty array is returned. @param name property name @return property value interpreted as an array of comma-delimited <code>int</code> values
2641 Get the value of the <code>name</code> property as an array of <code>Class</code>. The value of the property specifies a list of comma separated class names. If no such property is specified, then <code>defaultValue</code> is returned. @param name the property name. @param defaultValue default value. @return property value as a <code>Class[]</code>, or <code>defaultValue</code>.
2642 Get a local file name under a directory named in <i>dirsProp</i> with the given <i>path</i>. If <i>dirsProp</i> contains multiple directories, then one is chosen based on <i>path</i>'s hash code. If the selected directory does not exist, an attempt is made to create it. @param dirsProp directory in which to locate the file. @param path file-path. @return local file under the directory with the given path. @throws IOException raised on errors performing I/O.
2643 <p> Serializations are found by reading the <code>io.serializations</code> property from <code>conf</code>, which is a comma-delimited list of classnames. </p> @param conf configuration.
2644 Constructs a mapping of configuration properties to be used for filter initialization. The mapping includes all properties that start with the specified configuration prefix. Property names in the mapping are trimmed to remove the configuration prefix. @param conf configuration to read @param confPrefix configuration prefix @return mapping of configuration properties to be used for filter initialization
2645 Constructs a mapping of configuration properties to be used for filter initialization. The mapping includes all properties that start with the specified configuration prefix. Property names in the mapping are trimmed to remove the configuration prefix. @param conf configuration to read @param confPrefix configuration prefix @return mapping of configuration properties to be used for filter initialization
2646 Propagate options to any builder, converting everything with the prefix to an option where, if there were 2+ dot-separated elements, it is converted to a schema. <pre> fs.example.s3a.option becomes "s3a.option" fs.example.fs.io.policy becomes "fs.io.policy" fs.example.something becomes "something" </pre> @param builder builder to modify @param conf configuration to read @param prefix prefix to scan/strip @param mandatory are the options to be mandatory or optional?
2647 Print configuration options that can be changed.
2648 Add a link to the config for the default mount table @param conf - add the link to this conf @param src - the src path name @param target - the target URI link
2649 Add a LinkMergeSlash to the config for the default mount table. @param conf configuration. @param target targets.
2650 Add a LinkFallback to the config for the default mount table. @param conf configuration. @param target targets.
2651 Add a LinkMerge to the config for the default mount table. @param conf configuration. @param targets targets array.
2652 Add config variable for homedir for default mount table @param conf - add to this conf @param homedir - the home dir path starting with slash
2653 Get the value of the home dir conf value for default mount table @param conf - from this conf @return home dir value, null if variable is not in conf
2654 Create encoder corresponding to given codec. @param options Erasure codec options @param conf configuration. @return erasure encoder
2655 Create decoder corresponding to given codec. @param options Erasure codec options @param conf configuration. @return erasure decoder
2656 Return the appropriate type of the bzip2 compressor. @param conf configuration @return the appropriate type of the bzip2 compressor.
2657 Return the appropriate type of the bzip2 decompressor. @param conf configuration @return the appropriate type of the bzip2 decompressor.
2658 Return the appropriate implementation of the bzip2 decompressor. @param conf configuration @return the appropriate implementation of the bzip2 decompressor.
2659 Get the socket factory for the given class according to its configuration parameter <tt>hadoop.rpc.socket.factory.class.&lt;ClassName&gt;</tt>. When no such parameter exists then fall back on the default socket factory as configured by <tt>hadoop.rpc.socket.factory.class.default</tt>. If this default socket factory is not configured, then fall back on the JVM default socket factory. @param conf the configuration @param clazz the class (usually a {@link VersionedProtocol}) @return a socket factory
2660 Constructor for the helper class to configure the ZooKeeper client connection. @param zkPrincipal Optional. @param kerberosPrincipal Optional. Use along with kerberosKeytab. @param kerberosKeytab Optional. Use along with kerberosPrincipal.
2661 Initializes the factory. @throws GeneralSecurityException thrown if an SSL initialization error happened. @throws IOException thrown if an IO error happened while reading the SSL configuration.
2662 Is the authentication method of this configuration "simple"? @param conf configuration to check @return true if auth is simple (i.e. not kerberos)
2663 Set the static configuration to get and evaluate the rules. <p> IMPORTANT: This method does a NOP if the rules have been set already. If there is a need to reset the rules, the {@link KerberosName#setRules(String)} method should be invoked directly. @param conf the new configuration @throws IOException raised on errors performing I/O.
2664 Get crypto codec for specified algorithm/mode/padding. @param conf the configuration @param cipherSuite algorithm/mode/padding @return CryptoCodec the codec object. Null value will be returned if no crypto codec classes with cipher suite configured.
2665 Get a singleton instance of hash function of a type defined in the configuration. @param conf current configuration @return defined hash type, or null if type is invalid
2666 Build a FlagSet from a comma separated list of values. Case independent. Special handling of "*" meaning: all values. @param enumClass class of enum @param conf configuration @param key key to look for @param ignoreUnknown should unknown values raise an exception? @param <E> enumeration type @return a mutable FlagSet @throws IllegalArgumentException if one of the entries was unknown and ignoreUnknown is false, or there are two entries in the enum which differ only by case.
2667 Write out the non-default properties in this configuration to the given {@link Writer}. <ul> <li> When property name is not empty and the property exists in the configuration, this method writes the property and its attributes to the {@link Writer}. </li> <li> When property name is null or empty, this method writes all the configuration properties and their attributes to the {@link Writer}. </li> <li> When property name is not empty but the property doesn't exist in the configuration, this method throws an {@link IllegalArgumentException}. </li> </ul> @param propertyName xml property name. @param out the writer to write to. @param config configuration. @throws IOException raised on errors performing I/O.
2668 Writes out all properties and their attributes (final and resource) to the given {@link Writer}, the format of the output would be, <pre> { "properties" : [ { key : "key1", value : "value1", isFinal : "key1.isFinal", resource : "key1.resource" }, { key : "key2", value : "value2", isFinal : "ke2.isFinal", resource : "key2.resource" } ] } </pre> It does not output the properties of the configuration object which is loaded from an input stream. <p> @param config the configuration @param out the Writer to write to @throws IOException raised on errors performing I/O.
2669 Set optional int parameter for the Builder. @see #opt(String, String)
2670 Set optional float parameter for the Builder. @see #opt(String, String)
2671 Set optional double parameter for the Builder. @see #opt(String, String)
2672 Set mandatory int option. @see #must(String, String)
2673 Make an metrics source from an annotated object. @param source the annotated object. @return a metrics source
2674 Create an FSDataOutputStream at the indicated Path. @param f the file name to open @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @param replication required block replication for the file. @param blockSize the size of the buffer to be used. @throws IOException IO failure @return output stream.
2675 Create or overwrite file on indicated path and returns an output stream for writing into the file. @param f the file name to open @param createFlag gives the semantics of create; see {@link CreateFlag} @param opts file creation options; see {@link Options.CreateOpts}. <ul> <li>Progress - to report progress on the operation - default null <li>Permission - umask is applied against permission: default is FsPermissions:getDefault() <li>CreateParent - create missing parent path; default is to not to create parents <li>The defaults for the following are SS defaults of the file server implementing the target path. Not all parameters make sense for all kinds of file system - eg. localFS ignores Blocksize, replication, checksum <ul> <li>BufferSize - buffersize used in FSDataOutputStream <li>Blocksize - block size for file blocks <li>ReplicationFactor - replication for blocks <li>ChecksumParam - Checksum parameters. server default is used if not specified. </ul> </ul> @return {@link FSDataOutputStream} for created file @throws AccessControlException If access is denied @throws FileAlreadyExistsException If file <code>f</code> already exists @throws FileNotFoundException If parent of <code>f</code> does not exist and <code>createParent</code> is false @throws ParentNotDirectoryException If parent of <code>f</code> is not a directory. @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>f</code> is not valid
2676 Make(create) a directory and all the non-existent parents. @param dir - the dir to make @param permission - permissions is set permission{@literal &~}umask @param createParent - if true then missing parent dirs are created if false then parent must exist @throws AccessControlException If access is denied @throws FileAlreadyExistsException If directory <code>dir</code> already exists @throws FileNotFoundException If parent of <code>dir</code> does not exist and <code>createParent</code> is false @throws ParentNotDirectoryException If parent of <code>dir</code> is not a directory @throws UnsupportedFileSystemException If file system for <code>dir</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>dir</code> is not valid
2677 A little test program. @param args arguments. @throws Exception exception.
2678 Convert Kerberos principal name pattern to valid Kerberos principal names. It replaces hostname pattern with hostname, which should be fully-qualified domain name. If hostname is null or "0.0.0.0", it uses dynamically looked-up fqdn of the current host instead. @param principalConfig the Kerberos principal name conf value to convert @param hostname the fully-qualified domain name used for substitution @return converted Kerberos principal name @throws IOException if the client address cannot be determined
2679 Convert Kerberos principal name pattern to valid Kerberos principal names. This method is similar to {@link #getServerPrincipal(String, String)}, except 1) the reverse DNS lookup from addr to hostname is done only when necessary, 2) param addr can't be null (no default behavior of using local hostname when addr is null). @param principalConfig Kerberos principal name pattern to convert @param addr InetAddress of the host used for substitution @return converted Kerberos principal name @throws IOException if the client address cannot be determined
2680 Add a protocol to the existing server. @param rpcKind - input rpcKind @param protocolClass - the protocol class @param protocolImpl - the impl of the protocol that will be called @return the server (for convenience)
2681 Creates a new KeyProvider from the given Configuration and configuration key name. @param conf Configuration @param configKeyName The configuration key name @return new KeyProvider, or null if no provider was found. @throws IOException if the KeyProvider is improperly specified in the Configuration
2682 Get the default FileSystem URI from a configuration. @param conf the configuration to use @return the uri of the default filesystem
2683 A cursory look at the {@code kinit} executable. If it is an absolute path: it must exist with a size > 0. If it is just a command, it has to be on the path. There's no check for that -but the PATH is printed out.
2684 Get the socket address for <code>name</code> property as a <code>InetSocketAddress</code>. @param name property name. @param defaultAddress the default value @param defaultPort the default port @return InetSocketAddress
2685 Set the socket address a client can use to connect for the <code>name</code> property as a <code>host:port</code>. The wildcard address is replaced with the local host's address. If the host and address properties are configured the host component of the address will be combined with the port component of the addr to generate the address. This is to allow optional control over which host name is used in multi-home bind-host cases where a host can have multiple names @param hostProperty the bind-host configuration name @param addressProperty the service address configuration name @param defaultAddressValue the service default address configuration value @param addr InetSocketAddress of the service listener @return InetSocketAddress for clients to connect
2686 Perform the open operation. @return a future to the input stream. @throws IOException early failure to open @throws UnsupportedOperationException if the specific operation is not supported. @throws IllegalArgumentException if the parameters are not valid.
2687 Perform the open operation. Returns a future which, when get() or a chained completion operation is invoked, will supply the input stream of the file referenced by the path/path handle. @return a future to the input stream. @throws IOException early failure to open @throws UnsupportedOperationException if the specific operation is not supported. @throws IllegalArgumentException if the parameters are not valid.
2688 Set configuration from UI. @param uri @param conf @throws IOException
2689 Connecting by using configuration parameters. @return An FTPClient instance @throws IOException
2690 Initialize from a filesystem.
2691 Opens an FSDataInputStream at the indicated Path. @param f the file to open @throws IOException IO failure @return input stream.
2692 Open an FSDataInputStream matching the PathHandle instance. The implementation may encode metadata in PathHandle to address the resource directly and verify that the resource referenced satisfies constraints specified at its construciton. @param fd PathHandle object returned by the FS authority. @throws InvalidPathHandleException If {@link PathHandle} constraints are not satisfied @throws IOException IO failure @throws UnsupportedOperationException If {@link #open(PathHandle, int)} not overridden by subclass @return input stream.
2693 Append to an existing file (optional operation). Same as {@code append(f, getConf().getInt(IO_FILE_BUFFER_SIZE_KEY, IO_FILE_BUFFER_SIZE_DEFAULT), null)} @param f the existing file to be appended. @throws IOException IO failure @throws UnsupportedOperationException if the operation is unsupported (default). @return output stream.
2694 Append to an existing file (optional operation). @param f the existing file to be appended. @param appendToNewBlock whether to append data to a new block instead of the end of the last partial block @throws IOException IO failure @throws UnsupportedOperationException if the operation is unsupported (default). @return output stream.
2695 Instantiate. The configuration is used to read the count of permits issued for concurrent creation of filesystem instances. @param conf configuration
2696 Sort and merge using an arbitrary {@link RawComparator}. @param fs input FileSystem. @param comparator input RawComparator. @param keyClass input keyClass. @param valClass input valClass. @param conf input Configuration. @param metadata input metadata.
2697 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream} with the given {@link Compressor}. @param out the location for the final output stream @param compressor compressor to use @return a stream the user can write uncompressed data to have it compressed @throws IOException raised on errors performing I/O.
2698 Create a {@link CompressionInputStream} that will read from the given {@link InputStream} with the given {@link Decompressor}. @param in the stream to read compressed bytes from @param decompressor decompressor to use @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
2699 Create a new {@link Decompressor} for use by this {@link CompressionCodec}. @return a new decompressor for use by this codec
2700 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream} with the given {@link Compressor}. @param out the location for the final output stream @param compressor compressor to use @return a stream the user can write uncompressed data to, to have it compressed @throws IOException raised on errors performing I/O.
2701 Create a {@link CompressionInputStream} that will read from the given {@link InputStream} with the given {@link Decompressor}, and return a stream for uncompressed data. @param in the stream to read compressed bytes from @param decompressor decompressor to use @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
2702 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream} with the given {@link Compressor}. @param out the location for the final output stream @param compressor compressor to use @return a stream the user can write uncompressed data to have it compressed @throws IOException raised on errors performing I/O.
2703 Create a new {@link Compressor} for use by this {@link CompressionCodec}. @return a new compressor for use by this codec
2704 Create a {@link CompressionInputStream} that will read from the given {@link InputStream} with the given {@link Decompressor}. @param in the stream to read compressed bytes from @param decompressor decompressor to use @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
2705 Create a new {@link Decompressor} for use by this {@link CompressionCodec}. @return a new decompressor for use by this codec
2706 Copies from one stream to another. <strong>closes the input and output streams at the end</strong>. @param in InputStrem to read from @param out OutputStream to write to @param conf the Configuration object. @throws IOException raised on errors performing I/O.
2707 Copies from one stream to another. @param in InputStream to read from @param out OutputStream to write to @param conf the Configuration object @param close whether or not close the InputStream and OutputStream at the end. The streams are closed in the finally clause. @throws IOException raised on errors performing I/O.
2708 Get the configured buffer size
2709 Set the configuration and extract the configuration parameters of interest @param conf the new configuration
2710 Read crypto buffer size. @param conf configuration. @return hadoop.security.crypto.buffer.size.
2711 Read the number of levels from the configuration. This will affect the FairCallQueue's overall capacity. @throws IllegalArgumentException on invalid queue count
2712 Get the RPC time from configuration; If not set in the configuration, return the default value. @param conf Configuration @return the RPC timeout (ms)
2713 Get the ping interval from configuration; If not set in the configuration, return the default value. @param conf Configuration @return the ping interval
2714 The time after which a RPC will timeout. @param conf Configuration @return the timeout period in milliseconds.
2715 Create a line reader that reads from the given stream using the <code>io.file.buffer.size</code> specified in the given <code>Configuration</code>. @param in input stream @param conf configuration @throws IOException raised on errors performing I/O.
2716 Create a line reader that reads from the given stream using the <code>io.file.buffer.size</code> specified in the given <code>Configuration</code>, and using a custom delimiter of array of bytes. @param in input stream @param conf configuration @param recordDelimiterBytes The delimiter @throws IOException raised on errors performing I/O.
2717 See {@link Configuration#getInt(String, int)}.
2718 Set the FTPClient's timeout based on configuration. FS_FTP_TIMEOUT is set as timeout (defaults to DEFAULT_TIMEOUT).
2719 Get a long value with resilience to unparseable values. @param key key to log @param defVal default value @return long value
2720 Return the number of bytes that large input files should be optimally be split into to minimize I/O time. @deprecated use {@link #getDefaultBlockSize(Path)} instead @return default block size.
2721 See {@link Configuration#getLong(String, long)}.
2722 See {@link Configuration#getFloat(String, float)}.
2723 @deprecated Use {@link #initialize(Configuration, FileSystem)} instead.
2724 Check the bool config whether nested mount point is supported. Default: true @param conf - from this conf @return whether nested mount point is supported
2725 Create a new {@link Compressor} for use by this {@link CompressionCodec}. @return a new compressor for use by this codec
2726 Return the MultipleLinearRandomRetry policy specified in the conf, or null if the feature is disabled. If the policy is specified in the conf but the policy cannot be parsed, the default policy is returned. Retry policy spec: N pairs of sleep-time and number-of-retries "s1,n1,s2,n2,..." @param conf configuration. @param retryPolicyEnabledKey conf property key for enabling retry @param defaultRetryPolicyEnabled default retryPolicyEnabledKey conf value @param retryPolicySpecKey conf property key for retry policy spec @param defaultRetryPolicySpec default retryPolicySpecKey conf value @return the MultipleLinearRandomRetry policy specified in the conf, or null if the feature is disabled.
2727 Add default apps. @param parent contexthandlercollection. @param appDir The application directory @param conf configuration. @throws IOException raised on errors performing I/O.
2728 Add default servlets. @param configuration the hadoop configuration
2729 Return boolean value configured by property 'ipc.<port>.callqueue.overflow.trigger.failover' if it is present. If the config is not present, default config (without port) is used to derive class i.e 'ipc.callqueue.overflow.trigger.failover', and derived value is returned if configured. Otherwise, default value {@link CommonConfigurationKeys#IPC_CALLQUEUE_SERVER_FAILOVER_ENABLE_DEFAULT} is returned. @param namespace Namespace "ipc" + "." + Server's listener port. @param conf Configuration properties. @return Value returned based on configuration.
2730 Construct an IPC client whose values are of the given {@link Writable} class. @param valueClass input valueClass. @param conf input configuration. @param factory input factory.
2731 Get from config if client backoff is enabled on that port.
2732 Return boolean value configured by property 'ipc.<port>.backoff.enable' if it is present. If the config is not present, default config (without port) is used to derive class i.e 'ipc.backoff.enable', and derived value is returned if configured. Otherwise, default value {@link CommonConfigurationKeys#IPC_BACKOFF_ENABLE_DEFAULT} is returned. @param namespace Namespace "ipc". @param port Server's listener port. @param conf Configuration properties. @return Value returned based on configuration.
2733 Fallback to clear text passwords in configuration. @param name the property name. @return clear text password or null
2734 See {@link Configuration#getBoolean(String, boolean)}.
2735 Get the FileSystem implementation class of a filesystem. This triggers a scan and load of all FileSystem implementations listed as services and discovered via the {@link ServiceLoader} @param scheme URL scheme of FS @param conf configuration: can be null, in which case the check for a filesystem binding declaration in the configuration is skipped. @return the filesystem @throws UnsupportedFileSystemException if there was no known implementation for the scheme. @throws IOException if the filesystem could not be loaded
2736 Create a file system instance for the specified uri using the conf. The conf is used to find the class name that implements the file system. The conf is also passed to the file system for its configuration. @param uri URI of the file system @param conf Configuration for the file system @return Returns the file system for the given URI @throws UnsupportedFileSystemException file system for <code>uri</code> is not found
2737 Return class configured by property 'ipc.<port>.callqueue.impl' if it is present. If the config is not present, default config (without port) is used to derive class i.e 'ipc.callqueue.impl', and derived class is returned if class value is present and valid. If default config is also not present, default class {@link LinkedBlockingQueue} is returned. @param namespace Namespace "ipc". @param port Server's listener port. @param conf Configuration properties. @return Class returned based on configuration.
2738 Return class configured by property 'ipc.<port>.scheduler.impl' if it is present. If the config is not present, and if property 'ipc.<port>.callqueue.impl' represents FairCallQueue class, return DecayRpcScheduler. If config 'ipc.<port>.callqueue.impl' does not have value FairCallQueue, default config (without port) is used to derive class i.e 'ipc.scheduler.impl'. If default config is also not present, default class {@link DefaultRpcScheduler} is returned. @param namespace Namespace "ipc". @param port Server's listener port. @param conf Configuration properties. @return Class returned based on configuration.
2739 Get the value of the <code>name</code> property as a <code>Class</code> implementing the interface specified by <code>xface</code>. If no such property is specified, then <code>defaultValue</code> is returned. An exception is thrown if the returned class does not implement the named interface. @param name the conf key name. @param defaultValue default value. @param xface the interface implemented by the named class. @param <U> Interface class type. @return property value as a <code>Class</code>, or <code>defaultValue</code>.
2740 Get the FS instance if the key maps to an instance, creating and initializing the FS if it is not found. If this is the first entry in the map and the JVM is not shutting down, this registers a shutdown hook to close filesystems, and adds this FS to the {@code toAutoClose} set if {@code "fs.automatic.close"} is set in the configuration (default: true). @param uri filesystem URI @param conf configuration @param key key to store/retrieve this FileSystem in the cache @return a cached or newly instantiated FileSystem. @throws IOException If an I/O error occurred.
2741 Get the shutdown timeout in seconds, from the supplied configuration. @param conf configuration to use. @return a timeout, always greater than or equal to {@link #TIMEOUT_MINIMUM}
2742 Try and resolve the provided element name as a credential provider alias. @param name alias of the provisioned credential @return password or null if not found @throws IOException when error in fetching password
2743 Read the weights of capacity in callqueue and pass the value to callqueue constructions.
2744 Get an array of FilterConfiguration specified in the conf
2745 Get the value of the <code>name</code> property as a <code>List</code> of objects implementing the interface specified by <code>xface</code>. An exception is thrown if any of the classes does not exist, or if it does not implement the named interface. @param name the property name. @param xface the interface implemented by the classes named by <code>name</code>. @param <U> Interface class type. @return a <code>List</code> of objects implementing <code>xface</code>.
2746 Initialize.
2747 Propagate options to any builder. {@link FutureIO#propagateOptions(FSBuilder, Configuration, String, boolean)} @param builder builder to modify @param conf configuration to read @param prefix prefix to scan/strip @param mandatory are the options to be mandatory or optional?
2748 Propagate options to any builder, converting everything with the prefix to an option where, if there were 2+ dot-separated elements, it is converted to a schema. See {@link #propagateOptions(FSBuilder, Configuration, String, boolean)}. @param builder builder to modify @param conf configuration to read @param optionalPrefix prefix for optional settings @param mandatoryPrefix prefix for mandatory settings @param <T> type of result @param <U> type of builder @return the builder passed in.
2749 A tool to test native library availability. @param args args.
2750 Get the type of {@link Compressor} needed by this {@link CompressionCodec}. @return the type of compressor needed by this codec.
2751 Get the type of {@link Decompressor} needed by this {@link CompressionCodec}. @return the type of decompressor needed by this codec.
2752 Create a new {@link Decompressor} for use by this {@link CompressionCodec}. @return a new decompressor for use by this codec
2753 Constructor for the helper class to configure the ZooKeeper client connection. @param zkPrincipal Optional.
2754 Perform the second query to get the groups of the user. If posixGroups is enabled, use use posix gid/uid to find. Otherwise, use the general group member attribute to find it. @param result the result object returned from the prior user lookup. @param c the context object of the LDAP connection. @return a list of strings representing group names of the user. @throws NamingException if unable to find group names
2755 Get crypto codec for algorithm/mode/padding in config value hadoop.security.crypto.cipher.suite @param conf the configuration @return CryptoCodec the codec object Null value will be returned if no crypto codec classes with cipher suite configured.
2756 A convenience method to bind to a given address and report better exceptions if the address is not a valid host. @param socket the socket to bind @param address the address to bind to @param backlog the number of connections allowed in the queue @throws BindException if the address can't be bound @throws UnknownHostException if the address isn't a valid host name @throws IOException other random errors from bind
2757 Writes properties and their attributes (final and resource) to the given {@link Writer}. <ul> <li> When propertyName is not empty, and the property exists in the configuration, the format of the output would be, <pre> { "property": { "key" : "key1", "value" : "value1", "isFinal" : "key1.isFinal", "resource" : "key1.resource" } } </pre> </li> <li> When propertyName is null or empty, it behaves same as {@link #dumpConfiguration(Configuration, Writer)}, the output would be, <pre> { "properties" : [ { key : "key1", value : "value1", isFinal : "key1.isFinal", resource : "key1.resource" }, { key : "key2", value : "value2", isFinal : "ke2.isFinal", resource : "key2.resource" } ] } </pre> </li> <li> When propertyName is not empty, and the property is not found in the configuration, this method will throw an {@link IllegalArgumentException}. </li> </ul> <p> @param config the configuration @param propertyName property name @param out the Writer to write to @throws IOException raised on errors performing I/O. @throws IllegalArgumentException when property name is not empty and the property is not found in configuration
2758 Creates the specified directory hierarchy. Does not treat existence as an error.
2759 Get the remote server's principal. The value will be obtained from the config and cross-checked against the server's advertised principal. @param authType of the SASL client @return String of the server's principal @throws IOException - error determining configured principal
2760 decode the raw URI to get the underlying URI @param rawURI raw Har URI @return filtered URI of the underlying fileSystem
2761 Returns the configured FileSystem implementation. @param conf the configuration to use @return FileSystem. @throws IOException If an I/O error occurred.
2762 Initialize a FileSystem. Called after the new FileSystem instance is constructed, and before it is ready for use. FileSystem implementations overriding this method MUST forward it to their superclass, though the order in which it is done, and whether to alter the configuration before the invocation are options of the subclass. @param name a URI whose authority section names the host, port, etc. for this FileSystem @param conf the configuration @throws IOException on any failure to initialize this instance. @throws IllegalArgumentException if the URI is considered invalid.
2763 Returns a unique configured FileSystem implementation for the default filesystem of the supplied configuration. This always returns a new FileSystem object. @param conf the configuration to use @return the new FS instance @throws IOException FS creation or initialization failure.
2764 Check that a Path belongs to this FileSystem. The base implementation performs case insensitive equality checks of the URIs' schemes and authorities. Subclasses may implement slightly different checks. @param path to check @throws IllegalArgumentException if the path is not considered to be part of this FileSystem.
2765 Get the socket address for <code>hostProperty</code> as a <code>InetSocketAddress</code>. If <code>hostProperty</code> is <code>null</code>, <code>addressProperty</code> will be used. This is useful for cases where we want to differentiate between host bind address and address clients should use to establish connection. @param hostProperty bind host property name. @param addressProperty address property name. @param defaultAddressValue the default value @param defaultPort the default port @return InetSocketAddress
2766 A stream obtained via this call must be closed before using other APIs of this class or else the invocation will block.
2767 Constructor. @param fileSystem owner FS. @param path path
2768 Constructor with PathHandle. @param fileSystem owner FS. @param pathHandle path handle
2769 Open a file. <p> If the WrappedIO class is found, uses {@link #fileSystem_openFile(FileSystem, Path, String, FileStatus, Long, Map)} with {@link #PARQUET_READ_POLICIES} as the list of read policies and passing down the file status. <p> If not, falls back to the classic {@code fs.open(Path)} call. @param instance dynamic wrapped IO instance. @param fs filesystem @param status file status @param readPolicies read policy to use @return the input stream @throws IOException any IO failure.
2770 Test whether the file system supports append and return the answer. @param fs the target file system
2771 Sort and merge using an arbitrary {@link RawComparator}. @param fs input FileSystem. @param comparator input RawComparator. @param keyClass input keyClass. @param valClass input valClass. @param conf input Configuration.
2772 Creates a new compressor, taking settings from the configuration. @param conf configuration.
2773 Prepare the compressor to be used in a new stream with settings defined in the given Configuration. It will reset the compressor's block size and and work factor. @param conf Configuration storing new settings
2774 Initialize the {@link Reader} @param tmpReader <code>true</code> if we are constructing a temporary reader {@link SequenceFile.Sorter.cloneFileAttributes}, and hence do not initialize every component; <code>false</code> otherwise. @throws IOException
2775 Prepare the compressor to be used in a new stream with settings defined in the given Configuration. It will reset the compressor's compression level and compression strategy. @param conf Configuration storing new settings
2776 Obtain an output stream for writing a value into TFile. This may only be called right after a key appending operation (the key append stream must be closed). @param length The expected length of the value. If length of the value is not known, set length = -1. Otherwise, the application must write exactly as many bytes as specified here before calling close on the returned output stream. Advertising the value size up-front guarantees that the value is encoded in one chunk, and avoids intermediate chunk buffering. @throws IOException raised on errors performing I/O. @return DataOutputStream.
2777 @param compressionAlgo The compression algorithm to be used to for compression. @throws IOException
2778 {@inheritDoc}. <p> This will get called in the superclass constructor, so a check is needed to ensure that the raw mapping is defined before trying to relaying a null configuration. </p> @param conf input Configuration.
2779 Set the configuration and extract the configuration parameters of interest @param conf the new configuration
2780 A helper function to create an options object. @param conf the configuration to use @return a new options object
2781 The time after which a RPC will timeout. If ping is not enabled (via ipc.client.ping), then the timeout value is the same as the pingInterval. If ping is enabled, then there is no timeout value. @param conf Configuration @return the timeout period in milliseconds. -1 if no timeout value is set @deprecated use {@link #getRpcTimeout(Configuration)} instead
2782 Connect to the FTP server using configuration parameters * @return An FTPClient instance @throws IOException
2783 Get a long value with resilience to unparseable values. Negative values are replaced with the default. @param key key to log @param defVal default value @return long value
2784 Return a set of server default configuration values. @return server default configuration values @throws IOException IO failure @deprecated use {@link #getServerDefaults(Path)} instead
2785 Return the number of bytes that large input files should be optimally be split into to minimize I/O time. The given path will be used to locate the actual filesystem. The full path does not have to exist. @param f path of file @return the default block size for the path's filesystem
2786 Moves files to a bad file directory on the same device, so that their storage will not be reused.
2787 This is the constructor used by the builder. All overriding classes should implement this. @param builder builder. @throws IOException raised on errors performing I/O.
2788 @deprecated Call {@link #nextRaw(DataOutputBuffer,SequenceFile.ValueBytes)}.
2789 Return the default retry policy set in conf. If the value retryPolicyEnabledKey is set to false in conf, use TRY_ONCE_THEN_FAIL. Otherwise, get the MultipleLinearRandomRetry policy specified in the conf and then (1) use multipleLinearRandomRetry for - remoteExceptionToRetry, or - IOException other than RemoteException, or - ServiceException; and (2) use TRY_ONCE_THEN_FAIL for - non-remoteExceptionToRetry RemoteException, or - non-IOException. @param conf configuration. @param retryPolicyEnabledKey conf property key for enabling retry @param defaultRetryPolicyEnabled default retryPolicyEnabledKey conf value @param retryPolicySpecKey conf property key for retry policy spec @param defaultRetryPolicySpec default retryPolicySpecKey conf value @param remoteExceptionToRetry The particular RemoteException to retry @return the default retry policy.
2790 Construct an IPC client with the default SocketFactory. @param valueClass input valueClass. @param conf input Configuration.
2791 Construct &amp; cache an IPC client with the user-provided SocketFactory if no cached client exists. @param conf Configuration @param factory SocketFactory for client socket @param valueClass Class of the expected response @return an IPC client
2792 There are certain integrations of the credential provider API in which a recursive dependency between the provider and the hadoop filesystem abstraction causes a problem. These integration points need to leverage this utility method to remove problematic provider types from the existing provider path within the configuration. @param config the existing configuration with provider path @param fileSystemClass the class which providers must be compatible @return Configuration clone with new provider path @throws IOException raised on errors performing I/O.
2793 The main factory method for creating a file system. Get a file system for the URI's scheme and authority. The scheme of the <code>uri</code> determines a configuration property name, <tt>fs.AbstractFileSystem.<i>scheme</i>.impl</tt> whose value names the AbstractFileSystem class. The entire URI and conf is passed to the AbstractFileSystem factory method. @param uri for the file system to be created. @param conf which is passed to the file system impl. @return file system for the given URI. @throws UnsupportedFileSystemException if the file system for <code>uri</code> is not supported.
2794 @return Build the RPC Server. @throws IOException on error @throws HadoopIllegalArgumentException when mandatory fields are not set
2795 Get an instance of the configured TrashPolicy based on the value of the configuration parameter fs.trash.classname. @param conf the configuration to be used @param fs the file system to be used @param home the home directory @return an instance of TrashPolicy @deprecated Use {@link #getInstance(Configuration, FileSystem)} instead.
2796 Get an instance of the configured TrashPolicy based on the value of the configuration parameter fs.trash.classname. @param conf the configuration to be used @param fs the file system to be used @return an instance of TrashPolicy
2797 This function gets the instance based on the config. @param conf Configuration @param configKey config key name. @return Domain name resolver.
2798 Returns an instance of SaslPropertiesResolver. Looks up the configuration to see if there is custom class specified. Constructs the instance by passing the configuration directly to the constructor to achieve thread safety using final fields. @param conf configuration. @return SaslPropertiesResolver
2799 Try to load the SASL resolver. @param saslPropsResolverKey key for the SASL resolver
2800 Returns an instance of ImpersonationProvider. Looks up the configuration to see if there is custom class specified. @param conf @return ImpersonationProvider
2801 Shutdown the executor thread itself. @param conf the configuration containing the shutdown timeout setting.
2802 Get the value for a known password configuration element. In order to enable the elimination of clear text passwords in config, this method attempts to resolve the property name as an alias through the CredentialProvider API and conditionally fallsback to config. @param name property name @return password @throws IOException when error in fetching password
2803 Create RS raw encoder according to configuration. @param conf configuration @param coderOptions coder options that's used to create the coder @param codec the codec to use. If null, will use the default codec @return raw encoder
2804 Create RS raw decoder according to configuration. @param conf configuration @param coderOptions coder options that's used to create the coder @param codec the codec to use. If null, will use the default codec @return raw decoder
2805 Replaces active queue with the newly requested one and transfers all calls to the newQ before returning. @param schedulerClass input schedulerClass. @param queueClassToUse input queueClassToUse. @param maxSize input maxSize. @param ns input ns. @param conf input configuration.
2806 Create a FairCallQueue. @param priorityLevels the total size of all multi-level queue priority policies @param capacity the total size of all sub-queues @param ns the prefix to use for configuration @param capacityWeights the weights array for capacity allocation among subqueues @param serverFailOverEnabled whether or not to enable callqueue overflow trigger failover for stateless servers when RPC call queue is filled @param conf the configuration to read from Notes: Each sub-queue has a capacity of `capacity / numSubqueues`. The first or the highest priority sub-queue has an excess capacity of `capacity % numSubqueues`
2807 Stores the item in the configuration with the given keyName. @param <K> the class of the item @param conf the configuration to store @param item the object to be stored @param keyName the name of the key to use @throws IOException : forwards Exceptions from the underlying {@link Serialization} classes.
2808 Restores the object from the configuration. @param <K> the class of the item @param conf the configuration to use @param keyName the name of the key to use @param itemClass the class of the item @return restored object @throws IOException : forwards Exceptions from the underlying {@link Serialization} classes.
2809 Stores the array of items in the configuration with the given keyName. @param <K> the class of the item @param conf the configuration to use @param items the objects to be stored @param keyName the name of the key to use @throws IndexOutOfBoundsException if the items array is empty @throws IOException : forwards Exceptions from the underlying {@link Serialization} classes.
2810 Restores the array of objects from the configuration. @param <K> the class of the item @param conf the configuration to use @param keyName the name of the key to use @param itemClass the class of the item @return restored object @throws IOException : forwards Exceptions from the underlying {@link Serialization} classes.
2811 Create the named file with write-progress reporter. @deprecated Use {@link SequenceFile#createWriter(Configuration, Writer.Option...)} instead. @param fs input filesystem. @param conf input configuration. @param name input name. @param keyClass input keyClass. @param valClass input valClass. @param bufferSize input bufferSize. @param replication input replication. @param blockSize input blockSize. @param progress input progress. @param metadata input metadata. @throws IOException raised on errors performing I/O.
2812 Make a copy of the writable object using serialization to a buffer. @param src the object to copy from @param dst the object to copy into, which is destroyed @param <T> Generics Type. @param conf configuration. @return dst param (the copy) @throws IOException raised on errors performing I/O.
2813 Propagate options to any builder. {@link FutureIO#propagateOptions(FSBuilder, Configuration, String, String)} @param builder builder to modify @param conf configuration to read @param optionalPrefix prefix for optional settings @param mandatoryPrefix prefix for mandatory settings @param <T> type of result @param <U> type of builder @return the builder passed in.
2814 Perform LDAP queries to get group names of a user. Perform the first LDAP query to get the user object using the user's name. If one-query is enabled, retrieve the group names from the user object. If one-query is disabled, or if it failed, perform the second query to get the groups. @param user user name @return a list of group names for the user. If the user can not be found, return an empty string array. @throws NamingException if unable to get group names
2815 Guts of the servlet - extracted for easy testing.
2816 Initializes hadoop-auth AuthenticationFilter. <p> Propagates to hadoop-auth AuthenticationFilter configuration all Hadoop configuration properties prefixed with "hadoop.http.authentication." @param container The filter container @param conf Configuration for run-time parameters
2817 Try to create a SaslClient for an authentication type. May return null if the type isn't supported or the client lacks the required credentials. @param authType - the requested authentication method @return SaslClient for the authType or null @throws SaslException - error instantiating client @throws IOException - misc errors
2818 Create and initialize a new instance of a FileSystem. @param uri URI containing the FS schema and FS details @param conf configuration to use to look for the FS instance declaration and to pass to the {@link FileSystem#initialize(URI, Configuration)}. @return the initialized filesystem. @throws IOException problems loading or initializing the FileSystem
2819 Called after a new FileSystem instance is constructed. @param theUri a uri whose authority section names the host, port, etc. for this FileSystem @param conf the configuration
2820 Called after a new FileSystem instance is constructed. @param name a uri whose authority section names the host, port, etc. for this FileSystem @param conf the configuration
2821 Qualify a path to one which uses this FileSystem and, if relative, made absolute. @param path to qualify. @return this path if it contains a scheme and authority and is absolute, or a new path that includes a path and authority and is fully qualified @see Path#makeQualified(URI, Path) @throws IllegalArgumentException if the path has a schema/URI different from this FileSystem.
2822 Return the fully-qualified path of path, resolving the path through any symlinks or mount point. @param p path to be resolved @return fully qualified path @throws FileNotFoundException if the path is not present @throws IOException for any other error
2823 Check that a Path belongs to this FileSystem.
2824 Construct given a {@link FileContext} and a {@link Path}. @param fc filecontext. @param p the path. @throws IOException If an I/O error occurred.
2825 Copy from src to dst, optionally deleting src and overwriting dst. @param src src. @param dst dst. @param deleteSource - delete src if true @param overwrite overwrite dst if true; throw IOException if dst exists and overwrite is false. @return true if copy is successful @throws AccessControlException If access is denied @throws FileAlreadyExistsException If <code>dst</code> already exists @throws FileNotFoundException If <code>src</code> does not exist @throws ParentNotDirectoryException If parent of <code>dst</code> is not a directory @throws UnsupportedFileSystemException If file system for <code>src</code> or <code>dst</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server RuntimeExceptions: @throws InvalidPathException If path <code>dst</code> is invalid
2826 Path Constructor. @param fileSystem owner @param path path to open.
2827 Construct from a path handle. @param fileSystem owner @param pathHandle path handle of file to open.
2828 Open a file. <p> If the WrappedIO class is found, use it. <p> If not, falls back to the classic {@code fs.open(Path)} call. @param fs filesystem @param status file status @param readPolicies read policy to use @return the input stream @throws IOException any IO failure.
2829 Try loading from the user specified path, else load from the backup path in case Exception is not due to bad/wrong password. @param path Actual path to load from @param backupPath Backup path (_OLD) @return The permissions of the loaded file @throws NoSuchAlgorithmException @throws CertificateException @throws IOException
2830 Sort and merge files containing the named classes. @param fs input FileSystem. @param keyClass input keyClass. @param valClass input valClass. @param conf input Configuration.
2831 Return the appropriate implementation of the bzip2 compressor. @param conf configuration @return the appropriate implementation of the bzip2 compressor.
2832 Common work of the constructors.
2833 Create a {@link CompressionOutputStream} that will write to the given {@link OutputStream} with the given {@link Compressor}. @param out the location for the final output stream @param compressor compressor to use @return a stream the user can write uncompressed data to have compressed @throws IOException raised on errors performing I/O.
2834 Create a new {@link Compressor} for use by this {@link CompressionCodec}. @return a new compressor for use by this codec
2835 Create a {@link CompressionInputStream} that will read from the given {@link InputStream} with the given {@link Decompressor}. @param in the stream to read compressed bytes from @param decompressor decompressor to use @return a stream to read uncompressed bytes from @throws IOException raised on errors performing I/O.
2836 Create a new {@link Decompressor} for use by this {@link CompressionCodec}. @return a new decompressor for use by this codec
2837 Create a Data Block and obtain an output stream for adding data into the block. There can only be one BlockAppender stream active at any time. Data Blocks may not be created after the first Meta Blocks. The caller must call BlockAppender.close() to conclude the block creation. @return The BlockAppender stream @throws IOException
2838 Create an instance from the given configuration @param conf configuration
2839 {@inheritDoc}. <p> This will get called in the superclass constructor, so a check is needed to ensure that the raw mapping is defined before trying to relaying a null configuration. </p> @param conf input Configuration.
2840 Parse the command line arguments and initialize the data. <pre> % hadoop key create keyName [-size size] [-cipher algorithm] [-provider providerPath] % hadoop key roll keyName [-provider providerPath] % hadoop key list [-provider providerPath] % hadoop key delete keyName [-provider providerPath] [-i] % hadoop key invalidateCache keyName [-provider providerPath] </pre> @param args Command line arguments. @return 0 on success, 1 on failure. @throws IOException raised on errors performing I/O.
2841 Returns a ConnectionId object. @param addr Remote address for the connection. @param protocol Protocol for RPC. @param ticket UGI @param rpcTimeout timeout @param conf Configuration object @return A ConnectionId instance @throws IOException
2842 A stream obtained via this call must be closed before using other APIs of this class or else the invocation will block.
2843 Return a set of server default configuration values. @param p path is used to identify an FS since an FS could have another FS that it could be delegating the call to @return server default configuration values @throws IOException IO failure
2844 Create an FSDataOutputStream at the indicated Path. @param f the file to create @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an exception will be thrown. @throws IOException IO failure @return output stream.
2845 Create an FSDataOutputStream at the indicated Path with write-progress reporting. Files are overwritten by default. @param f the file to create @param progress to report progress @throws IOException IO failure @return output stream.
2846 Create an FSDataOutputStream at the indicated Path. Files are overwritten by default. @param f the file to create @param replication the replication factor @throws IOException IO failure @return output stream1
2847 Create an FSDataOutputStream at the indicated Path with write-progress reporting. Files are overwritten by default. @param f the file to create @param replication the replication factor @param progress to report progress @throws IOException IO failure @return output stream.
2848 Create an FSDataOutputStream at the indicated Path. @param f the file to create @param overwrite if a path with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @throws IOException IO failure @return output stream.
2849 Create an {@link FSDataOutputStream} at the indicated Path with write-progress reporting. The frequency of callbacks is implementation-specific; it may be "none". @param f the path of the file to open @param overwrite if a file with this name already exists, then if true, the file will be overwritten, and if false an error will be thrown. @param bufferSize the size of the buffer to be used. @param progress to report progress. @throws IOException IO failure @return output stream.
2850 Constructor. @param fileSystem file system. @param p the path.
2851 @return Read the next key in the file into <code>key</code>, skipping its value.True if another entry exists, and false at end of file. @param key key. @throws IOException raised on errors performing I/O.
2852 Read the next key in the file, skipping its value. @param key input Object key. @throws IOException raised on errors performing I/O. @return Return null at end of file.
2853 This constructor takes a connectionId, instead of creating a new one. @param protocol input protocol. @param connId input connId. @param conf input Configuration. @param factory input factory. @param alignmentContext Alignment context
2854 Construct &amp; cache an IPC client with the default SocketFactory and default valueClass if no cached client exists. @param conf Configuration @return an IPC client
2855 Construct &amp; cache an IPC client with the user-provided SocketFactory if no cached client exists. Default response type is ObjectWritable. @param conf Configuration @param factory SocketFactory for client socket @return an IPC client
2856 This constructor takes a connectionId, instead of creating a new one. @param protocol input protocol. @param connId input connId. @param conf input Configuration. @param factory input factory. @param alignmentContext Alignment context
2857 Returns whether the given method is supported or not. The protocol signatures are fetched and cached. The connection id for the proxy provided is re-used. @param rpcProxy Proxy which provides an existing connection id. @param protocol Protocol for which the method check is required. @param rpcKind The RpcKind for which the method check is required. @param version The version at the client. @param methodName Name of the method. @return true if the method is supported, false otherwise. @throws IOException raised on errors performing I/O.
2858 Construct a trash can accessor for the FileSystem provided. @param fs the FileSystem @param conf a Configuration @throws IOException raised on errors performing I/O.
2859 Get an instance of NetworkTopology based on the value of the configuration parameter net.topology.impl. @param conf the configuration to be used @return an instance of NetworkTopology
2860 Create a SaslRpcClient that can be used by a RPC client to negotiate SASL authentication with a RPC server @param ugi - connecting user @param protocol - RPC protocol @param serverAddr - InetSocketAddress of remote server @param conf - Configuration
2861 Refreshes configuration using the specified Proxy user prefix for properties. @param conf configuration @param proxyUserPrefix proxy user configuration prefix
2862 Adds a shutdownHook with a priority, the higher the priority the earlier will run. ShutdownHooks with same priority run in a non-deterministic order. @param shutdownHook shutdownHook <code>Runnable</code> @param priority priority of the shutdownHook.
2863 A wrapper of {@link Configuration#getPassword(String)}. It returns <code>String</code> instead of <code>char[]</code>. @param conf the configuration @param name the property name @return the password string or null
2864 Passwords should not be stored in configuration. Use {@link #getPasswordFromCredentialProviders( Configuration, String, String)} to avoid reading passwords from a configuration file.
2865 Utility method to fetch ZK auth info from the configuration. @param conf configuration. @param configKey config key. @throws java.io.IOException if the Zookeeper ACLs configuration file cannot be read @throws ZKUtil.BadAuthFormatException if the auth format is invalid @return ZKAuthInfo List.
2866 Create a decay scheduler. @param numLevels number of priority levels @param ns config prefix, so that we can configure multiple schedulers in a single instance. @param conf configuration to use.
2867 Make a copy of a writable object using serialization to a buffer. @param <T> Generics Type T. @param orig The object to copy @param conf input Configuration. @return The copied object
2868 Write out the non-default properties in this configuration to the given {@link OutputStream} using UTF-8 encoding. @param out the output stream to write to. @throws IOException raised on errors performing I/O.
2869 Instantiate a sasl client for the first supported auth type in the given list. The auth type must be defined, enabled, and the user must possess the required credentials, else the next auth is tried. @param authTypes to attempt in the given order @return SaslAuth of instantiated client @throws AccessControlException - client doesn't support any of the auths @throws IOException - misc errors
2870 This constructor has the signature needed by {@link AbstractFileSystem#createFileSystem(URI, Configuration)}. @param theUri which must be that of localFs @param conf @throws IOException @throws URISyntaxException
2871 This constructor has the signature needed by {@link AbstractFileSystem#createFileSystem(URI, Configuration)}. @param theUri which must be that of localFs @param conf @throws IOException @throws URISyntaxException
2872 Called after a new FileSystem instance is constructed. @param name a uri whose authority section names the host, port, etc. for this FileSystem @param conf the configuration
2873 Constructor. @param fileSystem fileSystem. @param p path.
2874 Creates an object to wrap the given parameters as fields. The string used to create the path will be recorded since the Path object does not return exactly the same string used to initialize it. @param fs the FileSystem @param pathString a String of the path @param stat the FileStatus (may be null if the path doesn't exist)
2875 The base FileSystem implementation generally has no knowledge of the capabilities of actual implementations. Unless it has a way to explicitly determine the capabilities, this method returns false. {@inheritDoc}
2876 Return path of the enclosing root for a given path. The enclosing root path is a common ancestor that should be used for temp and staging dirs as well as within encryption zones and other restricted directories. Call makeQualified on the param path to ensure its part of the correct filesystem. @param path file path to find the enclosing root path for @return a path to the enclosing root @throws IOException early checks like failure to resolve path cause IO failures
2877 Make sure that a path specifies a FileSystem.
2878 Returns the {@link FileStatus} from the {@link PathData} item. If the current options require links to be followed then the returned file status is that of the linked file. @param item PathData @param depth current depth in the process directories @return FileStatus @throws IOException raised on errors performing I/O.
2879 @param path @return full path including the chroot
2880 Copy file from src to dest. See {@link #copy(Path, Path, boolean, boolean)} @param src src. @param dst dst. @throws AccessControlException If access is denied. @throws FileAlreadyExistsException If file <code>src</code> already exists. @throws FileNotFoundException if next file does not exist any more. @throws ParentNotDirectoryException If parent of <code>src</code> is not a directory. @throws UnsupportedFileSystemException If file system for <code>src/dst</code> is not supported. @throws IOException If an I/O error occurred. @return if success copy true, not false.
2881 Create instance of the standard {@link FSDataInputStreamBuilder} for the given filesystem and path. @param fileSystem owner @param path path to read @return a builder.
2882 Create instance of the standard {@link FSDataInputStreamBuilder} for the given filesystem and path handle. @param fileSystem owner @param pathHandle path handle of file to open. @return a builder.
2883 The KeyStore might have gone down during a flush, In which case either the _NEW or _OLD files might exists. This method tries to load the KeyStore from one of these intermediate files. @param oldPath the _OLD file created during flush @param newPath the _NEW file created during flush @return The permissions of the loaded file @throws IOException @throws NoSuchAlgorithmException @throws CertificateException
2884 Create a new {@link Compressor} for use by this {@link CompressionCodec}. @return a new compressor for use by this codec
2885 Stream access to a Meta Block. @param name meta block name @return BlockReader input stream for reading the meta block. @throws IOException @throws MetaBlockDoesNotExist The Meta Block with the given name does not exist.
2886 Stream access to a Data Block. @param blockIndex 0-based data block index. @return BlockReader input stream for reading the data block. @throws IOException
2887 Close the BCFile Writer. Attempting to use the Writer after calling <code>close</code> is not allowed and may lead to undetermined results.
2888 Create a Meta Block and obtain an output stream for adding data into the block. There can only be one BlockAppender stream active at any time. Regular Blocks may not be created after the first Meta Blocks. The caller must call BlockAppender.close() to conclude the block creation. @param name The name of the Meta Block. The name must not conflict with existing Meta Blocks. @param compressionName The name of the compression algorithm to be used. @return The BlockAppender stream @throws IOException @throws MetaBlockAlreadyExists If the meta block with the name already exists.
2889 Create a Meta Block and obtain an output stream for adding data into the block. The Meta Block will be compressed with the same compression algorithm as data blocks. There can only be one BlockAppender stream active at any time. Regular Blocks may not be created after the first Meta Blocks. The caller must call BlockAppender.close() to conclude the block creation. @param name The name of the Meta Block. The name must not conflict with existing Meta Blocks. @return The BlockAppender stream @throws MetaBlockAlreadyExists If the meta block with the name already exists. @throws IOException
2890 Check if we need to start a new data block. @throws IOException
2891 Create an FSDataOutputStream at the indicated Path. Files are overwritten by default. @param f the file to create @throws IOException IO failure @return output stream.
2892 Create a new log file and return the {@link FSDataOutputStream}. If a file with the specified path already exists, add a suffix, starting with 1 and try again. Keep incrementing the suffix until a nonexistent target path is found. Once the file is open, update {@link #currentFSOutStream}, {@link #currentOutStream}, and {@#link #currentFilePath} are set appropriately. @param initial the target path @throws IOException thrown if the call to see if the exists fails
2893 Create a new log file and return the {@link FSDataOutputStream}. If a file with the specified path already exists, open the file for append instead. Once the file is open, update {@link #currentFSOutStream}, {@link #currentOutStream}, and {@#link #currentFilePath}. @param initial the target path @throws IOException thrown if the call to see the append operation fails.
2894 Save to a Hadoop filesystem. @param fs filesystem @param path path @param overwrite should any existing file be overwritten @param instance instance @throws IOException IO exception.
2895 Create the named file with write-progress reporter. @deprecated Use {@link SequenceFile#createWriter(Configuration, Writer.Option...)} instead. @param fs input filesystem. @param conf input configuration. @param name input name. @param keyClass input keyClass. @param valClass input valClass. @param progress input progress. @param metadata input metadata. @throws IOException raised on errors performing I/O.
2896 Creates the given Path as a brand-new zero-length file. If create fails, or if it already existed, return false. <i>Important: the default implementation is not atomic</i> @param f path to use for create @throws IOException IO failure @return if create new file success true,not false.
2897 Constructor. @param fileSystem owner @param p path to create
2898 Read the next key/value pair in the file into <code>key</code> and <code>val</code>. @return Returns true if such a pair exists and false when at end of file. @param key input key. @param val input val. @throws IOException raised on errors performing I/O.
2899 Construct a trash can accessor. @param conf a Configuration @throws IOException raised on errors performing I/O.
2900 Create a domain name resolver to convert the domain name in the config to the actual IP addresses of the Namenode/Router/RM. @param conf Configuration to get the resolver from. @param uri the url that the resolver will be used against @param configKey The config key name suffixed with the nameservice/yarnservice. @return Domain name resolver.
2901 Get the groups being used to map user-to-groups. @param conf configuration. @return the groups being used to map user-to-groups.
2902 Create new groups used to map user-to-groups with loaded configuration. @param conf configuration. @return the groups being used to map user-to-groups.
2903 Refreshes configuration using the default Proxy user prefix for properties. @param conf configuration
2904 Mark a path to be deleted on JVM shutdown. @param f the existing path to delete. @return true if deleteOnExit is successful, otherwise false. @throws AccessControlException If access is denied @throws UnsupportedFileSystemException If file system for <code>f</code> is not supported @throws IOException If an I/O error occurred Exceptions applicable to file systems accessed over RPC: @throws RpcClientException If an exception occurred in the RPC client @throws RpcServerException If an exception occurred in the RPC server @throws UnexpectedServerException If server implementation throws undeclared exception to RPC server
2905 Register the service for shutdown with Hadoop's {@link ShutdownHookManager}. @param priority shutdown hook priority
2906 Print a log message for starting up and shutting down @param clazz the class of the server @param args arguments @param log the target log object
2907 Load SSL properties from the SSL configuration.
2908 Implements logic of initializing the KeyManagers with the options to reload keystores. @param mode client or server @param keystoreType The keystore type. @param storesReloadInterval The interval to check if the keystore certificates file has changed.
2909 Utility method to fetch ZK auth info from the configuration. @param conf configuration. @throws java.io.IOException if the Zookeeper ACLs configuration file cannot be read @throws ZKUtil.BadAuthFormatException if the auth format is invalid @return ZKAuthInfo List.
2910 Returns list of groups for a user. The LdapCtx which underlies the DirContext object is not thread-safe, so we need to block around this whole method. The caching infrastructure will ensure that performance stays in an acceptable range. @param user get groups for this user @return list of groups for a given user
2911 For debugging. List non-default properties to the terminal and exit. @param args the argument to be parsed. @throws Exception exception.
2912 Do client side SASL authentication with server via the given IpcStreams. @param ipcStreams ipcStreams. @return AuthMethod used to negotiate the connection @throws IOException raised on errors performing I/O.
2913 Looks up the file status for a path. If the path doesn't exist, then the status will be null @param fs the FileSystem for the path @param pathString a string for a path @throws IOException if anything goes wrong
2914 Returns a list of PathData objects of the items contained in the given directory. @return list of PathData objects for its children @throws IOException if anything else goes wrong...
2915 Method to call after a FNFE has been raised on a treewalk, so as to decide whether to throw the exception (default), or, if the FS supports inconsistent directory listings, to log and ignore it. If this returns then the caller should ignore the failure and continue. @param fs filesystem @param path path @param e exception caught @throws FileNotFoundException the exception passed in, if rethrown.
2916 Declare that this filesystem connector is always read only. {@inheritDoc}
2917 Reject the concat operation; forward the rest to the viewed FS. @param path path to query the capability of. @param capability string to query the stream support for. @return the capability @throws IOException if there is no resolved FS, or it raises an IOE.
2918 Return path of the enclosing root for a given path. The enclosing root path is a common ancestor that should be used for temp and staging dirs as well as within encryption zones and other restricted directories. @param fs filesystem @param path file path to find the enclosing root path for @return a path to the enclosing root @throws IOException early checks like failure to resolve path cause IO failures
2919 Open a file for reading through a builder API. Ultimately calls {@link #open(Path, int)} unless a subclass executes the open command differently. The semantics of this call are therefore the same as that of {@link #open(Path, int)} with one special point: it is in {@code FSDataInputStreamBuilder.build()} in which the open operation takes place -it is there where all preconditions to the operation are checked. @param path file path @return a FSDataInputStreamBuilder object to build the input stream @throws IOException if some early checks cause IO failures. @throws UnsupportedOperationException if support is checked early.
2920 Open a file for reading through a builder API. Ultimately calls {@link #open(PathHandle, int)} unless a subclass executes the open command differently. If PathHandles are unsupported, this may fail in the {@code FSDataInputStreamBuilder.build()} command, rather than in this {@code openFile()} operation. @param pathHandle path handle. @return a FSDataInputStreamBuilder object to build the input stream @throws IOException if some early checks cause IO failures. @throws UnsupportedOperationException if support is checked early.
2921 Open up and initialize the keyStore. @throws IOException If there is a problem reading the password file or a problem reading the keystore.
2922 Lazily loading the TFile index. @throws IOException
2923 Stream access to a meta block.`` @param name The name of the meta block. @return The input stream. @throws IOException on I/O error. @throws MetaBlockDoesNotExist If the meta block with the name does not exist.
2924 Constructor @param fin FS input stream. @param fileLength Length of the corresponding file @throws IOException
2925 Obtain an output stream for creating a meta block. This function may not be called when there is a key append stream or value append stream active. No more key-value insertion is allowed after a meta data block has been added to TFile. @param name Name of the meta block. @param compressName Name of the compression algorithm to be used. Must be one of the strings returned by {@link TFile#getSupportedCompressionAlgorithms()}. @return A DataOutputStream that can be used to write Meta Block data. Closing the stream would signal the ending of the block. @throws IOException raised on errors performing I/O. @throws MetaBlockAlreadyExists the Meta Block with the same name already exists.
2926 Close the Writer. Resources will be released regardless of the exceptions being thrown. Future close calls will have no effect. The underlying FSDataOutputStream is not closed.
2927 Obtain an output stream for creating a meta block. This function may not be called when there is a key append stream or value append stream active. No more key-value insertion is allowed after a meta data block has been added to TFile. Data will be compressed using the default compressor as defined in Writer's constructor. @param name Name of the meta block. @return A DataOutputStream that can be used to write Meta Block data. Closing the stream would signal the ending of the block. @throws IOException raised on errors performing I/O. @throws MetaBlockAlreadyExists the Meta Block with the same name already exists.
2928 Obtain an output stream for writing a key into TFile. This may only be called when there is no active Key appending stream or value appending stream. @param length The expected length of the key. If length of the key is not known, set length = -1. Otherwise, the application must write exactly as many bytes as specified here before calling close on the returned output stream. @return The key appending output stream. @throws IOException raised on errors performing I/O.
2929 Copy local files to a FileSystem. @param src src. @param dstFS dstFs. @param dst dst. @param deleteSource delete source. @param conf configuration. @throws IOException raised on errors performing I/O. @return true if the operation succeeded.
2930 The upload complete operation. @param multipartUploadId the ID of the upload @param filePath path @param handleMap map of handles @return the path handle @throws IOException failure
2931 Create a file with the provided permission. The permission of the file is set to be the provided permission as in setPermission, not permission{@literal &~}umask The HDFS implementation is implemented using two RPCs. It is understood that it is inefficient, but the implementation is thread-safe. The other option is to change the value of umask in configuration to be 0, but it is not thread-safe. @param fs FileSystem @param file the name of the file to be created @param permission the permission of the file @return an output stream @throws IOException IO failure
2932 Create the named file. @deprecated Use {@link SequenceFile#createWriter(Configuration, Writer.Option...)} instead. @param fs input filesystem. @param conf input configuration. @param name input name. @param keyClass input keyClass. @param valClass input valClass. @throws IOException raised on errors performing I/O.
2933 Create a new directory based on the current interval and a new log file in that directory. @throws IOException thrown if an error occurs while creating the new directory or new log file
2934 Read the next key/value pair in the map into <code>key</code> and <code>val</code>. Returns true if such a pair exists and false when at the end of the map. @param key WritableComparable. @param val Writable. @return if such a pair exists true,not false. @throws IOException raised on errors performing I/O.
2935 Construct a client-side proxy object that implements the named protocol, talking to a server at the named address. @param <T> Generics Type. @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param ticket input ticket. @param conf input configuration. @param factory input factory. @param rpcTimeout input rpcTimeout. @param connectionRetryPolicy input connectionRetryPolicy. @param fallbackToSimpleAuth input fallbackToSimpleAuth. @param alignmentContext input alignmentContext. @return ProtocolProxy.
2936 Get the groups being used to map user-to-groups. @return the groups being used to map user-to-groups.
2937 Initialize UGI and related classes. @param conf the configuration to use
2938 This constructor exists primarily for AccessControlList to be Writable.
2939 Construct a new ACL from a String representation of the same. The String is a a comma separated list of users and groups. The user list comes first and is separated by a space followed by the group list. For e.g. "user1,user2 group1,group2" @param aclString String representation of the ACL
2940 Construct a new ACL from String representation of users and groups The arguments are comma separated lists @param users comma separated list of users @param groups comma separated list of groups
2941 refresh Impersonation rules
2942 Initializes the keystores of the factory. @param mode if the keystores are to be used in client or server mode. @throws IOException thrown if the keystores could not be initialized due to an IO error. @throws GeneralSecurityException thrown if the keystores could not be initialized due to a security error.
2943 Start the connection to the ZooKeeper ensemble. @param authInfos List of authentication keys. @param sslEnabled If the connection should be SSL/TLS encrypted. @throws IOException If the connection cannot be started.
2944 Returns list of groups for a user. This calls {@link LdapGroupsMapping}'s getGroups and applies the configured rules on group names before returning. @param user get groups for this user @return list of groups for a given user
2945 Initialized the metrics system with a prefix. @param prefix the system will look for configs with the prefix @return the metrics system object itself
2946 Returns a new PathData with the given extension. @param extension for the suffix @return PathData @throws IOException shouldn't happen
2947 Creates a new object for a child entry in this directory @param child the basename will be appended to this object's path @return PathData for the child @throws IOException if this object does not exist or is not a directory
2948 Gets the directory listing for a path and invokes {@link #processPaths(PathData, PathData...)} @param item {@link PathData} for directory to recurse into @throws IOException if anything goes wrong...
2949 Declare that this filesystem connector is always read only. {@inheritDoc}
2950 Declare that this filesystem connector is always read only. {@inheritDoc}
2951 Disable those operations which the checksummed FS blocks. {@inheritDoc}
2952 Returns the closest non-failing destination's result. @param f given path @return array of file statuses according to nfly modes @throws FileNotFoundException @throws IOException
2953 Copy a file/directory tree within/between filesystems. <p> returns true if the operation succeeded. When deleteSource is true, this means "after the copy, delete(source) returned true" If the destination is a directory, and mkdirs (dest) fails, the operation will return false rather than raise any exception. </p> The overwrite flag is about overwriting files; it has no effect about handing an attempt to copy a file atop a directory (expect an IOException), or a directory over a path which contains a file (mkdir will fail, so "false"). <p> The operation is recursive, and the deleteSource operation takes place as each subdirectory is copied. Therefore, if an operation fails partway through, the source tree may be partially deleted. </p> @param srcFS source filesystem @param srcStatus status of source @param dstFS destination filesystem @param dst path of source @param deleteSource delete the source? @param overwrite overwrite files at destination? @param conf configuration to use when opening files @return true if the operation succeeded. @throws IOException failure
2954 Copy FileSystem files to local files.
2955 Open a file. @param policy fadvise policy. @return an input stream @throws IOException failure
2956 Override this method to specialize the type of {@link FSDataInputStream} returned. @param fs The file system used to open the file. @param file The file being read. @param bufferSize The buffer size used to read the file. @param length The length being read if it is {@literal >=} 0. Otherwise, the length is not available. @return The opened stream. @throws IOException raised on errors performing I/O.
2957 Load from a Hadoop filesystem. If a file status is supplied, it's passed in to the openFile() call so that FS implementations can optimize their opening. @param fs filesystem @param path path @param status status of the file to open. @return a loaded object @throws PathIOException JSON parse problem @throws EOFException file status references an empty file @throws IOException IO problems
2958 Get the first key in the TFile. @return The first key in the TFile. @throws IOException raised on errors performing I/O.
2959 Get the last key in the TFile. @return The last key in the TFile. @throws IOException raised on errors performing I/O.
2960 if greater is true then returns the beginning location of the block containing the key strictly greater than input key. if greater is false then returns the beginning location of the block greater than equal to the input key @param key the input key @param greater boolean flag @return @throws IOException
2961 Get a sample key that is within a block whose starting offset is greater than or equal to the specified offset. @param offset The file offset. @return the key that fits the requirement; or null if no such key exists (which could happen if the offset is close to the end of the TFile). @throws IOException raised on errors performing I/O.
2962 Constructor @param fsdis FS input stream of the TFile. @param fileLength The length of TFile. This is required because we have no easy way of knowing the actual size of the input file through the File input stream. @param conf configuration. @throws IOException raised on errors performing I/O.
2963 Load a compressed block for reading. Expecting blockIndex is valid. @throws IOException
2964 Adding a new key-value pair to TFile. @param key buffer for key. @param koff offset in key buffer. @param klen length of key. @param value buffer for value. @param voff offset in value buffer. @param vlen length of value. @throws IOException Upon IO errors. <p> If an exception is thrown, the TFile will be in an inconsistent state. The only legitimate call after that would be close
2965 Get the key at approximately the middle of the file. Or null if the file is empty. @throws IOException raised on errors performing I/O. @return WritableComparable.
2966 Reads the final key from the file. @param key key to read into @throws IOException raised on errors performing I/O.
2967 Positions the reader at the named key, or if none such exists, at the key that falls just before or just after dependent on how the <code>before</code> parameter is set. @param before - IF true, and <code>key</code> does not exist, position file at entry that falls just before <code>key</code>. Otherwise, position file at record that sorts just after. @return 0 - exact match found < 0 - positioned at next record 1 - no more records in file
2968 Merge all input files to output map file.<br> 1. Read first key/value from all input files to keys/values array. <br> 2. Select the least key and corresponding value. <br> 3. Write the selected key and value to output file. <br> 4. Replace the already written key/value in keys/values arrays with the next key/value from the selected input <br> 5. Repeat step 2-4 till all keys are read. <br>
2969 Construct a client-side proxy object that implements the named protocol, talking to a server at the named address. @param <T> Generics Type T @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param ticket input ticket. @param conf input configuration. @param factory input factory. @param rpcTimeout input rpcTimeout. @param connectionRetryPolicy input connectionRetryPolicy. @throws IOException raised on errors performing I/O.
2970 Construct a client-side proxy object with a ConnectionId. @param <T> Generics Type T. @param protocol input protocol. @param clientVersion input clientVersion. @param connId input ConnectionId. @param conf input Configuration. @param factory input factory. @param alignmentContext Alignment context @throws IOException raised on errors performing I/O. @return ProtocolProxy.
2971 Returns the Trash object associated with this shell. @return Path to the trash @throws IOException upon error
2972 Returns the current trash location for the path specified @param path to be deleted @return path to the trash @throws IOException raised on errors performing I/O.
2973 A method to initialize the fields that depend on a configuration. Must be called before useKerberos or groups is used.
2974 Set the static configuration for UGI. In particular, set the security authentication mechanism and the group look up service. @param conf the configuration to use
2975 Launch a service catching all exceptions and downgrading them to exit codes after logging. Sets {@link #serviceException} to this value. @param conf configuration to use @param instance optional instance of the service. @param processedArgs command line after the launcher-specific arguments have been stripped out. @param addShutdownHook should a shutdown hook be added to terminate this service on shutdown. Tests should set this to false. @param execute execute/wait for the service to stop. @return an exit exception, which will have a status code of 0 if it worked
2976 Start the connection to the ZooKeeper ensemble. @param authInfos List of authentication keys. @throws IOException If the connection cannot be started.
2977 This constructor has the signature needed by {@link AbstractFileSystem#createFileSystem(URI, Configuration)}. @param theUri which must be that of localFs @param conf @throws IOException @throws URISyntaxException
2978 If direct write is disabled ,copies the stream contents to a temporary file "target._COPYING_". If the copy is successful, the temporary file will be renamed to the real path, else the temporary file will be deleted. if direct write is enabled , then creation temporary file is skipped. @param in the input stream for the copy @param target where to store the contents of the stream @throws IOException if copy fails
2979 Copy files between FileSystems. @param srcFS srcFs. @param src src. @param dstFS dstFs. @param dst dst. @param deleteSource delete source. @param overwrite overwrite. @param conf configuration. @throws IOException raised on errors performing I/O. @return true if the operation succeeded.
2980 Iterate all available nodes in the proximity order to attempt repair of all FileNotFound nodes. @param mrNodes work set copy of nodes @param f path to repair and open @param bufferSize buffer size for read RPC @return the closest/most recent replica stream AFTER repair
2981 Copy FileSystem files to local files. @param srcFS srcFs. @param src src. @param dst dst. @param deleteSource delete source. @param conf configuration. @throws IOException raised on errors performing I/O. @return true if the operation succeeded.
2982 Open a file for sequential IO. <p> This uses FileSystem.openFile() to request sequential IO; the file status is also passed in. Filesystems may use to optimize their IO. </p> @return an input stream @throws IOException failure
2983 Load from a Hadoop filesystem. @param fs filesystem @param path path @return a loaded object @throws PathIOException JSON parse problem @throws IOException IO problems
2984 Get the RecordNum for the first key-value pair in a compressed block whose byte offset in the TFile is greater than or equal to the specified offset. @param offset the user supplied offset. @return the RecordNum to the corresponding entry. If no such entry exists, it returns the total entry count. @throws IOException raised on errors performing I/O.
2985 Get the RecordNum corresponding to the entry pointed by the cursor. @return The RecordNum corresponding to the entry pointed by the cursor. @throws IOException raised on errors performing I/O.
2986 Constructor @param reader The TFile reader object. @param begin Begin location of the scan. @param end End location of the scan. @throws IOException
2987 Move the cursor to the new location. The entry returned by the previous entry() call will be invalid. @param l new cursor location. It must fall between the begin and end location of the scanner. @throws IOException
2988 Move the cursor to the next key-value pair. The entry returned by the previous entry() call will be invalid. @return true if the cursor successfully moves. False when cursor is already at the end location and cannot be advanced. @throws IOException raised on errors performing I/O.
2989 Adding a new key-value pair to the TFile. This is synonymous to append(key, 0, key.length, value, 0, value.length) @param key Buffer for key. @param value Buffer for value. @throws IOException raised on errors performing I/O.
2990 Positions the reader at the named key, or if none such exists, at the first entry after the named key. @return 0 - exact match found < 0 - positioned at next record 1 - no more records in file
2991 Finds the record that is the closest match to the specified key. @param key - key that we're trying to find @param val - data value if key is found @param before - IF true, and <code>key</code> does not exist, return the first entry that falls just before the <code>key</code>. Otherwise, return the record that sorts just after. @return - the key that was the closest match or null if eof. @throws IOException raised on errors performing I/O.
2992 Create a UGI for testing HDFS and MapReduce @param user the full user principal name @param userGroups the names of the groups that the user belongs to @return a fake user for running unit tests
2993 Create a proxy user UGI for testing HDFS and MapReduce @param user the full user principal name for effective user @param realUser UGI of the real user @param userGroups the names of the groups that the user belongs to @return a fake user for running unit tests
2994 Get the group names for this user. {@link #getGroupsSet()} is less expensive alternative when checking for a contained element. @return the list of users with the primary group first. If the command fails, it returns an empty list. @deprecated Use {@link #getGroupsSet()} instead.
2995 Get the groups names for the user as a Set. @return the set of users with the primary group first. If the command fails, it returns an empty set.
2996 Login a subject with the given parameters. If the subject is null, the login context used to create the subject will be attached. @param subject to login, null for new subject. @param params for login, null for externally managed ugi. @return UserGroupInformation for subject @throws IOException
2997 Refresh the service authorization ACL for the service handled by this server using the specified Configuration. @param conf input Configuration. @param provider input provider.
2998 Authorize the superuser which is doing doAs. {@link #authorize(UserGroupInformation, InetAddress)} should be preferred to avoid possibly re-resolving the ip address. @param user ugi of the effective or proxy user which contains a real user @param remoteAddress the ip address of client @throws AuthorizationException Authorization Exception.
2999 Authorize the superuser which is doing doAs. @param user ugi of the effective or proxy user which contains a real user @param remoteAddress the inet address of client @throws AuthorizationException Authorization Exception.
3000 Launch a service catching all exceptions and downgrading them to exit codes after logging. Sets {@link #serviceException} to this value. @param conf configuration to use @param processedArgs command line after the launcher-specific arguments have been stripped out. @param addShutdownHook should a shutdown hook be added to terminate this service on shutdown. Tests should set this to false. @param execute execute/wait for the service to stop. @return an exit exception, which will have a status code of 0 if it worked
3001 Start the connection to the ZooKeeper ensemble. @throws IOException If the connection cannot be started.
3002 Copies the source file to the target. @param src item to copy @param target where to copy the item @throws IOException if copy fails
3003 Copy files between FileSystems. @param srcFS src fs. @param src src. @param dstFS dst fs. @param dst dst. @param deleteSource delete source. @param conf configuration. @return if copy success true, not false. @throws IOException raised on errors performing I/O.
3004 Category: READ. @param f the file name to open @param bufferSize the size of the buffer to be used. @return input stream according to nfly flags (closest, most recent) @throws IOException @throws FileNotFoundException iff all destinations generate this exception
3005 Get a scanner than can scan the whole TFile. @return The scanner object. A valid Scanner is always returned even if the TFile is empty. @throws IOException raised on errors performing I/O.
3006 Create a scanner that covers a range of records. @param beginRecNum The RecordNum for the first record (inclusive). @param endRecNum The RecordNum for the last record (exclusive). To scan the whole file, either specify endRecNum==-1 or endRecNum==getEntryCount(). @return The TFile scanner that covers the specified range of records. @throws IOException raised on errors performing I/O.
3007 Constructor @param reader The TFile reader object. @param offBegin Begin byte-offset of the scan. @param offEnd End byte-offset of the scan. @throws IOException The offsets will be rounded to the beginning of a compressed block whose offset is greater than or equal to the specified offset.
3008 Rewind to the first entry in the scanner. The entry returned by the previous entry() call will be invalid. @throws IOException raised on errors performing I/O.
3009 Positions the reader at the named key, or if none such exists, at the first entry after the named key. Returns true iff the named key exists in this map. @param key key. @throws IOException raised on errors performing I/O. @return if the named key exists in this map true, not false.
3010 Finds the record that is the closest match to the specified key. Returns <code>key</code> or if it does not exist, at the first entry after the named key. @param key key that we're trying to find. @param val data value if key is found. @return the key that was the closest match or null if eof. @throws IOException raised on errors performing I/O.
3011 Determine if UserGroupInformation is using Kerberos to determine user identities or is relying on simple authentication @return true if UGI is working in a secure environment
3012 Log the current user out who previously logged in using keytab. This method assumes that the user logged in by calling {@link #loginUserFromKeytab(String, String)}. @throws IOException raised on errors performing I/O. @throws KerberosAuthException if a failure occurred in logout, or if the user did not log in by invoking loginUserFromKeyTab() before.
3013 Get the group names for this user. {@link #getGroupsSet()} is less expensive alternative when checking for a contained element. @return the list of users with the primary group first. If the command fails, it returns an empty list.
3014 Checks if a user represented by the provided {@link UserGroupInformation} is a member of the Access Control List. If user was proxied and USE_REAL_ACLS + the real user name is in the control list, then treat this case as if user were in the ACL list. @param ugi UserGroupInformation to check if contained in the ACL @return true if ugi is member of the list or if USE_REAL_ACLS + real user is in the list
3015 Create a UserGroupInformation from a Subject with Kerberos principal. @param subject The KerberosPrincipal to use in UGI. The creator of subject is responsible for renewing credentials. @throws IOException raised on errors performing I/O. @throws KerberosAuthException if the kerberos login fails @return UserGroupInformation
3016 This function is kept to provide backward compatibility. @param user user. @param remoteAddress remote address. @param conf configuration. @throws AuthorizationException Authorization Exception. @deprecated use {@link #authorize(UserGroupInformation, String)} instead.
3017 Authorize proxy users to access this server @throws RpcServerException - user is not allowed to proxy
3018 Called with a source and target destination pair @param src for the operation @param dst for the operation @throws IOException if anything goes wrong
3019 copies the file in the har filesystem to a local file.
3020 The src file is under FS, and the dst is on the local disk. Copy it from FS control to the local dst name.
3021 Get a scanner that covers a portion of TFile based on byte offsets. @param offset The beginning byte offset in the TFile. @param length The length of the region. @return The actual coverage of the returned scanner tries to match the specified byte-region but always round up to the compression block boundaries. It is possible that the returned scanner contains zero key-value pairs even if length is positive. @throws IOException raised on errors performing I/O.
3022 Constructor @param reader The TFile reader object. @param beginKey Begin key of the scan. If null, scan from the first &lt;K, V&gt; entry of the TFile. @param endKey End key of the scan. If null, scan up to the last &lt;K, V&gt; entry of the TFile. @throws IOException raised on errors performing I/O.
3023 Move the cursor to the first entry whose key is greater than or equal to the input key. The entry returned by the previous entry() call will be invalid. @param key The input key @param keyOffset offset in the key buffer. @param keyLen key buffer length. @return true if we find an equal key; false otherwise. @throws IOException raised on errors performing I/O.
3024 Move the cursor to the first entry whose key is greater than or equal to the input key. The entry returned by the previous entry() call will be invalid. @param key The input key @param keyOffset offset in the key buffer. @param keyLen key buffer length. @throws IOException raised on errors performing I/O.
3025 Move the cursor to the first entry whose key is strictly greater than the input key. The entry returned by the previous entry() call will be invalid. @param key The input key @param keyOffset offset in the key buffer. @param keyLen key buffer length. @throws IOException raised on errors performing I/O.
3026 Return the value for the named key, or null if none exists. @param key key. @param val val. @return Writable if such a pair exists true,not false. @throws IOException raised on errors performing I/O.
3027 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T @param protocol protocol class @param clientVersion client's version @param connId client connection identifier @param conf configuration @param factory socket factory @param alignmentContext StateID alignment context @return the protocol proxy @throws IOException if the far end through a RemoteException
3028 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T. @param protocol protocol @param clientVersion client's version @param addr server address @param ticket security ticket @param conf configuration @param factory socket factory @param rpcTimeout max time for each rpc; 0 means no timeout @param connectionRetryPolicy retry policy @param fallbackToSimpleAuth set to true or false during calls to indicate if a secure client falls back to simple auth @return the proxy @throws IOException if any error occurs
3029 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param protocol protocol @param clientVersion client's version @param addr server address @param ticket security ticket @param conf configuration @param factory socket factory @param rpcTimeout max time for each rpc; 0 means no timeout @param connectionRetryPolicy retry policy @param fallbackToSimpleAuth set to true or false during calls to indicate if a secure client falls back to simple auth @param alignmentContext state alignment context @param <T> Generics Type T. @return the proxy @throws IOException if any error occurs
3030 @return Same as openForRandomRead except that it will run even if security is off. This is used by unit tests. @param f input f. @param mode input mode. @param expectedOwner input expectedOwner. @param expectedGroup input expectedGroup. @throws IOException raised on errors performing I/O.
3031 Same as openFSDataInputStream except that it will run even if security is off. This is used by unit tests. @param file input file. @param expectedOwner input expectedOwner. @param expectedGroup input expectedGroup. @throws IOException raised on errors performing I/O. @return FSDataInputStream.
3032 @return Same as openForRead() except that it will run even if security is off. This is used by unit tests. @param f input f. @param expectedOwner input expectedOwner. @param expectedGroup input expectedGroup. @throws IOException raised on errors performing I/O.
3033 Dump a UGI. @param title title of this section @param ugi UGI to dump @throws IOException
3034 Get the currently logged in user. If no explicit login has occurred, the user will automatically be logged in with either kerberos credentials if available, or as the local OS user, based on security settings. @return the logged in user @throws IOException if login fails
3035 Log in a user using the given subject @param subject the subject to use when logging in a user, or null to create a new subject. If subject is not null, the creator of subject is responsible for renewing credentials. @throws IOException if login fails
3036 Reads the connection context following the connection header @throws RpcServerException - if the header cannot be deserialized, or the user is not authorized
3037 Get a scanner that covers a specific key range. @param beginKey Begin key of the scan (inclusive). If null, scan from the first key-value entry of the TFile. @param endKey End key of the scan (exclusive). If null, scan up to the last key-value entry of the TFile. @return The actual coverage of the returned scanner will cover all keys greater than or equal to the beginKey and less than the endKey. @throws IOException raised on errors performing I/O.
3038 Move the cursor to the first entry whose key is greater than or equal to the input key. Synonymous to seekTo(key, 0, key.length). The entry returned by the previous entry() call will be invalid. @param key The input key @return true if we find an equal key. @throws IOException raised on errors performing I/O.
3039 Move the cursor to the first entry whose key is greater than or equal to the input key. Synonymous to lowerBound(key, 0, key.length). The entry returned by the previous entry() call will be invalid. @param key The input key @throws IOException raised on errors performing I/O.
3040 Move the cursor to the first entry whose key is strictly greater than the input key. Synonymous to upperBound(key, 0, key.length). The entry returned by the previous entry() call will be invalid. @param key The input key @throws IOException raised on errors performing I/O.
3041 Read the matching key from a set into <code>key</code>. @param key input key. @return Returns <code>key</code>, or null if no match exists. @throws IOException raised on errors performing I/O.
3042 Fast version of the {@link MapFile.Reader#get(WritableComparable, Writable)} method. First it checks the Bloom filter for the existence of the key, and only if present it performs the real get operation. This yields significant performance improvements for get operations on sparsely populated files.
3043 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T @param protocol protocol class @param clientVersion client's version @param connId client connection identifier @param conf configuration @param factory socket factory @return the protocol proxy @throws IOException if the far end through a RemoteException
3044 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T. @param protocol protocol @param clientVersion client's version @param addr server address @param ticket security ticket @param conf configuration @param factory socket factory @param rpcTimeout max time for each rpc; 0 means no timeout @param connectionRetryPolicy retry policy @return the proxy @throws IOException if any error occurs
3045 Connect to the server and set up the I/O streams. It then sends a header to the server and starts the connection thread that waits for responses.
3046 @return Open the given File for random read access, verifying the expected user/ group constraints if security is enabled. Note that this function provides no additional security checks if hadoop security is disabled, since doing the checks would be too expensive when native libraries are not available. @param f file that we are trying to open @param mode mode in which we want to open the random access file @param expectedOwner the expected user owner for the file @param expectedGroup the expected group owner for the file @throws IOException if an IO error occurred or if the user/group does not match when security is enabled.
3047 Opens the {@link FSDataInputStream} on the requested file on local file system, verifying the expected user/group constraints if security is enabled. @param file absolute path of the file @param expectedOwner the expected user owner for the file @param expectedGroup the expected group owner for the file @throws IOException if an IO Error occurred or the user/group does not match if security is enabled @return FSDataInputStream.
3048 Open the given File for read access, verifying the expected user/group constraints if security is enabled. @return Note that this function provides no additional checks if Hadoop security is disabled, since doing the checks would be too expensive when native libraries are not available. @param f the file that we are trying to open @param expectedOwner the expected user owner for the file @param expectedGroup the expected group owner for the file @throws IOException if an IO Error occurred, or security is enabled and the user/group does not match
3049 Get the admin ACLs from the given ServletContext and check if the given user is in the ACL. @param servletContext the context containing the admin ACL. @param remoteUser the remote user to check for. @return true if the user is present in the ACL, false if no ACL is set or the user is not present
3050 Authorize the user to access the protocol being used. @param user user accessing the service @param protocol service being accessed @param conf configuration to use @param addr InetAddress of the client @throws AuthorizationException on authorization failure
3051 Return the current user, including any doAs in the current stack. @return the current user @throws IOException if login fails
3052 Did the login happen via keytab. @return true or false @throws IOException raised on errors performing I/O.
3053 Did the login happen via ticket cache. @return true or false @throws IOException raised on errors performing I/O.
3054 Perform the given action as the daemon's login user. If the login user cannot be determined, this will log a FATAL error and exit the whole JVM. @param action action. @param <T> generic type T. @return generic type T.
3055 Perform the given action as the daemon's login user. If an InterruptedException is thrown, it is converted to an IOException. @param action the action to perform @param <T> Generics Type T. @return the result of the action @throws IOException in the event of error
3056 Request from graceful failover to cede active role. Causes this ZKFC to transition its local node to standby, then quit the election for the specified period of time, after which it will rejoin iff it is healthy.
3057 Coordinate a graceful failover to this node. @throws ServiceFailedException if the node fails to become active @throws IOException some other error occurs
3058 Get a scanner that covers a portion of TFile based on keys. @param beginKey Begin key of the scan (inclusive). If null, scan from the first key-value entry of the TFile. @param endKey End key of the scan (exclusive). If null, scan up to the last key-value entry of the TFile. @return The actual coverage of the returned scanner will cover all keys greater than or equal to the beginKey and less than the endKey. @throws IOException raised on errors performing I/O.
3059 Get a scanner that covers a specific key range. @param beginKey Begin key of the scan (inclusive). If null, scan from the first key-value entry of the TFile. @param endKey End key of the scan (exclusive). If null, scan up to the last key-value entry of the TFile. @return The actual coverage of the returned scanner will cover all keys greater than or equal to the beginKey and less than the endKey. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createScannerByKey(RawComparable, RawComparable)} instead.
3060 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param ticket user group information @param conf configuration to use @param factory socket factory @return the protocol proxy @throws IOException if the far end through a RemoteException
3061 Construct a client-side proxy that implements the named protocol, talking to a server at the named address. @param <T> Generics Type T. @param protocol protocol @param clientVersion client's version @param addr server address @param ticket security ticket @param conf configuration @param factory socket factory @param rpcTimeout max time for each rpc; 0 means no timeout @return the proxy @throws IOException if any error occurs
3062 Does the user sending the HttpServletRequest has the administrator ACLs? If it isn't the case, response will be modified to send an error to the user. @param servletContext servletContext. @param request request. @param response used to send the error response if user does not have admin access. @return true if admin-authorized, false otherwise @throws IOException raised on errors performing I/O.
3063 Authorize the incoming client connection. @param user client user @param protocolName - the protocol @param addr InetAddress of incoming connection @throws AuthorizationException when the client isn't authorized to talk the protocol
3064 Return the current user's home directory in this FileSystem. The default implementation returns {@code "/user/$USER/"}. @return the path.
3065 This method provides the default implementation of {@link #access(Path, FsAction)}. @param stat FileStatus to check @param mode type of access to check @throws AccessControlException if access is denied @throws IOException for any error
3066 This is the constructor with the signature needed by {@link FileSystem#createFileSystem(URI, Configuration)} After this constructor is called initialize() is called. @throws IOException raised on errors performing I/O.
3067 This constructor has the signature needed by {@link AbstractFileSystem#createFileSystem(URI, Configuration)}. @param theUri which must be that of ViewFs @param conf @throws IOException @throws URISyntaxException
3068 Create Inode Tree from the specified mount-table specified in Config. @param config the mount table keys are prefixed with FsConstants.CONFIG_VIEWFS_PREFIX. @param viewName the name of the mount table if null use defaultMT name. @param theUri heUri. @param initingUriAsFallbackOnNoMounts initingUriAsFallbackOnNoMounts. @throws UnsupportedFileSystemException file system for <code>uri</code> is not found. @throws URISyntaxException if the URI does not have an authority it is badly formed. @throws FileAlreadyExistsException there is a file at the path specified or is discovered on one of its ancestors. @throws IOException raised on errors performing I/O.
3069 Return the current user's home directory in this file system. The default implementation returns "/user/$USER/". @return current user's home directory.
3070 Returns an authenticated {@link HttpURLConnection}. If the Delegation Token is present, it will be used taking precedence over the configured <code>Authenticator</code>. If the <code>doAs</code> parameter is not NULL, the request will be done on behalf of the specified <code>doAs</code> user. @param url the URL to connect to. Only HTTP/S URLs are supported. @param token the authentication token being used for the user. @param doAs user to do the the request on behalf of, if NULL the request is as self. @return an authenticated {@link HttpURLConnection}. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
3071 Find the most appropriate UserGroupInformation to use @param ticketCachePath The Kerberos ticket cache path, or NULL if none is specfied @param user The user name, or NULL if none is specified. @return The most appropriate UserGroupInformation @throws IOException raised on errors performing I/O.
3072 Log a user in from a keytab file. Loads a user identity from a keytab file and login them in. This new user does not affect the currently logged-in user. @param user the principal name to load from the keytab @param path the path to the keytab file @throws IOException if the keytab file can't be read @return UserGroupInformation.
3073 Log all (current, real, login) UGI and token info into specified log. @param ugi - UGI @param log - log. @throws IOException raised on errors performing I/O.
3074 Perform the given action as the daemon's current user. If an InterruptedException is thrown, it is converted to an IOException. @param action the action to perform @param <T> generic type T. @return the result of the action @throws IOException in the event of error
3075 Get the doAs user name. 'actualUGI' is the UGI of the user creating the client It is possible that the creator of the KMSClientProvier calls this method on behalf of a proxyUser (the doAsUser). In which case this call has to be made as the proxy user. @return the doAs user name. @throws IOException
3076 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param rpcTimeout timeout for each RPC @param connectionRetryPolicy input connectionRetryPolicy. @param timeout time in milliseconds before giving up @return the proxy @throws IOException if the far end through a RemoteException.
3077 Get a scanner that covers a portion of TFile based on keys. @param beginKey Begin key of the scan (inclusive). If null, scan from the first key-value entry of the TFile. @param endKey End key of the scan (exclusive). If null, scan up to the last key-value entry of the TFile. @return The actual coverage of the returned scanner will cover all keys greater than or equal to the beginKey and less than the endKey. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createScannerByKey(byte[], byte[])} instead.
3078 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param factory socket factory @return the protocol proxy @throws IOException if the far end through a RemoteException
3079 Construct a client-side proxy object that implements the named protocol, talking to a server at the named address. @param <T> Generics Type T. @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param ticket input tocket. @param conf input conf. @param factory input factory. @return the protocol proxy. @throws IOException raised on errors performing I/O.
3080 Checks the user has privileges to access to instrumentation servlets. <p> If <code>hadoop.security.instrumentation.requires.admin</code> is set to FALSE (default value) it always returns TRUE. <p> If <code>hadoop.security.instrumentation.requires.admin</code> is set to TRUE it will check that if the current user is in the admin ACLS. If the user is in the admin ACLs it returns TRUE, otherwise it returns FALSE. @param servletContext the servlet context. @param request the servlet request. @param response the servlet response. @return TRUE/FALSE based on the logic decribed above. @throws IOException raised on errors performing I/O.
3081 Get the root directory of Trash for current user when the path specified is deleted. @param path the trash root of the path to be determined. @return the default implementation returns {@code /user/$USER/.Trash}
3082 Get all the trash roots for current user or all users. @param allUsers return trash roots for all users if true. @return all the trash root directories. Default FileSystem returns .Trash under users' home directories if {@code /user/$USER/.Trash} exists.
3083 Checks if the user can access a path. The mode specifies which access checks to perform. If the requested permissions are granted, then the method returns normally. If access is denied, then the method throws an {@link AccessControlException}. <p> The default implementation calls {@link #getFileStatus(Path)} and checks the returned permissions against the requested permissions. Note that the {@link #getFileStatus(Path)} call will be subject to authorization checks. Typically, this requires search (execute) permissions on each directory in the path's prefix, but this is implementation-defined. Any file system that provides a richer authorization model (such as ACLs) may override the default implementation so that it checks against that model instead. <p> In general, applications should avoid using this method, due to the risk of time-of-check/time-of-use race conditions. The permissions on a file may change immediately after the access call returns. Most applications should prefer running specific file system actions as the desired user represented by a {@link UserGroupInformation}. @param path Path to check @param mode type of access to check @throws AccessControlException if access is denied @throws FileNotFoundException if the path does not exist @throws IOException see specific implementation
3084 The specification of this method matches that of {@link FileContext#access(Path, FsAction)} except that an UnresolvedLinkException may be thrown if a symlink is encountered in the path. @param path the path. @param mode fsaction mode. @throws AccessControlException access control exception. @throws FileNotFoundException file not found exception. @throws UnresolvedLinkException unresolved link exception. @throws IOException raised on errors performing I/O.
3085 Convenience Constructor for apps to call directly. @param theUri which must be that of ViewFileSystem @param conf conf configuration. @throws IOException raised on errors performing I/O.
3086 The objects inserted into the cache using this method are all unique.
3087 Return the current user's home directory in this file system. The default implementation returns "/user/$USER/". @return the home directory
3088 Returns an authenticated {@link HttpURLConnection}, it uses a Delegation Token only if the given auth token is an instance of {@link Token} and it contains a Delegation Token, otherwise use the configured {@link DelegationTokenAuthenticator} to authenticate the connection. @param url the URL to connect to. Only HTTP/S URLs are supported. @param token the authentication token being used for the user. @return an authenticated {@link HttpURLConnection}. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
3089 Get a FileSystem instance based on the uri, the passed in configuration and the user. @param uri of the filesystem @param conf the configuration to use @param user to perform the get as @return the filesystem instance @throws IOException failure to load @throws InterruptedException If the {@code UGI.doAs()} call was somehow interrupted.
3090 Returns the FileSystem for this URI's scheme and authority and the given user. Internally invokes {@link #newInstance(URI, Configuration)} @param uri uri of the filesystem. @param conf the configuration to use @param user to perform the get as @return filesystem instance @throws IOException if the FileSystem cannot be instantiated. @throws InterruptedException If the {@code UGI.doAs()} call was somehow interrupted.
3091 Create a UserGroupInformation from a Kerberos ticket cache. @param user The principal name to load from the ticket cache @param ticketCache the path to the ticket cache file @throws IOException if the kerberos login fails @return UserGroupInformation.
3092 Log in from a keytab, dump the UGI, validate it, then try and log in again. That second-time login catches JVM/Hadoop compatibility problems. @throws IOException Keytab loading problems
3093 Log a user in from a keytab file. Loads a user identity from a keytab file and logs them in. They become the currently logged-in user. @param user the principal name to load from the keytab @param path the path to the keytab file @throws IOException raised on errors performing I/O. @throws KerberosAuthException if it's a kerberos login exception.
3094 Log all (current, real, login) UGI and token info into UGI debug log. @param ugi - UGI @throws IOException raised on errors performing I/O.
3095 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param connTimeout time in milliseconds before giving up @return the protocol proxy @throws IOException if the far end through a RemoteException
3096 Get a proxy connection to a remote server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param rpcTimeout timeout for each RPC @param timeout time in milliseconds before giving up @return the proxy @throws IOException if the far end through a RemoteException
3097 Construct a client-side proxy object that implements the named protocol, talking to a server at the named address. @param <T> Generics Type T. @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param conf input Configuration. @param factory input factory. @throws IOException raised on errors performing I/O. @return proxy.
3098 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param conf input configuration. @param <T> Generics Type T. @return a protocol proxy @throws IOException if the thread is interrupted.
3099 Get a client of the {@link GetUserMappingsProtocol}. @return A {@link GetUserMappingsProtocol} client proxy. @throws IOException raised on errors performing I/O.
3100 @return a proxy to the ZKFC which is associated with this HA service. @param conf configuration. @param timeoutMs timeout in milliseconds. @throws IOException raised on errors performing I/O.
3101 Get the trash root directory for current user when the path specified is deleted. If FORCE_INSIDE_MOUNT_POINT flag is not set, return the default trash root from targetFS. When FORCE_INSIDE_MOUNT_POINT is set to true, <ol> <li> If the trash root for path p is in the same mount point as path p, and one of: <ol> <li>The mount point isn't at the top of the target fs.</li> <li>The resolved path of path is root (in fallback FS).</li> <li>The trash isn't in user's target fs home directory get the corresponding viewFS path for the trash root and return it. </li> </ol> </li> <li> else, return the trash root under the root of the mount point (/{mntpoint}/.Trash/{user}). </li> </ol> These conditions handle several different important cases: <ul> <li>File systems may need to have more local trash roots, such as encryption zones or snapshot roots.</li> <li>The fallback mount should use the user's home directory.</li> <li>Cloud storage systems should not use trash in an implicity defined home directory, per a container, unless it is the fallback fs.</li> </ul> @param path the trash root of the path to be determined. @return the trash root path.
3102 Get all the trash roots for current user or all users. When FORCE_INSIDE_MOUNT_POINT is set to true, we also return trash roots under the root of each mount point, with their viewFS paths. @param allUsers return trash roots for all users if true. @return all Trash root directories.
3103 Convenience Constructor for apps to call directly. @param conf configuration. @throws IOException raised on errors performing I/O.
3104 This method adds a FileSystem instance to the cache so that it can be retrieved later. It is only for testing. @param uri the uri to store it under @param conf the configuration to store it under @param fs the FileSystem to store @throws IOException if the current user cannot be determined.
3105 Returns the FileSystem for this URI's scheme and authority. The entire URI is passed to the FileSystem instance's initialize method. This always returns a new FileSystem object. @param uri FS URI @param config configuration to use @return the new FS instance @throws IOException FS creation or initialization failure.
3106 Create a FileContext with specified FS as default using the specified config. @param defFS default fs. @param aConf configutration. @return new FileContext with specified FS as default.
3107 Returns an authenticated {@link HttpURLConnection}, it uses a Delegation Token only if the given auth token is an instance of {@link Token} and it contains a Delegation Token, otherwise use the configured {@link DelegationTokenAuthenticator} to authenticate the connection. @param url the URL to connect to. Only HTTP/S URLs are supported. @param token the authentication token being used for the user. @return an authenticated {@link HttpURLConnection}. @throws IOException if an IO error occurred. @throws AuthenticationException if an authentication exception occurred.
3108 Execute diagnostics. <p> Things it would be nice if UGI made accessible <ol> <li>A way to enable JAAS debug programatically</li> <li>Access to the TGT</li> </ol> @return true if security was enabled and all probes were successful @throws KerberosDiagsFailure explicitly raised failure @throws Exception other security problems
3109 Parse arguments looking for Kerberos keytab/principal. If both are found: remove both from the argument list and attempt login. If only one of the two is found: remove it from argument list, log warning and do not attempt login. If neither is found: return original args array, doing nothing. Return the pruned args array if either flag is present.
3110 A test method to print out the current user's UGI. @param args if there are two arguments, read the user from the keytab and print it out. @throws Exception Exception.
3111 Login as a principal specified in config. Substitute $host in user's Kerberos principal name with hostname. If non-secure mode - return. If no keytab available - bail out with an exception @param conf conf to use @param keytabFileKey the key to look for keytab file in conf @param userNameKey the key to look for user's Kerberos principal name in conf @param hostname hostname to use for substitution @throws IOException if the config doesn't specify a keytab
3112 Constructs a server listening on the named port and address. Parameters passed must be of the named class. The <code>handlerCount</code> determines the number of handler threads that will be used to process calls. If queueSizePerHandler or numReaders are not -1 they will be used instead of parameters from configuration. Otherwise the configuration will be picked up. If rpcRequestClass is null then the rpcRequestClass must have been registered via {@link #registerProtocolEngine(RPC.RpcKind, Class, RPC.RpcInvoker)} This parameter has been retained for compatibility with existing tests and usage. @param bindAddress input bindAddress. @param port input port. @param rpcRequestClass input rpcRequestClass. @param handlerCount input handlerCount. @param numReaders input numReaders. @param queueSizePerHandler input queueSizePerHandler. @param conf input Configuration. @param serverName input serverName. @param secretManager input secretManager. @param portRangeConfig input portRangeConfig. @throws IOException raised on errors performing I/O.
3113 Process the Sasl's Negotiate request, including the optimization of accelerating token negotiation. @return the response to Negotiate request - the list of enabled authMethods and challenge if the TOKENS are supported. @throws SaslException - if attempt to generate challenge fails. @throws IOException - if it fails to create the SASL server for Tokens
3114 Get a protocol proxy that contains a proxy connection to a remote server and a set of methods that are supported by the server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @return the protocol proxy @throws IOException if the far end through a RemoteException
3115 Get a proxy connection to a remote server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @param connTimeout time in milliseconds before giving up @return the proxy @throws IOException if the far end through a RemoteException
3116 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param in InputStream to deserialize the object from. @param name the name of the resource because InputStream.toString is not very descriptive some times.
3117 Construct a client-side proxy object with the default SocketFactory. @param <T> Generics Type T. @param protocol input protocol. @param clientVersion input clientVersion. @param addr input addr. @param conf input Configuration. @return a proxy instance @throws IOException if the thread is interrupted.
3118 Get the groups for the users given and print formatted output to the {@link PrintStream} configured earlier.
3119 Initiate a graceful failover by talking to the target node's ZKFC. This sends an RPC to the ZKFC, which coordinates the failover. @param toNode the node to fail to @return status code (0 for success) @throws IOException if failover does not succeed
3120 Ask the remote zkfc to cede its active status and wait for the specified timeout before attempting to claim leader status. @param remote node to ask @param timeout amount of time to cede @return the {@link ZKFCProtocol} used to talk to the ndoe @throws IOException
3121 Process a GET request for the specified resource. @param request The servlet request we are processing @param response The servlet response we are creating
3122 Get a FileSystem for this URI's scheme and authority. <ol> <li> If the configuration has the property {@code "fs.$SCHEME.impl.disable.cache"} set to true, a new instance will be created, initialized with the supplied URI and configuration, then returned without being cached. </li> <li> If the there is a cached FS instance matching the same URI, it will be returned. </li> <li> Otherwise: a new FS instance will be created, initialized with the configuration and URI, cached and returned to the caller. </li> </ol> @param uri uri of the filesystem. @param conf configrution. @return filesystem instance. @throws IOException if the FileSystem cannot be instantiated.
3123 Get a unique local FileSystem object. @param conf the configuration to configure the FileSystem with @return a new LocalFileSystem object. @throws IOException FS creation or initialization failure.
3124 Gets new file system instance of given uri. @param uri uri. @param conf configuration. @throws IOException raised on errors performing I/O. @return file system.
3125 Create a FileContext for specified file system using the default config. @param defaultFS default fs. @return a FileContext with the specified AbstractFileSystem as the default FS.
3126 Create a FileContext for specified default URI using the specified config. @param defaultFsUri defaultFsUri. @param aConf configrution. @return new FileContext for specified uri @throws UnsupportedFileSystemException If the file system with specified is not supported @throws RuntimeException If the file system specified is supported but could not be instantiated, or if login fails.
3127 Parse the command line arguments and initialize subcommand. Also will attempt to perform Kerberos login if both -principal and -keytab flags are passed in args array. @param args args. @return 0 if the argument(s) were recognized, 1 otherwise @throws Exception Exception.
3128 Login as a principal specified in config. Substitute $host in user's Kerberos principal name with a dynamically looked-up fully-qualified domain name of the current host. @param conf conf to use @param keytabFileKey the key to look for keytab file in conf @param userNameKey the key to look for user's Kerberos principal name in conf @throws IOException if login fails
3129 Process a saslMessge. @param saslMessage received SASL message @return the sasl response to send back to client @throws SaslException if authentication or generating response fails, or SASL protocol mixup @throws IOException if a SaslServer cannot be created @throws AccessControlException if the requested authentication type is not supported or trying to re-attempt negotiation. @throws InterruptedException
3130 Get a proxy connection to a remote server. @param <T> Generics Type T. @param protocol protocol class @param clientVersion client version @param addr remote address @param conf configuration to use @return the proxy @throws IOException if the far end through a RemoteException
3131 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param name resource to be added, the classpath is examined for a file with that name.
3132 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param url url of the resource to be added, the local filesystem is examined directly to find the resource, without referring to the classpath.
3133 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. @param file file-path of resource to be added, the local filesystem is examined directly to find the resource, without referring to the classpath.
3134 Add a configuration resource. The properties of this resource will override properties of previously added resources, unless they were marked <a href="#Final">final</a>. WARNING: The contents of the InputStream will be cached, by this method. So use this sparingly because it does increase the memory consumption. @param in InputStream to deserialize the object from. In will be read from when a get or set is called next. After it is read the stream will be closed.
3135 Coordinate a graceful failover. This proceeds in several phases: 1) Pre-flight checks: ensure that the local node is healthy, and thus a candidate for failover. 2a) Determine the current active node. If it is the local node, no need to failover - return success. 2b) Get the other nodes 3a) Ask the other nodes to yield from election for a number of seconds 3b) Ask the active node to yield from the election for a number of seconds. 4) Allow the normal election path to run in other threads. Wait until we either become unhealthy or we see an election attempt recorded by the normal code path. 5) Allow the old active to rejoin the election, so a future failback is possible.
3136 Connect to the service to be monitored. Stubbed out for easier testing. @throws IOException raised on errors performing I/O. @return HAServiceProtocol.
3137 Returns a proxy to connect to the target HA service for health monitoring. If {@link #getHealthMonitorAddress()} is implemented to return a non-null address, then this proxy will connect to that address. Otherwise, the returned proxy defaults to using {@link #getAddress()}, which means this method's behavior is identical to {@link #getProxy(Configuration, int)}. @param conf configuration. @param timeoutMs timeout in milliseconds @return a proxy to connect to the target HA service for health monitoring @throws IOException if there is an error
3138 @return a proxy to connect to the target HA Service. @param timeoutMs timeout in milliseconds. @param conf Configuration. @throws IOException raised on errors performing I/O.
3139 Initialize a Har filesystem per har archive. The archive home directory is the top level directory in the filesystem that contains the HAR archive. Be careful with this method, you do not want to go on creating new Filesystem instances per call to path.getFileSystem(). the uri of Har is har://underlyingfsscheme-host:port/archivepath. or har:///archivepath. This assumes the underlying filesystem to be used in case not specified.
3140 In case of the symlinks or mount points, one has to move the appropriate trashbin in the actual volume of the path p being deleted. Hence we get the file system of the fully-qualified resolved-path and then move the path p to the trashbin in that volume, @param fs - the filesystem of path p @param p - the path being deleted - to be moved to trash @param conf - configuration @return false if the item is already in the trash or trash is disabled @throws IOException on error
3141 Creates an object to wrap the given parameters as fields. The string used to create the path will be recorded since the Path object does not return exactly the same string used to initialize it @param pathString a string for a path @param conf the configuration file @throws IOException if anything goes wrong...
3142 @deprecated call {@link #get(URI, Configuration)} instead. @param name name. @param conf configuration. @return file system. @throws IOException If an I/O error occurred.
3143 Get the local FileSystem. @param conf the configuration to configure the FileSystem with if it is newly instantiated. @return a LocalFileSystem @throws IOException if somehow the local FS cannot be instantiated.
3144 Constructor. @param uri base file system @param conf configuration @throws IOException
3145 Gets file system instance of given uri. @param uri uri. @param conf configuration. @throws IOException raised on errors performing I/O. @return FileSystem.
3146 When ViewFileSystemOverloadScheme scheme and target uri scheme are matching, it will not take advantage of FileSystem cache as it will create instance directly. For caching needs please set "fs.viewfs.enable.inner.cache" to true.
3147 Return the FileSystem that owns this Path. @param conf the configuration to use when resolving the FileSystem @return the FileSystem that owns this Path @throws java.io.IOException thrown if there's an issue resolving the FileSystem
3148 Return the supplied file system for testing or otherwise get a new file system. @return the file system to use @throws MetricsException thrown if the file system could not be retrieved
3149 {@inheritDoc} Note: listStatus on root("/") considers listing from fallbackLink if available. If the same directory name is present in configured mount path as well as in fallback link, then only the configured mount path will be listed in the returned result.
3150 Create a FileContext for specified URI using the default config. @param defaultFsUri defaultFsUri. @return a FileContext with the specified URI as the default FS. @throws UnsupportedFileSystemException If the file system for <code>defaultFsUri</code> is not supported
3151 Create a FileContext using the passed config. Generally it is better to use {@link #getFileContext(URI, Configuration)} instead of this one. @param aConf configration. @return new FileContext @throws UnsupportedFileSystemException If file system in the config is not supported
3152 @param aConf - from which the FileContext is configured @return a FileContext for the local file system using the specified config. @throws UnsupportedFileSystemException If default file system in the config is not supported
3153 Construct an RPC server. @param protocolClass the class of protocol @param protocolImpl the protocolImpl whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param numReaders number of read threads @param queueSizePerHandler the size of the queue contained in each Handler @param verbose whether each call should be logged @param secretManager the server-side secret manager for each token type @param portRangeConfig A config parameter that can be used to restrict the range of ports used when port is 0 (an ephemeral port) @param alignmentContext provides server state info on client responses @throws IOException raised on errors performing I/O.
3154 Construct an RPC server. @param protocolClass - the protocol being registered can be null for compatibility with old usage (see below for details) @param protocolImpl the protocol impl that will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param verbose whether each call should be logged @param alignmentContext provides server state info on client responses @param numReaders input numReaders. @param portRangeConfig input portRangeConfig. @param queueSizePerHandler input queueSizePerHandler. @param secretManager input secretManager. @throws IOException raised on errors performing I/O.
3155 Process saslMessage and send saslResponse back @param saslMessage received SASL message @throws RpcServerException setup failed due to SASL negotiation failure, premature or invalid connection context, or other state errors. This exception needs to be sent to the client. This exception will wrap {@link RetriableException}, {@link InvalidToken}, {@link StandbyException} or {@link SaslException}. @throws IOException if sending reply fails @throws InterruptedException
3156 Loads the mount-table configuration from hadoop compatible file system and add the configuration items to given configuration. Mount-table configuration format should be suffixed with version number. Format: {@literal mount-table.<versionNumber>.xml} Example: mount-table.1.xml When user wants to update mount-table, the expectation is to upload new mount-table configuration file with monotonically increasing integer as version number. This API loads the highest version number file. We can also configure single file path directly. @param mountTableConfigPath : A directory path where mount-table files stored or a mount-table file path. We recommend to configure directory with the mount-table version files. @param conf : to add the mount table as resource.
3157 Checks whether other target node is active or not @param targetNodeToActivate @return true if other target node is active or some other exception occurred and forceActive was set otherwise false @throws IOException
3158 Perform pre-failover checks on the given service we plan to failover to, eg to prevent failing over to a service (eg due to it being inaccessible, already active, not healthy, etc). An option to ignore toSvc if it claims it is not ready to become active is provided in case performing a failover will allow it to become active, eg because it triggers a log roll so the standby can learn about new blocks and leave safemode. @param from currently active service @param target service to make active @param forceActive ignore toSvc if it reports that it is not ready @throws FailoverFailedException if we should avoid failover
3159 Try to get the HA state of the node at the given address. This function is guaranteed to be "quick" -- ie it has a short timeout and no retries. Its only purpose is to avoid fencing a node that has already restarted.
3160 Attempt calling overridden {@link #doCall(Path)} method with specified {@link FileSystem} and {@link Path}. If the call fails with an UnresolvedLinkException, it will try to resolve the path and retry the call by calling {@link #next(FileSystem, Path)}. @param filesys FileSystem with which to try call @param path Path with which to try call @return Generic type determined by implementation @throws IOException raised on errors performing I/O.
3161 Creates an object to wrap the given parameters as fields. The string used to create the path will be recorded since the Path object does not return exactly the same string used to initialize it @param localPath a local URI @param conf the configuration file @throws IOException if anything goes wrong...
3162 The src files are on the local disk. Add it to the filesystem at the given dst name. delSrc indicates if the source should be removed @param delSrc whether to delete the src @param overwrite whether to overwrite an existing file @param srcs array of paths which are source @param dst path @throws IOException IO failure
3163 The src file is on the local disk. Add it to the filesystem at the given dst name. delSrc indicates if the source should be removed @param delSrc whether to delete the src @param overwrite whether to overwrite an existing file @param src path @param dst path @throws IOException IO failure
3164 The src file is under this filesystem, and the dst is on the local disk. Copy it from the remote filesystem to the local dst name. delSrc indicates if the src will be removed or not. useRawLocalFileSystem indicates whether to use RawLocalFileSystem as the local file system or not. RawLocalFileSystem is non checksumming, So, It will not create any crc files at local. @param delSrc whether to delete the src @param src path @param dst path @param useRawLocalFileSystem whether to use RawLocalFileSystem as local file system or not. @throws IOException for any IO error
3165 This method gets called everytime before any read/write to make sure that any change to localDirs is reflected immediately.
3166 Get a local file under a directory named by <i>dirsProp</i> with the given <i>path</i>. If <i>dirsProp</i> contains multiple directories, then one is chosen based on <i>path</i>'s hash code. If the selected directory does not exist, an attempt is made to create it. @param dirsProp directory in which to locate the file. @param path file-path. @return local file under the directory with the given path. @throws IOException raised on errors performing I/O.
3167 This is an admin only API to give access to its child raw file system, if the path is link. If the given path is an internal directory(path is from mount paths tree), it will initialize the file system of given path uri directly. If path cannot be resolved to any internal directory or link, it will throw NotInMountpointException. Please note, this API will not return chrooted file system. Instead, this API will get actual raw file system instances. @param path - fs uri path @param conf - configuration @throws IOException raised on errors performing I/O. @return file system.
3168 Gets the mount path info, which contains the target file system and remaining path to pass to the target file system. @param path the path. @param conf configuration. @return mount path info. @throws IOException raised on errors performing I/O.
3169 Expand the given path as a glob pattern. Non-existent paths do not throw an exception because creation commands like touch and mkdir need to create them. The "stat" field will be null if the path does not exist. @param pattern the pattern to expand as a glob @param conf the hadoop configuration @return list of {@link PathData} objects. if the pattern is not a glob, and does not exist, the list will contain a single PathData with a null stat @throws IOException anything else goes wrong...
3170 Dump information about TFile. @param file Path string of the TFile @param out PrintStream to output the information. @param conf The configuration object. @throws IOException
3171 Convenience method for reading a token storage file and loading its Tokens. @param filename filename. @param conf configuration. @throws IOException raised on errors performing I/O. @return Credentials.
3172 If libjars are set in the conf, parse the libjars. @param conf input Configuration. @return libjar urls @throws IOException raised on errors performing I/O.
3173 Initialize the connection to HDFS and create the base directory. Also launch the flush thread.
3174 @return a FileContext for the local file system using the default config. @throws UnsupportedFileSystemException If the file system for {@link FsConstants#LOCAL_FS_URI} is not supported.
3175 Create a FileContext using the default config read from the $HADOOP_CONFIG/core.xml, Unspecified key-values for config are defaulted from core-defaults.xml in the release jar. @throws UnsupportedFileSystemException If the file system from the default configuration is not supported @return file context.
3176 Construct an RPC server. @param protocolClass the class of protocol @param protocolImpl the protocolImpl whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param verbose whether each call should be logged @param portRangeConfig A config parameter that can be used to restrict the range of ports used when port is 0 (an ephemeral port) @param alignmentContext provides server state info on client responses @param secretManager input secretManager. @param queueSizePerHandler input queueSizePerHandler. @param numReaders input numReaders. @throws IOException raised on errors performing I/O.
3177 Construct an RPC server. @param protocolClass - the protocol being registered can be null for compatibility with old usage (see below for details) @param protocolImpl the protocol impl that will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param verbose whether each call should be logged @param secretManager input secretManager. @param queueSizePerHandler input queueSizePerHandler. @param portRangeConfig input portRangeConfig. @param numReaders input numReaders. @deprecated use Server#Server(Class, Object, Configuration, String, int, int, int, int, boolean, SecretManager) @throws IOException raised on errors performing I/O.
3178 Creates an SSLFactory. @param mode SSLFactory mode, client or server. @param conf Hadoop configuration from where the SSLFactory configuration will be read.
3179 Refresh the service authorization ACL for the service handled by this server. @param conf input Configuration. @param provider input PolicyProvider.
3180 Failover from service 1 to service 2. If the failover fails then try to failback. @param fromSvc currently active service @param toSvc service to make active @param forceFence to fence fromSvc even if not strictly necessary @param forceActive try to make toSvc active even if it is not ready @throws FailoverFailedException if the failover fails
3181 The last arg is expected to be a local path, if only one argument is given then the destination will be the current directory @param args is the list of arguments @throws IOException raised on errors performing I/O.
3182 The src files is on the local disk. Add it to filesystem at the given dst name, removing the source afterwards. @param srcs source paths @param dst path @throws IOException IO failure
3183 The src files are on the local disk. Add it to FS at the given dst name. delSrc indicates if the source should be removed
3184 The src file is on the local disk. Add it to the filesystem at the given dst name. delSrc indicates if the source should be removed @param delSrc whether to delete the src @param src path @param dst path @throws IOException IO failure.
3185 The src file is on the local disk. Add it to FS at the given dst name. delSrc indicates if the source should be removed
3186 Copy it a file from a remote filesystem to the local one. delSrc indicates if the src will be removed or not. @param delSrc whether to delete the src @param src path src file in the remote filesystem @param dst path local destination @throws IOException IO failure
3187 Get a path from the local FS. If size is known, we go round-robin over the set of disks (via the configured dirs) and return the first complete path which has enough space. If size is not known, use roulette selection -- pick directories with probability proportional to their available space.
3188 Get a path from the local FS for reading. We search through all the configured dirs for the file's existence and return the complete path to the file when we find one
3189 Get all of the paths that currently exist in the working directories. @param pathStr the path underneath the roots @param conf the configuration to look up the roots in @return all of the paths that exist under any of the roots @throws IOException
3190 Creates a new Nfly instance. @param uris the list of uris in the mount point @param conf configuration object @param minReplication minimum copies to commit a write op @param nflyFlags modes such readMostRecent @param fsGetter to get the file system instance with the given uri @throws IOException
3191 For each source path, execute the command @return 0 if it runs successfully; -1 if it fails
3192 Expand the given argument into a list of {@link PathData} objects. The default behavior is to expand globs. Commands may override to perform other expansions on an argument. @param arg string pattern to expand @return list of {@link PathData} objects @throws IOException if anything goes wrong...
3193 The last arg is expected to be a remote path, if only one argument is given then the destination will be the remote user's directory @param args is the list of arguments @throws PathIOException if path doesn't exist or matches too many times
3194 Construct a reader by opening a file from the given file system. @param fs The file system used to open the file. @param file The file being read. @param conf Configuration @throws IOException raised on errors performing I/O. @deprecated Use Reader(Configuration, Option...) instead.
3195 Construct a reader by the given input stream. @param in An input stream. @param buffersize unused @param start The starting position. @param length The length being read. @param conf Configuration @throws IOException raised on errors performing I/O. @deprecated Use Reader(Configuration, Reader.Option...) instead.
3196 Override this method to specialize the type of {@link SequenceFile.Reader} returned. @param dataFile data file. @param conf configuration. @param options options. @throws IOException raised on errors performing I/O. @return SequenceFile.Reader.
3197 Fills up the rawKey object with the key returned by the Reader. @return true if there is a key returned; false, otherwise @throws IOException raised on errors performing I/O.
3198 Construct a uncompressed writer from a set of options. @param conf the configuration to use @param opts the options used when creating the writer @throws IOException if it fails
3199 Dumping the TFile information. @param args A list of TFile paths.
3200 Write out a Credentials object as a local file. @param f a local File object. @param format a string equal to FORMAT_PB or FORMAT_JAVA. @param creds the Credentials object to be written out. @param conf a Configuration object passed along. @throws IOException raised on errors performing I/O.
3201 Check the current directory against the time stamp. If they're not the same, create a new directory and a new log file in that directory. @throws MetricsException thrown if an error occurs while creating the new directory or new log file
3202 Returns all jars that are in the directory. It is useful in expanding a wildcard path to return all jars from the directory to use in a classpath. @param path the path to the directory. The path may include the wildcard. @param useLocal use local. @return the list of jars as URLs, or an empty list if there are no jars, or the directory does not exist
3203 Construct an RPC server. @param protocolClass class @param protocolImpl the instance whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @throws IOException raised on errors performing I/O.
3204 Construct an RPC server. @param protocolImpl the instance whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @param numHandlers the number of method handler threads to run @param verbose whether each call should be logged @param numReaders input numberReaders. @param queueSizePerHandler input queueSizePerHandler. @param secretManager input secretManager. @deprecated use Server#Server(Class, Object, Configuration, String, int, int, int, int, boolean, SecretManager) @throws IOException raised on errors performing I/O.
3205 Establish RPC connection setup by negotiating SASL if required, then reading and authorizing the connection header @param header - RPC header @param buffer - stream to request payload @throws RpcServerException - setup failed due to SASL negotiation failure, premature or invalid connection context, or other state errors. This exception needs to be sent to the client. @throws IOException - failed to send a response back to the client @throws InterruptedException
3206 Connect to the URL. Supports HTTP/HTTPS and supports SPNEGO authentication. It falls back to simple authentication if it fails to initiate SPNEGO. @param url the URL address of the daemon servlet @return a connected connection @throws Exception if it can not establish a connection.
3207 The src file is on the local disk. Add it to filesystem at the given dst name and the source is kept intact afterwards @param src path @param dst path @throws IOException IO failure
3208 The src file is on the local disk. Add it to the filesystem at the given dst name, removing the source afterwards. @param src local path @param dst path @throws IOException IO failure
3209 The src file is on the local disk. Add it to FS at the given dst name. delSrc indicates if the source should be removed
3210 Copy it a file from the remote filesystem to the local one. @param src path src file in the remote filesystem @param dst path local destination @throws IOException IO failure
3211 Copy a file to the local filesystem, then delete it from the remote filesystem (if successfully copied). @param src path src file in the remote filesystem @param dst path local destination @throws IOException IO failure
3212 The src file is under FS, and the dst is on the local disk. Copy it from FS control to the local dst name. delSrc indicates if the src will be removed or not.
3213 Get a path from the local FS. Pass size as SIZE_UNKNOWN if not known apriori. We round-robin over the set of disks (via the configured dirs) and return the first complete path which has enough space @param pathStr the requested path (this will be created on the first available disk) @param size the size of the file that is going to be written @param conf the Configuration object @param checkWrite ensure that the path is writable @return the complete path to the file on a local disk @throws IOException raised on errors performing I/O.
3214 Creates a file on the local FS. Pass size as {@link LocalDirAllocator.SIZE_UNKNOWN} if not known apriori. We round-robin over the set of disks (via the configured dirs) and return a file on the first path which has enough space. The file is guaranteed to go away when the JVM exits.
3215 Get a path from the local FS for reading. We search through all the configured dirs for the file's existence and return the complete path to the file when we find one @param pathStr the requested file (this will be searched) @param conf the Configuration object @return the complete path to the file on a local disk @throws IOException raised on errors performing I/O.
3216 Get all of the paths that currently exist in the working directories. @param pathStr the path underneath the roots @param conf the configuration to look up the roots in @return all of the paths that exist under any of the roots @throws IOException raised on errors performing I/O.
3217 Creates a new Nfly instance. @param uris the list of uris in the mount point @param conf configuration object @param minReplication minimum copies to commit a write op @param nflyFlags modes such readMostRecent @throws IOException
3218 Initializes an nfly mountpoint in viewfs. @param uris destinations to replicate writes to @param conf file system configuration @param settings comma-separated list of k=v pairs. @return an Nfly filesystem @throws IOException
3219 Expands a list of arguments into {@link PathData} objects. The default behavior is to call {@link #expandArgument(String)} on each element which by default globs the argument. The loop catches IOExceptions, increments the error count, and displays the exception. @param args strings to expand into {@link PathData} objects @return list of all {@link PathData} objects the arguments @throws IOException if anything goes wrong...
3220 Fetch a token from a service and save to file in the local filesystem. @param tokenFile a local File object to hold the output. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param alias overwrite service field of fetched token with this text. @param service use a DtFetcher implementation matching this service text. @param url pass this URL to fetcher after stripping any http/s prefix. @param renewer pass this renewer to the fetcher. @param conf Configuration object passed along. @throws IOException raised on errors performing I/O.
3221 Alias a token from a file and save back to file in the local filesystem. @param tokenFile a local File object to hold the input and output. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param alias overwrite service field of fetched token with this text. @param service only apply alias to tokens matching this service text. @param conf Configuration object passed along. @throws IOException raised on errors performing I/O.
3222 Append tokens from list of files in local filesystem, saving to last file. @param tokenFiles list of local File objects. Last file holds the output. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param conf Configuration object passed along. @throws IOException raised on errors performing I/O.
3223 Remove a token from a file in the local filesystem, matching alias. @param cancel cancel token as well as remove from file. @param tokenFile a local File object. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param alias remove only tokens matching alias; null matches all. @param conf Configuration object passed along. @throws IOException raised on errors performing I/O. @throws InterruptedException if the thread is interrupted.
3224 Renew a token from a file in the local filesystem, matching alias. @param tokenFile a local File object. @param fileFormat a string equal to FORMAT_PB or FORMAT_JAVA, for output @param alias renew only tokens matching alias; null matches all. @param conf Configuration object passed along. @throws IOException raised on errors performing I/O. @throws InterruptedException if the thread is interrupted.
3225 Import a token from a base64 encoding into the local filesystem. @param tokenFile A local File object. @param fileFormat A string equal to FORMAT_PB or FORMAT_JAVA, for output. @param alias overwrite Service field of fetched token with this text. @param base64 urlString Encoding of the token to import. @param conf Configuration object passed along. @throws IOException Error to import the token into the file.
3226 Returns all jars that are in the directory. It is useful in expanding a wildcard path to return all jars from the directory to use in a classpath. It operates only on local paths. @param path the path to the directory. The path may include the wildcard. @return the list of jars as URLs, or an empty list if there are no jars, or the directory does not exist locally
3227 Construct an RPC server. @param instance the instance whose methods will be called @param conf the configuration to use @param bindAddress the address to bind on to listen for connection @param port the port to listen for connections on @deprecated Use #Server(Class, Object, Configuration, String, int) @throws IOException raised on errors performing I/O.
3228 Process one RPC Request from buffer read from socket stream - decode rpc in a rpc-Call - handle out-of-band RPC requests such as the initial connectionContext - A successfully decoded RpcCall will be deposited in RPC-Q and its response will be sent later when the request is processed. Prior to this call the connectionHeader ("hrpc...") has been handled and if SASL then SASL has been established and the buf we are passed has been unwrapped from SASL. @param bb - contains the RPC request header and the rpc request @throws IOException - internal error that should not be returned to client, typically failure to respond to client @throws InterruptedException
3229 Configures the client to send HTTP/HTTPS request to the URL. Supports SPENGO for authentication. @param urlString URL and query string to the daemon's web UI @throws Exception if unable to connect
3230 Called when we're all done writing to the target. A local FS will do nothing, because we've written to exactly the right place. A remote FS will copy the contents of tmpLocalFile to the correct target at fsOutputFile. @param fsOutputFile path of output file @param tmpLocalFile path to local tmp file @throws IOException IO failure
3231 The src file is under FS, and the dst is on the local disk. Copy it from FS control to the local dst name. If src and dst are directories, the copyCrc parameter determines whether to copy CRC files. @param src src path. @param dst dst path. @param copyCrc copy csc flag. @throws IOException if an I/O error occurs.
3232 Get a path from the local FS. Pass size as SIZE_UNKNOWN if not known apriori. We round-robin over the set of disks (via the configured dirs) and return the first complete path which has enough space @param pathStr the requested path (this will be created on the first available disk) @param size the size of the file that is going to be written @param conf the Configuration object @return the complete path to the file on a local disk @throws IOException raised on errors performing I/O.
3233 Creates a temporary file in the local FS. Pass size as -1 if not known apriori. We round-robin over the set of disks (via the configured dirs) and select the first complete path which has enough space. A file is created on this directory. The file is guaranteed to go away when the JVM exits. @param pathStr prefix for the temporary file @param size the size of the file that is going to be written @param conf the Configuration object @return a unique temporary file @throws IOException raised on errors performing I/O.
3234 Allows commands that don't use paths to handle the raw arguments. Default behavior is to expand the arguments via {@link #expandArguments(LinkedList)} and pass the resulting list to {@link #processArguments(LinkedList)} @param args the list of argument strings @throws IOException raised on errors performing I/O.
3235 Create a new Writer with the given options. @param conf the configuration to use @param opts the options to create the file with @return a new Writer @throws IOException raised on errors performing I/O.
3236 Create a jar file at the given path, containing a manifest with a classpath that references all specified entries. Some platforms may have an upper limit on command line length. For example, the maximum command line length on Windows is 8191 characters, but the length of the classpath may exceed this. To work around this limitation, use this method to create a small intermediate jar with a manifest that contains the full classpath. It returns the absolute path to the new jar, which the caller may set as the classpath for a new process. Environment variable evaluation is not supported within a jar manifest, so this method expands environment variables before inserting classpath entries to the manifest. The method parses environment variables according to platform-specific syntax (%VAR% on Windows, or $VAR otherwise). On Windows, environment variables are case-insensitive. For example, %VAR% and %var% evaluate to the same value. Specifying the classpath in a jar manifest does not support wildcards, so this method expands wildcards internally. Any classpath entry that ends with * is translated to all files at that path with extension .jar or .JAR. @param inputClassPath String input classpath to bundle into the jar manifest @param pwd Path to working directory to save jar @param targetDir path to where the jar execution will have its working dir @param callerEnv Map {@literal <}String, String{@literal >} caller's environment variables to use for expansion @return String[] with absolute path to new jar in position 0 and unexpanded wild card entry path in position 1 @throws IOException if there is an I/O error while writing the jar file
3237 takes input as a comma separated list of files and verifies if they exist. It defaults for file:/// if the files specified do not have a scheme. it returns the paths uri converted defaulting to file:///. So an input of /home/user/file1,/home/user/file2 would return file:///home/user/file1,file:///home/user/file2. @param files the input files argument @param expandWildcard whether a wildcard entry is allowed and expanded. If true, any directory followed by a wildcard is a valid entry and is replaced with the list of jars in that directory. It is used to support the wildcard notation in a classpath. @return a comma-separated list of validated and qualified paths, or null if the input files argument is null
3238 This method reads in a non-blocking fashion from the channel: this method is called repeatedly when data is present in the channel; when it has enough data to process one rpc it processes that rpc. On the first pass, it processes the connectionHeader, connectionContext (an outOfBand RPC) and at most one RPC request that follows that. On future passes it will process at most one RPC request. Quirky things: dataLengthBuffer (4 bytes) is used to read "hrpc" OR rpc request length. @return -1 in case of error, else num bytes read so far @throws IOException - internal error that should not be returned to client, typically failure to respond to client @throws InterruptedException - if the thread is interrupted.
3239 Process a wrapped RPC Request - unwrap the SASL packet and process each embedded RPC request @param inBuf - SASL wrapped request of one or more RPCs @throws IOException - SASL packet cannot be unwrapped @throws InterruptedException
3240 Send HTTP/HTTPS request to get log level. @throws HadoopIllegalArgumentException if arguments are invalid. @throws Exception if unable to connect
3241 Send HTTP/HTTPS request to set log level. @throws HadoopIllegalArgumentException if arguments are invalid. @throws Exception if unable to connect
3242 This provider expects URIs in the following form : {@literal kms://<PROTO>@<AUTHORITY>/<PATH>} where : - PROTO = http or https - AUTHORITY = {@literal <HOSTS>[:<PORT>]} - HOSTS = {@literal <HOSTNAME>[;<HOSTS>]} - HOSTNAME = string - PORT = integer This will always create a {@link LoadBalancingKMSClientProvider} if the uri is correct.
3243 Called when we're all done writing to the target. A local FS will do nothing, because we've written to exactly the right place. A remote FS will copy the contents of tmpLocalFile to the correct target at fsOutputFile.
3244 Demand create the directory allocator, then create a temporary file. This does not mark the file for deletion when a process exits. {@link LocalDirAllocator#createTmpFileForWrite(String, long, Configuration)}. @param pathStr prefix for the temporary file. @param size the size of the file that is going to be written. @param conf the Configuration object. @return a unique temporary file. @throws IOException IO problems
3245 Get a path from the local FS. This method should be used if the size of the file is not known apriori. We go round-robin over the set of disks (via the configured dirs) and return the first complete path where we could create the parent directory of the passed path. @param pathStr the requested path (this will be created on the first available disk) @param conf the Configuration object @return the complete path to the file on a local disk @throws IOException raised on errors performing I/O.
3246 Invokes the command handler. The default behavior is to process options, expand arguments, and then process each argument. <pre> run |{@literal ->} {@link #processOptions(LinkedList)} \{@literal ->} {@link #processRawArguments(LinkedList)} |{@literal ->} {@link #expandArguments(LinkedList)} | \{@literal ->} {@link #expandArgument(String)}* \{@literal ->} {@link #processArguments(LinkedList)} |{@literal ->} {@link #processArgument(PathData)}* | |{@literal ->} {@link #processPathArgument(PathData)} | \{@literal ->} {@link #processPaths(PathData, PathData...)} | \{@literal ->} {@link #processPath(PathData)}* \{@literal ->} {@link #processNonexistentPath(PathData)} </pre> Most commands will chose to implement just {@link #processOptions(LinkedList)} and {@link #processPath(PathData)} @param argv the list of command line arguments @return the exit code for the command @throws IllegalArgumentException if called with invalid arguments
3247 Construct an array reader for the named file. @param fs FileSystem. @param file file. @param conf configuration. @throws IOException raised on errors performing I/O.
3248 Construct a set reader for the named set using the named comparator. @param fs input FileSystem. @param dirName input dirName. @param comparator input comparator. @param conf input Configuration. @throws IOException raised on errors performing I/O.
3249 Construct a map reader for the named map. @deprecated @param fs FileSystem. @param dirName dirName. @param conf configuration. @throws IOException raised on errors performing I/O.
3250 Construct a map reader for the named map using the named comparator. @deprecated @param fs FileSystem. @param dirName dirName. @param comparator WritableComparator. @param conf Configuration. @throws IOException raised on errors performing I/O.
3251 Clones the attributes (like compression of the input file and creates a corresponding Writer @param inputFile the path of the input file whose attributes should be cloned @param outputFile the path of the output file @param prog the Progressable to report status during the file write @return Writer @throws IOException raised on errors performing I/O.
3252 This method attempts to fix a corrupt MapFile by re-creating its index. @param fs filesystem @param dir directory containing the MapFile data and index @param keyClass key class (has to be a subclass of Writable) @param valueClass value class (has to be a subclass of Writable) @param dryrun do not perform any changes, just report what needs to be done @param conf configuration. @return number of valid entries in this MapFile, or -1 if no fixing was needed @throws Exception Exception.
3253 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3254 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3255 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param progress The Progressable object to track progress. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3256 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3257 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @param progress The Progressable object to track progress. @param metadata The metadata of the file. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3258 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param bufferSize buffer size for the underlaying outputstream. @param replication replication factor for the file. @param blockSize block size for the file. @param compressionType The compression type. @param codec The compression codec. @param progress The Progressable object to track progress. @param metadata The metadata of the file. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3259 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @param progress The Progressable object to track progress. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3260 Construct the preferred type of 'raw' SequenceFile Writer. @param conf The configuration. @param out The stream on top which the writer is to be constructed. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @param metadata The metadata of the file. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3261 Construct the preferred type of 'raw' SequenceFile Writer. @param conf The configuration. @param out The stream on top which the writer is to be constructed. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O. @deprecated Use {@link #createWriter(Configuration, Writer.Option...)} instead.
3262 Takes input as a comma separated list of files and verifies if they exist. It defaults for file:/// if the files specified do not have a scheme. it returns the paths uri converted defaulting to file:///. So an input of /home/user/file1,/home/user/file2 would return file:///home/user/file1,file:///home/user/file2. This method does not recognize wildcards. @param files the input files argument @return a comma-separated list of validated and qualified paths, or null if the input files argument is null
3263 Send HTTP/HTTPS request to the daemon. @throws HadoopIllegalArgumentException if arguments are invalid. @throws Exception if unable to connect
3264 Create a temp file and a {@link DiskBlock} instance to manage it. @param index block index. @param limit limit of the block. @param statistics statistics to update. @return the new block. @throws IOException IO problems
3265 Create temporary file based on the file path retrieved from local dir allocator instance. The file is created with .bin suffix. The created file has been granted posix file permissions available in TEMP_FILE_ATTRS. @param conf the configuration. @param localDirAllocator the local dir allocator instance. @return path of the file created. @throws IOException if IO error occurs while local dir allocator tries to retrieve path from local FS or file creation fails or permission set fails.
3266 run
3267 Construct a set reader for the named set. @param fs input FileSystem. @param dirName input dirName. @param conf input Configuration. @throws IOException raised on errors performing I/O.
3268 This is the single level merge that is called multiple times depending on the factor size and the number of segments @return RawKeyValueIterator @throws IOException
3269 Create a set naming the element comparator and compression type. @param conf input Configuration. @param fs input FileSystem. @param dirName input dirName. @param comparator input comparator. @param compress input compress. @throws IOException raised on errors performing I/O.
3270 Create the named file for values of the named class. @param conf configuration. @param fs file system. @param file file. @param valClass valClass. @throws IOException raised on errors performing I/O.
3271 Create the named file for values of the named class. @param conf configuration. @param fs file system. @param file file. @param valClass valClass. @param compress compress. @param progress progress. @throws IOException raised on errors performing I/O.
3272 Create the named map for keys of the named class. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs filesystem. @param dirName dirName. @param keyClass keyClass. @param valClass valClass. @throws IOException raised on errors performing I/O.
3273 Create the named map for keys of the named class. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs fs. @param dirName dirName. @param keyClass keyClass. @param valClass valClass. @param compress compress. @param progress progress. @throws IOException raised on errors performing I/O.
3274 Create the named map for keys of the named class. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs FileSystem. @param dirName dirName. @param keyClass keyClass. @param valClass valClass. @param compress compress. @param codec codec. @param progress progress. @throws IOException raised on errors performing I/O.
3275 Create the named map for keys of the named class. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs fs. @param dirName dirName. @param keyClass keyClass. @param valClass valClass. @param compress compress. @throws IOException raised on errors performing I/O.
3276 Create the named map using the named key comparator. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs fs. @param dirName dirName. @param comparator comparator. @param valClass valClass. @throws IOException raised on errors performing I/O.
3277 Create the named map using the named key comparator. @param conf configuration. @param fs filesystem. @param dirName dirName. @param comparator comparator. @param valClass valClass. @param compress compress. @throws IOException raised on errors performing I/O. @deprecated Use Writer(Configuration, Path, Option...) instead.
3278 Create the named map using the named key comparator. @deprecated Use Writer(Configuration, Path, Option...)} instead. @param conf configuration. @param fs filesystem. @param dirName dirName. @param comparator comparator. @param valClass valClass. @param compress CompressionType. @param progress progress. @throws IOException raised on errors performing I/O.
3279 Create the named map using the named key comparator. @deprecated Use Writer(Configuration, Path, Option...) instead. @param conf configuration. @param fs FileSystem. @param dirName dirName. @param comparator comparator. @param valClass valClass. @param compress CompressionType. @param codec codec. @param progress progress. @throws IOException raised on errors performing I/O.
3280 Construct the preferred type of SequenceFile Writer. @param fc The context for the specified file. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param compressionType The compression type. @param codec The compression codec. @param metadata The metadata of the file. @param createFlag gives the semantics of create: overwrite, append etc. @param opts file creation options; see {@link CreateOpts}. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O.
3281 Main entry point. @param args command-line arguments
3282 Creates a classloader based on the environment that was specified by the user. If HADOOP_USE_CLIENT_CLASSLOADER is specified, it creates an application classloader that provides the isolation of the user class space from the hadoop classes and their dependencies. It forms a class space for the user jar as well as the HADOOP_CLASSPATH. Otherwise, it creates a classloader that simply adds the user jar to the classpath.
3283 Modify configuration according user-specified generic options. @param line User-specified generic options
3284 Return temporary file created based on the file path retrieved from local dir allocator. @param conf The configuration object. @param localDirAllocator Local dir allocator instance. @return Path of the temporary file created. @throws IOException if IO error occurs while local dir allocator tries to retrieve path from local FS or file creation fails or permission set fails.
3285 Determine if the cache space is available on the local FS. @param fileSize The size of the file. @param conf The configuration. @param localDirAllocator Local dir allocator instance. @return True if the given file size is less than the available free space on local FS, False otherwise.
3286 Merges the list of segments of type <code>SegmentDescriptor</code> @param segments the list of SegmentDescriptors @param tmpDir the directory to write temporary files into @return RawKeyValueIterator @throws IOException raised on errors performing I/O.
3287 Merges the contents of files passed in Path[] @param inNames the array of path names @param deleteInputs true if the input files should be deleted when unnecessary @param factor the factor that will be used as the maximum merge fan-in @param tmpDir the directory to write temporary files into @return RawKeyValueIteratorMergeQueue @throws IOException raised on errors performing I/O.
3288 Merges the contents of files passed in Path[] @param inNames the array of path names @param tempDir the directory for creating temp files during merge @param deleteInputs true if the input files should be deleted when unnecessary @return RawKeyValueIteratorMergeQueue @throws IOException raised on errors performing I/O.
3289 Used by mergePass to merge the output of the sort @param inName the name of the input file containing sorted segments @param indexIn the offsets of the sorted segments @param tmpDir the relative directory to store intermediate results in @return RawKeyValueIterator @throws IOException
3290 Create a set naming the element class and compression type. @param conf input Configuration. @param fs input FileSystem. @param dirName input dirName. @param keyClass input keyClass. @param compress input compress. @throws IOException raised on errors performing I/O.
3291 Create the named set for keys of the named class. @deprecated pass a Configuration too @param fs input FileSystem. @param dirName input dirName. @param keyClass input keyClass. @throws IOException raised on errors performing I/O.
3292 Merge multiple MapFiles to one Mapfile. @param inMapFiles input inMapFiles. @param deleteInputs deleteInputs. @param outMapFile input outMapFile. @throws IOException raised on errors performing I/O.
3293 Construct the preferred type of SequenceFile Writer. @param fs The configured filesystem. @param conf The configuration. @param name The name of the file. @param keyClass The 'key' type. @param valClass The 'value' type. @param bufferSize buffer size for the underlaying outputstream. @param replication replication factor for the file. @param blockSize block size for the file. @param createParent create parent directory if non-existent @param compressionType The compression type. @param codec The compression codec. @param metadata The metadata of the file. @return Returns the handle to the constructed SequenceFile Writer. @throws IOException raised on errors performing I/O.
3294 Parse the user-specified options, get the generic options, and modify configuration accordingly. @param opts Options to use for parsing args. @param args User-specified arguments @return true if the parse was successful
3295 Puts the given block in this cache. @param blockNumber the block number, used as a key for blocks map. @param buffer buffer contents of the given block to be added to this cache. @param conf the configuration. @param localDirAllocator the local dir allocator instance. @throws IOException if either local dir allocator fails to allocate file or if IO error occurs while writing the buffer content to the file. @throws IllegalArgumentException if buffer is null, or if buffer.limit() is zero or negative.
3296 Merges the contents of files passed in Path[] using a max factor value that is already set @param inNames the array of path names @param deleteInputs true if the input files should be deleted when unnecessary @param tmpDir the directory to write temporary files into @return RawKeyValueIteratorMergeQueue @throws IOException raised on errors performing I/O.
3297 sort calls this to generate the final merged output
3298 Run a Hadoop job jar. If the main class is not in the jar's manifest, then it must be provided on the command line. @param args args. @throws Throwable error.
3299 Create a <code>GenericOptionsParser</code> to parse given options as well as generic Hadoop options. The resulting <code>CommandLine</code> object can be obtained by {@link #getCommandLine()}. @param conf the configuration to modify @param options options built by the caller @param args User-specified arguments @throws IOException raised on errors performing I/O.
3300 Perform a file sort from a set of input files and return an iterator. @param inFiles the files to be sorted @param tempDir the directory where temp files are created during sort @param deleteInput should the input files be deleted as they are read? @return iterator the RawKeyValueIterator @throws IOException raised on errors performing I/O.
3301 Merge the provided files. @param inFiles the array of input path names @param outFile the final output file @throws IOException raised on errors performing I/O.
3302 Perform a file sort from a set of input files into an output file. @param inFiles the files to be sorted @param outFile the sorted output file @param deleteInput should the input files be deleted as they are read? @throws IOException raised on errors performing I/O.
3303 Create an options parser with the given options to parse the args. @param opts the options @param args the command line arguments @throws IOException raised on errors performing I/O.
3304 Create an options parser to parse the args. @param args the command line arguments @throws IOException raised on errors performing I/O.
3305 Create a <code>GenericOptionsParser</code> to parse only the generic Hadoop arguments. The array of string arguments other than the generic arguments can be obtained by {@link #getRemainingArgs()}. @param conf the <code>Configuration</code> to modify. @param args command-line arguments. @throws IOException raised on errors performing I/O.
3306 The backwards compatible interface to sort. @param inFile the input file to sort. @param outFile the sorted output file. @throws IOException raised on errors performing I/O.
3307 Override point: create a generic options parser or subclass thereof. @param conf Hadoop configuration @param argArray array of arguments @return a generic options parser to parse the arguments @throws IOException on any failure
3308 Runs the given <code>Tool</code> by {@link Tool#run(String[])}, after parsing with the given generic arguments. Uses the given <code>Configuration</code>, or builds one if null. Sets the <code>Tool</code>'s configuration with the possibly modified version of the <code>conf</code>. @param conf <code>Configuration</code> for the <code>Tool</code>. @param tool <code>Tool</code> to run. @param args command-line arguments to the tool. @return exit code of the {@link Tool#run(String[])} method. @throws Exception Exception.
3309 Parse the command arguments, extracting the service class as the last element of the list (after extracting all the rest). The field {@link #commandOptions} field must already have been set. @param conf configuration to use @param args command line argument list @return the remaining arguments @throws ServiceLaunchException if processing of arguments failed
3310 Inner entry point, with no logging or system exits. @param conf configuration @param argv argument list @return an exception @throws Exception Exception.
3311 Main program. @param args Command line arguments @throws Exception exception.
3312 main() entry point for the KeyShell. While strictly speaking the return is void, it will System.exit() with a return code: 0 is for success and 1 for failure. @param args Command line arguments. @throws Exception raised on errors performing I/O.
3313 Runs the <code>Tool</code> with its <code>Configuration</code>. Equivalent to <code>run(tool.getConf(), tool, args)</code>. @param tool <code>Tool</code> to run. @param args command-line arguments to the tool. @return exit code of the {@link Tool#run(String[])} method. @throws Exception exception.
3314 Extract the command options and apply them to the configuration, building an array of processed arguments to hand down to the service. @param conf configuration to update. @param args main arguments. {@code args[0]}is assumed to be the service classname and is skipped. @return the remaining arguments @throws ExitUtil.ExitException if JVM exiting is disabled.
3315 Main entry point. @param argv args list
3316 main() has some simple utility methods @param argv the command and its arguments @throws Exception upon error
3317 A command line implementation @param args input args. @throws Exception exception.
3318 Main entry point. Runs the class via the {@link ToolRunner}, then exits with an appropriate exit code. @param args argument list
3319 Launch the service and exit. <ol> <li>Parse the command line.</li> <li>Build the service configuration from it.</li> <li>Start the service.</li> <li>If it is a {@link LaunchableService}: execute it</li> <li>Otherwise: wait for it to finish.</li> <li>Exit passing the status code to the {@link #exit(int, String)} method.</li> </ol> @param args arguments to the service. {@code arg[0]} is assumed to be the service classname.
3320 This is the JVM entry point for the service launcher. Converts the arguments to a list, then invokes {@link #serviceMain(List)} @param args command line arguments.
3321 Varargs version of the entry point for testing and other in-JVM use. Hands off to {@link #serviceMain(List)} @param args command line arguments.
