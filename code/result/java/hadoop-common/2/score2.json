[
    {
        "org.apache.hadoop.fs.FileRange:createFileRange(long,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileRange:createFileRange(long,int,java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:validateRangeRequest(org.apache.hadoop.fs.FileRange)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNull(java.lang.Object,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkPositiveInteger(long,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNegative(long,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkRequired(boolean,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkValid(boolean,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkValid(boolean,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkValuesEqual(long,java.lang.String,long,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkIntegerMultiple(long,java.lang.String,long,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkGreater(long,java.lang.String,long,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkGreaterOrEqual(long,java.lang.String,long,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkLessOrEqual(long,java.lang.String,long,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkWithinRange(long,java.lang.String,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkWithinRange(double,java.lang.String,double,double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotEmpty(int,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BulkDeleteUtils:validateBulkDeletePaths(java.util.Collection,int,org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$BlockUploadData:<init>(java.io.File)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:requireIOStatisticsSnapshot(java.io.Serializable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputWrapper:<init>(java.net.Socket,java.io.InputStream)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ConfigurationHelper:mapEnumNamesToValues(java.lang.String,java.lang.Class)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:sortRanges(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:perms(org.apache.hadoop.fs.permission.FsPermission)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPInputStream:seekInternal()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPInputStream:checkNotClosed()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:isParentOf(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:isSameFS(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:deleteOnExit(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:processDeleteOnExit()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.KeyStoreProvider:keystoreExists()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode:compareTo(org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getModificationTime()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getModificationTime()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:decodeFileName(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:compareTo(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:isChecksumFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:isChecksumFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:fixBlockLocations(org.apache.hadoop.fs.BlockLocation[],long,long,long)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:compareTo(org.apache.hadoop.fs.FileStatus)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:stat2Paths(org.apache.hadoop.fs.FileStatus[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarMetaData:addPartFileStatuses(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:merge(org.apache.hadoop.fs.FileStatus[],org.apache.hadoop.fs.FileStatus[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getPath()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:merge(org.apache.hadoop.fs.FileStatus[],org.apache.hadoop.fs.FileStatus[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:resolveIntermediate(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getReplication(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getReplication()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getReplication()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getBlockSize(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getBlockSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getBlockSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getAccessTime()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getAccessTime()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getPermission()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getPermission()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.KeyStoreProvider:stashOriginalFilePermissions()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:isPermissionLoaded()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getOwner()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getOwner()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getGroup()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getGroup()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:msync()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:msync()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getDefaultReplication()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getDefaultReplication(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getDefaultReplication()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics$StatisticsDataReference:cleanUp()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsUrlConnection:<init>(org.apache.hadoop.conf.Configuration,java.net.URL)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputStream:validatePositionedReadArgs(long,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractMultipartUploader:checkUploadId(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractMultipartUploader:checkPartHandles(java.util.Map)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.PathCapabilitiesSupport:validatePathCapabilityArgs(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.InterruptEscalator:<init>(org.apache.hadoop.service.launcher.ServiceLauncher,int)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.IrqHandler:<init>(java.lang.String,org.apache.hadoop.service.launcher.IrqHandler$Interrupted)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:partition(java.util.List,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:<init>(java.lang.Class,boolean,boolean)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystemStorageStatistics:fetch(org.apache.hadoop.fs.FileSystem$Statistics$StatisticsData,java.lang.String)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.1
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.1
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StorageStatisticsFromIOStatistics:<init>(java.lang.String,java.lang.String,org.apache.hadoop.fs.statistics.IOStatistics)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.EmptyStorageStatistics:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.UnionStorageStatistics:<init>(java.lang.String,org.apache.hadoop.fs.StorageStatistics[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystemStorageStatistics:getScheme()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:listXAttrs(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:listXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createNonRecursive(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:createNonRecursive(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathAccessDeniedException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathPermissionException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathPermissionException:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathNotFoundException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathNotFoundException:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathExistsException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathExistsException:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathIOException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ClosedIOException:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:getThisBuilder()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.protocolPB.PBHelper:convert(org.apache.hadoop.fs.permission.FsPermission)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:checkReturnValue(boolean,java.io.File,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:toExtendedShort()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:toOctal()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringInterner:internStringsInArray(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Parser:handleStartProperty()": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:isDir()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:isDirectory(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Merge:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:isPathRecursable(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.AclCommands$SetfaclCommand:getAclEntries(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Du:processPathArgument(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:isDirectory(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:isDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:isDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.ChmodParser:applyNewPermission(org.apache.hadoop.fs.FileStatus)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.23
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:isFile()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:getSymlink()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:isSymlink()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:isSymlink()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:getFileLength()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:getFileLength()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:totalPartsLen(java.util.List)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getLength(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getLen()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getLen()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsServerDefaults:<init>(long,int,int,short,int,boolean,long,org.apache.hadoop.util.DataChecksum$Type,java.lang.String,byte)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:blockSize(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:bufferSize(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:repFac(short)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:bytesPerChecksum(short)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:checksumParam(org.apache.hadoop.fs.Options$ChecksumOpt)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:progress(org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:createParent()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$CreateOpts:donotCreateParent()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathAccessDeniedException:<init>(java.lang.String,java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathPermissionException:<init>(java.lang.String,java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathNotFoundException:<init>(java.lang.String,java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathIOException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:removeAcl(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:removeAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AvroFSInput:seek(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,long,long,int)": {
            "seek": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:skip(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:seek(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BoundedRangeFileInputStream:read(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AvroFSInput:tell()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:readRecordLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:getPosition()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShellPermissions$Chown:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.49
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.ExpressionFactory:registerExpression(java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFactory:registerCommands(java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$RpcCall:doResponse(java.lang.Throwable,org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getUri()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:setSymlink(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:read(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:seek(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:read(long,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:readFully(long,byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:setReadahead(java.lang.Long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream:setDropBehind(java.lang.Boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Trash:getCurrentTrashDir(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$AsyncHandler:completed(java.lang.Integer,java.lang.Integer)": {
            "m9": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobExpander:expandLeftmost(org.apache.hadoop.fs.GlobExpander$StringWithOffset)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:listStatusBatch(org.apache.hadoop.fs.Path,byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.XAttrCodec:encodeValue(byte[],org.apache.hadoop.fs.XAttrCodec)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:listStatus(java.util.ArrayList,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsTag:<init>(org.apache.hadoop.metrics2.MetricsInfo,java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableCounter:<init>(org.apache.hadoop.metrics2.MetricsInfo)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGauge:<init>(org.apache.hadoop.metrics2.MetricsInfo)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRates:<init>(org.apache.hadoop.metrics2.lib.MetricsRegistry)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsInfoImpl:<init>(java.lang.String,java.lang.String)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.AbstractMetric:<init>(org.apache.hadoop.metrics2.MetricsInfo)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:getDelegationToken(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:renewDelegationToken(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:cancelDelegationToken(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:<init>(int,float,long,int,org.apache.hadoop.crypto.key.kms.ValueQueue$SyncGenerationPolicy,org.apache.hadoop.crypto.key.kms.ValueQueue$QueueRefiller)": {
            "checkArgument": {
                "count_score": 0.83,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "checkNotNull": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.util.Preconditions:checkNotNull(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobalStorageStatistics:put(java.lang.String,org.apache.hadoop.fs.GlobalStorageStatistics$StorageStatisticsProvider)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobalStorageStatistics$StorageIterator:next()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:clearStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell$UnknownCommandException:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$BlockUploadData:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO:copyFileUnbuffered(java.io.File,java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.IOUtils:closeStream(java.io.Closeable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.IOUtils:closeStreams(java.io.Closeable[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter:stop()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec:close()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.random.OsSecureRandom:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:diskIoCheckWithoutNativeIo(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileOutputStream:hflush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileOutputStream:hsync()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StatisticDurationTracker:close()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream:skip(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileOutputStream:write(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileOutputStream:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileOutputStream:hasCapability(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.PartialListing:<init>(org.apache.hadoop.fs.Path,java.util.List,org.apache.hadoop.ipc.RemoteException)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataOutputBuffer$Buffer:setCount(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.CallReturn:<init>(java.lang.Object,java.lang.Throwable,org.apache.hadoop.io.retry.CallReturn$State)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:getConnectorAddress(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec:calculateIV(byte[],long,byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceCtrCryptoCodec:calculateIV(byte[],long,byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.GcTimeMonitor:<init>(long,long,int,org.apache.hadoop.util.GcTimeMonitor$GcTimeAlertHandler)": {
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ServletUtil:getRawPath(javax.servlet.http.HttpServletRequest,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.StorageType:getMovableTypes()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.StorageType:getTypesSupportingQuota()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.StorageType:parseStorageType(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:initMode()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:unbuffer()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:equals(java.lang.Object)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:hashCode()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:setPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DUHelper:calculateFolderSize(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DUHelper:check(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:setSamplesAndSum(long,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:add(org.apache.hadoop.fs.statistics.MeanStatistic)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:equals(java.lang.Object)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging:mapToString(java.lang.StringBuilder,java.lang.String,java.util.Map,java.lang.String)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:entryToString(java.util.Map$Entry)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.DurationTrackerFactory:trackDuration(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.EmptyPrefetchingStatistics:prefetchOperationStarted()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StorageStatisticsFromIOStatistics:getLong(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StorageStatisticsFromIOStatistics:isTracked(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StorageStatisticsFromIOStatistics:toLongStatistic(java.util.Map$Entry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystemStorageStatistics$LongStatisticIterator:next()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.EvaluatingStatisticsMap:<init>()": {
            "passthroughFn": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatistics:addCounterFunction(java.lang.String,java.util.function.Function)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatistics:addGaugeFunction(java.lang.String,java.util.function.Function)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatistics:addMinimumFunction(java.lang.String,java.util.function.Function)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatistics:addMaximumFunction(java.lang.String,java.util.function.Function)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatistics:addMeanStatisticFunction(java.lang.String,java.util.function.Function)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:wrap(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.EmptyIOStatisticsContextImpl:getAggregator()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:emptyStatisticsStore()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.EmptyIOStatisticsContextImpl:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:emptyStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:setCounter(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:setMaximum(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:setMinimum(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:setGauge(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:incrementCounter(java.lang.String,long)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:incrementMaximum(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:incrementMinimum(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:incrementGauge(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:addMinimumSample(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:addMaximumSample(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:addMeanStatisticSample(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:getCounterReference(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:getMaximumReference(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:getMinimumReference(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:getGaugeReference(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:getMeanStatistic(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.PairedDurationTrackerFactory$PairedDurationTracker:asDuration()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.WrappedIOStatistics:counters()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.WrappedIOStatistics:gauges()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.WrappedIOStatistics:minimums()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.WrappedIOStatistics:maximums()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.WrappedIOStatistics:meanStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.WrappedIOStatistics:setWrapped(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:activeInstance()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FlagSet:checkMutable()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$BlockUploadData:toByteArray()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.IrqHandler:bind()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CloseableReferenceCount:unreference()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HealthMonitor$MonitorDaemon:run()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector$WatcherWithClientRef:setZooKeeperRef(org.apache.zookeeper.ZooKeeper)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:snapshotMap(java.util.Map,java.util.function.Function)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:trackDuration(org.apache.hadoop.fs.statistics.DurationTrackerFactory,java.lang.String,org.apache.hadoop.util.functional.CallableRaisingIOE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:pairedTrackerFactory(org.apache.hadoop.fs.statistics.DurationTrackerFactory,org.apache.hadoop.fs.statistics.DurationTrackerFactory)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableCounterLong:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RetryCacheMetrics:getCacheHit()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RetryCacheMetrics:getCacheCleared()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RetryCacheMetrics:getCacheUpdated()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getClientBackoffDisconnected()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getRpcSlowCalls()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getRpcRequeueCalls()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:counters()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:gauges()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:minimums()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:maximums()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:meanStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:aggregate(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:incrementCounter(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:setCounter(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:setGauge(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:incrementGauge(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:setMaximum(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:incrementMaximum(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:setMinimum(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:incrementMinimum(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:addMinimumSample(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:addMaximumSample(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:setMeanStatistic(java.lang.String,org.apache.hadoop.fs.statistics.MeanStatistic)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:addMeanStatisticSample(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:getCounterReference(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:getMaximumReference(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:getMinimumReference(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:getGaugeReference(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:getMeanStatistic(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:addTimedOperation(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.ForwardingIOStatisticsStore:addTimedOperation(java.lang.String,java.time.Duration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreBuilderImpl:withDurationTracking(java.lang.String[])": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreBuilderImpl:withSampleTracking(java.lang.String[])": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsContextImpl:reset()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:<init>()": {
            "createMaps": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:setCounter(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:setGauge(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:setMaximum(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:setMinimum(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:setMeanStatistic(java.lang.String,org.apache.hadoop.fs.statistics.MeanStatistic)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsContext:enabled()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSupport:retrieveIOStatistics(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor:<init>()": {
            "newCrc32": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:seekToNewSource(long)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:readChunk(long,byte[],int,int,byte[])": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.49
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:verifySums(byte[],int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:throwChecksumException(org.apache.hadoop.util.DataChecksum$Type,java.util.zip.Checksum,java.lang.String,long,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:getCounter(long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:getPadding(long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:updateEncryptor()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoStreamUtils:checkBufferSize(org.apache.hadoop.crypto.CryptoCodec,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO:link(java.io.File,java.io.File)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer:getInstance()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.BatchedRemoteIterator:makeRequestIfNeeded()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32GzipFileChecksum:<init>(int,long,org.apache.hadoop.io.MD5Hash)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32FileChecksum:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32CastagnoliFileChecksum:<init>(int,long,org.apache.hadoop.io.MD5Hash)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobFilter:accept(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobPattern:set(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getFsStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:listStatusIterator(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:isRegularFile(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:makeShellPath(java.io.File,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:permissionsFromMode(int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unpackEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStream,org.apache.commons.compress.archivers.tar.TarArchiveEntry,java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:join(char,java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellCommandExecutor:execute()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:checkWindowsCommandLineLength(java.lang.String[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.PowerShellFencer:buildPSScript(java.lang.String,java.lang.String)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:toString()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:join(char,java.lang.Iterable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem$2:close()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSOutputSummer:close()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSOutputSummer:close()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DU:<init>(java.io.File,long,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.DU:refresh()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPConnectionPool:connect(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPConnectionPool:disconnect(com.jcraft.jsch.ChannelSftp)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStream:<init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:getChecksumSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:getChecksumSize(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:convertToByteStream(java.util.zip.Checksum,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:incrementBytesRead(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:incrementBytesWritten(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:incrementReadOps(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:incrementLargeReadOps(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:incrementWriteOps(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:incrementBytesReadErasureCoded(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:incrementBytesReadByDistance(int,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:increaseRemoteReadTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:visitAll(org.apache.hadoop.fs.FileSystem$Statistics$StatisticsAggregator)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:typeConsumed(long[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:typeQuota(org.apache.hadoop.fs.StorageType,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:typeConsumed(org.apache.hadoop.fs.StorageType,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:typeQuota(long[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage$Builder:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:<init>(org.apache.hadoop.fs.ContentSummary$Builder)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32FileChecksum:getAlgorithmName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32FileChecksum:getChecksumOpt()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$ChecksumOpt:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$ChecksumOpt:createDisabled()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.CompositeCrcFileChecksum:getChecksumOpt()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32FileChecksum:write(java.io.DataOutput)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobFilter:hasPattern()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.CreateFlag:validate(java.util.EnumSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.XAttrSetFlag:validate(java.lang.String,boolean,java.util.EnumSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:checkScheme(java.net.URI,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.InvalidPathException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.InvalidPathException:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.util.HHUtil:findFirstValidInput(java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.CoderUtil:findFirstValidInput(java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayEncodingState:checkBuffers(byte[][])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState:checkOutputBuffers(java.nio.ByteBuffer[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayDecodingState:checkOutputBuffers(byte[][])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferEncodingState:checkBuffers(java.nio.ByteBuffer[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable:checkPrimitive(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable:checkDeclaredComponentType(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable:checkArray(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:parseGetLevelArgs(java.lang.String[],int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:parseSetLevelArgs(java.lang.String[],int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:stopProxy(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ZKUtil$BadAclFormatException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ZKUtil$BadAuthFormatException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$ChecksumOpt:processChecksumOpt(org.apache.hadoop.fs.Options$ChecksumOpt,org.apache.hadoop.fs.Options$ChecksumOpt,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getDefaultPortIfDefined(org.apache.hadoop.fs.FileSystem)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:canonicalizeUri(java.net.URI)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getInitialWorkingDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getInitialWorkingDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.14,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:truncate(org.apache.hadoop.fs.Path,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touch:updateTime(org.apache.hadoop.fs.shell.PathData)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:setVerifyChecksum(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setVerifyChecksum(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:supportsSymlinks()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:supportsSymlinks()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:truncate(org.apache.hadoop.fs.Path,long)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:append(org.apache.hadoop.fs.Path,int,org.apache.hadoop.util.Progressable)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:append(org.apache.hadoop.fs.Path,int,org.apache.hadoop.util.Progressable)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:getWorkingDirectory()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:getWorkingDirectory()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:setWorkingDirectory(org.apache.hadoop.fs.Path)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:setWorkingDirectory(org.apache.hadoop.fs.Path)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:getUri()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:getUri()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.BufferedFSInputStream:skip(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.BufferedFSInputStream:minSeekForVectorReads()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:minSeekForVectorReads()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BufferedFSInputStream:maxReadSizeForVectorReads()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:maxReadSizeForVectorReads()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BBPartHandle:from(java.nio.ByteBuffer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.BBPartHandle:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:disconnect(org.apache.commons.net.ftp.FTPClient)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem$1:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPInputStream:close()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:getFsAction(int,org.apache.commons.net.ftp.FTPFile)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$DirListingIterator:hasNext()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:<init>(long,long,long,long,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:equals(java.lang.Object)": {
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.34
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.77,
                "total_score": 0.64
            },
            "m1": {
                "count_score": 0.16,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:hashCode()": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.34
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.34
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction:getDelay(java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction:updateRenewalTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:touch()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ThreadUtil:sleepAtLeastIgnoreInterrupts(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Timer:now()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.AsyncDiskService:awaitTermination(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault$Emptier:ceiling(long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:readChunk(long,byte[],int,int,byte[])": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.49
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:seekToNewSource(long)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:checkBytes(java.nio.ByteBuffer,long,java.nio.ByteBuffer,long,int,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:getSumBufferSize(int,int,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:open(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:getChecksumFileLength(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:useStatIfAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:createOutputStream(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getStatus(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getFsStatus()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getFsStatus()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShellPermissions:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Test:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SnapshotCommands:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Head:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Tail:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.XAttrCommands:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Count:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Mkdir:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Concat:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.MoveCommands:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Stat:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.AclCommands:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Truncate:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SetReplication:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFormat:<init>(java.lang.String,int,int,java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:deleteCheckpoint(org.apache.hadoop.fs.Path,boolean)": {
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.73
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystemPathHandle:verify(org.apache.hadoop.fs.FileStatus)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:startUpload(org.apache.hadoop.fs.Path)": {
            "m9": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:putPart(org.apache.hadoop.fs.UploadHandle,int,org.apache.hadoop.fs.Path,java.io.InputStream,long)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:complete(org.apache.hadoop.fs.UploadHandle,org.apache.hadoop.fs.Path,java.util.Map)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureIOSupport:eval(org.apache.hadoop.util.functional.CallableRaisingIOE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:concat(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:rejectUnknownMandatoryKeys(java.util.Collection,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileRangeImpl:toString()": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FlagSet:pathCapabilities()": {
            "hasCapability": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.audit.HttpReferrerAuditHeader:buildHttpReferrer()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.WeakReferenceMap:<init>(java.util.function.Function,java.util.function.Consumer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.StoreImplementationUtils:hasCapability(java.io.OutputStream,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.StoreImplementationUtils:hasCapability(java.io.InputStream,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.ExecutorServiceFuturePool:shutdown(org.slf4j.Logger,long,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations$End:<init>(org.apache.hadoop.fs.impl.prefetch.BlockOperations$Operation)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations$End:getSummary(java.lang.StringBuilder)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations$End:getDebugInfo()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:add(org.apache.hadoop.fs.impl.prefetch.BlockOperations$Operation)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:canRelease(org.apache.hadoop.fs.impl.prefetch.BufferData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager$PrefetchTask:get()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:distance(org.apache.hadoop.fs.impl.prefetch.BufferData,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:find(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:close()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BoundedResourcePool:acquire()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BoundedResourcePool:tryAcquire()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BoundedResourcePool:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BoundedResourcePool:numAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations$End:duration()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:analyze(java.lang.StringBuilder)": {
            "m8": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m12": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:<init>(org.apache.hadoop.fs.impl.prefetch.PrefetchingStatistics,int,org.apache.hadoop.fs.statistics.DurationTrackerFactory)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "stubDurationTrackerFactory": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.SemaphoredDelegatingExecutor:<init>(java.util.concurrent.ExecutorService,int,boolean,org.apache.hadoop.fs.statistics.DurationTrackerFactory)": {
            "stubDurationTrackerFactory": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:addToLinkedListHead(org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache$Entry)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:validateEntry(org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache$Entry,java.nio.ByteBuffer)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferData:setDone()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:close()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:toString()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferData:toString()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:throwIfInvalidBuffer()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureDataInputStreamBuilderImpl:bufferSize(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureDataInputStreamBuilderImpl:builder()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.WeakReferenceThreadMap:getForCurrentThread()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.WeakReferenceThreadMap:removeForCurrentThread()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.WeakReferenceThreadMap:setForCurrentThread(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.CombinedFileRange:<init>(long,long,org.apache.hadoop.fs.FileRange)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "append": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.CombinedFileRange:merge(long,long,org.apache.hadoop.fs.FileRange,int,int)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createBulkDelete(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:getBufferSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:getReplication()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:getFlags()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:getChecksumOpt()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:getBlockSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.XAttrCommands$SetfattrCommand:processOptions(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.75,
                "dataflow_score": 1.0,
                "indegree_score": 0.35,
                "total_score": 0.66
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.MoveCommands$MoveFromLocal:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.And:registerExpression(org.apache.hadoop.fs.shell.find.ExpressionFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Print:registerExpression(org.apache.hadoop.fs.shell.find.ExpressionFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Name:registerExpression(org.apache.hadoop.fs.shell.find.ExpressionFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Print:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Name:<init>(boolean)": {
            "setCaseSensitive": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Name:apply(org.apache.hadoop.fs.shell.PathData,int)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodecFactory:addCodec(org.apache.hadoop.io.compress.CompressionCodec)": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodecFactory:getCodec(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:<init>(org.apache.commons.configuration2.Configuration,java.lang.String)": {
            "toLowerCase": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier:isLocalhost(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory:resolvePropertyName(org.apache.hadoop.security.ssl.SSLFactory$Mode,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:hasCapability(java.lang.String)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CipherSuite:getConfigSuffix()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Result:combine(org.apache.hadoop.fs.shell.find.Result)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Result:negate()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Result:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Name$Iname:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Print$Print0:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:createOptions()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:isExpression(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.BaseExpression:setOptions(org.apache.hadoop.fs.shell.find.FindOptions)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.BaseExpression:prepare()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.BaseExpression:finish()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.BaseExpression:isAction()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.BaseExpression:toString()": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.BaseExpression:addChildren(java.util.Deque,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.BaseExpression:addArguments(java.util.Deque,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell$DeleteCommand:validate()": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$DeleteCommand:validate()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:confirmForceManual()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:relativize(java.net.URI,java.net.URI,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:stringToUri(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Df:setHumanReadable(boolean)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Du:setHumanReadable(boolean)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Df:setUsagesTable(org.apache.hadoop.fs.shell.FsUsage$TableBuilder)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Du:setUsagesTable(org.apache.hadoop.fs.shell.FsUsage$TableBuilder)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Df:getUsagesTable()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Du:getUsagesTable()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:isSorted()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:initialiseOrderComparator()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getAdditionalTokenIssuers()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFormat$NotEnoughArgumentsException:<init>(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFormat$TooManyArgumentsException:<init>(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFormat$NotEnoughArgumentsException:getMessage()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFormat$TooManyArgumentsException:getMessage()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.XAttrCommands$GetfattrCommand:processOptions(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.54,
                "total_score": 0.57
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Cp:popPreserveOption(java.util.List)": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SnapshotCommands$RenameSnapshot:processArguments(java.util.LinkedList)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:isDeprecated()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:getName()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:setPreserve(boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:<init>(java.lang.String,java.lang.String)": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:<init>(org.apache.hadoop.metrics2.MetricsCollector,org.apache.hadoop.metrics2.MetricsInfo,org.apache.hadoop.metrics2.MetricsFilter,org.apache.hadoop.metrics2.MetricsFilter,boolean)": {
            "now": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "newArrayList": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.ChunkedArrayList:<init>(int,int)": {
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkArgument": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.ScopedAclEntries:calculatePivotOnDefaultEntries(java.util.List)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:removeAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SnapshotCommands$CreateSnapshot:processArguments(java.util.LinkedList)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createSnapshot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFormat:addOptionWithValue(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SnapshotCommands$DeleteSnapshot:processArguments(java.util.LinkedList)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$TableBuilder:<init>(java.lang.Object[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "addRow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$TableBuilder:isEmpty()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getXAttrs(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt$Location:<init>(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt$Data:<init>(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.CompositeCrcFileChecksum:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:<init>(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawPathHandle:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawPathHandle:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawPathHandle:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.CachingGetSpaceUsed$RefreshThread:run()": {
            "m10": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:setOwner(org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:setRealUser(org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:<init>(byte[],byte[],org.apache.hadoop.io.Text,org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:<init>(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "getTracer": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:<init>(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter,boolean)": {
            "getTracer": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathIOException:getMessage()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.UnionStorageStatistics$LongStatisticIterator:hasNext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.UnionStorageStatistics$LongStatisticIterator:next()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext$Context:getAndIncrDirNumLastAccessed()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getAbstractFileSystem(org.apache.hadoop.security.UserGroupInformation,java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:doAsUser(org.apache.hadoop.security.UserGroupInformation,java.security.PrivilegedExceptionAction)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:handleSaslConnectionFailure(int,int,java.io.IOException,java.util.Random,org.apache.hadoop.security.UserGroupInformation)": {
            "m19": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemUtil:isViewFileSystem(org.apache.hadoop.fs.FileSystem)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:open(org.apache.hadoop.fs.PathHandle,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:primitiveMkdir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:setQuota(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:setQuotaByStorageType(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.StorageType,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createMultipartUploader(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:listCorruptFileBlocks(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:listLocatedStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:readOnlyMountTable(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:readOnlyMountTable(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AuthorizationException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:resolveLink(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getFileChecksum(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:listXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:unsetStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getAllStoragePolicies()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getAllStoragePolicies()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:openFileWithOptions(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.impl.OpenFileParameters)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.63
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:openFileWithOptions(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.impl.OpenFileParameters)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.63
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:openFileWithOptions(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.impl.OpenFileParameters)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.63
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:openFileWithOptions(org.apache.hadoop.fs.PathHandle,org.apache.hadoop.fs.impl.OpenFileParameters)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.42
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:isValidName(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:unsetStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:unsetStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getAllStoragePolicies()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getAllStoragePolicies()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getAllStoragePolicies()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:supportsSymlinks()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:supportsSymlinks()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getDelegationTokens(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getDelegationTokens(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:initializeMountedFileSystems(java.util.List)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getDelegationTokens(java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getXAttrs(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:listXAttrs(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getDefaultBlockSize(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getDefaultReplication(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getXAttrs(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:listXAttrs(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getQuotaUsage(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getStoragePolicy(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPointResolvedDstPathReplaceInterceptor:serializeToString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getDefaultBlockSize()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getDefaultReplication()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getServerDefaults()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:listStatusIterator(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:buildResolveResultForRegexMountPoint(org.apache.hadoop.fs.viewfs.InodeTree$ResultKind,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme:fsGetter()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsLocatedFileStatus:getBlockLocations()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree$INodeDir:<init>(java.lang.String,org.apache.hadoop.security.UserGroupInformation)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree$INodeLink:<init>(java.lang.String,org.apache.hadoop.security.UserGroupInformation,java.lang.Object,java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree$INodeLink:<init>(java.lang.String,org.apache.hadoop.security.UserGroupInformation,java.util.function.Function,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree$INodeDir:addLink(java.lang.String,org.apache.hadoop.fs.viewfs.InodeTree$INodeLink)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:buildLinkRegexEntry(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.UserGroupInformation,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:processThrowable(org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode,java.lang.String,java.lang.Throwable,java.util.List,org.apache.hadoop.fs.Path[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:getWorkingDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPoint:replaceRegexCaptureGroupInPath(java.lang.String,java.util.regex.Matcher,java.lang.String,java.util.Set)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:getRootDir()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:getRootLink()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:getRootFallbackLink()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor:tryStart()": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor:kill(org.apache.hadoop.util.Daemon)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$ConcurrentQueue:offer(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:decrypt(org.apache.hadoop.crypto.Decryptor,java.nio.ByteBuffer,java.nio.ByteBuffer,byte)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCipher:checkState()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:parentZNodeExists()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:getConfigViewFsPrefix()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPointResolvedDstPathReplaceInterceptor:deserializeFromString(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.CallReturn:getReturnValue()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputWrapper:getReadableByteChannel()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:getChecksumFileLength(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DF:getFilesystem()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DF:getMount()": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DFCachingGetSpaceUsed:refresh()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DF:getPercentUsed()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:startPositionWithoutWindowsDrive(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:toString()": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:<init>(org.apache.hadoop.fs.Path,int,boolean,java.util.zip.Checksum,int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:seek(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ByteBufferUtil:streamHasByteBufferRead(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.audit.CommonAuditContext:init()": {
            "currentThreadID": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.audit.CommonAuditContext:noteEntryPoint(java.lang.Object)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.audit.HttpReferrerAuditHeader$Builder:<init>()": {
            "getGlobalContextEntries": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSBuilder:opt(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSBuilder:opt(java.lang.String,float)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSBuilder:opt(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSBuilder:opt(java.lang.String,double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSBuilder:must(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSBuilder:must(java.lang.String,float)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSBuilder:must(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSBuilder:must(java.lang.String,double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tools.TableListing$Column:getRow(int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BBUploadHandle:from(java.nio.ByteBuffer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.BBUploadHandle:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:startLocalOutput(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setWriteChecksum(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:<init>(org.apache.hadoop.fs.permission.FsAction,org.apache.hadoop.fs.permission.FsAction,org.apache.hadoop.fs.permission.FsAction,boolean)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:fromShort(short)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclStatus:getEffectivePermission(org.apache.hadoop.fs.permission.AclEntry,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.29,
                "total_score": 0.29
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.PermissionStatus$2:<init>(java.lang.String,java.lang.String,org.apache.hadoop.fs.permission.FsPermission)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclEntry:parseAclEntry(java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.29
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.45
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsCreateModes:<init>(org.apache.hadoop.fs.permission.FsPermission,org.apache.hadoop.fs.permission.FsPermission)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getUnmasked": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsCreateModes:equals(java.lang.Object)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclEntry:toStringStable()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclEntryType:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:getStrings(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:getStringCollection(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.PermissionParser:<init>(java.lang.String,java.util.regex.Pattern,java.util.regex.Pattern)": {
            "applyNormalPattern": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "applyOctalPattern": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.PermissionParser:combineModes(int,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteBufferBlockFactory:<init>(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ArrayBlockFactory:<init>(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteBufferBlockFactory:requestBuffer(int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteBufferBlockFactory:releaseBuffer(java.nio.ByteBuffer)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlock:<init>(java.io.File,int,long,org.apache.hadoop.fs.store.BlockUploadStatistics)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteArrayBlock:<init>(long,int,org.apache.hadoop.fs.store.BlockUploadStatistics)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlock:hasCapacity(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlock:toString()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlock:innerClose()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:checkOpenState()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DataBlock:enterState(org.apache.hadoop.fs.store.DataBlocks$DataBlock$DestState,org.apache.hadoop.fs.store.DataBlocks$DataBlock$DestState)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DataBlock:write(byte[],int,int)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DataBlock:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.audit.HttpReferrerAuditHeader:set(java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.audit.HttpReferrerAuditHeader:extractQueryParameters(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteArrayBlock:hasCapacity(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteArrayBlock:remainingCapacity()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteBufferBlockFactory$ByteBufferBlock:dataSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteBufferBlockFactory$ByteBufferBlock:hasCapacity(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache$Key:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$RealUser:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$ConnectionId:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache$Key:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$RealUser:equals(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getInitialWorkingDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:resolvePath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:msync()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:msync()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:printStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:getStatistics(java.net.URI)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:listCorruptFileBlocks(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:createMultipartUploader(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:obtainContext(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStream:getPos()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:syncFs()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:hflush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:hsync()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:quota(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:spaceConsumed(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:spaceQuota(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary$Builder:build()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ApplicationClassLoader:<init>(java.net.URL[],java.lang.ClassLoader,java.util.List)": {
            "getTrimmedStrings": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:getTrimmedStringCollection(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.LoggingStateChangeListener:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateException:<init>(int,java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateException:convert(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateException:convert(java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateModel:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:isInState(org.apache.hadoop.service.Service$STATE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateModel:isValidStateTransition(org.apache.hadoop.service.Service$STATE,org.apache.hadoop.service.Service$STATE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateModel:toString()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.HadoopUncaughtExceptionHandler:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.IrqHandler:handle(sun.misc.Signal)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.InterruptEscalator:getService()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.InterruptEscalator$ServiceForcedShutdown:<init>(org.apache.hadoop.service.Service,int)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.InterruptEscalator:lookup(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLaunchException:<init>(int,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLaunchException:<init>(int,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLaunchException:<init>(int,java.lang.String,java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag$KerberosDiagsFailure:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLaunchException:<init>(int,java.lang.Throwable,java.lang.String,java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceShutdownHook:run()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:toString()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:noteException(org.apache.hadoop.util.ExitUtil$ExitException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:bindCommandOptions()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:loadConfigurationClasses()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:registerServiceListener(org.apache.hadoop.service.ServiceStateChangeListener)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:registerGlobalListener(org.apache.hadoop.service.ServiceStateChangeListener)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:unregisterServiceListener(org.apache.hadoop.service.ServiceStateChangeListener)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:unregisterGlobalListener(org.apache.hadoop.service.ServiceStateChangeListener)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:resetGlobalListeners()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:notifyListeners()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:getServiceState()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:serviceInit(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.JvmPauseMonitor:serviceStop()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.CompositeService:serviceStart()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.service.CompositeService:addIfService(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceOperations:stopQuietly(org.apache.commons.logging.Log,org.apache.hadoop.service.Service)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceOperations:stopQuietly(org.slf4j.Logger,org.apache.hadoop.service.Service)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$ProgressableOption:<init>(org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ShortWritable:<init>(short)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader$LengthOption:<init>(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader$StartOption:<init>(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$BlockSizeOption:<init>(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputByteBuffer$Buffer:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputByteBuffer:reset(java.nio.ByteBuffer[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedIO:byteBufferPositionedReadable_readFullyAvailable(java.io.InputStream)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:isAvailable()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:toString(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FunctionalIO:toUncheckedFunction(org.apache.hadoop.util.functional.FunctionRaisingIOE)": {
            "unchecked": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:fromInstance(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:fromBytes(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.VIntWritable:<init>(int)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ElasticByteBufferPool$Key:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$SyncIntervalOption:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$ReplicationOption:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader$BufferSizeOption:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$BufferSizeOption:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:<init>(org.apache.hadoop.io.UTF8)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:writeString(java.io.DataOutput,java.lang.String)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:skip(java.io.DataInput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:skipCompressedByteArray(java.io.DataInput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SortPass$SeqFileComparator:compare(org.apache.hadoop.io.IntWritable,org.apache.hadoop.io.IntWritable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayFile:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.LongWritable:<init>(long)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayFile$Reader:seek(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayFile$Reader:get(long,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$ValueClassOption:<init>(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer$KeyClassOption:<init>(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$KeyClassOption:<init>(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ByteWritable:<init>(byte)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.OutputBuffer:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.OutputBuffer:getData()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.OutputBuffer:getLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.OutputBuffer:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:compare(java.lang.Object,java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:binarySearch(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:compareBytes(byte[],int,int,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:hashBytes(byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:readFloat(byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:readLong(byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:readVInt(byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:<init>(byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:get()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:getSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:setCapacity(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.IntWritable:<init>(int)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ElasticByteBufferPool:getBuffer(boolean,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.ElasticByteBufferPool:putBuffer(java.nio.ByteBuffer)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.ElasticByteBufferPool:size(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable$Internal:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue:updateProgress(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ReadaheadPool:readaheadStream(java.lang.String,java.io.FileDescriptor,long,long,long,org.apache.hadoop.io.ReadaheadPool$ReadaheadRequest)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Writer:append(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Reader:next(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text$Comparator:compare(byte[],int,int,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayFile$Reader:key()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader$InputStreamOption:<init>(org.apache.hadoop.fs.FSDataInputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:comparator(org.apache.hadoop.io.WritableComparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.DoubleWritable:<init>(double)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.VersionedWritable:readFields(java.io.DataInput)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:comparator(org.apache.hadoop.io.WritableComparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$Windows:access(java.lang.String,org.apache.hadoop.io.nativeio.NativeIO$Windows$AccessRight)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:isAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO:isAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback:<init>()": {
            "isNativeCodeLoaded": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMappingWithFallback:<init>()": {
            "isNativeCodeLoaded": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.NativeCrc32:isAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:setPmdkSupportState(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:getPmdkSupportStateMessage()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:isPmdkAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:chmod(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX$CacheManipulator:posixFadviseIfPossible(java.lang.String,java.io.FileDescriptor,long,long,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:munmap(java.nio.MappedByteBuffer)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoStreamUtils:freeDB(java.nio.ByteBuffer)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:getName(org.apache.hadoop.io.nativeio.NativeIO$POSIX$IdCache,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX$CacheManipulator:getOperatingSystemPageSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX$Pmem:memSync(org.apache.hadoop.io.nativeio.NativeIO$POSIX$PmemMappedRegion)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayWritable:<init>(java.lang.Class,org.apache.hadoop.io.Writable[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BoundedByteArrayOutputStream:<init>(byte[],int,int)": {
            "resetBuffer": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataOutputBuffer:write(java.io.DataInput,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.TwoDArrayWritable:<init>(java.lang.Class,org.apache.hadoop.io.Writable[][])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.EnumSetWritable:<init>(java.util.EnumSet,java.lang.Class)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:readStringArray(java.io.DataInput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:writeStringArray(java.io.DataOutput,java.lang.String[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SortedMapWritable:equals(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.OutputBuffer$Buffer:write(java.io.InputStream,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.random.OsSecureRandom:fillReservoir(int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputBuffer:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputBuffer:reset(byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputBuffer:reset(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputBuffer:getData()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputBuffer:getPosition()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputBuffer:getLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.ECSchema:<init>(java.util.Map)": {
            "extractIntOption": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.ECSchema:<init>(java.lang.String,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.ErasureCodec:setCodecOptions(org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.grouper.BlockGrouper:getRequiredNumDataBlocks()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.grouper.BlockGrouper:getRequiredNumParityBlocks()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.ErasureCodec:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "getSchema": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getNumDataUnits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getNumParityUnits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.ErasureCoderOptions:<init>(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.ErasureCodec:getName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.ErasureCodec:createBlockGrouper()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecRegistry:<init>()": {
            "updateCoders": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecRegistry:getCoderByName(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.grouper.BlockGrouper:makeBlockGroup(org.apache.hadoop.io.erasurecode.ECBlock[],org.apache.hadoop.io.erasurecode.ECBlock[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.ECBlockGroup:getErasedCount()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureDecoder:getNumErasedBlocks(org.apache.hadoop.io.erasurecode.ECBlock[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:hasCodec(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.ECChunk:toBuffers(org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.RSErasureEncoder:release()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncoder:release()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureEncoder:getOutputBlocks(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.XORErasureDecoder:getOutputBlocks(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureEncoder:getInputBlocks(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder:getNumDataUnits()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder:getNumDataUnits()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder:getNumParityUnits()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder:getNumParityUnits()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureDecoder:getInputBlocks(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m1": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.RSErasureDecoder:release()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecoder:release()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.XORRawDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.DummyRawDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.AbstractNativeRawDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeXORRawDecoder:preferDirectBuffer()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeXORRawEncoder:preferDirectBuffer()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:add(int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:multiply(int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:divide(int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:power(int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.DumpUtil:dumpChunk(org.apache.hadoop.io.erasurecode.ECChunk)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.AbstractNativeRawEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.XORRawEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.DummyRawEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder:getNumAllUnits()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder:getNumAllUnits()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder:allowChangeInputs()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder:allowChangeInputs()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder:allowVerboseDump()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder:allowVerboseDump()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawDecoder:doDecodeImpl(byte[][],int[],int,int[],byte[][],int[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.CoderUtil:resetBuffer(java.nio.ByteBuffer,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.CoderUtil:resetBuffer(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferEncodingState:convertToByteArrayState()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayEncodingState:convertToByteBufferState()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayDecodingState:convertToByteBufferState()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState:convertToByteArrayState()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.RSUtil:initTables(int,int,byte[],int,byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.RSUtil:genCauchyMatrix(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GF256:gfInvertMatrix(byte[],byte[],int)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.RSUtil:encodeData(byte[],int,byte[][],int[],byte[][],int[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.RSUtil:encodeData(byte[],java.nio.ByteBuffer[],java.nio.ByteBuffer[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:getInstance(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:solveVandermondeSystem(int[],int[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.ECBlock:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.LongWritable$DecreasingComparator:compare(byte[],int,int,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionInputStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionInputStream:updatePos(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:updateReportedByteCount(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:readAByte(java.io.InputStream)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CRC:<init>()": {
            "initialiseCRC": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:endBlock()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:createHuffmanDecodingTables(int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:initBlock()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:bsPutUByte(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:bsPutInt(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:sendMTFValues4()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:sendMTFValues5(int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:sendMTFValues1(int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:sendMTFValues3(int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:mainQSort3(org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream$Data,int,int,int)": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Decompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Decompressor:setInput(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Decompressor:needsInput()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Decompressor:getBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Decompressor:getBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Decompressor:getRemaining()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Decompressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Compressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Compressor:setInput(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Compressor:needsInput()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Compressor:getBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Compressor:getBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Compressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionOutputStream:<init>(java.io.OutputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressorStream:<init>(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressorStream:<init>(java.io.OutputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionOutputStream:writeStreamHeader()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressorStream:write(byte[],int,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressorStream:finish()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyDecompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyDecompressor:setInput(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyDecompressor:needsInput()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyDecompressor$SnappyDirectDecompressor:finished()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyDecompressor:decompress(byte[],int,int)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyDecompressor:decompressDirect(java.nio.ByteBuffer,java.nio.ByteBuffer)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyDecompressor$SnappyDirectDecompressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyCompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyCompressor:compress(byte[],int,int)": {
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.snappy.SnappyCompressor:reinit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:<init>(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:<init>(java.io.InputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.SplitCompressionInputStream:<init>(java.io.InputStream,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:getCompressedData()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockDecompressorStream:resetState()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockCompressorStream:compress()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor:setInput(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor:needsInput()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor$ZStandardDirectDecompressor:finished()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor:getRemaining()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor:decompress(byte[],int,int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:setInput(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:needsInput()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:compress(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:getBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:getBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockDecompressorStream:getCompressedData()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.lz4.Lz4Decompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.lz4.Lz4Decompressor:setInput(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.lz4.Lz4Decompressor:needsInput()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.lz4.Lz4Decompressor:decompress(byte[],int,int)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.lz4.Lz4Compressor:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.lz4.Lz4Compressor:compress(byte[],int,int)": {
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.lz4.Lz4Compressor:reinit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodecFactory:getCodecByName(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:payback(java.util.Map,java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:updateLeaseCount(org.apache.hadoop.thirdparty.com.google.common.cache.LoadingCache,java.lang.Object,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:getLeasedCompressorsCount(org.apache.hadoop.io.compress.CompressionCodec)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:getLeasedDecompressorsCount(org.apache.hadoop.io.compress.CompressionCodec)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:checkNativeCodeLoaded()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:isNativeCodeLoaded()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$FinishOnFlushCompressionStream:flush()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:getCompressorType()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:getDecompressorType()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibFactory:getZlibCompressorType(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibFactory:getZlibDecompressorType(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibFactory:loadNativeZLib()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipCompressor:init(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.3
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.3
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInZlibDeflater:reinit(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.3
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.3
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:<init>(org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionLevel,org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionStrategy,org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionHeader,int)": {
            "compressionLevel": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "compressionStrategy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.4
            },
            "windowBits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:setInput(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:needsInput()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:getBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:getBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipCompressor:compress(byte[],int,int)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor$ZlibDirectDecompressor:finished()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:<init>(org.apache.hadoop.io.compress.zlib.ZlibDecompressor$CompressionHeader,int)": {
            "windowBits": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:setInput(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:needsInput()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:getBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:getBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:getRemaining()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:finalize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor:executeTrailerState()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor:processBasicHeader()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:readCompressedString(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:writeVInt(java.io.DataOutput,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.VLongWritable:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:readVLong(java.io.DataInput)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.WeakReferencedElasticByteBufferPool:getBuffer(boolean,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.WeakReferencedElasticByteBufferPool:putBuffer(java.nio.ByteBuffer)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:charAt(int)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:set(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:encode(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:buildCacheKey()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:set(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:append(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:readWithKnownLength(java.io.DataInput,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:decode(byte[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:decode(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:decode(byte[],int,int,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:validateUTF8(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.AbstractMapWritable:addToMap(java.lang.Class)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.AbstractMapWritable:<init>()": {
            "addToMap": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.AbstractMapWritable:readFields(java.io.DataInput)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.AbstractMapWritable:write(java.io.DataOutput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Metadata:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.VLongWritable:<init>(long)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.SerializationFactory:getSerializer(java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.SerializationFactory:getDeserializer(java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.JavaSerializationComparator:compare(java.lang.Object,java.lang.Object)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.JavaSerialization$JavaSerializationDeserializer:deserialize(java.lang.Object)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:filesystem(org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputByteBuffer:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputByteBuffer:getData()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputByteBuffer:getPosition()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataInputByteBuffer:getLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.Key:<init>(byte[],double)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$LinkedSegmentsDescriptor:cleanup()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SortPass:grow()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$CompressionOption:<init>(org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:compression(org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericsUtil:toArray(java.util.List)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.InputBuffer:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.InputBuffer:reset(byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.InputBuffer:reset(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.InputBuffer:getPosition()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.InputBuffer:getLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:read(java.io.DataInput)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:digest(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:digest(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:digest(byte[][],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:setDigest(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:metadata(org.apache.hadoop.io.SequenceFile$Metadata)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$StreamOption:<init>(org.apache.hadoop.fs.FSDataOutputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable:<init>(java.lang.Object)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable:tryInstantiateProtobuf(java.lang.Class,java.io.DataInput)": {
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.IOUtils:fsync(java.io.File)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapWritable:equals(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.MapWritable:putAll(java.util.Map)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$AppendIfExistsOption:<init>(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader$OnlyHeaderOption:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader$FileOption:<init>(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer$FileOption:<init>(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BooleanWritable:<init>(boolean)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BooleanWritable:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncValue:waitAsyncValue(long,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$TryOnceThenFail:shouldRetry(java.lang.Exception,int,int,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicy$RetryAction:<init>(org.apache.hadoop.io.retry.RetryPolicy$RetryAction$RetryDecision)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicy$RetryAction:<init>(org.apache.hadoop.io.retry.RetryPolicy$RetryAction$RetryDecision,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RetryUpToMaximumCountWithFixedSleep:<init>(int,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$ExponentialBackoffRetry:<init>(int,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RetryUpToMaximumCountWithProportionalSleep:<init>(int,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$FailoverOnNetworkExceptionRetry:<init>(org.apache.hadoop.io.retry.RetryPolicy,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$FailoverOnNetworkExceptionRetry:<init>(org.apache.hadoop.io.retry.RetryPolicy,int,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:failoverOnNetworkException(org.apache.hadoop.io.retry.RetryPolicy,int,int,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:retryByRemoteException(org.apache.hadoop.io.retry.RetryPolicy,java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RemoteExceptionDependentRetry:shouldRetry(java.lang.Exception,int,int,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall:<init>(java.lang.reflect.Method,java.lang.Object[],boolean,int,org.apache.hadoop.io.retry.RetryInvocationHandler,org.apache.hadoop.io.retry.AsyncCallHandler)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall:processWaitTimeAndRetryInfo()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler$RetryInfo:<init>(long,org.apache.hadoop.io.retry.RetryPolicy$RetryAction,long,java.lang.Exception)": {
            "monotonicNow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$ConcurrentQueue:isEmpty(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$ConcurrentQueue:checkEmpty()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:clearNameMaps()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:isExpired()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$MetricsUpdateRunner:run()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:now()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Timer:monotonicNow()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:retryOtherThanRemoteAndSaslException(org.apache.hadoop.io.retry.RetryPolicy,java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.DefaultFailoverProxyProvider:getProxy()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:<init>(org.apache.hadoop.io.retry.FailoverProxyProvider,org.apache.hadoop.io.retry.RetryPolicy,java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo:getString(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:getFailoverCount()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:invokeMethod(java.lang.reflect.Method,java.lang.Object[])": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:getCallId()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Call:<init>(org.apache.hadoop.ipc.RPC$RpcKind,org.apache.hadoop.io.Writable)": {
            "nextCallId": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:getConnectionId()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProxyCombiner$CombinedProxyInvocationHandler:getConnectionId()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$1:isDone()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$MultipleLinearRandomRetry:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$MultipleLinearRandomRetry:equals(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$MultipleLinearRandomRetry:parseCommaSeparatedString(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:retryByException(org.apache.hadoop.io.retry.RetryPolicy,java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:calculateExponentialTime(long,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RetryUpToMaximumTimeWithFixedSleep:getReason()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RetryLimited:getReason()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RetryLimited:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RetryLimited:equals(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MultipleIOException:createIOException(java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression:getCompressionAlgorithmByName(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression:getSupportedAlgorithms()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$RBlockState:getCompressionName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader:getBlockCount()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Magic:readAndVerify(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFileDumper$Align:format(long,int,org.apache.hadoop.io.file.tfile.TFileDumper$Align)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$MetaIndex:addEntry(org.apache.hadoop.io.file.tfile.BCFile$MetaIndexEntry)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer:getDefaultCompressionAlgorithm()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader:getDefaultCompressionName()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:hashCode()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.CompareUtils$BytesComparator:compare(org.apache.hadoop.io.file.tfile.RawComparable,org.apache.hadoop.io.file.tfile.RawComparable)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$BlockRegion:<init>(java.io.DataInput)": {
            "readVLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Utils:readVInt(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileMeta:makeComparator(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$BlockRegion:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Utils:writeVInt(java.io.DataOutput,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:isSorted()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm$2:getCodec()": {
            "setConf": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Utils$Version:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getEntryCount()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getComparatorName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.ByteArray:<init>(org.apache.hadoop.io.BytesWritable)": {
            "getBytes": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.44
            },
            "getLength": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.ByteArray:<init>(byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getBlockEntryCount(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:addEntry(org.apache.hadoop.io.file.tfile.TFile$TFileIndexEntry)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer$DataBlockRegister:register(long,long,long)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader:getBlockIndexNear(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.65
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:lowerBound(org.apache.hadoop.io.file.tfile.RawComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.SimpleBufferedOutputStream:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.SimpleBufferedOutputStream:write(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.SimpleBufferedOutputStream:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:upperBound(org.apache.hadoop.io.file.tfile.RawComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:getRecordNumByLocation(org.apache.hadoop.io.file.tfile.TFile$Reader$Location)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Location:compareTo(org.apache.hadoop.io.file.tfile.TFile$Reader$Location)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Location:<init>(int,long)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Location:set(org.apache.hadoop.io.file.tfile.TFile$Reader$Location)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:getKey(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:getValue(byte[],int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$BlockReader:<init>(org.apache.hadoop.io.file.tfile.BCFile$Reader$RBlockState)": {
            "getInputStream": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$BlockReader:getRawSize()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$BlockReader:getCompressedSize()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$BlockReader:getStartPos()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$SingleChunkEncoder:write(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataOutputOutputStream:constructOutputStream(java.io.DataOutput)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.FloatWritable:<init>(float)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:compareTo(byte[],int,int,byte[],int,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataOutputBuffer:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.DataOutputBuffer:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.DataOutputBuffer:getData()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataOutputBuffer:getLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DataOutputBuffer:writeInt(int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.net.DNSDomainNameResolver:getHostnameByIP(java.net.InetAddress)": {
            "m9": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getDistance(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node)": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:isNodeInScope(org.apache.hadoop.net.Node,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NodeBase:getPathComponents(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NodeBase:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NodeBase:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NodeBase:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup:remove(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getDatanodesInRack(java.lang.String)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getNode(java.lang.String)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NodeBase:locationToDepth(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:toString()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:isOnSameRack(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:chooseRandom(org.apache.hadoop.net.InnerNode,org.apache.hadoop.net.Node,java.util.Collection,int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getWeightUsingNetworkLocation(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:interAddNodeWithEmptyRack(org.apache.hadoop.net.Node)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketIOWithTimeout:<init>(java.nio.channels.SelectableChannel,long)": {
            "checkChannelValidity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketOutputStream:write(byte[],int,int)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketOutputStream:transferToFully(java.nio.channels.FileChannel,long,int,org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.LongWritable)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:normalizeHostNames(java.util.Collection)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getHostDetailsAsString(java.lang.String,int,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getIPs(java.lang.String,boolean)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getFreeSocketPorts(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.TableMapping:getConf()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.TableMapping:setConf(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping$RawScriptBasedMapping:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.CachedDNSToSwitchMapping:<init>(org.apache.hadoop.net.DNSToSwitchMapping)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.NodeBase:<init>(java.lang.String)": {
            "normalize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "set": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.net.NodeBase:<init>(java.lang.String,java.lang.String)": {
            "normalize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.NodeBase:<init>(java.lang.String,java.lang.String,org.apache.hadoop.net.Node,int)": {
            "normalize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "set": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping:getConf()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainChannel:read(java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainOutputStream:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainOutputStream:write(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainInputStream:read(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainInputStream:available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:<init>(java.lang.String,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher:sendCallback(java.lang.String,java.util.TreeMap,org.apache.hadoop.net.unix.DomainSocketWatcher$FdSet,int)": {
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.89,
                "total_score": 0.71
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:isOpen()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:close()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher:addNotificationSocket(java.util.TreeMap,org.apache.hadoop.net.unix.DomainSocketWatcher$FdSet)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketIOWithTimeout$SelectorPool:trimIdleSelectors(long)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:isLeafParent()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:getNextAncestorName(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocksSocketFactory:createSocket(java.net.InetAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocksSocketFactory:createSocket(java.net.InetAddress,int,java.net.InetAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocksSocketFactory:createSocket(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocksSocketFactory:createSocket(java.lang.String,int,java.net.InetAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.StandardSocketFactory:createSocket(java.net.InetAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.StandardSocketFactory:createSocket(java.net.InetAddress,int,java.net.InetAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.StandardSocketFactory:createSocket(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.StandardSocketFactory:createSocket(java.lang.String,int,java.net.InetAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMappingWithDependency:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMappingWithDependency:getDependency(java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputWrapper:setTimeout(long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getIPs(java.lang.String,boolean)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getIPsAsInetAddressList(java.lang.String,boolean)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m10": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputStream:read(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup:getRack(java.lang.String)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup:getNodeGroup(java.lang.String)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.net.AbstractDNSToSwitchMapping:dumpTopology()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.AbstractDNSToSwitchMapping:isMappingSingleSwitch(org.apache.hadoop.net.DNSToSwitchMapping)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup:getWeight(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.jmx.JMXJsonServlet:writeAttribute(com.fasterxml.jackson.core.JsonGenerator,javax.management.ObjectName,javax.management.MBeanAttributeInfo)": {
            "m9": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.jmx.JMXJsonServlet:writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,java.lang.String)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m18": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m14": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.log.LogThrottlingHelper:getCurrentStats(java.lang.String,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:parseProtocolArgs(java.lang.String[],int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel:printUsage()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ToolRunner:printGenericCommandUsage(java.io.PrintStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericsUtil:isLog4jLogger(java.lang.Class)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.log.LogThrottlingHelper:<init>(long,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.log.LogThrottlingHelper:record(java.lang.String,long,double[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m10": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.ProfileServlet$Event:fromInternalName(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.ProfilerDisabledServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.ProfileServlet:<init>()": {
            "getAsyncProfilerHome": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getPid": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HtmlQuoting:needsQuoting(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HtmlQuoting:quoteHtmlChars(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addJerseyResourcePackage(java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addServlet(java.lang.String,java.lang.String,java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addInternalServlet(java.lang.String,java.lang.String,java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addFilter(java.lang.String,java.lang.String,java.util.Map)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addGlobalFilter(java.lang.String,java.lang.String,java.util.Map)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:defineFilter(org.eclipse.jetty.servlet.ServletContextHandler,java.lang.String,java.lang.String,java.util.Map,java.lang.String[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:bindForSinglePort(org.eclipse.jetty.server.ServerConnector,int)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:toString()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$XFrameOption:getEnum(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$QuotingInputFilter:init(javax.servlet.FilterConfig)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$QuotingInputFilter:doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter:init(javax.servlet.FilterConfig)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.FileMonitoringTimerTask:<init>(java.util.List,java.util.function.Consumer,java.util.function.Consumer)": {
            "run": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:getNonNegative(java.lang.String,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:checkIfPropertyExists(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:checkForErrors(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:throwMetricsException(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfigException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:checkMetricName(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:checkTagName(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsFactory:getInstance(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsSourceBuilder:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MethodMetric:newTag(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:getRollInterval()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:throwMetricsException(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.FileSink:init(org.apache.commons.configuration2.SubsetConfiguration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfigException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfigException:<init>(java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsTag:equals(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsTag:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30:appendPrefix(org.apache.hadoop.metrics2.MetricsRecord,java.lang.StringBuilder)": {
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.filter.AbstractPatternFilter:accepts(org.apache.hadoop.metrics2.MetricsTag)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.filter.AbstractPatternFilter:accepts(java.lang.Iterable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordImpl:context()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:add(org.apache.hadoop.metrics2.MetricsInfo,java.lang.Object)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:add(org.apache.hadoop.metrics2.MetricsTag)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:setContext(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.AbstractMetric:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.FileSink:putMetrics(org.apache.hadoop.metrics2.MetricsRecord)": {
            "m4": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.11
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.MetricsCache:update(org.apache.hadoop.metrics2.MetricsRecord,boolean)": {
            "m1": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink:loadGangliaConf(org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaConfType)": {
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m12": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m14": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink:xdr_string(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31:emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)": {
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m10": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30:emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)": {
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m10": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30:calculateSlope(org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.GraphiteSink$Graphite:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.GraphiteSink$Graphite:connect()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.GraphiteSink:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.StatsDSink:init(org.apache.commons.configuration2.SubsetConfiguration)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.StatsDSink:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.PrometheusMetricsSink:putMetrics(org.apache.hadoop.metrics2.MetricsRecord)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.PrometheusMetricsSink:getMetricKey(java.lang.String,org.apache.hadoop.metrics2.AbstractMetric,java.util.List)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.filter.AbstractPatternFilter:init(org.apache.commons.configuration2.SubsetConfiguration)": {
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsBufferBuilder:add(java.lang.String,java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsBufferBuilder:get()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter$WaitableMetricsBuffer:<init>(org.apache.hadoop.metrics2.impl.MetricsBuffer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.SinkQueue:dequeue()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.SinkQueue:clear()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.SinkQueue:waitForData()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:register(org.apache.hadoop.metrics2.MetricsSystem$Callback)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:register(java.lang.String,org.apache.hadoop.metrics2.MetricsSystem$Callback)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableCounterLong:incr()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrSentBytes(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrReceivedBytes(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordImpl:<init>(org.apache.hadoop.metrics2.MetricsInfo,long,java.util.List,java.lang.Iterable)": {
            "checkArg": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "checkNotNull": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordImpl:toString()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordImpl:hashCode()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordImpl:equals(java.lang.Object)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:newAttrInfo(java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:setAttrCacheTag(org.apache.hadoop.metrics2.MetricsTag,int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.77
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:setAttrCacheMetric(org.apache.hadoop.metrics2.AbstractMetric,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter:refreshQueueSizeGauge()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.UniqueNames:uniqueName(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableCounterInt:incr()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableCounterInt:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableQuantiles$RolloverSample:<init>(org.apache.hadoop.metrics2.lib.MutableQuantiles)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableQuantiles:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$UgiMetrics:addGetGroups(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:addRpcEnQueueTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:addRpcQueueTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:addRpcLockWaitTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:addRpcProcessingTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:addRpcResponseTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:addDeferredRpcProcessingTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ReadWriteDiskValidatorMetrics:addWriteFileLatency(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ReadWriteDiskValidatorMetrics:addReadFileLatency(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableInverseQuantiles$InversePercentile:<init>(double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:initialize(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:instance()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:shutdown()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:setInstance(org.apache.hadoop.metrics2.MetricsSystem)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:removeMBeanName(javax.management.ObjectName)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:removeSourceName(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getTag(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:toString()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages:getStats(long)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getProcessingSampleCount()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getDeferredRpcProcessingSampleCount()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages:rollOverAvgs()": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.3
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeLong:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeLong:incr()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeLong:decr()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.Interns:info(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.Interns:tag(org.apache.hadoop.metrics2.MetricsInfo,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeFloat:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeFloat:incr(float)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableStat:add(long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat:add(double)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getProcessingMean()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getDeferredRpcProcessingMean()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat:min()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat:max()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat$MinMax:reset(org.apache.hadoop.metrics2.util.SampleStat$MinMax)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableStat:resetMinMax()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MethodMetric$1:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "isInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MethodMetric:newCounter(java.lang.Class)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.26
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MethodMetric$2:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "isInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "isLong": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.23
            },
            "isFloat": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MethodMetric:newGauge(java.lang.Class)": {
            "m1": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.26
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.17
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeInt:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getNextTgtRenewalTime(long,long,org.apache.hadoop.io.retry.RetryPolicy)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeInt:incr()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeInt:decr()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:reattach(org.apache.hadoop.metrics2.MetricsSystem,org.apache.hadoop.metrics2.source.JvmMetrics)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:getMemoryUsage(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.Metrics2Util$NameValuePair:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat:stddev()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleQuantiles:compress()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleQuantiles:query(double)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleQuantiles:insertBatch()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m9": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.Metrics2Util$TopN:offer(org.apache.hadoop.metrics2.util.Metrics2Util$NameValuePair)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.MetricsCache:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:tag(org.apache.hadoop.metrics2.MetricsInfo,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:add(org.apache.hadoop.metrics2.MetricsTag)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.28
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:add(org.apache.hadoop.metrics2.AbstractMetric)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.2
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:setContext(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:addCounter(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:addCounter(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:addGauge(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:addGauge(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:addGauge(org.apache.hadoop.metrics2.MetricsInfo,float)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricsJsonBuilder:addGauge(org.apache.hadoop.metrics2.MetricsInfo,double)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.ZKFCProtocolServerSideTranslatorPB:getProtocolVersion(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolServerSideTranslatorPB:getProtocolVersion(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.NetgroupCache:getNetgroupNames()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.NetgroupCache:isCached(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$LoginParams:getDefaults()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.security.authentication.server.ProxyUserAuthenticationFilter:toLowerCase(javax.servlet.http.HttpServletRequest)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPropertiesResolver:getServerProperties(java.net.InetAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPropertiesResolver:getClientProperties(java.net.InetAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcServer$SaslDigestCallbackHandler:getPassword(org.apache.hadoop.security.token.TokenIdentifier)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback:getGroupsSet(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMappingWithFallback:getGroupsSet(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.CompositeGroupsMapping:getGroupsSet(java.lang.String)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.HttpCrossOriginFilterInitializer:getEnabledConfigKey()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getCredentialsInternal()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.User:<init>(java.lang.String,org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod,javax.security.auth.login.LoginContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getHostFromPrincipal(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:getGroupInternal(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:refresh()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsMapping:getGroups(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsMapping:getGroupsSet(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:println(java.lang.String,java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:usage()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:updateMapInternal(org.apache.hadoop.thirdparty.com.google.common.collect.BiMap,java.lang.String,java.lang.String,java.lang.String,java.util.Map)": {
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m12": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getRunScriptCommand(java.io.File)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod:valueOf(org.apache.hadoop.security.SaslRpcServer$AuthMethod)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:switchBindUser(javax.naming.AuthenticationException)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslOutputStream:write(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslOutputStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcServer:init(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPlainServer$SaslPlainServerFactory:createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPlainServer:getAuthorizationID()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPlainServer:getNegotiatedProperty(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPlainServer:wrap(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPlainServer:unwrap(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping$LdapSslSocketFactory:createKeyStore(java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.http.RestCsrfPreventionFilter:init(javax.servlet.FilterConfig)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.http.RestCsrfPreventionFilter:handleHttpInteraction(org.apache.hadoop.security.http.RestCsrfPreventionFilter$HttpInteraction)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.http.CrossOriginFilter:initializeAllowedMethods(javax.servlet.FilterConfig)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.http.CrossOriginFilter:doCrossFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m12": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.security.http.CrossOriginFilter:initializeAllowedHeaders(javax.servlet.FilterConfig)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:parsePartialGroupNames(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:newLoginContext(java.lang.String,javax.security.auth.Subject,org.apache.hadoop.security.UserGroupInformation$HadoopConfiguration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$HadoopLoginContext:login()": {
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$HadoopLoginContext:logout()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:createSecretKey(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:formatTokenId(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:removeStoredToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Daemon$DaemonFactory:newThread(java.lang.Runnable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.JvmPauseMonitor:serviceStart()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:reset()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:updateDelegationKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:removeStoredMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:addKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.88
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.3,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:storeDelegationKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenInformation:<init>(long,byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:removeExpiredKeys()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:getTokenTrackingId(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:removeExpiredStoredToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:setExternalDelegationTokenSecretManager(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:destroy()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:stopThreads()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.DelegationTokenLoadingCache:isEmpty()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.DelegationKey:<init>(int,long,javax.crypto.SecretKey)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationFilter:getConfiguration(java.lang.String,javax.servlet.FilterConfig)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationFilter:initializeAuthHandler(java.lang.String,javax.servlet.FilterConfig)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.HttpUserGroupInformation:get()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.MultiSchemeDelegationTokenAuthenticationHandler:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.KerberosDelegationTokenAuthenticationHandler:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.PseudoDelegationTokenAuthenticationHandler:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:obtainDelegationTokenAuthenticator(org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator,org.apache.hadoop.security.authentication.client.ConnectionConfigurator)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.PseudoDelegationTokenAuthenticator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.KerberosDelegationTokenAuthenticator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:isManagementOperation(javax.servlet.http.HttpServletRequest)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:getDelegationToken(javax.servlet.http.HttpServletRequest)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:hasDelegationToken(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$TokenSelector:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:incrementDelegationTokenSeqNum()": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:incrementCurrentKeyId()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:removeStoredMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:isManaged()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:renew(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:cancel(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell$Get:validate()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell:getCommandUsage()": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient$WrappedInputStream:read(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:isValidAuthType(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:getInputStream(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:getOutputStream(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:disposeSasl()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ProviderUtils:noPasswordWarning(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ProviderUtils:noPasswordError(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslInputStream:readMoreData()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslInputStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AuthorizationException:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AuthorizationException:<init>(java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient$SaslClientCallbackHandler:<init>(org.apache.hadoop.security.token.Token)": {
            "getIdentifier": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "encodeIdentifier": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getPassword": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            },
            "encodePassword": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:reset()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getLogin()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isLoginSuccess()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:setLogin(javax.security.auth.login.LoginContext)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:setLastLogin(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:<init>(javax.security.auth.Subject)": {
            "getName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getUserName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:hasKerberosCredentials()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getAuthenticationMethod()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:fixKerberosTicketOrder()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:hasSufficientTimeElapsed(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getRealUser()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getShortUserName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:setAuthenticationMethod(org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier:check(java.lang.String[],java.security.cert.X509Certificate)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier:check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)": {
            "m6": {
                "count_score": 0.43,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.83
            },
            "m13": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m14": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "m18": {
                "count_score": 0.29,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.ReloadingX509TrustManager:<init>(java.lang.String,java.lang.String,java.lang.String)": {
            "loadTrustManager": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.ReloadingX509TrustManager:loadFrom(java.nio.file.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.ReloadingX509KeystoreManager:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
            "loadKeyManager": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.ReloadingX509KeystoreManager:loadFrom(java.nio.file.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:getResource(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getConfResourceAsInputStream(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getConfResourceAsReader(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLFactory:createSSLEngine()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLFactory:configure(java.net.HttpURLConnection)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:configureConnection(java.net.HttpURLConnection)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:initializeSSLContext(org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory$SSLChannelMode)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:createSocket()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:createSocket(java.net.Socket,java.lang.String,int,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:createSocket(java.net.InetAddress,int,java.net.InetAddress,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:createSocket(java.lang.String,int,java.net.InetAddress,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:createSocket(java.net.InetAddress,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:createSocket(java.lang.String,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configured:<init>(org.apache.hadoop.conf.Configuration)": {
            "setConf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:handleExecutorTimeout(org.apache.hadoop.util.Shell$ShellCommandExecutor,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellCommandExecutor:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcServer$AuthMethod:read(java.io.DataInput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil$QualifiedHostResolver:getByExactName(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$HadoopConfiguration:getKerberosEntry()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping$StaticMapping:<init>(java.util.Map,java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping$PassThroughMap:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:addUser(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:addGroup(java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:removeUser(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:removeGroup(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:getUsersString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:getGroupsString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AuthorizationException:printStackTrace()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.DefaultImpersonationProvider:getProxyGroups()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.DefaultImpersonationProvider:getProxyHosts()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:innerSetCredential(java.lang.String,char[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell$CheckCommand:validate()": {
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell$CreateCommand:validate()": {
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell$CheckCommand:execute()": {
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m12": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell:promptForCredential()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell$Command:warnIfTransientProvider()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.LocalKeyStoreProvider:createPermissions(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:isOriginalTGT(javax.security.auth.kerberos.KerberosTicket)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:setSslConfiguration(org.apache.zookeeper.client.ZKClientConfig,org.apache.hadoop.security.SecurityUtil$TruststoreKeystore,org.apache.zookeeper.common.ClientX509Util)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KerberosAuthException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.WhitelistBasedResolver:getServerProperties(java.net.InetAddress)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcServer:getIdentifier(java.lang.String,org.apache.hadoop.security.token.SecretManager)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoStreamUtils:checkCodec(org.apache.hadoop.crypto.CryptoCodec)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec:<init>()": {
            "getLoadingFailureReason": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:getPos()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:readFromUnderlyingStream(java.nio.ByteBuffer)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceCtrCryptoCodec$JceCtrCipher:<init>(int,java.lang.String,org.apache.hadoop.crypto.CipherSuite,java.lang.String)": {
            "getName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CipherSuite:convert(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceCtrCryptoCodec$JceCtrCipher:encrypt(java.nio.ByteBuffer,java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceCtrCryptoCodec$JceCtrCipher:decrypt(java.nio.ByteBuffer,java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoProtocolVersion:supports(org.apache.hadoop.crypto.CryptoProtocolVersion)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CipherOption:<init>(org.apache.hadoop.crypto.CipherSuite)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCipher:tokenizeTransformation(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCipher:finalize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.random.OpensslSecureRandom:next(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:getKeyVersion(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:innerSetKeyVersion(java.lang.String,java.lang.String,byte[],java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSKeyVersion:<init>(java.lang.String,java.lang.String,byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension:createKeyProviderCryptoExtension(org.apache.hadoop.crypto.key.KeyProvider)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension:close()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider$KeyMetadata:readObject(java.io.ObjectInputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSMetadata:<init>(java.lang.String,int,java.lang.String,java.util.Map,java.util.Date,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider$KeyMetadata:writeObject(java.io.ObjectOutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell:printException(java.lang.Exception)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$ListCommand:execute()": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderExtension:getKeysMetadata(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:cleanupNewAndOld(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:backupToOld(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:revertFromOld(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:deleteKey(java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider$KeyMetadata:getAlgorithm()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProvider:getCurrentKey(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProvider:generateKey(int,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.CachingKeyProvider:<init>(org.apache.hadoop.crypto.key.KeyProvider,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.CachingKeyProvider:invalidateCache(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderExtension:invalidateCache(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$InvalidateCacheCommand:execute()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:toJSON(org.apache.hadoop.crypto.key.KeyProvider$KeyVersion)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$DefaultCryptoExtension:generateEncryptedKey(org.apache.hadoop.crypto.Encryptor,org.apache.hadoop.crypto.key.KeyProvider$KeyVersion,byte[],byte[])": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m9": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.32
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion:createForDecryption(java.lang.String,java.lang.String,byte[],byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$DefaultCryptoExtension:decryptEncryptedKey(org.apache.hadoop.crypto.Decryptor,org.apache.hadoop.crypto.key.KeyProvider$KeyVersion,org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.68
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m3": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.41
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderDelegationTokenExtension:createKeyProviderDelegationTokenExtension(org.apache.hadoop.crypto.key.KeyProvider)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$CreateCommand:validate()": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:writeJson(java.lang.Object,java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:checkNotEmpty(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:warmUpEncryptedKeys(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:close()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:submitRefillTask(java.lang.String,java.util.Queue)": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue$UniqueKeyBlockingQueue:deleteByName(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:getLock(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:flush()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderExtension:isTransient()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$Command:warnIfTransientProvider()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:createKeyProviderFromUri(org.apache.hadoop.conf.Configuration,java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallerContext$Builder:append(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallerContext$Builder:append(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallerContext$Builder:appendIfAbsent(java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallerContext$Builder:<init>(java.lang.String,java.lang.String)": {
            "isValid": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkFieldSeparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RefreshResponse:successResponse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolClientSideTranslatorPB:unpack(org.apache.hadoop.ipc.proto.GenericRefreshProtocolProtos$GenericRefreshResponseProto)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolServerSideTranslatorPB:pack(java.util.Collection)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ObserverRetryOnActiveException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ClientId:toString(byte[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache$CacheEntry:<init>(byte[],int,long)": {
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getMsb": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getLsb": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:isServerFailOverEnabledByQueue()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getPriorityLevel(org.apache.hadoop.ipc.Schedulable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:isClientBackoffEnabled()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:addInternal(org.apache.hadoop.ipc.Schedulable,boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:offer(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:offer(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getCallQueueLen()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolInterfaces(java.lang.Class)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getServerAddress(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallerContext:<init>(org.apache.hadoop.ipc.CallerContext$Builder)": {
            "getContext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getSignature": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallerContext:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:sendPing()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:registerProtocolEngine(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.Class,org.apache.hadoop.ipc.RPC$RpcInvoker)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ExternalCall:get()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Timer:monotonicNowNanos()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:getUserGroupInformation()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getRemoteUser()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:doResponse(java.lang.Throwable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$DecayTask:<init>(org.apache.hadoop.ipc.DecayRpcScheduler,java.util.Timer)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcClientUtil:putVersionSignatureMap(java.net.InetSocketAddress,java.lang.String,java.lang.String,java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcClientUtil:getVersionSignatureMap(java.net.InetSocketAddress,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolSignature:getFingerprints(java.lang.reflect.Method[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcClientUtil:convertProtocolSignatureProtos(java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcClientUtil:methodExists(int,long,java.util.Map)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RefreshRegistry:dispatch(java.lang.String,java.lang.String[])": {
            "m8": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m12": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.61
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RemoteException:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RemoteException:unwrapRemoteException(java.lang.Class[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RemoteException:unwrapRemoteException()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getNumInProcessHandler()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getTotalRequests()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getTotalRequestsPerSecond()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:<init>(int,int,org.apache.hadoop.ipc.RPC$RpcKind,byte[],org.apache.hadoop.tracing.Span,org.apache.hadoop.ipc.CallerContext)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "monotonicNowNanos": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProcessingDetails:get(org.apache.hadoop.ipc.ProcessingDetails$Timing,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProcessingDetails:toString()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WeightedTimeCostProvider:getCost(org.apache.hadoop.ipc.ProcessingDetails)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProcessingDetails:set(org.apache.hadoop.ipc.ProcessingDetails$Timing,long,java.util.concurrent.TimeUnit)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:getSchedulingDecisionSummary()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:getUniqueIdentityCount()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:getTotalCallVolume()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:getAverageResponseTime()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:getResponseTimeCountInLastWindow()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getNumDroppedConnections()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$ConnectionManager:isFull()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getNumOpenConnections()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getConnections()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$ConnectionManager:startIdleScan()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:putQueue(int,org.apache.hadoop.ipc.Schedulable)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:offerQueue(int,org.apache.hadoop.ipc.Schedulable)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:offer(org.apache.hadoop.ipc.Schedulable,long,java.util.concurrent.TimeUnit)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:offer(org.apache.hadoop.ipc.Schedulable)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:drainTo(java.util.Collection)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:addTerseExceptions(java.lang.Class[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:addSuppressedLoggingExceptions(java.lang.Class[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:logException(org.slf4j.Logger,java.lang.Throwable,org.apache.hadoop.ipc.Server$Call)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC$Server:getSupportedProtocolVersions(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC$Server:getHighestSupportedProtocol(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.UnexpectedServerException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcServerException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcClientException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.UnexpectedServerException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcServerException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcClientException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:setCapacity(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer$FramedBuffer:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:getFramedBuffer()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addCost(java.lang.Object,long)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:computePriorityLevel(long,java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:setPriorityLevel(org.apache.hadoop.security.UserGroupInformation,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:getCallVolumeSummary()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcWritable$Buffer:wrap(java.nio.ByteBuffer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$RpcProtobufRequest:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$RpcProtobufRequest:<init>(org.apache.hadoop.ipc.protobuf.ProtobufRpcEngineProtos$RequestHeaderProto,com.google.protobuf.Message)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$RpcProtobufRequest:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$RpcProtobufRequest:<init>(org.apache.hadoop.ipc.protobuf.ProtobufRpcEngine2Protos$RequestHeaderProto,org.apache.hadoop.thirdparty.protobuf.Message)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufHelper:getRemoteException(org.apache.hadoop.thirdparty.protobuf.ServiceException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.internal.ShadedProtobufHelper:ipc(org.apache.hadoop.ipc.internal.ShadedProtobufHelper$IpcCall)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufHelper:getFixedByteString(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufHelper:getByteString(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:skipRetryCache(byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:setState(org.apache.hadoop.ipc.RetryCache$CacheEntry,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$RpcProtobufRequest:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:setCallIdAndRetryCount(int,int,java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:checkAsyncCall()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getListenerAddress()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getAuxiliaryListenerAddresses()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Listener:doStop()": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ClientCache:stopClient(org.apache.hadoop.ipc.Client)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:clearClientCache()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$RpcCall:getHostInetAddress()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$RpcCall:getRemotePort()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$RpcCall:setDeferredResponse(org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$RpcCall:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:waitForWork()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m9": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:handleConnectionTimeout(int,int,java.io.IOException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:handleConnectionFailure(int,java.io.IOException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache$CacheEntryWithPayload:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue$MetricsProxy:getQueueSizes()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue$MetricsProxy:getOverflowedCalls()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufWrapperLegacy:<init>(java.lang.Object)": {
            "isUnshadedProtobufMessage": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:switchToSimple()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:close()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:processSaslToken(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:checkDataLength(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:setupResponseOldVersionFatal(java.io.ByteArrayOutputStream,org.apache.hadoop.ipc.Server$RpcCall,org.apache.hadoop.io.Writable,java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getRpcRequestWrapper(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcKindProto)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$RpcProtobufRequest:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache$CacheEntry:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WeightedRoundRobinMultiplexer:advanceIndex()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtobufRpcEngineCallbackImpl:<init>()": {
            "getServer": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getMethodName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "now": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtobufRpcEngineCallbackImpl:<init>()": {
            "getServer": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getMethodName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "now": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtobufRpcEngineCallbackImpl:error(java.lang.Throwable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtobufRpcEngineCallbackImpl:error(java.lang.Throwable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:capacity()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:ensureCapacity(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Call:setException(java.io.IOException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Call:setRpcResponse(org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection$PingInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection$PingInputStream:read(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:getHostAddress()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getRemoteIp()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getServerRpcInvoker(org.apache.hadoop.ipc.RPC$RpcKind)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getRemotePort()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getAuxiliaryPortEstablishedQOP()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getProtocol()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getPriorityLevel()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:setLogSlowRPCThresholdTime(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:setClientBackoffEnabled(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:addAuxiliaryListener(int)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:setupResponseForProtobuf(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getNumOpenConnectionsPerUser()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:isServerFailOverEnabled()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Responder:processResponse(java.util.LinkedList,boolean)": {
            "m11": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m12": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m13": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$ConnectionId:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tracing.Tracer$Builder:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.tracing.Tracer:newSpan(java.lang.String,org.apache.hadoop.tracing.SpanContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.tracing.NullTraceScope:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.tracing.TraceScope:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.MachineList:<init>(java.util.Collection,org.apache.hadoop.util.MachineList$InetAddressFactory)": {
            "getByName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.MachineList:includes(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.ConfTest:checkConf(java.io.InputStream)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m21": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.ConfTest:listFiles(java.io.File)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:readProcMemInfoFile(boolean)": {
            "m11": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getNumProcessors()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getNumCores()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getCpuFrequency()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:readProcStatFile()": {
            "m11": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m12": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getNetworkBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getNetworkBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:readProcDisksInfoFile()": {
            "m10": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IdentityHashStore:realloc(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.IdentityHashStore:get(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IdentityHashStore:remove(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet$SetIterator:ensureNext()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet:remove(int,java.lang.Object)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.MergeSort:mergeSort(int[],int[],int,int)": {
            "m1": {
                "count_score": 0.86,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.66
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.util.XMLUtils:setOptionalSecureTransformerAttributes(javax.xml.transform.TransformerFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix:string2long(java.lang.String)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix:long2String(long,java.lang.String,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:formatPercent(double,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:byteToHexString(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:limitDecimalTo2(double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HeapSort:sort(org.apache.hadoop.util.IndexedSortable,int,int,org.apache.hadoop.util.Progressable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.JvmPauseMonitor$GcTimes:subtract(org.apache.hadoop.util.JvmPauseMonitor$GcTimes)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ExitUtil:terminate(org.apache.hadoop.util.ExitUtil$ExitException)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.util.ExitUtil:halt(org.apache.hadoop.util.ExitUtil$HaltException)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:<init>()": {
            "reset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownHookManager:addShutdownHook(java.lang.Runnable,int,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownHookManager:removeShutdownHook(java.lang.Runnable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownHookManager:hasShutdownHook(java.lang.Runnable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ComparableVersion:compareTo(org.apache.hadoop.util.ComparableVersion)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ThreadUtil:getResourceAsStream(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:logWarning(long,org.apache.hadoop.util.InstrumentedLock$SuppressedSnapshot)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:logWaitWarning(long,org.apache.hadoop.util.InstrumentedLock$SuppressedSnapshot)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.QuickSort:sortInternal(org.apache.hadoop.util.IndexedSortable,int,int,org.apache.hadoop.util.Progressable,int)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:<init>(java.io.InputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$1:run()": {
            "isTimedOut": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.BlockingThreadPoolExecutorService:newDaemonThreadFactory(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:<init>(int,float)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:size()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:getIterator(java.util.function.Consumer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:expandIfNecessary()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:newArrayList(java.util.Iterator)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:addAll(java.util.Collection,java.lang.Iterable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:newArrayListWithCapacity(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:computeArrayListCapacity(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.ApplicationClassLoader:getResource(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ApplicationClassLoader:loadClass(java.lang.String,boolean)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:writeJsonAsBytes(java.lang.Object,java.io.OutputStream)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.OperationDuration:<init>()": {
            "time": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.OperationDuration:finished()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.OperationDuration:asDuration()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.OperationDuration:getDurationString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:iterator()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet$Values:iterator()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcUtil:getMonomial(long,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcUtil:composeWithMonomial(int,int,int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcUtil:intToBytes(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcUtil:toSingleCrcString(byte[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcUtil:toMultiCrcString(byte[])": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.RunJar:unJar(java.io.InputStream,java.io.File,java.util.regex.Pattern)": {
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.util.RunJar:unJar(java.io.File,java.io.File,java.util.regex.Pattern)": {
            "m11": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m14": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.HadoopExecutors:newCachedThreadPool(java.util.concurrent.ThreadFactory)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.HadoopExecutors:newFixedThreadPool(int,java.util.concurrent.ThreadFactory)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.HadoopExecutors:newFixedThreadPool(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.HadoopExecutors:newScheduledThreadPool(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.HadoopExecutors:newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.HadoopScheduledThreadPoolExecutor:afterExecute(java.lang.Runnable,java.lang.Throwable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.HadoopThreadPoolExecutor:afterExecute(java.lang.Runnable,java.lang.Throwable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.AsyncGetFuture:get()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.AsyncGetFuture:get(long,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.concurrent.AsyncGetFuture:isDone()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StopWatch:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.UTF8ByteArrayUtils:findNthByte(byte[],int,int,byte,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CacheableIPList:<init>(org.apache.hadoop.util.FileBasedIPList,long)": {
            "updateCacheExpiryTime": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.WeakReferenceMap:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.WeakReferenceMap:put(java.lang.Object,java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.WeakReferenceMap:remove(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.WeakReferenceMap:containsKey(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.WeakReferenceMap:create(java.lang.Object)": {
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.WeakReferenceMap:prune()": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock$SuppressedStats:snapshot()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:formatTimeDiff(long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:getTrimmedStringCollectionSplitByEquals(java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:split(java.lang.String,char,char)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:escapeString(java.lang.String,char,char[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:unEscapeString(java.lang.String,char,char[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getVersion()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getRevision()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getBranch()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getDate()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getUser()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getUrl()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:_getBuildVersion()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getSrcChecksum()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getProtocVersion()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getCompilePlatform()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$FilteringRemoteIterator:<init>(org.apache.hadoop.fs.RemoteIterator,org.apache.hadoop.util.functional.FunctionRaisingIOE)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$MappingRemoteIterator:<init>(org.apache.hadoop.fs.RemoteIterator,org.apache.hadoop.util.functional.FunctionRaisingIOE)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$CloseRemoteIterator:<init>(org.apache.hadoop.fs.RemoteIterator,java.io.Closeable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$HaltableRemoteIterator:<init>(org.apache.hadoop.fs.RemoteIterator,org.apache.hadoop.util.functional.CallableRaisingIOE)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$TypeCastingRemoteIterator:<init>(org.apache.hadoop.fs.RemoteIterator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$FilteringRemoteIterator:hasNext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$MaybeClose:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$WrappedJavaIterator:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$WrappingRemoteIterator:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$RangeExcludingLongIterator:next()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.CommonCallableSupplier:submit(java.util.concurrent.Executor,java.util.concurrent.Callable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.LazyAutoCloseableReference:<init>(org.apache.hadoop.util.functional.CallableRaisingIOE)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.LazyAtomicReference:lazyAtomicReferenceFromSupplier(java.util.function.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.LazyAutoCloseableReference:eval()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.LazyAtomicReference:apply()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FunctionalIO:uncheckIOExceptions(org.apache.hadoop.util.functional.CallableRaisingIOE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FunctionalIO:toUncheckedIOExceptionSupplier(org.apache.hadoop.util.functional.CallableRaisingIOE)": {
            "unchecked": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$SingletonIterator:next()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool:foreach(org.apache.hadoop.fs.RemoteIterator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool:throwOne(java.util.Collection)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool$Builder:<init>(java.lang.Iterable)": {
            "remoteIteratorFromIterable": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool$Builder:suppressExceptions()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:raiseInnerCause(java.util.concurrent.ExecutionException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:raiseInnerCause(java.util.concurrent.CompletionException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:setJobConf(java.lang.Object,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getClassByName(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:printThreadInfo(java.io.PrintStream,java.lang.String)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:<init>(boolean)": {
            "getClassLoader": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.HttpExceptionUtils:createServletExceptionResponse(javax.servlet.http.HttpServletResponse,int,java.lang.Throwable)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m10": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.HttpExceptionUtils:createJerseyExceptionResponse(javax.ws.rs.core.Response$Status,java.lang.Throwable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HttpExceptionUtils:throwEx(java.lang.Throwable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.PureJavaCrc32C:<init>()": {
            "reset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IntrusiveCollection:remove(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IntrusiveCollection:toArray()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IntrusiveCollection:retainAll(java.util.Collection)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IntrusiveCollection:clear()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IntrusiveCollection:containsAll(java.util.Collection)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CleanerUtil:unmapHackImpl()": {
            "m16": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:setIncludesFile(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:setExcludesFile(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:updateFileNames(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:getExcludedHosts()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getGroupsForUserCommand(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getGroupsIDForUserCommand(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getGetPermissionCommand()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getSetPermissionCommand(java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getSetOwnerCommand(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getSymlinkCommand(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getReadlinkCommand(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getSignalKillCommand(int,java.lang.String)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:appendScriptExtension(java.io.File,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:checkHadoopHome()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getHadoopHomeDir()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getQualifiedBinInner(java.io.File,java.lang.String)": {
            "m2": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getWinUtilsFile()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:destroyAllShellProcesses()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellTimeoutTimerTask:run()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownThreadsHelper:shutdownThread(java.lang.Thread)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownThreadsHelper:shutdownExecutorService(java.util.concurrent.ExecutorService)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:addNewPhase()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:addPhase(float)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:getInternal()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:toString(java.lang.StringBuilder)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:complete()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:getStringData(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:getStringData(java.lang.String,org.apache.zookeeper.data.Stat)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:setData(java.lang.String,java.lang.String,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:create(java.lang.String,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:delete(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:safeCreate(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode,java.util.List,java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:safeDelete(java.lang.String,java.util.List,java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:safeSetData(java.lang.String,byte[],int,java.util.List,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.ProgramDriver:addClass(java.lang.String,java.lang.Class,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynConstructors$Builder:impl(java.lang.String,java.lang.Class[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynConstructors$Builder:hiddenImpl(java.lang.Class[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynConstructors$Builder:hiddenImpl(java.lang.String,java.lang.Class[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:ctorImpl(java.lang.Class,java.lang.Class[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynConstructors$Ctor:newInstanceChecked(java.lang.Object[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod:invokeChecked(java.lang.Object,java.lang.Object[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:impl(java.lang.Class,java.lang.String,java.lang.Class[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod$1:<init>(java.lang.reflect.Method,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynConstructors$Ctor:<init>(java.lang.reflect.Constructor,java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:hiddenImpl(java.lang.Class,java.lang.String,java.lang.Class[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.BindingUtils:noop(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.BindingUtils:implemented(org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.BindingUtils:available(org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod:bind(java.lang.Object)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.19
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod:asStatic()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.ClassUtil:findContainingJar(java.lang.Class)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ClassUtil:findClassLocation(java.lang.Class)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ProtoUtil:makeRpcRequestHeader(org.apache.hadoop.ipc.RPC$RpcKind,org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto$OperationProto,int,int,byte[],org.apache.hadoop.ipc.AlignmentContext)": {
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m10": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m11": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m14": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m15": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m17": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:getHeader()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:mapByteToChecksumType(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:writeValue(java.io.DataOutputStream,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:writeValue(byte[],int,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.RateLimitingFactory:create(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SignalLogger:register(org.slf4j.Logger)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ComparableVersion:parseItem(boolean,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet:<init>(int)": {
            "actualArrayLength": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet:get(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet$Values:clear()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SemaphoredDelegatingExecutor:toString()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:readFileToSet(java.lang.String,java.lang.String,java.util.Set)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:readXmlFileToMapWithFileInputStream(java.lang.String,java.lang.String,java.io.InputStream,java.util.Map)": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m10": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:getHosts()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:getHostDetails(java.util.Set,java.util.Set)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:getHostDetails(java.util.Set,java.util.Map)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.hash.JenkinsHash:hash(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.hash.Hash:getInstance(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.hash.MurmurHash:hash(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.BloomFilter:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:and(org.apache.hadoop.util.bloom.Filter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:or(org.apache.hadoop.util.bloom.Filter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:and(org.apache.hadoop.util.bloom.Filter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:not()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:or(org.apache.hadoop.util.bloom.Filter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:xor(org.apache.hadoop.util.bloom.Filter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.BloomFilter:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.HashFunction:hash(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.Key:compareTo(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:getWeight(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.JvmPauseMonitor:formatMessage(long,java.util.Map,java.util.Map)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.AutoCloseableLock:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.AutoCloseableLock:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ComparableVersion$StringItem:isNull()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ComparableVersion$StringItem:compareTo(org.apache.hadoop.util.ComparableVersion$Item)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:printStack(java.lang.Throwable,java.lang.String,java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:explainResult(int,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:loadedClass(java.lang.String,java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.GcTimeMonitor:calculateGCTimePercentageWithinObservedInterval()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.GcTimeMonitor:getLatestGcData()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.PureJavaCrc32:<init>()": {
            "reset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownHookManager:executeShutdown()": {
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.util.PriorityQueue:put(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.PriorityQueue:pop()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.PriorityQueue:adjustTop()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Sets:addAll(java.util.TreeSet,java.lang.Iterable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.Sets:newHashSet(java.util.Iterator)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.Sets:newHashSetWithExpectedSize(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SequentialNumber:skipTo(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ProgramDriver:printUsage(java.util.Map)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tools.CommandShell:run(java.lang.String[])": {
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.tools.TableListing$Column:<init>(java.lang.String,org.apache.hadoop.tools.TableListing$Justification,boolean)": {
            "addRow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tools.TableListing$Builder:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.StorageUnit$7:getDefault(double)": {
            "toBytes": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.StorageUnit$3:getDefault(double)": {
            "toTBs": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:isDeprecated(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getDeprecatedKeyInfo(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:dumpDeprecatedKeys()": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:hasWarnedDeprecation(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getDeprecatedKey(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:reloadExistingConfigurations()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addDefaultResource(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Resource:<init>(java.lang.Object,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTimeDurationHelper(java.lang.String,java.lang.String,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:parse(java.net.URL,boolean)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Parser:handleInclude()": {
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m14": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.33
            },
            "m16": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:loadProperty(java.util.Properties,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String[])": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:toString()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getAllPropertiesByTags(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.StorageUnit$6:getDefault(double)": {
            "toKBs": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.StorageUnit$2:getDefault(double)": {
            "toPBs": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigRedactor:redact(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigRedactor:redactXml(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurableBase:getReconfigurationTaskStatus()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.StorageUnit$4:getDefault(double)": {
            "toGBs": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurableBase:startReconfigurationTask()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$DeprecationContext:<init>(org.apache.hadoop.conf.Configuration$DeprecationContext,org.apache.hadoop.conf.Configuration$DeprecationDelta[])": {
            "getKey": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getNewKeys": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getCustomMessage": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurationException:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
            "constructMessage": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurationException:<init>(java.lang.String,java.lang.String,java.lang.String)": {
            "constructMessage": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Parser:handleEndProperty()": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$DeprecatedKeyInfo:getWarningMessage(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$IntegerRanges:iterator()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$IntegerRanges:<init>(java.lang.String)": {
            "convertToInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.StorageSize:parse(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.StorageUnit$5:getDefault(double)": {
            "toMBs": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.StorageUnit$1:getDefault(double)": {
            "toEBs": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:convert(org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolServerSideTranslatorPB:convert(org.apache.hadoop.ha.proto.HAServiceProtocolProtos$HAStateChangeRequestInfoProto)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:createReqInfo()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:createReqInfo()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.FailoverController:createReqInfo()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolServerSideTranslatorPB:getServiceStatus(org.apache.hadoop.thirdparty.protobuf.RpcController,org.apache.hadoop.ha.proto.HAServiceProtocolProtos$GetServiceStatusRequestProto)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:startRPC()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort$Args:parseConfiggedPort(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.ShellCommandFencer:checkArgs(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:printUsage(java.io.PrintStream,java.lang.String,java.util.Map)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:checkManualStateManagementOK(org.apache.hadoop.ha.HAServiceTarget)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort:execCommand(com.jcraft.jsch.Session,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m8": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m10": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController$HealthCallbacks:enteredState(org.apache.hadoop.ha.HealthMonitor$State)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:badArg(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:checkEligibleForFailover()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ha.NodeFencer:fence(org.apache.hadoop.ha.HAServiceTarget)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceTarget:getFencingParameters()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:monitorActiveStatus()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:zkDoWithRetries(org.apache.hadoop.ha.ActiveStandbyElector$ZKAction,org.apache.zookeeper.KeeperException$Code)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:readInDirectBuffer(org.apache.hadoop.fs.FileRange,java.nio.ByteBuffer,org.apache.hadoop.util.functional.Function4RaisingIOE)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:validateAndSortRanges(java.util.List,java.util.Optional)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.19
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream:readVectored(java.util.List,java.util.function.IntFunction)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockManager:<init>(org.apache.hadoop.fs.impl.prefetch.BlockData)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockManager:release(org.apache.hadoop.fs.impl.prefetch.BufferData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BoundedResourcePool:release(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferData:throwIfStateIncorrect(org.apache.hadoop.fs.impl.prefetch.BufferData$State[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNullAndNotEmpty(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNullAndNumberOfElements(java.util.Collection,int,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkPathExists(java.nio.file.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BoundedResourcePool:<init>(int)": {
            "checkPositiveInteger": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:<init>(int,int,org.apache.hadoop.fs.impl.prefetch.PrefetchingStatistics)": {
            "checkPositiveInteger": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockManager:requestPrefetch(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferData:<init>(int,java.nio.ByteBuffer)": {
            "checkNotNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Retryer:<init>(int,int,int)": {
            "checkPositiveInteger": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkGreater": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:throwIfInvalidBlockNumber(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:throwIfInvalidOffset(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNullAndNotEmpty(java.lang.Object[],java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNullAndNotEmpty(byte[],java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNullAndNotEmpty(short[],java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNullAndNotEmpty(int[],java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNullAndNotEmpty(long[],java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkNotNullAndNotEmpty(java.lang.Iterable,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.DefaultBulkDeleteOperation:bulkDelete(java.util.Collection)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:applyToIOStatisticsSnapshot(java.io.Serializable,org.apache.hadoop.util.functional.FunctionRaisingIOE)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FlagSet:<init>(java.lang.Class,java.lang.String,java.util.EnumSet)": {
            "mapEnumNamesToValues": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPInputStream:seek(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPInputStream:available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:close()": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:listStatus(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:compareTo(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocatedFileStatus:compareTo(org.apache.hadoop.fs.FileStatus)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:stat2Paths(org.apache.hadoop.fs.FileStatus[],org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getDefaultReplication(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getDefaultReplication(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics$StatisticsDataReferenceCleaner:run()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsUrlStreamHandler:openConnection(java.net.URL)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputStream:read(long,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:serializer()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:publishAsStorageStatistics(java.lang.String,java.lang.String,org.apache.hadoop.fs.statistics.IOStatistics)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getStorageStatistics()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathIsDirectoryException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathIsNotDirectoryException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathOperationException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathIsNotEmptyDirectoryException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:bufferSize(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:replication(short)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:blockSize(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:recursive()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:create()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:overwrite(boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:append()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsCreateModes:hashCode()": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:<init>(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],org.apache.hadoop.fs.StorageType[],long,long,boolean)": {
            "internStringsInArray": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:setHosts(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:setCachedHosts(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:setNames(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:setTopologyPaths(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:setStorageIds(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:processPathInternal(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.AclCommands$SetfaclCommand:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.37
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 0.33,
                "total_score": 0.26
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 0.33,
                "total_score": 0.26
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 0.42,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Stat:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.37
            },
            "m6": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.28
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.29
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.37
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "m11": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.29
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.3
            },
            "m13": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.3
            },
            "m15": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:isFile(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:isFile()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:isFile()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:toString()": {
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.3
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.22
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.12
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:getSymlink()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:getSymlink()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsServerDefaults:<init>(long,int,int,short,int,boolean,long,org.apache.hadoop.util.DataChecksum$Type)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsServerDefaults:<init>(long,int,int,short,int,boolean,long,org.apache.hadoop.util.DataChecksum$Type,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathAccessDeniedException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathPermissionException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathNotFoundException:<init>(java.lang.String,java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Concat:processArguments(java.util.LinkedList)": {
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.io.IOUtils:wrapException(java.lang.String,java.lang.String,java.io.IOException)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:sync(long)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BoundedRangeFileInputStream:read(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:registerExpressions(org.apache.hadoop.fs.shell.find.ExpressionFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsCommand:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:registerCommands(org.apache.hadoop.fs.shell.CommandFactory)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobExpander:expand(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$DirListingIterator:fetchMore()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.XAttrCommands$GetfattrCommand:printXAttr(java.lang.String,byte[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:listStatus(org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.PathFilter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableCounterInt:<init>(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableCounterLong:<init>(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeLong:<init>(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeFloat:<init>(org.apache.hadoop.metrics2.MetricsInfo,float)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeInt:<init>(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricCounterLong:<init>(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricGaugeLong:<init>(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricCounterInt:<init>(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricGaugeFloat:<init>(org.apache.hadoop.metrics2.MetricsInfo,float)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricGaugeDouble:<init>(org.apache.hadoop.metrics2.MetricsInfo,double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricGaugeInt:<init>(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:getDelegationToken(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:renewDelegationToken(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:cancelDelegationToken(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:<init>(int,float,long,int,org.apache.hadoop.crypto.key.kms.ValueQueue$QueueRefiller)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileEncryptionInfo:<init>(org.apache.hadoop.crypto.CipherSuite,org.apache.hadoop.crypto.CryptoProtocolVersion,byte[],byte[],java.lang.String,java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.58
            },
            "getAlgorithmBlockSize": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "checkArgument": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.MultipartUploaderBuilderImpl:getFS()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.MultipartUploaderBuilderImpl:permission(org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.MultipartUploaderBuilderImpl:checksumOpt(org.apache.hadoop.fs.Options$ChecksumOpt)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.WrappedIOException:<init>(java.io.IOException)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FsLinkResolution:<init>(org.apache.hadoop.fs.impl.FsLinkResolution$FsLinkResolutionFunction)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber$GlobBuilder:<init>(org.apache.hadoop.fs.FileContext)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber$GlobBuilder:<init>(org.apache.hadoop.fs.FileSystem)": {
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:getFS()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:permission(org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:progress(org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:checksumOpt(org.apache.hadoop.fs.Options$ChecksumOpt)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks:validateWriteArgs(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncValue:set(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler:getLowerLayerAsyncReturn()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:setGcTimeMonitor(org.apache.hadoop.util.GcTimeMonitor)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec$OpensslCtrCipher:init(byte[],byte[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceCtrCryptoCodec$JceCtrCipher:init(byte[],byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:equalsIgnoreCase(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LimitInputStream:<init>(java.io.InputStream,long)": {
            "checkNotNull": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$DeprecationDelta:<init>(java.lang.String,java.lang.String[],java.lang.String)": {
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurableBase:setReconfigurationUtil(org.apache.hadoop.conf.ReconfigurationUtil)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:isStaleClient(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getStatistics(java.lang.String,java.lang.Class)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:writeCompressedByteArray(java.io.DataOutput,byte[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.IOUtils:copyBytes(java.io.InputStream,java.io.OutputStream,int,boolean)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.io.IOUtils:copyBytes(java.io.InputStream,java.io.OutputStream,long,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$IpcStreams:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:<init>(java.lang.String)": {
            "getResourceAsStream": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "closeStream": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:stopSinks()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.random.OsSecureRandom:finalize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:doDiskIo(java.io.File)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.PartialListing:<init>(org.apache.hadoop.fs.Path,java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PartialListing:<init>(org.apache.hadoop.fs.Path,org.apache.hadoop.ipc.RemoteException)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.CallReturn:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.CallReturn:<init>(java.lang.Throwable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.CallReturn:<init>(org.apache.hadoop.io.retry.CallReturn$State)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslSm4CtrCryptoCodec:calculateIV(byte[],long,byte[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec:calculateIV(byte[],long,byte[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceSm4CtrCryptoCodec:calculateIV(byte[],long,byte[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceAesCtrCryptoCodec:calculateIV(byte[],long,byte[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.GcTimeMonitor$Builder:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage:isTypeQuotaSet()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage:isTypeConsumedAvailable()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Count:getAndCheckStorageTypes(java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocatedFileStatus:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocatedFileStatus:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DUHelper:getFolderUsage(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:clear()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:set(org.apache.hadoop.fs.statistics.MeanStatistic)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging:ioStatisticsToString(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging:mapToSortedString(java.lang.StringBuilder,java.lang.String,java.util.Map,java.util.function.Predicate)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.DurationTrackerFactory:trackDuration(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.PairedDurationTrackerFactory:trackDuration(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StorageStatisticsFromIOStatistics:getLongStatistics()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:addTimedOperation(java.lang.String,long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:build()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withLongFunctionCounter(java.lang.String,java.util.function.ToLongFunction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withLongFunctionGauge(java.lang.String,java.util.function.ToLongFunction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withLongFunctionMinimum(java.lang.String,java.util.function.ToLongFunction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withLongFunctionMaximum(java.lang.String,java.util.function.ToLongFunction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withMeanStatisticFunction(java.lang.String,java.util.function.Function)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.InterruptEscalator:register(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:unreference(boolean)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.EvaluatingStatisticsMap:snapshot()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:snapshotMap(java.util.Map)": {
            "passthroughFn": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.EmptyIOStatisticsContextImpl:snapshot()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsContextImpl:<init>(long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSupport:snapshotIOStatistics()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsContext_enabled()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.BufferedIOStatisticsOutputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.BufferedIOStatisticsInputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BufferedFSInputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSOutputSummer:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionOutputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionInputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$SingletonIterator:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$WrappedJavaIterator:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$WrappingRemoteIterator:getIOStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:verifyChunked(org.apache.hadoop.util.DataChecksum$Type,java.util.zip.Checksum,java.nio.ByteBuffer,int,java.nio.ByteBuffer,java.lang.String,long)": {
            "m9": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:verifyChunked(org.apache.hadoop.util.DataChecksum$Type,java.util.zip.Checksum,byte[],int,int,int,byte[],int,java.lang.String,long)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:updateDecryptor(org.apache.hadoop.crypto.Decryptor,long,byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:encrypt()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.fs.BatchedRemoteIterator:hasNext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BatchedRemoteIterator:next()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32GzipFileChecksum:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32CastagnoliFileChecksum:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobPattern:<init>(java.lang.String)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:makeShellPath(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:makeSecureShellPath(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HardLink$HardLinkCGUnix:linkCount(java.io.File)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unZip(java.io.InputStream,java.io.File)": {
            "m10": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m15": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unZip(java.io.File,java.io.File)": {
            "m18": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unTarUsingJava(java.io.File,java.io.File,boolean)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unTarUsingJava(java.io.InputStream,java.io.File,boolean)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.PowerShellFencer:tryFence(org.apache.hadoop.ha.HAServiceTarget,java.lang.String)": {
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m13": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsCreateModes:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:disconnect(com.jcraft.jsch.ChannelSftp)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPConnectionPool:shutdown()": {
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStream:<init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:<init>(org.apache.hadoop.util.DataChecksum)": {
            "getBytesPerChecksum": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getChecksumSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:setChecksumBufSize(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPInputStream:read()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPInputStream:read()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPInputStream:read(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream:read()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream:read(byte[],int,int)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream:read(long,byte[],int,int)": {
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStream$PositionCache:write(int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStream$PositionCache:write(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:<init>(org.apache.hadoop.fs.FileSystem$Statistics)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "visitAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getBytesRead()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getBytesWritten()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getReadOps()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getLargeReadOps()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getWriteOps()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getRemoteReadTime()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getData()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getBytesReadErasureCoded()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:toString()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:reset()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32FileChecksum:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.CreateFlag:validate(java.lang.Object,boolean,java.util.EnumSet)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.CreateFlag:validateForAppend(java.util.EnumSet)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:getUri(java.net.URI,java.lang.String,boolean,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawDecoder:doDecodeImpl(java.nio.ByteBuffer[],int[],java.nio.ByteBuffer[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayEncodingState:<init>(org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder,byte[][],byte[][])": {
            "findFirstValidInput": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkBuffers": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferEncodingState:<init>(org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder,java.nio.ByteBuffer[],java.nio.ByteBuffer[])": {
            "findFirstValidInput": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkBuffers": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable:<init>(java.lang.Class)": {
            "checkPrimitive": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable:set(java.lang.Object)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.DefaultFailoverProxyProvider:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.protocolPB.RefreshAuthorizationPolicyProtocolClientSideTranslatorPB:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.protocolPB.RefreshUserMappingsProtocolClientSideTranslatorPB:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolClientSideTranslatorPB:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.RefreshCallQueueProtocolClientSideTranslatorPB:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tools.protocolPB.GetUserMappingsProtocolClientSideTranslatorPB:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.ZKFCProtocolClientSideTranslatorPB:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ZKUtil:getPermFromString(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$ChecksumOpt:processChecksumOpt(org.apache.hadoop.fs.Options$ChecksumOpt,org.apache.hadoop.fs.Options$ChecksumOpt)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getUriDefaultPort()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:canonicalizeUri(java.net.URI)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getCanonicalUri()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:canonicalizeUri(java.net.URI)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:<init>(long,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction:toString()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction:<init>(org.apache.hadoop.fs.FileSystem)": {
            "updateRenewalTime": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getFsStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getStatus()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.CombinedFileRange:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.audit.HttpReferrerAuditHeader:<init>(org.apache.hadoop.fs.store.audit.HttpReferrerAuditHeader$Builder)": {
            "addAttribute": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            },
            "buildHttpReferrer": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.WeakReferenceThreadMap:<init>(java.util.function.Function,java.util.function.Consumer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStream:hasCapability(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:hasCapability(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:hasCapability(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:getPrefetched(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:getCached(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:getRead(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:release(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:requestPrefetch(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:prefetch(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:cancelPrefetches()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:close()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:requestCaching(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:addToCache(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:end(org.apache.hadoop.fs.impl.prefetch.BlockOperations$Operation)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:fromSummary(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.11
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.17
            },
            "m9": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m13": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:release(org.apache.hadoop.fs.impl.prefetch.BufferData)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BoundedResourcePool:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:getDurationInfo(java.lang.StringBuilder)": {
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m7": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:createCache(int,org.apache.hadoop.fs.statistics.DurationTrackerFactory)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.SemaphoredDelegatingExecutor:<init>(java.util.concurrent.ExecutorService,int,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:getEntry(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:releaseReadyBlock(int)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.33
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:toString()": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m1": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:buffer()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:data()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:relative()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:isWithinCurrentBuffer(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:bufferStartOffset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsContextIntegration:getCurrentIOStatisticsContext()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsContextIntegration:setThreadIOStatisticsContext(org.apache.hadoop.fs.statistics.IOStatisticsContext)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:mergeSortedRanges(java.util.List,int,int,int)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:findChecksumRanges(java.util.List,int,int,int)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Name:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:subset(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.And:apply(org.apache.hadoop.fs.shell.PathData,int)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:getOptions()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFormat:parse(java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:getDescription()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:displayWarning(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:getUsage()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:<init>(java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSource,java.lang.Iterable,org.apache.hadoop.metrics2.MetricsFilter,org.apache.hadoop.metrics2.MetricsFilter,long,boolean)": {
            "checkNotNull": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkArg": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsCollectorImpl:addRecord(org.apache.hadoop.metrics2.MetricsInfo)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ChunkedArrayList:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.ScopedAclEntries:<init>(java.util.List)": {
            "calculatePivotOnDefaultEntries": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$TableBuilder:printToStream(java.io.PrintStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt:moved(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt:changed(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.DF:<init>(java.io.File,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.CachingGetSpaceUsed$RefreshThread:<init>(org.apache.hadoop.fs.CachingGetSpaceUsed,boolean)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token$PrivateToken:<init>(org.apache.hadoop.security.token.Token,org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "isPrivate": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:generateDelegationToken(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.25,
                "indegree_score": 0.69,
                "total_score": 0.41
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.25,
                "indegree_score": 0.45,
                "total_score": 0.32
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.25,
                "indegree_score": 0.75,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.25,
                "indegree_score": 1.0,
                "total_score": 0.54
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:setVerifyChecksum(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.XAttrCommands$SetfattrCommand:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:openFileWithOptions(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.impl.OpenFileParameters)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:openFileWithOptions(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.impl.OpenFileParameters)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:openFileWithOptions(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.impl.OpenFileParameters)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:openFileWithOptions(org.apache.hadoop.fs.PathHandle,org.apache.hadoop.fs.impl.OpenFileParameters)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree$INodeDirLink:<init>(java.lang.String,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.fs.viewfs.InodeTree$INodeLink)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree$INodeDir:addDir(java.lang.String,org.apache.hadoop.security.UserGroupInformation)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getChildFileSystems()": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.52
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m4": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.28
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.12
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.46
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme:getFallbackFileSystem()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue:addCall(org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCipher:update(java.nio.ByteBuffer,java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCipher:doFinal(java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPointInterceptorFactory:create(java.lang.String)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DF:toString()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:normalizePath(java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:isWindowsAbsolutePath(java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:isUriPathAbsolute()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getHarHash(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$FileSystemDataOutputStreamBuilder:build()": {
            "m16": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m14": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.14
            },
            "m17": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.protocolPB.PBHelper:convert(org.apache.hadoop.fs.FileStatus)": {
            "m2": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.39
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m6": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.29
            },
            "m14": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "m9": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.36
            },
            "m8": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.28
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "m21": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.27
            },
            "m20": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m19": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.29
            },
            "m18": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.29
            },
            "m16": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.6
            },
            "m17": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m27": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m28": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.14
            },
            "m29": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.16
            },
            "m30": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPInputStream:<init>(com.jcraft.jsch.ChannelSftp,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem$Statistics)": {
            "toUri": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "toString": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractMultipartUploader:checkPath(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.Stat:getExecString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:readOnlyMountTable(java.lang.String,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:readOnlyMountTable(java.lang.String,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPoint:getPathToResolve(java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:checkDependencies(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor:compareTo(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:getNextIdToTry(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.94,
                "total_score": 0.75
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:getPathAsString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:createServiceURL(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:seek(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:skip(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.ByteBufferUtil:fallbackRead(java.io.InputStream,org.apache.hadoop.io.ByteBufferPool,int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.fs.audit.CommonAuditContext:reset()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.audit.CommonAuditContext:createInstance()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.tools.TableListing:toString()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:<init>(org.apache.hadoop.fs.permission.FsAction,org.apache.hadoop.fs.permission.FsAction,org.apache.hadoop.fs.permission.FsAction)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:<init>(short)": {
            "fromShort": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:readFields(java.io.DataInput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:read(java.io.DataInput)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclStatus:getEffectivePermission(org.apache.hadoop.fs.permission.AclEntry)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.PermissionStatus:createImmutable(java.lang.String,java.lang.String,org.apache.hadoop.fs.permission.FsPermission)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclEntry:parseAclSpec(java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsCreateModes:create(org.apache.hadoop.fs.permission.FsPermission,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.AclCommands$GetfaclCommand:printExtendedAclEntry(org.apache.hadoop.fs.permission.AclStatus,org.apache.hadoop.fs.permission.FsPermission,org.apache.hadoop.fs.permission.AclEntry)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclEntry:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:getStrings(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.UmaskParser:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.RawParser:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.ChmodParser:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ArrayBlockFactory:create(long,int,org.apache.hadoop.fs.store.BlockUploadStatistics)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:position()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:hasRemaining()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:reset()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DataBlock:startUpload()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DataBlock:enterClosedState()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlock:write(byte[],int,int)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteBufferBlockFactory$ByteBufferBlock:write(byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlock:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteArrayBlock:write(byte[],int,int)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteBufferBlockFactory$ByteBufferBlock:toString()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getStatistics(java.net.URI)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:createMultipartUploader(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:getCurrentDirectoryIndex()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.crypto.CryptoFSDataOutputStream:getPos()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:sync()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:getLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer$WBlockState:getCurrentPos()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getContentSummary(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.84,
                "total_score": 0.66
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.13,
                "dataflow_score": 0.5,
                "indegree_score": 0.11,
                "total_score": 0.23
            },
            "m5": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.13,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m8": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.38
            },
            "m12": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.17
            },
            "m13": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.13
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:buildACL(java.lang.String[])": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.util.ConfigurationHelper:parseEnumSet(java.lang.String,java.lang.String,java.lang.Class,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m15": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.22
            },
            "m13": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateModel:ensureCurrentState(org.apache.hadoop.service.Service$STATE)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateModel:checkStateTransition(java.lang.String,org.apache.hadoop.service.Service$STATE,org.apache.hadoop.service.Service$STATE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:serviceCreationFailure(java.lang.Exception)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:verifyConfigurationFilesExist(java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag$KerberosDiagsFailure:<init>(java.lang.String,java.lang.String,java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:convertToExitException(java.lang.Throwable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceShutdownHook:<init>(org.apache.hadoop.service.Service)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.InterruptEscalator:toString()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:noteFailure(java.lang.Exception)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:recordLifecycleEvent()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.CompositeService:serviceInit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.service.CompositeService:stop(int,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceOperations:stopQuietly(org.apache.hadoop.service.Service)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:progressable(org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:blockSize(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:syncInterval(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:replication(short)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:bufferSize(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable$NullInstance:write(java.io.DataOutput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable:write(java.io.DataOutput)": {
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m12": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m11": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:valueClass(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:keyClass(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:keyClass(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:compareTo(org.apache.hadoop.io.UTF8)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:compareTo(org.apache.hadoop.io.MD5Hash)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BinaryComparable:compareTo(org.apache.hadoop.io.BinaryComparable)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BinaryComparable:compareTo(byte[],int,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.CompareUtils$MemcmpRawComparator:compare(byte[],int,int,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BinaryComparable:hashCode()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:readDouble(byte[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:setSize(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.MergeSort:<init>(java.util.Comparator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:canRead(java.io.File)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:canWrite(java.io.File)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:canExecute(java.io.File)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:assertCodeLoaded()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ReadaheadPool:getInstance()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX$CacheManipulator:verifyCanMlock()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.SharedFileDescriptorFactory:getLoadingFailureReason()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO:getMemlockLimit()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:calculateChunkedSums(byte[],int,int,byte[],int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO:getCreateForWriteFileOutputStream(java.io.File,int)": {
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.ReadaheadPool$ReadaheadRequestImpl:run()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:cleanBufferPool()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:freeBuffers()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:getFstat(java.io.FileDescriptor)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:getStat(java.lang.String)": {
            "m5": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.BoundedByteArrayOutputStream:<init>(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.EnumSetWritable:<init>(java.util.EnumSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.OutputBuffer:write(java.io.InputStream,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.random.OsSecureRandom:nextBytes(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.random.OsSecureRandom:next(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DefaultStringifier:fromString(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:getKeyStream()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:decodeWritable(org.apache.hadoop.io.Writable,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$CompressedBytes:writeUncompressedBytes(java.io.DataOutputStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:compare(byte[],int,int,byte[],int,int)": {
            "m1": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.RSErasureCodec:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.HHXORErasureCodec:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.DummyErasureCodec:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.XORErasureCodec:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.23
            },
            "getSchema": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNumParityUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:createRawCoderFactory(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.grouper.BlockGrouper:anyRecoverable(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureDecoder:getNumErasedBlocks(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureDecoder:getErasedIndexes(org.apache.hadoop.io.erasurecode.ECBlock[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState:checkInputBuffers(java.nio.ByteBuffer[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayDecodingState:checkInputBuffers(byte[][])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecodingStep:<init>(org.apache.hadoop.io.erasurecode.ECBlock[],int[],org.apache.hadoop.io.erasurecode.ECBlock[],org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder,org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            },
            "getNumParityUnits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.43
            },
            "getNumDataUnits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "initPiggyBackIndexWithoutPBVec": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            },
            "initPiggyBackFullIndexVec": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.DecodingState:checkParameters(java.lang.Object[],int[],java.lang.Object[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncodingStep:<init>(org.apache.hadoop.io.erasurecode.ECBlock[],org.apache.hadoop.io.erasurecode.ECBlock[],org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder,org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getNumDataUnits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            },
            "getNumParityUnits": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "initPiggyBackIndexWithoutPBVec": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.EncodingState:checkParameters(java.lang.Object[],java.lang.Object[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.XORRawErasureCoderFactory:createDecoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.DummyErasureDecoder:prepareDecodingStep(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.DummyRawErasureCoderFactory:createDecoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeXORRawDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getNumDataUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNumParityUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeRSRawDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getNumDataUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNumParityUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.util.HHUtil:getPiggyBackForDecode(java.nio.ByteBuffer[][],java.nio.ByteBuffer[][],int,int,int,int)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m7": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:add(int[],int[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:multiply(int[],int[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:gaussianElimination(int[][])": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.62
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.RSUtil:getPrimitivePower(int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.DumpUtil:dumpChunks(java.lang.String,org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeXORRawEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getNumDataUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNumParityUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeRSRawEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getNumDataUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNumParityUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.XORRawErasureCoderFactory:createEncoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.DummyErasureEncoder:prepareEncodingStep(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.DummyRawErasureCoderFactory:createEncoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.CoderUtil:resetOutputBuffers(java.nio.ByteBuffer[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.CoderUtil:toBuffers(org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.CoderUtil:resetOutputBuffers(byte[][],int[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.AbstractNativeRawEncoder:doEncode(org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayEncodingState)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.AbstractNativeRawDecoder:doDecode(org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayDecodingState)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getFieldSize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.27
            },
            "genCauchyMatrix": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "dumpMatrix": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getFieldSize": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.23
            },
            "genCauchyMatrix": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "dumpMatrix": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "initTables": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "bytesToHex": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawDecoder:generateDecodeMatrix(int[])": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField:getInstance()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:bsR(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:bsGetBit()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:init()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:endCompression()": {
            "m1": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:sendMTFValues()": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:mainSort()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressorStream:<init>(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockCompressorStream:<init>(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressorStream:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:<init>(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.PassthroughCodec$PassthroughDecompressorStream:<init>(java.io.InputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockDecompressorStream:<init>(java.io.InputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:decompress(byte[],int,int)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockCompressorStream:finish()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor:<init>(int)": {
            "reset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor:finalize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor$ZStandardDirectDecompressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:<init>(int,int,int)": {
            "reset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockDecompressorStream:decompress(byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.lz4.Lz4Compressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodecFactory:getCodecClassByName(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:getCompressor(org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m11": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:getDecompressor(org.apache.hadoop.io.compress.CompressionCodec)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m10": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:returnCompressor(org.apache.hadoop.io.compress.Compressor)": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:returnDecompressor(org.apache.hadoop.io.compress.Decompressor)": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:getCompressorType()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:getDecompressorType()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:getCompressorType()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:getDecompressorType()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipCompressor:<init>(org.apache.hadoop.conf.Configuration)": {
            "newCrc32": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipCompressor:reinit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec$GzipZlibCompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec$GzipZlibCompressor:<init>(org.apache.hadoop.conf.Configuration)": {
            "getCompressionLevel": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getCompressionStrategy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:<init>(org.apache.hadoop.conf.Configuration)": {
            "getCompressionLevel": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getCompressionStrategy": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibCompressor:reinit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.41
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.36
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor$ZlibDirectDecompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor$ZlibDirectDecompressor:<init>(org.apache.hadoop.io.compress.zlib.ZlibDecompressor$CompressionHeader,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec$GzipZlibDecompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibDecompressor$ZlibDirectDecompressor:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor:executeHeaderState()": {
            "m2": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:readCompressedStringArray(java.io.DataInput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.VIntWritable:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:write(java.io.DataOutput,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.DelegationKey:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenInformation:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:readVInt(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:readVIntInRange(java.io.DataInput,int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.VLongWritable:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:<init>(java.lang.String)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:find(java.lang.String,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:writeString(java.io.DataOutput,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:writeString(java.io.DataOutput,java.lang.String,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:set(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:set(org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:readDefaultLine(org.apache.hadoop.io.Text,int,int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:readCustomLine(org.apache.hadoop.io.Text,int,int)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SortedMapWritable:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapWritable:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SortedMapWritable:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapWritable:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:getDeserializer(org.apache.hadoop.io.serializer.SerializationFactory,java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.Key:<init>(byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:compression(org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:compression(org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.DeserializerComparator:<init>(org.apache.hadoop.io.serializer.Deserializer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.DeserializerComparator:compare(byte[],int,int,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32FileChecksum:readFields(java.io.DataInput)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:digest(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:digest(org.apache.hadoop.io.UTF8)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:<init>(java.lang.String)": {
            "setDigest": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:stream(org.apache.hadoop.fs.FSDataOutputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:appendIfExists(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:file(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$MultipleLinearRandomRetry:shouldRetry(java.lang.Exception,int,int,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:retryForeverWithFixedSleep(long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:retryUpToMaximumCountWithFixedSleep(int,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RetryUpToMaximumTimeWithFixedSleep:<init>(long,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:exponentialBackoffRetry(int,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:retryUpToMaximumCountWithProportionalSleep(int,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:failoverOnNetworkException(org.apache.hadoop.io.retry.RetryPolicy,int,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler:newAsyncCall(java.lang.reflect.Method,java.lang.Object[],boolean,int,org.apache.hadoop.io.retry.RetryInvocationHandler)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler$RetryInfo:newRetryInfo(org.apache.hadoop.io.retry.RetryPolicy,java.lang.Exception,org.apache.hadoop.io.retry.RetryInvocationHandler$Counters,boolean,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor:tryStop(org.apache.hadoop.util.Daemon)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups$TimerToTickerAdapter:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedWriteLock:unlock()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedWriteLock:startLockTiming()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:<init>(java.lang.String,org.slf4j.Logger,java.util.concurrent.locks.Lock,long,long,org.apache.hadoop.util.Timer)": {
            "monotonicNow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:startLockTiming()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedReadLock:unlock()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedReadLock:startLockTiming()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:<init>(org.apache.hadoop.io.retry.FailoverProxyProvider,org.apache.hadoop.io.retry.RetryPolicy)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryProxy:create(java.lang.Class,org.apache.hadoop.io.retry.FailoverProxyProvider,java.util.Map,org.apache.hadoop.io.retry.RetryPolicy)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor:failover(long,java.lang.reflect.Method,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:log(java.lang.reflect.Method,boolean,int,int,long,java.lang.Exception)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.44,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.LossyRetryInvocationHandler:invokeMethod(java.lang.reflect.Method,java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryUtils$WrapperRetryPolicy:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryUtils$WrapperRetryPolicy:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$RetryLimited:shouldRetry(java.lang.Exception,int,int,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyOutputStream:mayThrow(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.2
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.io.MultipleIOException$Builder:build()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$DataIndex:<init>(java.lang.String)": {
            "getCompressionAlgorithmByName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile:getSupportedCompressionAlgorithms()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$BlockReader:getCompressionName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer$MetaBlockRegister:register(long,long,long)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Utils:readString(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndexEntry:<init>(java.io.DataInput)": {
            "readVInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "readVLong": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:readLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileMeta:<init>(java.lang.String)": {
            "makeComparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile:makeComparator(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder:writeChunk(byte[],int,int,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder:writeBufData(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndexEntry:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$SingleChunkEncoder:<init>(java.io.DataOutputStream,int)": {
            "writeVInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getEntryComparator()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:compareKeys(byte[],int,int,byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:compareKeys(org.apache.hadoop.io.file.tfile.RawComparable,org.apache.hadoop.io.file.tfile.RawComparable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:setFirstKey(byte[],int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:getLastKey()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:atEnd()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getLocationNear(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Location:clone()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:getLocationByRecordNum(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Location:<init>(org.apache.hadoop.io.file.tfile.TFile$Reader$Location)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:getValue(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:set(java.lang.String)": {
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.45
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:toByteArray(org.apache.hadoop.io.Writable[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:getBytes(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$BlockCompressWriter:writeBuffer(org.apache.hadoop.io.DataOutputBuffer)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m4": {
                "count_score": 0.43,
                "dataflow_score": 1.0,
                "indegree_score": 0.88,
                "total_score": 0.78
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile:byteArrayForBloomKey(org.apache.hadoop.io.DataOutputBuffer)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue:lessThan(java.lang.Object,java.lang.Object)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.47
            }
        }
    },
    {
        "org.apache.hadoop.io.AbstractMapWritable:copy(org.apache.hadoop.io.Writable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.98,
                "total_score": 0.62
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.65,
                "total_score": 0.64
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$RecordCompressWriter:append(java.lang.Object,java.lang.Object)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.45
            },
            "m11": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.io.DefaultStringifier:toString(java.lang.Object)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:checkKey(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.54
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.96,
                "total_score": 0.58
            }
        }
    },
    {
        "org.apache.hadoop.security.token.TokenIdentifier:getBytes()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.54
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:encodeWritable(org.apache.hadoop.io.Writable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.54
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils$CopyInCopyOutBuffer:moveData()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.47
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.net.DNSDomainNameResolver:getAllResolvedHostnameByDomainName(java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getDistanceByPath(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getNodeForNetworkLocation(org.apache.hadoop.net.Node)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getLeaves(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:countNumOfAvailableNodes(java.lang.String,java.util.Collection)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.39
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m8": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.68,
                "total_score": 0.69
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:interRemoveNodeWithEmptyRack(org.apache.hadoop.net.Node)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:sortByDistance(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node[],int,java.util.function.Consumer,boolean)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.16
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:recommissionNode(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputStream$Reader:<init>(java.nio.channels.ReadableByteChannel,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketOutputStream$Writer:<init>(java.nio.channels.WritableByteChannel,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketOutputStream:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketOutputStream:transferToFully(java.nio.channels.FileChannel,long,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.CachedDNSToSwitchMapping:resolve(java.util.List)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:wrapException(java.lang.String,int,java.lang.String,int,java.io.IOException)": {
            "m5": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.48,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMappingWithDependency$RawScriptBasedMappingWithDependency:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.TableMapping:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping:<init>(org.apache.hadoop.net.DNSToSwitchMapping)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode:<init>(java.lang.String,java.lang.String,org.apache.hadoop.fs.viewfs.ChRootedFileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:<init>(java.lang.String,java.lang.String,org.apache.hadoop.net.InnerNode,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher:kick()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher$NotificationHandler:handle(org.apache.hadoop.net.unix.DomainSocket)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:bindAndListen(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:socketpair()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:connect(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher:sendCallbackAndRemove(java.lang.String,java.util.TreeMap,org.apache.hadoop.net.unix.DomainSocketWatcher$FdSet,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainChannel:isOpen()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainChannel:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainOutputStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher:close()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket$DomainInputStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketIOWithTimeout$SelectorPool:get(java.nio.channels.SelectableChannel)": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketIOWithTimeout$SelectorPool:release(org.apache.hadoop.net.SocketIOWithTimeout$SelectorPool$SelectorInfo)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:getLeaf(int,org.apache.hadoop.net.Node)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:remove(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getIPs(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getHosts(java.lang.String,java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.jmx.JMXJsonServlet:listBeans(com.fasterxml.jackson.core.JsonGenerator,javax.management.ObjectName,java.lang.String,javax.servlet.http.HttpServletResponse)": {
            "m19": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:parseArguments(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:printUsage(java.io.PrintStream,java.util.Map)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.log.LogThrottlingHelper:<init>(long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.log.LogThrottlingHelper:record(double[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.ProfileServlet:getEvent(javax.servlet.http.HttpServletRequest)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HtmlQuoting:main(java.lang.String[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$QuotingInputFilter$RequestQuoter:getParameter(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$QuotingInputFilter$RequestQuoter:getParameterValues(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$QuotingInputFilter$RequestQuoter:getParameterMap()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$QuotingInputFilter$RequestQuoter:getRequestURL()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$QuotingInputFilter$RequestQuoter:getServerName()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addAsyncProfilerServlet(org.eclipse.jetty.server.handler.ContextHandlerCollection,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m13": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addNoCacheFilter(org.eclipse.jetty.servlet.ServletContextHandler)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$Builder:makeConfigurationChangeMonitor(long,org.eclipse.jetty.util.ssl.SslContextFactory$Server)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.FileMonitoringTimerTask:<init>(java.nio.file.Path,java.util.function.Consumer,java.util.function.Consumer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:close()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newRatesWithAggregation(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:add(java.lang.String,org.apache.hadoop.metrics2.lib.MutableMetric)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsFactory:getAnnotatedMetricsFactory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:flush()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:currentConfig()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:getPluginLoader()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:toString(org.apache.commons.configuration2.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter:consume(org.apache.hadoop.metrics2.impl.MetricsBuffer)": {
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.21,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m13": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:tag(org.apache.hadoop.metrics2.MetricsInfo,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:add(org.apache.hadoop.metrics2.AbstractMetric)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.22
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:addCounter(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:addCounter(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:addGauge(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:addGauge(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:addGauge(org.apache.hadoop.metrics2.MetricsInfo,float)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.MetricStringBuilder:addGauge(org.apache.hadoop.metrics2.MetricsInfo,double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.MetricsCache:update(org.apache.hadoop.metrics2.MetricsRecord)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.GraphiteSink:flush()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.GraphiteSink$Graphite:write(java.lang.String)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.GraphiteSink:init(org.apache.commons.configuration2.SubsetConfiguration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.PrometheusMetricsSink:writeMetrics(java.io.Writer)": {
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m12": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.43
            },
            "m14": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.SinkQueue:consume(org.apache.hadoop.metrics2.impl.SinkQueue$Consumer)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.SinkQueue:consumeAll(org.apache.hadoop.metrics2.impl.SinkQueue$Consumer)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RetryCacheMetrics:incrCacheHit()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RetryCacheMetrics:incrCacheCleared()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RetryCacheMetrics:incrCacheUpdated()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrAuthenticationFailures()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrAuthenticationSuccesses()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrAuthorizationSuccesses()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrAuthorizationFailures()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrClientBackoff()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrClientBackoffDisconnected()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrSlowRpc()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrRequeueCalls()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:incrRpcCallSuccesses()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:channelWrite(java.nio.channels.WritableByteChannel,java.nio.ByteBuffer)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:channelRead(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:getRecord()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:newAttrInfo(org.apache.hadoop.metrics2.MetricsInfo,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:get()": {
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.17
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.47
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:updateAttrCache(java.lang.Iterable)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.14
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:newObjectName(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:newSourceName(java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter:putMetrics(org.apache.hadoop.metrics2.impl.MetricsBuffer,long)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter:putMetricsImmediate(org.apache.hadoop.metrics2.impl.MetricsBuffer)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.33
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.util.ReadWriteDiskValidatorMetrics:diskCheckFailed()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups$GroupCacheLoader:fetchGroupSet(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics$Singleton:shutdown()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:registerIfNeeded()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$UgiMetrics:create()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.DecayRpcSchedulerDetailedMetrics:shutdown()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcDetailedMetrics:shutdown()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:shutdown()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:registerMetrics2Source(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.MBeans:unregister(javax.management.ObjectName)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2Metrics:remove()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRates:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableQuantiles:setQuantiles(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.DecimalFormat)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableInverseQuantiles:setQuantiles(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.DecimalFormat)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:<init>(java.lang.String)": {
            "info": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.45
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.Interns:tag(java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableMetricsFactory:getInfo(java.lang.Class,org.apache.hadoop.metrics2.annotation.Metrics)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableMetricsFactory:getInfo(org.apache.hadoop.metrics2.annotation.Metric,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableStat:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "info": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MethodMetric:metricInfo(java.lang.reflect.Method)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:getGcInfo(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addUniqueIdentityCount(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addDecayedCallVolume(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addRawCallVolume(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addServiceUserDecayedCallVolume(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addServiceUserRawCallVolume(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addCallVolumePerPriority(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addAvgResponseTimePerPriority(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:configureSystem()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:tag(org.apache.hadoop.metrics2.MetricsInfo,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:tag(org.apache.hadoop.metrics2.MetricsInfo,java.lang.String,boolean)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeFloat:incr()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableGaugeFloat:decr()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation$ThreadSafeSampleStat:add(double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableStat:add(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat:reset(long,double,double,org.apache.hadoop.metrics2.util.SampleStat$MinMax)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation$ThreadSafeSampleStat:snapshotInto(org.apache.hadoop.metrics2.lib.MutableRate)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MethodMetric:newImpl(org.apache.hadoop.metrics2.annotation.Metric$Type)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat:toString()": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getProcessingStdDev()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getDeferredRpcProcessingStdDev()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleQuantiles:insert(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleQuantiles:snapshot()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:getTopTokenRealOwners(int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:getTopCallers(int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMapping:cacheGroupsAdd(java.util.List)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getTokens()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.User:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:getGroups(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:getGroupsSet(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMapping:getGroups(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:println()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:printSysprop(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:printEnv(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:dump(java.io.File)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:error(java.lang.String,java.lang.String,java.lang.Object[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:warn(java.lang.String,java.lang.String,java.lang.Object[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:loadFullUserMap()": {
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:loadFullGroupMap()": {
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:setAuthenticationMethod(org.apache.hadoop.security.SaslRpcServer$AuthMethod)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslOutputStream:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslOutputStream:write(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping$LdapSslSocketFactory:createKeyManagers()": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping$LdapSslSocketFactory:createTrustManagers()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.http.RestCsrfPreventionFilter:doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.http.CrossOriginFilter:doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.http.CrossOriginFilter:init(javax.servlet.FilterConfig)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.DelegationKey:getKey()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:checkToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.11
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.11
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.44
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenInformation:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:logExpireTokens(java.util.Collection)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:setExternalDelegationTokenSecretManager(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:destroy()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:updateCurrentKey()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.DelegationKey:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:<init>(org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator,org.apache.hadoop.security.authentication.client.ConnectionConfigurator)": {
            "obtainDelegationTokenAuthenticator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction:renew()": {
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction:cancel()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient$WrappedInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient$WrappedInputStream:read(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$IpcStreams:setSaslClient(org.apache.hadoop.security.SaslRpcClient)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:noPasswordWarning()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:noPasswordWarning()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:noPasswordError()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:noPasswordError()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslInputStream:read()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslInputStream:read(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ImpersonationProvider:authorize(org.apache.hadoop.security.UserGroupInformation,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getKeytab()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.25
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isHadoopLogin()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:createProxyUser(java.lang.String,org.apache.hadoop.security.UserGroupInformation)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$RealUser:getName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:shouldBackOff(org.apache.hadoop.ipc.Schedulable)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getRealUserOrSelf(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:toString()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getRealAuthenticationMethod()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getRealAuthenticationMethod(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.ProtoUtil:makeIpcConnectionContext(java.lang.String,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.security.SaslRpcServer$AuthMethod)": {
            "m3": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$ConnectionManager:close(org.apache.hadoop.ipc.Server$Connection)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.27
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.ipc.UserIdentityProvider:makeIdentity(org.apache.hadoop.ipc.Schedulable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier:verify(java.lang.String,javax.net.ssl.SSLSession)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier:check(java.lang.String,java.security.cert.X509Certificate)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier:check(java.lang.String[],javax.net.ssl.SSLSocket)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:loadResource(java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.44,
                "total_score": 0.58
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:<init>(org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory$SSLChannelMode)": {
            "initializeSSLContext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "alterCipherList": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFactory:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable$NullInstance:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable$NullInstance:<init>(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:<init>(org.apache.hadoop.conf.Configuration,java.io.PrintWriter,java.io.File,java.lang.String,long,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.tools.GetGroupsBase:<init>(org.apache.hadoop.conf.Configuration,java.io.PrintStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configured:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil$QualifiedHostResolver:getByNameWithSearch(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$HadoopConfiguration:getAppConfigurationEntry(java.lang.String)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:parseStaticMap(java.io.File)": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:getAclString()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:createCredentialEntry(java.lang.String,char[])": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell$CreateCommand:execute()": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getTGT()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:setSslConfiguration(org.apache.zookeeper.client.ZKClientConfig,org.apache.hadoop.security.SecurityUtil$TruststoreKeystore)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:unprotectedRelogin(org.apache.hadoop.security.UserGroupInformation$HadoopLoginContext,boolean)": {
            "m1": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.17,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.81,
                "total_score": 0.53
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.17,
                "total_score": 0.24
            },
            "m13": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.39
            },
            "m14": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m15": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m16": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.11
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.17,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.security.WhitelistBasedResolver:getServerProperties(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcServer$SaslDigestCallbackHandler:handle(javax.security.auth.callback.Callback[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.54
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m13": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:<init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[],long,boolean)": {
            "checkCodec": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkBufferSize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "updateEncryptor": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceSm4CtrCryptoCodec:createEncryptor()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceSm4CtrCryptoCodec:createDecryptor()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceAesCtrCryptoCodec:createEncryptor()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceAesCtrCryptoCodec:createDecryptor()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCipher:getInstance(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCipher:isSupported(org.apache.hadoop.crypto.CipherSuite)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:getKeyVersions(java.lang.String)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:createKey(java.lang.String,byte[],org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.44
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.16
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.08
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.05
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:rollNewVersion(java.lang.String,byte[])": {
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSEncryptedKeyVersion:<init>(java.lang.String,java.lang.String,byte[],java.lang.String,byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:parseJSONKeyVersion(java.util.Map)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:parseJSONMetadata(java.util.Map)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderExtension:getCurrentKey(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProvider:createKey(java.lang.String,org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProvider:rollNewVersion(java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.CachingKeyProvider:rollNewVersion(java.lang.String,byte[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:toJSON(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.42
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:warmUpEncryptedKeys(java.lang.String[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:close()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:readLock(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:readUnlock(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:writeUnlock(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:writeLock(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallerContext$Builder:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolClientSideTranslatorPB:unpack(org.apache.hadoop.ipc.proto.GenericRefreshProtocolProtos$GenericRefreshResponseCollectionProto)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolServerSideTranslatorPB:refresh(org.apache.hadoop.thirdparty.protobuf.RpcController,org.apache.hadoop.ipc.proto.GenericRefreshProtocolProtos$GenericRefreshRequestProto)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:newEntry(long,byte[],int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache$CacheEntryWithPayload:<init>(byte[],int,java.lang.Object,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache$CacheEntry:<init>(byte[],int,long,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:isServerFailOverEnabledByQueue()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:put(org.apache.hadoop.ipc.Schedulable)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:add(org.apache.hadoop.ipc.Schedulable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:callQueueLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine:initialize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:registerProtocolEngine()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:setExpirationTime(org.apache.hadoop.util.LightWeightCache$Entry,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StopWatch:start()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StopWatch:stop()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StopWatch:now()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:sendResponse()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:abortResponse(java.lang.Throwable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolSignature:getFingerprint(java.lang.reflect.Method[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolSignature:getSigFingerprint(java.lang.Class,long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.3,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.3,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RemoteException:valueOf(org.xml.sax.Attributes)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$IpcStreams:readResponse()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:shouldFailoverOnException(java.lang.Exception)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:getWrappedRetriableException(java.lang.Exception)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceProtocolHelper:monitorHealth(org.apache.hadoop.ha.HAServiceProtocol,org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceProtocolHelper:transitionToActive(org.apache.hadoop.ha.HAServiceProtocol,org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceProtocolHelper:transitionToStandby(org.apache.hadoop.ha.HAServiceProtocol,org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceProtocolHelper:transitionToObserver(org.apache.hadoop.ha.HAServiceProtocol,org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HealthMonitor:isHealthCheckFailedException(java.lang.Throwable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.PartialListing:get()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:<init>(org.apache.hadoop.ipc.Server$Call)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:<init>(int,int,org.apache.hadoop.ipc.RPC$RpcKind,byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:<init>(int,int,java.lang.Void,java.lang.Void,org.apache.hadoop.ipc.RPC$RpcKind,byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcScheduler:addResponseTime(java.lang.String,org.apache.hadoop.ipc.Schedulable,org.apache.hadoop.ipc.ProcessingDetails)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:numDroppedConnections()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$ConnectionManager:register(java.nio.channels.SocketChannel,int,boolean)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:numOpenConnections()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:offerQueues(int,org.apache.hadoop.ipc.Schedulable,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:offer(java.lang.Object,long,java.util.concurrent.TimeUnit)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:offer(java.lang.Object)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$RpcCall:populateResponseParamsOnError(java.lang.Throwable,org.apache.hadoop.ipc.Server$RpcCall$ResponseParams)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.26
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.17
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolMetaInfoServerSideTranslatorPB:getProtocolVersionForRpcKind(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcNoSuchProtocolException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcNoSuchMethodException:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC$VersionMismatch:<init>(java.lang.String,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$FatalRpcServerException:<init>(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto,java.io.IOException)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer$FramedBuffer:<init>(int)": {
            "reset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:writeTo(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:toByteArray()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:recomputeScheduleCache()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:cachedOrComputedPriorityLevel(java.lang.Object)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:setPriorityLevel(org.apache.hadoop.security.UserGroupInformation,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:getCallVolumeSummary()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker:constructRpcRequest(java.lang.reflect.Method,com.google.protobuf.Message)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Invoker:constructRpcRequest(java.lang.reflect.Method,org.apache.hadoop.thirdparty.protobuf.Message)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.protocolPB.RefreshAuthorizationPolicyProtocolClientSideTranslatorPB:refreshServiceAcl()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.protocolPB.RefreshUserMappingsProtocolClientSideTranslatorPB:refreshUserToGroupsMappings()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.protocolPB.RefreshUserMappingsProtocolClientSideTranslatorPB:refreshSuperUserGroupsConfiguration()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.RefreshCallQueueProtocolClientSideTranslatorPB:refreshCallQueue()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tools.protocolPB.GetUserMappingsProtocolClientSideTranslatorPB:getGroupsForUser(java.lang.String)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.ZKFCProtocolClientSideTranslatorPB:cedeActive(int)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.ZKFCProtocolClientSideTranslatorPB:gracefulFailover()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:monitorHealth()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:getServiceStatus()": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.11
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler$Call:invokeMethod()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Invoker:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Invoker:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue$MetricsProxy:getMetrics(org.apache.hadoop.metrics2.MetricsCollector,boolean)": {
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcWritable:wrap(java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache$CacheEntryWithPayload:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WeightedRoundRobinMultiplexer:getAndAdvanceCurrentIndex()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Server:registerForDeferredResponse()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server:registerForDeferredResponse2()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcWritable$ProtobufWrapper:writeTo(org.apache.hadoop.ipc.ResponseBuffer)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcWritable$Buffer:writeTo(org.apache.hadoop.ipc.ResponseBuffer)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufWrapperLegacy:writeTo(org.apache.hadoop.ipc.ResponseBuffer)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:cleanupCalls()": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getRemoteAddress()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:numOpenConnectionsPerUser()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Responder:doAsyncWrite(java.nio.channels.SelectionKey)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Responder:doRespond(org.apache.hadoop.ipc.Server$RpcCall)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsTracer:get(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.MachineList:<init>(java.lang.String,org.apache.hadoop.util.MachineList$InetAddressFactory)": {
            "getTrimmedStringCollection": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.MachineList:<init>(java.util.Collection)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.FileBasedIPList:isIn(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:readProcMemInfoFile()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getAvailablePhysicalMemorySize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getCumulativeCpuTime()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getCpuUsagePercentage()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getNumVCoresUsed()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getStorageBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getStorageBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IdentityHashStore:<init>(int)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "realloc": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.IdentityHashStore:put(java.lang.Object,java.lang.Object)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:releaseBuffer(java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet$SetIterator:hasNext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet$SetIterator:next()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet:put(java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet:remove(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SortPass:sort(int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.XMLUtils:newSecureTransformerFactory()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.XMLUtils:newSecureSAXTransformerFactory()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:formatSize(long,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:formatSize(long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage:formatSize(long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage:formatSize(long,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:humanReadableInt(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:byteDesc(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet:computeCapacity(long,double,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Df:addToUsagesTable(java.net.URI,org.apache.hadoop.fs.FsStatus,java.lang.String)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:readChecksumChunk(byte[],int,int)": {
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:readChars(java.io.DataInput,java.lang.StringBuilder,int)": {
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.41
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m6": {
                "count_score": 0.44,
                "dataflow_score": 1.0,
                "indegree_score": 0.45,
                "total_score": 0.61
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:byteToHexString(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HeapSort:sort(org.apache.hadoop.util.IndexedSortable,int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:exit(org.apache.hadoop.util.ExitUtil$ExitException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:exitWithMessage(int,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.util.ExitUtil:terminate(int,java.lang.Throwable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ExitUtil:terminate(int,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ExitUtil:halt(int,java.lang.Throwable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ExitUtil:halt(int,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceShutdownHook:unregister()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.QuickSort:sort(org.apache.hadoop.util.IndexedSortable,int,int,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:newArrayList(java.lang.Iterable)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:newLinkedList(java.lang.Iterable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclUtil:getAclFromPermAndEntries(org.apache.hadoop.fs.permission.FsPermission,java.util.List)": {
            "m2": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.56,
                "total_score": 0.34
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m11": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.26
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.util.ChunkedArrayList:addChunk(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:newArrayList(java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Lists:newArrayListWithExpectedSize(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ApplicationClassLoader:loadClass(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:save(java.io.File,java.lang.Object)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StatisticDurationTracker:<init>(org.apache.hadoop.fs.statistics.impl.IOStatisticsStore,java.lang.String,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.DurationInfo:<init>(org.slf4j.Logger,boolean,java.lang.String,java.lang.Object[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getFormattedText": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.OperationDuration:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcComposer:newStripedCrcComposer(org.apache.hadoop.util.DataChecksum$Type,long,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcUtil:compose(int,int,long,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.CompositeCrcFileChecksum:getBytes()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcComposer:digest()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.RunJar:unJarAndSave(java.io.InputStream,java.io.File,java.lang.String,java.util.regex.Pattern)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.RunJar:unJar(java.io.File,java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.UTF8ByteArrayUtils:findNthByte(byte[],byte,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.WeakReferenceMap:get(java.lang.Object)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:check(long,long,boolean)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:getFormattedTimeWithDiff(java.lang.String,long,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:split(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:camelize(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:escapeString(java.lang.String,char,char)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:unEscapeString(java.lang.String,char,char)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:createStartupShutdownMessage(java.lang.String,java.lang.String,java.lang.String[])": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:getBuildVersion()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$FilteringRemoteIterator:next()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$CloseRemoteIterator:close()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$WrappingRemoteIterator:sourceHasNext()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.LazyAutoCloseableReference:lazyAutoCloseablefromSupplier(java.util.function.Supplier)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedIO:bulkDelete_pageSize(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedIO:bulkDelete_delete(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.util.Collection)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedIO:fileSystem_openFile(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String,org.apache.hadoop.fs.FileStatus,java.lang.Long,java.util.Map)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedIO:byteBufferPositionedReadable_readFully(java.io.InputStream,long,java.nio.ByteBuffer)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsSnapshot_load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsSnapshot_fromJsonString(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.LazyAtomicReference:get()": {
            "eval": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool:foreach(java.lang.Iterable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool:foreach(java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureIOSupport:raiseInnerCause(java.util.concurrent.ExecutionException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:awaitFuture(java.util.concurrent.Future)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:awaitFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureIOSupport:raiseInnerCause(java.util.concurrent.CompletionException)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:setConf(java.lang.Object,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableName:getClass(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:createCodec(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable:loadClass(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getProtocolClass(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:getClass(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:logThreadInfo(org.apache.commons.logging.Log,java.lang.String,long)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:logThreadInfo(org.slf4j.Logger,java.lang.String,long)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:<init>(java.util.Optional,java.util.Optional)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.56
            },
            "checkArgument": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.HttpExceptionUtils:validateResponse(java.net.HttpURLConnection,int)": {
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.24
            },
            "m14": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m17": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:newCrc32C()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.IntrusiveCollection:removeAll(java.util.Collection)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.IntrusiveCollection:toArray(java.lang.Object[])": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:getGroupsForUserCommand(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:getGroupsIDForUserCommand(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getSetPermissionCommand(java.lang.String,boolean,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getCheckProcessIsAliveCommand(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getHadoopHome()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getQualifiedBin(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.HardLink$HardLinkCGWin:linkCount(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellTimeoutTimerTask:<init>(org.apache.hadoop.util.Shell)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:addPhase()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:addPhases(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:addPhase(java.lang.String,float)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:get()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:getProgress()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:create(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:createRootDirRecursively(java.lang.String,java.util.List)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:ctorImpl(java.lang.String,java.lang.Class[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynConstructors$Ctor:newInstance(java.lang.Object[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynConstructors$Ctor:invokeChecked(java.lang.Object,java.lang.Object[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$StaticMethod:invokeChecked(java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod:invoke(java.lang.Object,java.lang.Object[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$BoundMethod:invokeChecked(java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:impl(java.lang.String,java.lang.String,java.lang.Class[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:impl(java.lang.Class,java.lang.Class[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:hiddenImpl(java.lang.String,java.lang.String,java.lang.Class[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:hiddenImpl(java.lang.Class,java.lang.Class[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.BindingUtils:loadInvocation(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.38
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:requireAllMethodsAvailable()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:bulkDelete_available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:fileSystem_openFile_available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:byteBufferPositionedReadable_available()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:byteBufferPositionedReadable_readFullyAvailable(java.io.InputStream)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:ioStatisticsAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:ioStatisticsContextAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.BindingUtils:checkAvailable(org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:buildChecked(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:build(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:buildStaticChecked()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:buildStatic()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:loadFileSystems()": {
            "m9": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionInfo:main(java.lang.String[])": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m11": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.util.ProtoUtil:makeRpcRequestHeader(org.apache.hadoop.ipc.RPC$RpcKind,org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto$OperationProto,int,int,byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ComparableVersion:parseVersion(java.lang.String)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.09
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:<init>(int,int,long,long,org.apache.hadoop.util.Timer)": {
            "updateRecommendedLength": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:get(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet:contains(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.BlockingThreadPoolExecutorService:toString()": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:readFileToMapWithFileInputStream(java.lang.String,java.lang.String,java.io.InputStream,java.util.Map)": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.hash.JenkinsHash:main(java.lang.String[])": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.HashFunction:<init>(int,int,int)": {
            "getInstance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:add(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:membershipTest(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:approximateCount(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.BloomFilter:add(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.BloomFilter:membershipTest(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:add(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:addFalsePositive(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:removeKey(org.apache.hadoop.util.bloom.Key,java.util.List[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.Key:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:minimumFnRemove(int[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:maximumFpRemove(int[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:computeRatio()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:dumpResource(java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.76,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:usage(java.lang.String[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.GcTimeMonitor:run()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue:put(org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor)": {
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.util.PriorityQueue:insert(java.lang.Object)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.Sets:newTreeSet(java.lang.Iterable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.Sets:newHashSet(java.lang.Iterable)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.Sets:newHashSet(java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ProgramDriver:run(java.lang.String[])": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.tools.TableListing$Builder:addField(java.lang.String,org.apache.hadoop.tools.TableListing$Justification,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:logDeprecationOnce(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTimeDurationHelper(java.lang.String,java.lang.String,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getStreamReader(org.apache.hadoop.conf.Configuration$Resource,boolean)": {
            "m1": {
                "count_score": 0.13,
                "dataflow_score": 0.17,
                "indegree_score": 0.29,
                "total_score": 0.21
            },
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.67,
                "indegree_score": 0.19,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.27,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m11": {
                "count_score": 0.07,
                "dataflow_score": 0.17,
                "indegree_score": 0.91,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Parser:handleStartElement()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:appendXMLProperty(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.String,org.apache.hadoop.conf.ConfigRedactor)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addDeprecations(org.apache.hadoop.conf.Configuration$DeprecationDelta[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Parser:handleEndElement()": {
            "m4": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:bindForPortRange(org.eclipse.jetty.server.ServerConnector,int)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:fatalError(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:transitionToActive(org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:transitionToStandby(org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:transitionToObserver(org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolServerSideTranslatorPB:transitionToActive(org.apache.hadoop.thirdparty.protobuf.RpcController,org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToActiveRequestProto)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolServerSideTranslatorPB:transitionToStandby(org.apache.hadoop.thirdparty.protobuf.RpcController,org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToStandbyRequestProto)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolServerSideTranslatorPB:transitionToObserver(org.apache.hadoop.thirdparty.protobuf.RpcController,org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToObserverRequestProto)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort$Args:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "parseConfiggedPort": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:printUsage(java.io.PrintStream,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:parseOpts(java.lang.String,org.apache.commons.cli.Options,java.lang.String[],java.util.Map)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort:doFence(com.jcraft.jsch.Session,java.net.InetSocketAddress)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ShellCommandFencer:addTargetInfoAsEnvVars(org.apache.hadoop.ha.HAServiceTarget,java.util.Map)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:setAclsWithRetries(java.lang.String)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:zkDoWithRetries(org.apache.hadoop.ha.ActiveStandbyElector$ZKAction)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:readNonByteBufferPositionedReadable(org.apache.hadoop.fs.PositionedReadable,org.apache.hadoop.fs.FileRange,java.nio.ByteBuffer)": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:validateVectoredReadRanges(java.util.List)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferData:setCaching(java.util.concurrent.Future)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferData:updateState(org.apache.hadoop.fs.impl.prefetch.BufferData$State,org.apache.hadoop.fs.impl.prefetch.BufferData$State[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkPathExistsAsDir(java.nio.file.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.Validate:checkPathExistsAsFile(java.nio.file.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:isLastBlock(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:getStartOffset(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:getState(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:setState(int,org.apache.hadoop.fs.impl.prefetch.BlockData$State)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:getBlockNumber(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsSnapshot_aggregate(java.io.Serializable,java.lang.Object)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsSnapshot_save(java.io.Serializable,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatistics_counters(java.io.Serializable)": {
            "counters": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatistics_gauges(java.io.Serializable)": {
            "gauges": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatistics_minimums(java.io.Serializable)": {
            "minimums": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatistics_maximums(java.io.Serializable)": {
            "maximums": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatistics_means(java.io.Serializable)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FlagSet:copy()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FlagSet:createFlagSet(java.lang.Class,java.lang.String,java.util.EnumSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InnerCache:closeAll()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache:closeAll(boolean)": {
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m9": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache:closeAll(org.apache.hadoop.security.UserGroupInformation)": {
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsLocatedFileStatus:compareTo(org.apache.hadoop.fs.FileStatus)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputStream:readFully(long,byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.BufferedFSInputStream:read(long,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsSnapshot_toJsonString(java.io.Serializable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toJson": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.21
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:write(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,byte[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.34
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:write(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,java.lang.Iterable,java.nio.charset.Charset)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.34
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:write(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,java.lang.CharSequence,java.nio.charset.Charset)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.34
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:createFile(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:appendFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:appendFile(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:<init>(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],long,long,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FtpConfigKeys:getServerDefaults()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.local.LocalConfigKeys:getServerDefaults()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BoundedRangeFileInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$DirListingIterator:next()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.XAttrCommands$GetfattrCommand:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.79,
                "total_score": 0.69
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:listStatus(org.apache.hadoop.fs.Path[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newCounter(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newCounter(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newGauge(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newGauge(org.apache.hadoop.metrics2.MetricsInfo,float)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newGauge(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:addCounter(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:addGauge(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:addCounter(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:addGauge(org.apache.hadoop.metrics2.MetricsInfo,float)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:addGauge(org.apache.hadoop.metrics2.MetricsInfo,double)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:addGauge(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:getFS()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FsLinkResolution:resolve(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.impl.FsLinkResolution$FsLinkResolutionFunction)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:createGlobber(org.apache.hadoop.fs.FileContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:createGlobber(org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall:isDone()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.23
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler:getAsyncReturn()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$DeprecationDelta:<init>(java.lang.String,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$DeprecationDelta:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:writeCompressedString(java.io.DataOutput,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:concat(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall:invoke()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.08
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.54,
                "total_score": 0.58
            },
            "m9": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "m11": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m14": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsLocatedFileStatus:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsLocatedFileStatus:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DUHelper:main(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.WindowsGetSpaceUsed:refresh()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:<init>(org.apache.hadoop.fs.statistics.MeanStatistic)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:setMeanStatistic(java.lang.String,org.apache.hadoop.fs.statistics.MeanStatistic)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging:ioStatisticsSourceToString(java.lang.Object)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.WrappedIOStatistics:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging$StatisticsToString:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging:ioStatisticsToPrettyString(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "isEmpty": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:createTracker(org.apache.hadoop.fs.statistics.DurationTrackerFactory,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:deleteBlockFileAndEvictCache(org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache$Entry)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SemaphoredDelegatingExecutor:submit(java.util.concurrent.Callable)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SemaphoredDelegatingExecutor:submit(java.lang.Runnable,java.lang.Object)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SemaphoredDelegatingExecutor:submit(java.lang.Runnable)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SemaphoredDelegatingExecutor:execute(java.lang.Runnable)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StorageStatisticsFromIOStatistics:iterator()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:addTimedOperation(java.lang.String,java.time.Duration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:fromStorageStatistics(org.apache.hadoop.fs.StorageStatistics)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withAtomicLongCounter(java.lang.String,java.util.concurrent.atomic.AtomicLong)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withAtomicIntegerCounter(java.lang.String,java.util.concurrent.atomic.AtomicInteger)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withMutableCounter(java.lang.String,org.apache.hadoop.metrics2.lib.MutableCounterLong)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withAtomicLongGauge(java.lang.String,java.util.concurrent.atomic.AtomicLong)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withAtomicIntegerGauge(java.lang.String,java.util.concurrent.atomic.AtomicInteger)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withAtomicLongMinimum(java.lang.String,java.util.concurrent.atomic.AtomicLong)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withAtomicIntegerMinimum(java.lang.String,java.util.concurrent.atomic.AtomicInteger)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withAtomicLongMaximum(java.lang.String,java.util.concurrent.atomic.AtomicLong)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatisticsBuilder:withAtomicIntegerMaximum(java.lang.String,java.util.concurrent.atomic.AtomicInteger)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:registerFailureHandling()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:accept()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:setAttribute(int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:getAttribute(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:shutdown()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:sendFileDescriptors(java.io.FileDescriptor[],byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocket:recvFileInputStreams(java.io.FileInputStream[],byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsContextIntegration:createNewInstance(java.lang.Long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:verifyChunkedSums(java.nio.ByteBuffer,java.nio.ByteBuffer,java.lang.String,long)": {
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:afterDecryption(org.apache.hadoop.crypto.Decryptor,java.nio.ByteBuffer,long,byte[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:resetStreamOffset(long)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:write(byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobPattern:compile(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobFilter:init(java.lang.String,org.apache.hadoop.fs.PathFilter)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Name:prepare()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unTarUsingTar(java.io.InputStream,java.io.File,boolean)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:close()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:resetChecksumBufSize()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:getAllStatistics()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystemStorageStatistics:<init>(java.lang.String,org.apache.hadoop.fs.FileSystem$Statistics)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkArgument": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "getData": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystemStorageStatistics:getLongStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystemStorageStatistics:getLong(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Statistics:getBytesReadByDistance(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystemStorageStatistics:reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:clearStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:primitiveCreate(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:<init>(java.net.URI,java.lang.String,boolean,int)": {
            "getUri": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getStatistics": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder:encode(byte[][],byte[][])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder:encode(java.nio.ByteBuffer[],java.nio.ByteBuffer[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable:<init>(java.lang.Object)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getCanonicalUri()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getCanonicalUri()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getFsStatus()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSOutputSummer:hasCapability(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:hasCapability(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:hasCapability(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:addToCacheAndRelease(org.apache.hadoop.fs.impl.prefetch.BufferData,java.util.concurrent.Future,java.time.Instant)": {
            "m5": {
                "count_score": 0.35,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.34
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m11": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.72
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.46,
                "total_score": 0.35
            },
            "m17": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m18": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.36
            },
            "m19": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:release(org.apache.hadoop.fs.impl.prefetch.BufferData)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.62,
                "total_score": 0.59
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.57,
                "total_score": 0.57
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:releaseDoneBlocks()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockOperations:getSummary(boolean)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:<init>(org.apache.hadoop.fs.impl.prefetch.BlockManagerParameters)": {
            "getBlockData": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            },
            "getBufferPoolSize": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "checkPositiveInteger": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "getFuturePool": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getPrefetchingStatistics": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getConf": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getFileSize": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getBlockSize": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getMaxBlocksCount": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getTrackerFactory": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "createCache": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "setDebug": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            },
            "getLocalDirAllocator": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.util.BlockingThreadPoolExecutorService:<init>(int,java.util.concurrent.ThreadPoolExecutor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:get(int,java.nio.ByteBuffer)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:toString()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:absolute()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:bufferFullyRead()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:setAbsolute(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsContext:getCurrentIOStatisticsContext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsContext:setThreadIOStatisticsContext(org.apache.hadoop.fs.statistics.IOStatisticsContext)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:getInstanceConfigs(java.lang.String)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:applyItem(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:processArguments(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Test:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Rm:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.83,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$Checksum:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Df:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.96,
                "total_score": 0.78
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Head:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.83,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.63
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Tail:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.39
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Expunge:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.39
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Rmdir:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Get:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.39
            },
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.44,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.5
            },
            "m8": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Count:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "m2": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m5": {
                "count_score": 0.39,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.52,
                "total_score": 0.53
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m12": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Mkdir:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touch:processOptions(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Put:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.39
            },
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m6": {
                "count_score": 0.44,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Cp:processOptions(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.28
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.46
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$AppendToFile:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$Cat:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.AclCommands$GetfaclCommand:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.23
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Stat:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touchz:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFormat:parse(java.lang.String[],int)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.MoveCommands$Rename:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Truncate:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SetReplication:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Du:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 1.0,
                "indegree_score": 0.96,
                "total_score": 0.88
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShellPermissions$Chown:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:displayError(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:printInstanceUsage(java.io.PrintStream,org.apache.hadoop.fs.shell.Command)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsCollectorImpl:addRecord(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Df:processArguments(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m2": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Du:processArguments(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:createPathHandle(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Options$HandleOpt[])": {
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.41
            },
            "m2": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            },
            "m11": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.3
            },
            "m15": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt:exact()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt:content()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt:path()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt:reference()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellCommandExecutor:<init>(java.lang.String[],java.io.File,java.util.Map,long,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.CachingGetSpaceUsed:initRefreshThread(boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:privateClone(org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getAllStoragePolicies()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler:initAsyncCall(org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall,org.apache.hadoop.io.retry.AsyncCallHandler$AsyncValue)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec$OpensslCtrCipher:process(java.nio.ByteBuffer,java.nio.ByteBuffer)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPoint:initializeInterceptors()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DF:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:uriToString(java.net.URI,boolean)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:checkNotSchemeWithRelative()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:isAbsoluteAndSchemeAuthorityNull()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:isAbsolute()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:checkPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.71,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractMultipartUploader:checkPutArguments(org.apache.hadoop.fs.Path,java.io.InputStream,int,org.apache.hadoop.fs.UploadHandle,long)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m2": {
                "count_score": 0.44,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.53
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractMultipartUploader:abortUploadsUnderPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:append(org.apache.hadoop.fs.Path,int,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:removeAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:unsetStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:removeAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:createInternal(org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.permission.FsPermission,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$LinkedSegmentsDescriptor:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:getCredentialEntry(java.lang.String)": {
            "m3": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.54
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:getAliases()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:skip(long)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:getPermissions(org.apache.commons.net.ftp.FTPFile)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:applyUMask(org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.protocolPB.PBHelper:convert(org.apache.hadoop.fs.FSProtos$FsPermissionProto)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:getPermissions(com.jcraft.jsch.ChannelSftp$LsEntry)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShellPermissions$Chmod:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.34
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:getDefault()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:getDirDefault()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:getFileDefault()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:getCachePoolDefault()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:valueOf(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission$ImmutableFsPermission:<init>(short)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.AclCommands$SetfaclCommand:processOptions(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.36
            },
            "m2": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.57
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.28
            },
            "m10": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.AclCommands$GetfaclCommand:printAclEntriesForSingleScope(org.apache.hadoop.fs.permission.AclStatus,org.apache.hadoop.fs.permission.FsPermission,java.util.List)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclEntry:aclSpecToString(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getPermission": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShellPermissions$Chmod:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.53
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:skip(long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:mark(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.ByteBufferInputStream:read(byte[],int,int)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlock:startUpload()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteArrayBlock:startUpload()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$ByteBufferBlockFactory$ByteBufferBlock:startUpload()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DataBlock:close()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:checkAndWriteSync()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer$WBlockState:getCompressedSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$FSDataBoundedInputStream:getFileLength()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:processPathArgument(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.3
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:adjustColumnWidths(org.apache.hadoop.fs.shell.PathData[])": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.2,
                "indegree_score": 0.77,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.45,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.2,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.2,
                "indegree_score": 0.8,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.2,
                "indegree_score": 0.78,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.29
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.2,
                "indegree_score": 0.43,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Du:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.36
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getQuotaUsage(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getUsed(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.AbstractLaunchableService:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.CompositeService:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.JvmPauseMonitor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.ServiceStateModel:enterState(org.apache.hadoop.service.Service$STATE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:instantiateService(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag$KerberosDiagsFailure:<init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.CompositeService:serviceStop()": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.service.CompositeService$CompositeServiceShutdownHook:run()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:progressable(org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:valueClass(java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BinaryComparable:equals(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:set(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:getKey(org.apache.hadoop.io.BytesWritable)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.77,
                "total_score": 0.67
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.9,
                "total_score": 0.72
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:list(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:checkAccessByFileMethods(java.io.File)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX:mlock(java.nio.ByteBuffer,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.SharedFileDescriptorFactory:create(java.lang.String,java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX$CacheManipulator:getMemlockLimit()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:writeChecksumChunks(byte[],int,int)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.17
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.42
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.21
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:calculateChunkedSums(java.nio.ByteBuffer,java.nio.ByteBuffer)": {
            "m6": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:freeBuffers()": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:unbuffer()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.BoundedByteArrayOutputStream:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:decodeFromUrlString(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureDecoder:getOutputBlocks(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.21
            },
            "m2": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "m3": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.21
            },
            "m5": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState:<init>(org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder,java.nio.ByteBuffer[],int[],java.nio.ByteBuffer[])": {
            "findFirstValidInput": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkInputBuffers": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkOutputBuffers": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayDecodingState:<init>(org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder,byte[][],int[],byte[][])": {
            "findFirstValidInput": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "checkInputBuffers": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "checkOutputBuffers": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeXORRawErasureCoderFactory:createDecoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeRSRawErasureCoderFactory:createDecoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getFieldSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.32
            },
            "getPrimitivePower": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.31
            },
            "getFieldSize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getPrimitivePower": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.23
            },
            "multiply": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeXORRawErasureCoderFactory:createEncoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.NativeRSRawErasureCoderFactory:createEncoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.XORRawDecoder:doDecode(org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.XORRawEncoder:doEncode(org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferEncodingState)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawDecoder:doDecode(org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.23
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.51
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawEncoder:doEncode(org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferEncodingState)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawEncoder:doEncode(org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferEncodingState)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.XORRawDecoder:doDecode(org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayDecodingState)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.XORRawEncoder:doEncode(org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayEncodingState)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawDecoder:doDecode(org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayDecodingState)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.23
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.47
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawEncoder:doEncode(org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayEncodingState)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawEncoder:doEncode(org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayEncodingState)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawErasureCoderFactory:createDecoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawErasureCoderFactory:createEncoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawDecoder:processErasures(int[])": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:skipToNextMarker(long,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:bsGetUByte()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:bsGetInt()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:getAndMoveToFrontDecode0(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:recvDecodingTables()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.3,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.79
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:<init>(java.io.OutputStream,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:moveToFrontCodeAndSend()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:blockSort()": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockCompressorStream:<init>(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:<init>(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockDecompressorStream:<init>(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.PassthroughCodec:createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:read(byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockCompressorStream:write(byte[],int,int)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardDecompressor$ZStandardDirectDecompressor:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:<init>(int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CodecPool:getCompressor(org.apache.hadoop.io.compress.CompressionCodec)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm:getDecompressor()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodec$Util:createOutputStreamWithCodecPool(org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.conf.Configuration,java.io.OutputStream)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.6
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionOutputStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:close()": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m1": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm:returnCompressor(org.apache.hadoop.io.compress.Compressor)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodec$Util:createInputStreamWithCodecPool(org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.conf.Configuration,java.io.InputStream)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.79,
                "total_score": 0.72
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionInputStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm:returnDecompressor(org.apache.hadoop.io.compress.Decompressor)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:createCompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibFactory:getZlibCompressor(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibFactory:getZlibDirectDecompressor(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:createDirectDecompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.ZlibFactory:getZlibDecompressor(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:createDecompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor:decompress(byte[],int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Metadata:write(java.io.DataOutput)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:writeImpl(java.io.DataOutput)": {
            "m2": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.21
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:storeDelegationKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:updateDelegationKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.18
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:addOrUpdateDelegationKey(org.apache.hadoop.security.token.delegation.DelegationKey,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.24
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.VIntWritable:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:readStringSafely(java.io.DataInput,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:readFields(java.io.DataInput,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:skip(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:readBuffer(org.apache.hadoop.io.DataInputBuffer,org.apache.hadoop.io.compress.CompressionInputStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.97,
                "total_score": 0.6
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.13,
                "total_score": 0.26
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.97,
                "total_score": 0.6
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenInformation:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:readString(java.io.DataInput,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.DelegationKey:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Utils:writeString(java.io.DataOutput,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.54,
                "total_score": 0.67
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.UserProvider:getCredentialEntry(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.UserProvider:createCredentialEntry(java.lang.String,char[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.UserProvider:deleteCredentialEntry(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:buildTokenService(java.net.InetSocketAddress)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:getKeyVersion(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:getMetadata(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:createKey(java.lang.String,byte[],org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m2": {
                "count_score": 0.3,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.19
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.13
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getDtService(java.net.URI)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.internal.ShadedProtobufHelper:tokenFromProto(org.apache.hadoop.security.proto.SecurityProtos$TokenProto)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:find(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:writeEnum(java.io.DataOutput,java.lang.Enum)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.PermissionStatus:write(java.io.DataOutput,java.lang.String,java.lang.String,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:<init>(byte[])": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:<init>(org.apache.hadoop.io.Text)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:readLine(org.apache.hadoop.io.Text,int,int)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:getTextLength()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Metadata:toString()": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:setRenewer(org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.UserProvider:getAliases()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getCanonicalServiceName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:getCanonicalServiceName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SortedMapWritable:<init>(org.apache.hadoop.io.SortedMapWritable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapWritable:<init>(org.apache.hadoop.io.MapWritable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:compression(org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.JavaSerializationComparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:retryUpToMaximumTimeWithFixedSleep(long,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$AutoRenewalForUserCredsRunnable:run()": {
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m5": {
                "count_score": 0.28,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.41
            },
            "m19": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m12": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:failoverOnNetworkException(org.apache.hadoop.io.retry.RetryPolicy,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:newCall(java.lang.reflect.Method,java.lang.Object[],boolean,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedWriteLock:<init>(java.lang.String,org.slf4j.Logger,java.util.concurrent.locks.ReentrantReadWriteLock,long,long,org.apache.hadoop.util.Timer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:<init>(java.lang.String,org.slf4j.Logger,java.util.concurrent.locks.Lock,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedReadLock:<init>(java.lang.String,org.slf4j.Logger,java.util.concurrent.locks.ReentrantReadWriteLock,long,long,org.apache.hadoop.util.Timer)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:tryLock()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryProxy:create(java.lang.Class,org.apache.hadoop.io.retry.FailoverProxyProvider,org.apache.hadoop.io.retry.RetryPolicy)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.LossyRetryInvocationHandler:<init>(int,org.apache.hadoop.io.retry.FailoverProxyProvider,org.apache.hadoop.io.retry.RetryPolicy)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryProxy:create(java.lang.Class,java.lang.Object,java.util.Map)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler$Call:processRetryInfo()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:handleException(java.lang.reflect.Method,int,org.apache.hadoop.io.retry.RetryPolicy,org.apache.hadoop.io.retry.RetryInvocationHandler$Counters,long,java.lang.Exception)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.59
            },
            "m11": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyOutputStream:write(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyOutputStream:write(byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyOutputStream:flush()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProxyCombiner$CombinedProxyInvocationHandler:close()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer:<init>(org.apache.hadoop.fs.FSDataOutputStream,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "getPos": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "write": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$MetaIndexEntry:<init>(java.io.DataInput)": {
            "readString": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.43
            },
            "getCompressionAlgorithmByName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileMeta:<init>(java.io.DataInput)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "compatibleWith": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "readVLong": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "readString": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.31
            },
            "makeComparator": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.31
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$DataIndex:<init>(java.io.DataInput)": {
            "readString": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.23
            },
            "getCompressionAlgorithmByName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            },
            "readVInt": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:<init>(int,java.io.DataInput,org.apache.hadoop.io.file.tfile.CompareUtils$BytesComparator)": {
            "readVInt": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "buffer": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.29
            },
            "entries": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:checkEOF()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder:flushBuffer()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder:write(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileIndex:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.24,
                "dataflow_score": 0.6,
                "indegree_score": 0.71,
                "total_score": 0.53
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.36
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.4,
                "indegree_score": 0.0,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.36,
                "total_score": 0.22
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.4,
                "indegree_score": 1.0,
                "total_score": 0.56
            },
            "m6": {
                "count_score": 0.18,
                "dataflow_score": 0.6,
                "indegree_score": 0.98,
                "total_score": 0.63
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.24,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:compareTo(org.apache.hadoop.io.file.tfile.RawComparable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer$KeyRegister:close()": {
            "m1": {
                "count_score": 0.18,
                "dataflow_score": 0.67,
                "indegree_score": 0.32,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.23
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.67,
                "indegree_score": 0.5,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:<init>(java.lang.String)": {
            "set": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.MD5MD5CRC32FileChecksum:getBytes()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash:digest(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$BlockCompressWriter:sync()": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.22
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.security.token.TokenIdentifier:getTrackingId()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:encodeToUrlString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:cloneWritableInto(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode:hashCode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:add(org.apache.hadoop.net.Node)": {
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:chooseRandom(java.lang.String,java.lang.String,java.util.Collection)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m9": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.11
            },
            "m11": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:remove(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.3
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:decommissionNode(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:sortByDistance(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node[],int,java.util.function.Consumer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:sortByDistanceUsingNetworkLocation(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node[],int,java.util.function.Consumer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputStream:<init>(java.nio.channels.ReadableByteChannel,long)": {
            "checkChannelValidity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketOutputStream:<init>(java.nio.channels.WritableByteChannel,long)": {
            "checkChannelValidity": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.StatsDSink$StatsD:createSocket()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:getRpcResponse(org.apache.hadoop.ipc.Client$Call,org.apache.hadoop.ipc.Client$Connection,long,java.util.concurrent.TimeUnit)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.2
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.73
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMappingWithDependency:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl$Factory:newInnerNode(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup$InnerNodeWithNodeGroup:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode:<init>(org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:createParentNode(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher:add(org.apache.hadoop.net.unix.DomainSocket,org.apache.hadoop.net.unix.DomainSocketWatcher$Handler)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.39
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher:remove(org.apache.hadoop.net.unix.DomainSocket)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.unix.DomainSocketWatcher:<init>(int,java.lang.String)": {
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "socketpair": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketIOWithTimeout$SelectorPool:select(java.nio.channels.SelectableChannel,int,long)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m7": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.13
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getDefaultIP(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getHosts(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getDefaultHost(java.lang.String,java.lang.String,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:printUsage(java.io.PrintStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:checkParameterValidity(java.lang.String[],java.util.Map)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:help(java.lang.String[],java.util.Map)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addContext(org.eclipse.jetty.servlet.ServletContextHandler,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:getPlugin(java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:loadFirst(java.lang.String,java.lang.String[])": {
            "m10": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30:putMetrics(org.apache.hadoop.metrics2.MetricsRecord)": {
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m19": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m20": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.4
            },
            "m12": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m13": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m15": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m17": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.GraphiteSink:putMetrics(org.apache.hadoop.metrics2.MetricsRecord)": {
            "m4": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m1": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.41
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.19
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.http.PrometheusServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter:publishMetricsFromQueue()": {
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:incrCacheClearedCounter()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Handler:requeueCall(org.apache.hadoop.ipc.Server$Call)": {
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsCollectorImpl:getRecords()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:gauge(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:gauge(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:gauge(org.apache.hadoop.metrics2.MetricsInfo,float)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:gauge(org.apache.hadoop.metrics2.MetricsInfo,double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:counter(org.apache.hadoop.metrics2.MetricsInfo,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MBeanInfoBuilder:counter(org.apache.hadoop.metrics2.MetricsInfo,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:updateInfoCache(java.lang.Iterable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:newMBeanName(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:sourceName(java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups$GroupCacheLoader:load(java.lang.String)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.27
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:shutdownSingleton()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$UgiMetrics:reattach()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:stop()": {
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:stopMBeans()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:unregisterSource(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2Metrics:create(org.eclipse.jetty.server.handler.StatisticsHandler,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:stop()": {
            "m4": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.24
            },
            "m11": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:getMetrics(org.apache.hadoop.metrics2.MetricsCollector,boolean)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableQuantiles:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)": {
            "setInterval": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "info": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "setNumInfo": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getQuantiles": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.13
            },
            "setQuantileInfos": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "setQuantiles": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "setEstimator": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenSecretManagerMetrics:<init>()": {
            "iostatisticsStore": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RetryCacheMetrics:<init>(org.apache.hadoop.ipc.RetryCache)": {
            "getCacheName": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableMetricsFactory:getInfo(org.apache.hadoop.metrics2.annotation.Metric,java.lang.reflect.Field)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableMetricsFactory:getInfo(org.apache.hadoop.metrics2.annotation.Metric,java.lang.reflect.Method)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newStat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableStat:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRate:<init>(java.lang.String,java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:getGcUsage(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl:setContext(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:setContext(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:tag(java.lang.String,java.lang.String,java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:tag(org.apache.hadoop.metrics2.MetricsInfo,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation:add(java.lang.String,long)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:publishMetrics(org.apache.hadoop.metrics2.impl.MetricsBuffer,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleStat:copyTo(org.apache.hadoop.metrics2.util.SampleStat)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MethodMetric:<init>(java.lang.Object,java.lang.reflect.Method,org.apache.hadoop.metrics2.MetricsInfo,org.apache.hadoop.metrics2.annotation.Metric$Type)": {
            "checkNotNull": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "checkArg": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.14
            },
            "newImpl": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableStat:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:logSlowRpcCalls(java.lang.String,org.apache.hadoop.ipc.Server$Call,org.apache.hadoop.ipc.ProcessingDetails)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.68,
                "total_score": 0.61
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.SampleQuantiles:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addTopNCallerSummary(org.apache.hadoop.metrics2.MetricsRecordBuilder)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMapping:cacheGroupsRefresh()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$TestingGroups:getGroupsSet(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:endln()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:title(java.lang.String,java.lang.Object[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:fail(java.lang.String,java.lang.String,java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:loadFullMaps()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:createRemoteUser(java.lang.String,org.apache.hadoop.security.SaslRpcServer$AuthMethod)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping$LdapSslSocketFactory:getDefault()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:retrievePassword(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:startThreads()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:rollMasterKey()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.13
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.13
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:<init>(org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:<init>(org.apache.hadoop.security.authentication.client.ConnectionConfigurator)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslInputStream:read(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isFromKeytab()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isFromTicket()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:shouldRelogin()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache$Key:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$RealUser:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$ConnectionManager:closeIdle(boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$ConnectionManager:closeAll()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:closeConnection(org.apache.hadoop.ipc.Server$Connection)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier:check(java.lang.String,javax.net.ssl.SSLSocket)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory:initializeDefaultFactory(org.apache.hadoop.security.ssl.DelegatingSSLSocketFactory$SSLChannelMode)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsCommand:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFactory:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:<init>(org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:<init>(org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.tools.GetGroupsBase:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getNumDataUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNumParityUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getNumDataUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getNumParityUnits": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.WritableSerialization$WritableDeserializer:<init>(org.apache.hadoop.conf.Configuration,java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil$QualifiedHostResolver:getByName(java.lang.String)": {
            "m8": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m7": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:updateStaticMapping()": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:createZooKeeper()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:relogin(org.apache.hadoop.security.UserGroupInformation$HadoopLoginContext,boolean)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.41
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.crypto.CryptoFSDataOutputStream:<init>(org.apache.hadoop.fs.FSDataOutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[],boolean)": {
            "getPos": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:<init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[],long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec$OpensslCtrCipher:<init>(int,org.apache.hadoop.crypto.CipherSuite,java.lang.String)": {
            "getName": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getInstance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCipher:getInstance(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslSm4CtrCryptoCodec:<init>()": {
            "getLoadingFailureReason": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "isSupported": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:parseJSONEncKeyVersion(java.lang.String,java.util.Map)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$CreateCommand:execute()": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderExtension:createKey(java.lang.String,org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.CachingKeyProvider:rollNewVersion(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderExtension:rollNewVersion(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$RollCommand:execute()": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:getSize(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:getAtMost(java.lang.String,int)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:drain(java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolClientSideTranslatorPB:refresh(java.lang.String,java.lang.String[])": {
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:newEntry(java.lang.Object,long,byte[],int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache$CacheEntryWithPayload:<init>(byte[],int,java.lang.Object,long,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:put(java.lang.Object)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:add(java.lang.Object)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:internalQueueCall(org.apache.hadoop.ipc.Server$Call,boolean)": {
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.46
            },
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m2": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.29
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine:ensureInitialized()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:get(java.lang.Object)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.StopWatch:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StopWatch:now(java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StopWatch:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Invocation:<init>(java.lang.reflect.Method,java.lang.Object[])": {
            "getProtocolVersion": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getFingerprint": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getProtocolName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolSignature:getProtocolSignature(int,long,java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolSignature:getProtocolSignature(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies$FailoverOnNetworkExceptionRetry:shouldRetry(java.lang.Exception,int,int,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryUtils$WrapperRetryPolicy:shouldRetry(java.lang.Exception,int,int,boolean)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.3
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.HealthMonitor:doHealthChecks()": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Call:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:addResponseTime(java.lang.String,org.apache.hadoop.ipc.Schedulable,org.apache.hadoop.ipc.ProcessingDetails)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Listener:doAccept(java.nio.channels.SelectionKey)": {
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m12": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:add(org.apache.hadoop.ipc.Schedulable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:put(org.apache.hadoop.ipc.Schedulable)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$RpcCall:run()": {
            "m5": {
                "count_score": 0.31,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.79
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m12": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.5
            },
            "m13": {
                "count_score": 0.23,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$RpcCall:setDeferredError(java.lang.Throwable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolMetaInfoServerSideTranslatorPB:getProtocolVersions(org.apache.hadoop.thirdparty.protobuf.RpcController,org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolVersionsRequestProto)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolProxy:fetchServerMethods(java.lang.reflect.Method)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.38
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.56
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker:getProtocolImpl(org.apache.hadoop.ipc.RPC$Server,java.lang.String,long)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.18
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$FatalRpcServerException:<init>(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:<init>(int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection$RpcRequestSender:run()": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.18,
                "total_score": 0.45
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.18,
                "total_score": 0.45
            },
            "m12": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:decayCurrentCosts()": {
            "m10": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m14": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m15": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:getPriorityLevel(org.apache.hadoop.ipc.Schedulable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:getPriorityLevel(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:setPriorityLevel(org.apache.hadoop.security.UserGroupInformation,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler$Call:invoke()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcWritable$Buffer:getValue(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtobufRpcEngineCallbackImpl:setResponse(com.google.protobuf.Message)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.58
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtobufRpcEngineCallbackImpl:setResponse(org.apache.hadoop.thirdparty.protobuf.Message)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.58
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:setupResponseForWritable(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto,org.apache.hadoop.io.Writable)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.25
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:removeNextElement()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:close()": {
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m9": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m12": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Responder:doRunLoop()": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m15": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m17": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m23": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:sendResponse(org.apache.hadoop.ipc.Server$RpcCall)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter,boolean)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.MachineList:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.FileBasedIPList:<init>(java.lang.String)": {
            "readLines": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfo:newInstance()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getPhysicalMemorySize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getAvailableVirtualMemorySize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:<init>(java.io.InputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:read(org.apache.hadoop.io.ByteBufferPool,int,java.util.EnumSet)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:put(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet$SetIterator:remove()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightResizableGSet:remove(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:evict()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.XMLUtils:transform(java.io.InputStream,java.io.InputStream,java.io.Writer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:toString(boolean,boolean,boolean,boolean,java.util.List)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:toSnapshot(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage:getQuotaUsage(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage:getTypesQuotaUsage(boolean,java.util.List)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet:computeCapacity(double,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:fill()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:readAndDiscard(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:toStringChecked()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:fromBytes(byte[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8:readString(java.io.DataInput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:checkResponse(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:toString()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:byteToHexString(byte)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:toString()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:uncaughtException(java.lang.Thread,java.lang.Throwable)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:exitWithUsageMessage()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.HadoopUncaughtExceptionHandler:uncaughtException(java.lang.Thread,java.lang.Throwable)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.2
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.59
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:exit(int,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ExitUtil:terminate(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Classpath:terminate(int,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.InterruptEscalator:interrupted(org.apache.hadoop.service.launcher.IrqHandler$InterruptData)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.43,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            }
        }
    },
    {
        "org.apache.hadoop.util.ExitUtil:halt(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.QuickSort:sort(org.apache.hadoop.util.IndexedSortable,int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclStatus:<init>(java.lang.String,java.lang.String,boolean,java.lang.Iterable,org.apache.hadoop.fs.permission.FsPermission)": {
            "newArrayList": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ZKUtil:parseACLs(java.lang.String)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.util.ZKUtil:parseAuth(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:preserveAttributes(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData,boolean)": {
            "m1": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.9,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.05,
                "dataflow_score": 0.5,
                "indegree_score": 0.52,
                "total_score": 0.37
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.97,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.95,
                "total_score": 0.47
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.5,
                "indegree_score": 0.52,
                "total_score": 0.37
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m9": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.67,
                "total_score": 0.36
            },
            "m10": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "m11": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.45,
                "total_score": 0.27
            },
            "m12": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.22,
                "total_score": 0.18
            },
            "m13": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.4
            },
            "m14": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.45,
                "total_score": 0.27
            },
            "m15": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.19
            },
            "m22": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.util.ChunkedArrayList:add(java.lang.Object)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.AclUtil:getMinimalAcl(org.apache.hadoop.fs.permission.FsPermission)": {
            "m2": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.33
            },
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.86,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.19,
                "dataflow_score": 1.0,
                "indegree_score": 0.68,
                "total_score": 0.63
            },
            "m5": {
                "count_score": 0.19,
                "dataflow_score": 0.33,
                "indegree_score": 0.68,
                "total_score": 0.43
            },
            "m6": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m8": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:trackDuration(java.lang.String,long)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StatisticDurationTracker:<init>(org.apache.hadoop.fs.statistics.impl.IOStatisticsStore,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.DurationInfo:<init>(org.slf4j.Logger,java.lang.String,java.lang.Object[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.CommonCallableSupplier:waitForCompletion(java.util.concurrent.CompletableFuture)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.33
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.CommonCallableSupplier:waitForCompletionIgnoringExceptions(java.util.concurrent.CompletableFuture)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "close": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.StatisticDurationTracker:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DurationInfo:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcComposer:newCrcComposer(org.apache.hadoop.util.DataChecksum$Type,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcComposer:update(int,long)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:lock()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:lockInterruptibly()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:tryLock(long,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:unlock()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:getFormattedTimeWithDiff(org.apache.commons.lang3.time.FastDateFormat,long,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:escapeString(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:unEscapeString(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:startupShutdownMessage(java.lang.String,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$WrappingRemoteIterator:sourceNext()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$HaltableRemoteIterator:sourceHasNext()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureIOSupport:awaitFuture(java.util.concurrent.Future)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:awaitAllFutures(java.util.Collection)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureIOSupport:awaitFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:awaitAllFutures(java.util.Collection,java.time.Duration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:cancelAllFuturesAndAwaitCompletion(java.util.Collection,boolean,java.time.Duration)": {
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration,java.lang.Class[],java.lang.Object[])": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:getKeyClass()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:getValueClass()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.EnumSetWritable:readFields(java.io.DataInput)": {
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:loadClass(java.lang.String)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.58
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:createClassInstance(java.lang.String)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m1": {
                "count_score": 0.57,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.57
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:<init>(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:<init>(org.apache.hadoop.fs.PathHandle)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsUrlStreamHandler:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:createConfiguration()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:loadConf()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurableBase:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurableBase:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:newDataChecksum(org.apache.hadoop.util.DataChecksum$Type,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:getQualifiedBinPath(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:runCommand()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m28": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m31": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.Progress:addPhase(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:createRootDirRecursively(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynConstructors$Ctor:invoke(java.lang.Object,java.lang.Object[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:pathCapabilities_hasPathCapability(java.lang.Object,org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:streamCapabilities_hasCapability(java.lang.Object,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatistics_counters(java.io.Serializable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatistics_gauges(java.io.Serializable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatistics_minimums(java.io.Serializable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatistics_maximums(java.io.Serializable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatistics_means(java.io.Serializable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$StaticMethod:invoke(java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$UnboundMethod:invokeStatic(java.lang.Object[])": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.42,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.58,
                "total_score": 0.61
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$BoundMethod:invoke(java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:impl(java.lang.String,java.lang.Class[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.DynMethods$Builder:hiddenImpl(java.lang.String,java.lang.Class[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.dynamic.BindingUtils:loadStaticMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[])": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.81,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:isIOStatisticsSource(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:isIOStatistics(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:isIOStatisticsSnapshot(java.io.Serializable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsContext_enabled()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:toString()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:bulkDelete_pageSize(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:bulkDelete_delete(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.util.Collection)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:fileSystem_openFile(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String,org.apache.hadoop.fs.FileStatus,java.lang.Long,java.util.Map)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:byteBufferPositionedReadable_readFully(java.io.InputStream,long,java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:checkIoStatisticsAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:checkIoStatisticsContextAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ComparableVersion:<init>(java.lang.String)": {
            "parseVersion": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:<init>(int,int,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightGSet$Values:contains(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:readFileToMap(java.lang.String,java.lang.String,java.util.Map)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:refresh(java.io.InputStream,java.io.InputStream)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.28
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.Filter:<init>(int,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.Filter:readFields(java.io.DataInput)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:delete(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:membershipTest(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:addFalsePositive(java.util.Collection)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:addFalsePositive(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:addFalsePositive(org.apache.hadoop.util.bloom.Key[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:clearBit(int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:ratioRemove(int[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ProgramDriver:driver(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tools.TableListing$Builder:addField(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tools.TableListing$Builder:addField(java.lang.String,org.apache.hadoop.tools.TableListing$Justification)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.tools.TableListing$Builder:addField(java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getCredentialEntry(org.apache.hadoop.security.alias.CredentialProvider,java.lang.String)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:loadResource(java.util.Properties,org.apache.hadoop.conf.Configuration$Resource,boolean)": {
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.21
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.21
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addDeprecation(java.lang.String,java.lang.String[],java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Parser:parseNext()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:openListeners()": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort:checkArgs(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:parseOpts(java.lang.String,org.apache.commons.cli.Options,java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:clearParentZNode()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:fenceOldActive()": {
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:createWithRetries(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:getDataWithRetries(java.lang.String,boolean,org.apache.zookeeper.data.Stat)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:setDataWithRetries(java.lang.String,byte[],int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:deleteWithRetries(java.lang.String,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:readRangeFrom(org.apache.hadoop.fs.PositionedReadable,org.apache.hadoop.fs.FileRange,java.util.function.IntFunction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:requestCaching(org.apache.hadoop.fs.impl.prefetch.BufferData)": {
            "m2": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.35
            },
            "m5": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.7,
                "total_score": 0.63
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.22,
                "total_score": 0.26
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.66,
                "total_score": 0.59
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferData:setPrefetch(java.util.concurrent.Future)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferData:setReady(org.apache.hadoop.fs.impl.prefetch.BufferData$State[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:getSize(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:getRelativeOffset(int,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:getStateString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockData:<init>(long,int)": {
            "checkNotNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositiveInteger": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.34
            },
            "setState": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:blockNumber()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer:run()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache:closeAll()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:closeAllForUGI(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputStream:readFully(long,byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BufferedFSInputStream:readFully(long,byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:write(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,java.lang.CharSequence)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:createFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:write(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,byte[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.23
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:write(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.Iterable,java.nio.charset.Charset)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.23
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:write(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.CharSequence,java.nio.charset.Charset)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.23
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:createFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:appendFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:appendFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:<init>(java.lang.String[],java.lang.String[],java.lang.String[],long,long,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FtpFs:getServerDefaults()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FtpFs:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.local.RawLocalFs:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.local.RawLocalFs:getServerDefaults()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getServerDefaults()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getServerDefaults()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newCounter(java.lang.String,java.lang.String,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newCounter(java.lang.String,java.lang.String,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newGauge(java.lang.String,java.lang.String,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newGauge(java.lang.String,java.lang.String,float)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newGauge(java.lang.String,java.lang.String,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue:checkCalls()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:writeCompressedStringArray(java.io.DataOutput,java.lang.String[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:copy()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging$SourceToString:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging:logIOStatisticsAtDebug(org.slf4j.Logger,java.lang.String,java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputStream:toString()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatistics_toPrettyString(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:measureDurationOfInvocation(org.apache.hadoop.fs.statistics.DurationTrackerFactory,java.lang.String,org.apache.hadoop.util.functional.InvocationRaisingIOE)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:trackDurationOfSupplier(org.apache.hadoop.fs.statistics.DurationTrackerFactory,java.lang.String,java.util.function.Supplier)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:addToLinkedListAndEvictIfRequired(org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache$Entry)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m9": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreImpl:<init>(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "dynamicIOStatistics": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "withAtomicLongCounter": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "withAtomicLongGauge": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "withAtomicLongMaximum": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "withAtomicLongMinimum": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "withMeanStatisticFunction": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "build": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:read(byte[],int,int)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:decrypt(long,byte[],int,int)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m12": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m14": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:decrypt(long,java.nio.ByteBuffer,int,int)": {
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m15": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m14": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:decrypt(java.nio.ByteBuffer,int,int)": {
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:<init>(java.io.InputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[],long)": {
            "checkCodec": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "checkBufferSize": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getDecryptor": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.25
            },
            "resetStreamOffset": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:seek(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:skip(long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.26
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:seekToNewSource(long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.26
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:close()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:hflush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:hsync()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.filter.GlobFilter:compile(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobFilter:<init>(java.lang.String)": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GlobFilter:<init>(java.lang.String,org.apache.hadoop.fs.PathFilter)": {
            "init": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unTar(java.io.InputStream,java.io.File,boolean)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getAllStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:clearStatistics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:primitiveCreate(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:<init>(org.apache.hadoop.fs.viewfs.InodeTree$INodeDir,long,org.apache.hadoop.security.UserGroupInformation,java.net.URI,org.apache.hadoop.fs.viewfs.InodeTree,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:<init>(org.apache.hadoop.fs.AbstractFileSystem)": {
            "getUri": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.util.HHUtil:getPiggyBacksFromInput(java.nio.ByteBuffer[],int[],int,int,org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder:encode(org.apache.hadoop.io.erasurecode.ECChunk[],org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable$Internal:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:acquireHelper(int,boolean)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.1
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:numAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.BlockingThreadPoolExecutorService:newInstance(int,int,long,java.util.concurrent.TimeUnit,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:setData(org.apache.hadoop.fs.impl.prefetch.BufferData,long,long)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.22
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.18
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsContext_getCurrent()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsContext_reset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsContext_snapshot()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsContext_aggregate(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool$Builder:runParallel(org.apache.hadoop.util.functional.TaskPool$Task)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsContext_setThreadIOStatisticsContext(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool$Builder:setStatisticsContext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool$Builder:resetStatisticsContext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:postProcessPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Rmr:processOptions(java.util.LinkedList)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls$Lsr:processOptions(java.util.LinkedList)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Dus:processOptions(java.util.LinkedList)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:displayError(java.lang.Exception)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.17
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getPathHandle(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Options$HandleOpt[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellCommandExecutor:<init>(java.lang.String[],java.io.File,java.util.Map,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.CachingGetSpaceUsed:init()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:addToken(org.apache.hadoop.io.Text,org.apache.hadoop.security.token.Token)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec$OpensslCtrCipher:encrypt(java.nio.ByteBuffer,java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec$OpensslCtrCipher:decrypt(java.nio.ByteBuffer,java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPoint:initialize()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:<init>(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "initialize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:<init>(java.lang.String)": {
            "checkPathArg": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "hasWindowsDrive": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "initialize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:<init>(java.lang.String,java.lang.String,java.lang.String)": {
            "checkPathArg": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "hasWindowsDrive": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "initialize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:checkNotRelative()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:getUriPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.11,
                "total_score": 0.44
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:resolvePath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:create(org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.Options$CreateOpts[])": {
            "m1": {
                "count_score": 0.01,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.34
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.01,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.22
            },
            "m8": {
                "count_score": 0.03,
                "dataflow_score": 0.5,
                "indegree_score": 0.33,
                "total_score": 0.29
            },
            "m9": {
                "count_score": 0.01,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m10": {
                "count_score": 0.01,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.44
            },
            "m11": {
                "count_score": 0.01,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.35
            },
            "m12": {
                "count_score": 0.01,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:checkPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:delete(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsCreateModes:applyUMask(org.apache.hadoop.fs.permission.FsPermission,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:loadPermissionInfoByNativeIO()": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.19
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.19
            },
            "m11": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:mkdirs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:<init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.util.Set)": {
            "getDirDefault": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getDefault": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getFileDefault": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:setPermission(org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.MultipartUploaderBuilderImpl:getPermission()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createNonRecursive(org.apache.hadoop.fs.Path,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:getPermission()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:createImmutable(short)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.AclCommands$GetfaclCommand:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.41
            },
            "m3": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.75,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m6": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m11": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.25,
                "indegree_score": 0.22,
                "total_score": 0.19
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m13": {
                "count_score": 0.07,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m14": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m15": {
                "count_score": 0.07,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.KeyStoreProvider:createPermissions(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:append(java.lang.Object,java.lang.Object)": {
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.54
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:appendRaw(byte[],int,int,org.apache.hadoop.io.SequenceFile$ValueBytes)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer$BlockAppender:getCompressedSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$FSDataBoundedInputStream:skip(long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$FSDataBoundedInputStream:seek(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:processPaths(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData[])": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getUsed(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getUsed(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.JvmPauseMonitor:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:start()": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.3
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.27
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.27
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:enterState(org.apache.hadoop.service.Service$STATE)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:printDefaultRealm()": {
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.74
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token$PrivateToken:hashCode()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable:set(org.apache.hadoop.io.BytesWritable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:checkDirInternal(java.io.File)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO$POSIX$CacheManipulator:mlock(java.lang.String,java.nio.ByteBuffer,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:flushBuffer(boolean,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:close()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder:decode(java.nio.ByteBuffer[],int[],java.nio.ByteBuffer[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder:decode(byte[][],int[],byte[][])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawErasureCoderFactory:createDecoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawErasureCoderFactory:createEncoder(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawDecoder:prepareDecoding(java.lang.Object[],int[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:skipToNextBlockMarker()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:complete()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:getAndMoveToFrontDecode()": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.57,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:<init>(java.io.OutputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:endBlock()": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.18
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BlockDecompressorStream:<init>(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.PassthroughCodec:createInputStream(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:read()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:skip(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm:getCompressor()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:createOutputStream(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.Lz4Codec:createOutputStream(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:createOutputStream(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:createOutputStream(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:createOutputStream(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.SnappyCodec:createOutputStream(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressorStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer$WBlockState:finish()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:createInputStream(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.Lz4Codec:createInputStream(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:createInputStream(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:createInputStream(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:createInputStream(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.SnappyCodec:createInputStream(java.io.InputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DecompressorStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$TextRecordInputStream:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SortPass:close()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$RBlockState:finish()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:createCompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:createDirectDecompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:createDecompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:writeFileHeader()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:write(java.io.DataOutput)": {
            "m2": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.36,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:storeDelegationKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:updateDelegationKey(org.apache.hadoop.security.token.delegation.DelegationKey)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Metadata:readFields(java.io.DataInput)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:readFields(java.io.DataInput)": {
            "m2": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.32
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:readBlock()": {
            "m1": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.36,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:seekToCurrentValue()": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:createTokenInfo(byte[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.PermissionStatus:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.Text:readString(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:getDelegationKey(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:processKeyAddOrUpdate(byte[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:getKeyFromZK(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$MetaIndexEntry:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.58
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$TFileMeta:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$DataIndex:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.71
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:selectDelegationToken(java.net.URL,org.apache.hadoop.security.Credentials)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:getServerToken(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:setTokenService(org.apache.hadoop.security.token.Token,java.net.InetSocketAddress)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:deleteKey(java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.24
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:rollNewVersion(java.lang.String,byte[])": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.19
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.57
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:getKeyVersions(java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.37
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufHelper:tokenFromProto(org.apache.hadoop.security.proto.SecurityProtos$TokenProto)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:getKeys()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsServerDefaults:write(java.io.DataOutput)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.PermissionStatus:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.internal.ShadedProtobufHelper:getFixedByteString(org.apache.hadoop.io.Text)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:<init>(org.apache.hadoop.security.token.Token)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:readLine(org.apache.hadoop.io.Text,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:readLine(org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:createToken(org.apache.hadoop.security.UserGroupInformation,java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.33
            },
            "m4": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.36
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:<init>(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.io.Text)": {
            "setOwner": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "setRenewer": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "setRealUser": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryPolicies:failoverOnNetworkException(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedWriteLock:<init>(java.lang.String,org.slf4j.Logger,java.util.concurrent.locks.ReentrantReadWriteLock,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedLock:<init>(java.lang.String,org.slf4j.Logger,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedReadLock:<init>(java.lang.String,org.slf4j.Logger,java.util.concurrent.locks.ReentrantReadWriteLock,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryProxy:create(java.lang.Class,java.lang.Object,org.apache.hadoop.io.retry.RetryPolicy)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler$Call:processWaitTimeAndRetryInfo()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m10": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:<init>(org.apache.hadoop.fs.FSDataOutputStream,int,java.lang.String,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getComparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$MetaIndex:<init>(java.io.DataInput)": {
            "readVInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getMetaName": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:isLastChunk()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:getRemain()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:read(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:skip(long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder:write(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:compareTo(byte[],int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayWritable:<init>(java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$BlockCompressWriter:close()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$BlockCompressWriter:append(java.lang.Object,java.lang.Object)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.9
            },
            "m4": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.7
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$BlockCompressWriter:appendRaw(byte[],int,int,org.apache.hadoop.io.SequenceFile$ValueBytes)": {
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:delegationTokenToJSON(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:doDelegationTokenOperation(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator$DelegationTokenOperation,java.lang.String,org.apache.hadoop.security.token.Token,boolean,java.lang.String)": {
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.14
            },
            "m11": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m12": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m13": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m16": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m18": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m20": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m25": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:cloneInto(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:chooseRandom(java.lang.String,java.util.Collection)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:sortByDistance(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:sortByDistanceUsingNetworkLocation(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node[],int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputStream:<init>(java.net.Socket,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketInputStream:<init>(java.net.Socket)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketOutputStream:<init>(java.net.Socket,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.StatsDSink$StatsD:write(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:<init>()": {
            "newInnerNode": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup:getNodeForNetworkLocation(org.apache.hadoop.net.Node)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup:add(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.InnerNodeImpl:add(org.apache.hadoop.net.Node)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.57
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketIOWithTimeout:doIO(java.nio.ByteBuffer,int)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketIOWithTimeout:connect(java.nio.channels.SocketChannel,java.net.SocketAddress,int)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.net.SocketIOWithTimeout:waitForIO(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getDefaultHost(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.DNS:getDefaultHost(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:checkParameterValidity(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:help(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:getFilter(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:create(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsConfig:create(java.lang.String,java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:clear(org.apache.hadoop.ipc.RetryCache)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:getMetrics(org.apache.hadoop.metrics2.impl.MetricsCollectorImpl,boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.MBeans:getMBeanName(java.lang.String,java.lang.String,java.util.Map)": {
            "m10": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:reattachMetrics()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:stopMetricsMBeans()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:stop()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:stop()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableInverseQuantiles:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newQuantiles(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenSecretManagerMetrics:create()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RetryCacheMetrics:create(org.apache.hadoop.ipc.RetryCache)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newStat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation:addMetricIfNotExists(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newRate(java.lang.String,java.lang.String,boolean,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:getMetrics(org.apache.hadoop.metrics2.MetricsCollector,boolean)": {
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsSourceBuilder:initRegistry(java.lang.Object)": {
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.23
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:tag(java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages:add(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.DecayRpcSchedulerDetailedMetrics:addQueueTime(int,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.DecayRpcSchedulerDetailedMetrics:addProcessingTime(int,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcDetailedMetrics:addProcessingTime(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcDetailedMetrics:addDeferredProcessingTime(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcDetailedMetrics:addOverallProcessingTime(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableStat:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m2": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.26
            },
            "m3": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.19
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.19
            },
            "m7": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.17
            },
            "m6": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.17
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableMetricsFactory:newForMethod(java.lang.Object,java.lang.reflect.Method,org.apache.hadoop.metrics2.annotation.Metric,org.apache.hadoop.metrics2.lib.MetricsRegistry)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:getMetrics(org.apache.hadoop.metrics2.MetricsCollector,boolean)": {
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m11": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m14": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$TestingGroups:getGroups(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateKrb5File()": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.28
            },
            "m4": {
                "count_score": 0.57,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:verify(boolean,java.lang.String,java.lang.String,java.lang.Object[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:failif(boolean,java.lang.String,java.lang.String,java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:createRemoteUser(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:getAuthorizedUgi(java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:verifyToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier,byte[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:init()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:startThreads()": {
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m22": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m25": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$ExpiredTokenRemover:run()": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslInputStream:read(java.nio.ByteBuffer)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:spawnAutoRenewalThreadForKeytab()": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.41
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Count:<init>(java.lang.String[],int,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination$TargetFileSystem:<init>(org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:<init>(org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:newShellInstance()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsCommand:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.RSErasureEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.DummyErasureEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.XORErasureEncoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.DummyErasureDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.XORErasureDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.RSErasureDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecoder:<init>(org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.WritableSerialization:getDeserializer(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:updateMaps()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:updateMapIncr(java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.19
            },
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.48,
                "total_score": 0.51
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m10": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.42,
                "total_score": 0.55
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:updateMapIncr(int,boolean)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.19
            },
            "m8": {
                "count_score": 0.18,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m7": {
                "count_score": 0.36,
                "dataflow_score": 1.0,
                "indegree_score": 0.42,
                "total_score": 0.58
            },
            "m6": {
                "count_score": 0.18,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:connectToZooKeeper()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:reloginFromKeytab(boolean,boolean)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.13
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.48
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.09
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.09
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:reloginFromTicketCache(boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.crypto.CryptoFSDataOutputStream:<init>(org.apache.hadoop.fs.FSDataOutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:<init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslSm4CtrCryptoCodec:createEncryptor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslSm4CtrCryptoCodec:createDecryptor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec$OpensslCtrCipher:<init>(int,org.apache.hadoop.crypto.CipherSuite)": {
            "getName": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getInstance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:parseJSONEncKeyVersions(java.lang.String,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getEncKeyQueueSize(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.ValueQueue:getNext(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:drain(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:internalQueueCall(org.apache.hadoop.ipc.Server$Call)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getByName(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.JvmPauseMonitor$Monitor:run()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolSignature:getProtocolSignature(org.apache.hadoop.ipc.VersionedProtocol,java.lang.String,long,int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.ZKFCProtocolServerSideTranslatorPB:getProtocolSignature(java.lang.String,long,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolServerSideTranslatorPB:getProtocolSignature(java.lang.String,long,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolMetaInfoServerSideTranslatorPB:getProtocolSignature(org.apache.hadoop.thirdparty.protobuf.RpcController,org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolSignatureRequestProto)": {
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m10": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ExternalCall:<init>(java.security.PrivilegedExceptionAction)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Listener:run()": {
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m18": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m21": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m22": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:add(java.lang.Object)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:put(java.lang.Object)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtocolProxy:isMethodSupported(java.lang.String,java.lang.Class[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:checkRpcHeaders(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ResponseBuffer:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:forceDecay()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:getPriorityLevel(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker:getReturnMessage(java.lang.reflect.Method,org.apache.hadoop.ipc.RpcWritable$Buffer)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcWritable$Buffer:newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:getMessage(org.apache.hadoop.thirdparty.protobuf.Message,org.apache.hadoop.ipc.RpcWritable$Buffer)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Invoker:getReturnMessage(java.lang.reflect.Method,org.apache.hadoop.ipc.RpcWritable$Buffer)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:setupResponse(org.apache.hadoop.ipc.Server$RpcCall,org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto,org.apache.hadoop.io.Writable)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:take()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:poll(long,java.util.concurrent.TimeUnit)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:poll()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Responder:run()": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:doSaslReply(org.apache.hadoop.thirdparty.protobuf.Message)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:doSaslReply(java.lang.Exception)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:setupBadVersionResponse(int)": {
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:setupHttpRequestOnIpcPortResponse()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.CombinedIPWhiteList:<init>(java.lang.String,java.lang.String,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.CombinedIPList:<init>(java.lang.String,java.lang.String,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.FileBasedIPList:reload()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getVirtualMemorySize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$FSDataBoundedInputStream:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.io.InputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.AbstractHttpFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,long,long,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:read(org.apache.hadoop.io.ByteBufferPool,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:evictExpiredEntries()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.16
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:evictEntries()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:toString(boolean,boolean,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:toString(boolean,boolean,boolean,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage:toString(boolean,boolean,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:read1(byte[],int,int)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable$NullInstance:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayPrimitiveWritable:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.5,
                "total_score": 0.38
            },
            "m14": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m13": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m11": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.CommonCallableSupplier:waitForCompletion(java.util.List)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.CommonCallableSupplier:maybeAwaitCompletion(java.util.concurrent.CompletableFuture)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcComposer:update(byte[],int,int,long)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.CrcComposer:update(java.io.DataInputStream,long,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators$HaltableRemoteIterator:hasNext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:getKeyClass()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:getValueClass()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:run(java.lang.String[])": {
            "m1": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureDataInputStreamBuilderImpl:<init>(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:newDataChecksum(byte[],int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.23
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.util.DataChecksum:newDataChecksum(java.io.DataInputStream)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.23
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:run()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:<init>(java.lang.String)": {
            "loadClass": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "loadStaticMethod": {
                "count_score": 0.88,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:<init>(java.lang.String)": {
            "loadClass": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "loadStaticMethod": {
                "count_score": 0.96,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsSnapshot_aggregate(java.io.Serializable,java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsSnapshot_create()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsSnapshot_create(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsSnapshot_toJsonString(java.io.Serializable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsSnapshot_fromJsonString(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsSnapshot_load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsSnapshot_retrieve(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsSnapshot_save(java.io.Serializable,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatistics_toPrettyString(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsContext_getCurrent()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsContext_setThreadIOStatisticsContext(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsContext_reset()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsContext_snapshot()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:iostatisticsContext_aggregate(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.VersionUtil:compareVersions(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:refreshInternal(java.lang.String,java.lang.String,boolean)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:<init>(java.lang.String,java.io.InputStream,java.lang.String,java.io.InputStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "refresh": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:<init>(int,int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "buckets2words": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.BloomFilter:<init>(int,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.CountingBloomFilter:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.BloomFilter:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Reader:probablyHasKey(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:selectiveClearing(org.apache.hadoop.util.bloom.Key,short)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:createOptionTableListing()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:loadResources(java.util.Properties,java.util.ArrayList,int,boolean,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addDeprecation(java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addDeprecation(java.lang.String,java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addDeprecation(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:start()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:writeBreadCrumbNode(org.apache.zookeeper.data.Stat)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:tryDeleteOwnBreadCrumbNode()": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.VectoredReadUtils:readVectored(org.apache.hadoop.fs.PositionedReadable,java.util.List,java.util.function.IntFunction)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:cancelPrefetches()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.71
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BlockManager:get(int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.17
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:readBlock(org.apache.hadoop.fs.impl.prefetch.BufferData,boolean,org.apache.hadoop.fs.impl.prefetch.BufferData$State[])": {
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.36
            },
            "m8": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.25
            },
            "m9": {
                "count_score": 0.28,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.75
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m12": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            },
            "m14": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m17": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m15": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m19": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.46,
                "total_score": 0.26
            },
            "m20": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.29,
                "total_score": 0.19
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:<init>(long,int)": {
            "checkNotNegative": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkPositiveInteger": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.34
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "invalidate": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:isLastBlock()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.FilePosition:toString()": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:closeAll()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.BufferedFSInputStream:readFully(long,byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:write(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.CharSequence)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:<init>(java.lang.String[],java.lang.String[],long,long,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:<init>(java.lang.String[],java.lang.String[],java.lang.String[],long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.MeanStatistic:clone()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.DynamicIOStatistics:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "copy": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:aggregateMeanStatistics(org.apache.hadoop.fs.statistics.MeanStatistic,org.apache.hadoop.fs.statistics.MeanStatistic)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:snapshot(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.45,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "copy": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging:logIOStatisticsAtDebug(java.lang.String,java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsLogging:logIOStatisticsAtLevel(org.slf4j.Logger,java.lang.String,java.lang.Object)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m2": {
                "count_score": 0.6,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.13
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators:cleanupRemoteIterator(org.apache.hadoop.fs.RemoteIterator)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding:trackDurationOfInvocation(org.apache.hadoop.fs.statistics.DurationTrackerFactory,java.lang.String,org.apache.hadoop.util.functional.InvocationRaisingIOE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsStoreBuilderImpl:build()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:read(long,byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:readFully(long,byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:read(long,java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:readFully(long,java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:read(java.nio.ByteBuffer)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:read(org.apache.hadoop.io.ByteBufferPool,int,java.util.EnumSet)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.65,
                "total_score": 0.62
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:<init>(java.io.InputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[])": {
            "getInputStreamOffset": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncodingStep:doEncode(java.nio.ByteBuffer[][],java.nio.ByteBuffer[][])": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.57
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureEncodingStep:performCoding(org.apache.hadoop.io.erasurecode.ECChunk[],org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable:writeObject(java.io.DataOutput,java.lang.Object,java.lang.Class,org.apache.hadoop.conf.Configuration,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m7": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.64
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:tryAcquire(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:numAvailable()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.TaskPool$Builder:run(org.apache.hadoop.util.functional.TaskPool$Task)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:processPaths(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:getPathHandle(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Options$HandleOpt:resolve(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Options$HandleOpt[])": {
            "getPathHandle": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:createPathHandle(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Options$HandleOpt[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:createGroupExecutor(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:createGroupIDExecutor(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellCommandExecutor:<init>(java.lang.String[],java.io.File,java.util.Map)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:execCommand(java.util.Map,java.lang.String[],long)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:readProto(java.io.DataInput)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:addAll(org.apache.hadoop.security.Credentials,boolean)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DelegationTokenIssuer:collectDelegationTokens(org.apache.hadoop.security.token.DelegationTokenIssuer,java.lang.String,org.apache.hadoop.security.Credentials,java.util.List)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.8,
                "total_score": 0.72
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:addToken(org.apache.hadoop.io.Text,org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:addRegexMountEntry(org.apache.hadoop.fs.viewfs.InodeTree$LinkEntry)": {
            "m1": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:makeAbsolute(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:makeAbsolute(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:makeAbsolute(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:pathToFile(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.28
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:fixRelativePart(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:makeAbsolute(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:setWorkingDirectory(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:makeQualified(java.net.URI,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.12
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:fixRelativePart(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getWorkingDirectory()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getHomeDirectory()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:getHomeDirectory(com.jcraft.jsch.ChannelSftp)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:<init>(org.apache.hadoop.fs.AbstractFileSystem)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getServerDefaults": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.28
            },
            "getBytesPerChecksum": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:getHomeDirectory()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:getInitialWorkingDirectory()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:abort(org.apache.hadoop.fs.UploadHandle,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:lookupStat(org.apache.hadoop.fs.FileSystem,java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathIOException:getPath()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.PathIOException:getTargetPath()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getUsed()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getHomeDirectory()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.47
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getMountPoints()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:<init>(org.apache.hadoop.fs.FileSystem,java.net.URI)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "toUri": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getResolvedQualifiedPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getHomeDirectory()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getMountPoints()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPoint:getRemainingPathStr(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:createLink(java.lang.String,java.lang.String,org.apache.hadoop.fs.viewfs.InodeTree$LinkType,java.lang.String,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.13
            },
            "m1": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.72
            },
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.12
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.45
            },
            "m14": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m15": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:getRemainingPath(java.lang.String[],int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree$INodeLink:getTargetLink()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:<init>(org.apache.hadoop.fs.Path,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:<init>(java.lang.String,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile:rename(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:insecureCreateForWrite(java.io.File,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:fileToPath(java.io.File)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ProviderUtils:unnestUri(java.net.URI)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:constructNewPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:constructOldPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:stringToPath(java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:makeQualified(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.26
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:getPathWithoutSchemeAndAuthority(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:mergePaths(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.8,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.94
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:getParentUtil()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Print:apply(org.apache.hadoop.fs.shell.PathData,int)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$Checksum:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.42
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:checkIfExists(org.apache.hadoop.fs.shell.PathData$FileTypeRequirement)": {
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.42
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:getStringForChildPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.36
            },
            "m17": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m5": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m6": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.28
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.29
            },
            "m8": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.3
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.29
            },
            "m18": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.16
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.67
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m12": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.28
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m16": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination$TargetFileSystem:rename(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.18
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.16
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Rmdir:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Mkdir:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SnapshotCommands$RenameSnapshot:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:processNonexistentPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SnapshotCommands$CreateSnapshot:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.MoveCommands$Rename:processPath(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SnapshotCommands$DeleteSnapshot:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Truncate:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SetReplication:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.26
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.32
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.MoveCommands$MoveFromLocal:processPath(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.44
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.MoveCommands$MoveFromLocal:postProcessPath(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFSofPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.13
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.21
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:<init>(org.apache.hadoop.fs.AbstractFileSystem,org.apache.hadoop.fs.Path)": {
            "getUri": {
                "count_score": 0.44,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.33
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "checkPath": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.2
            },
            "getUriPath": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "toUri": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getUriPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:resolvePath(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:resolvePath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:createInternal(org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.permission.FsPermission,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getFileBlockLocations(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:mkdir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:open(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:mkdirs(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:mkdirs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:mkdirs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.protocolPB.PBHelper:convert(org.apache.hadoop.fs.FSProtos$FileStatusProto)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m13": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m16": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:<init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,boolean,boolean)": {
            "attributes": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocatedFileStatus:<init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.util.Set,org.apache.hadoop.fs.BlockLocation[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:getPermission()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:writeFile(org.apache.hadoop.io.SequenceFile$Sorter$RawKeyValueIterator,org.apache.hadoop.io.SequenceFile$Writer)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.98,
                "total_score": 0.62
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:init(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.23
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:stop()": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Metadata:equals(org.apache.hadoop.io.SequenceFile$Metadata)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token$TrivialRenewer:handleKind(org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSelector:selectToken(org.apache.hadoop.io.Text,java.util.Collection)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.68
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token$PrivateToken:isPrivateCloneOf(org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:equals(java.lang.Object)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:matchAlias(org.apache.hadoop.security.token.Token,org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:matchService(org.apache.hadoop.security.token.DtFetcher,org.apache.hadoop.io.Text,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:selectDelegationToken(org.apache.hadoop.security.Credentials,org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.79,
                "total_score": 0.69
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSTokenRenewer:handleKind(org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:checkDir(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:checkDirWithDiskIo(java.io.File)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:flushBuffer()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecodingStep:doDecodeSingle(java.nio.ByteBuffer[][],java.nio.ByteBuffer[][],int,int,boolean)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.83,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.26
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.36
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m10": {
                "count_score": 0.22,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecodingStep:doDecodeMultiAndParity(java.nio.ByteBuffer[][],java.nio.ByteBuffer[][],int[],int)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.73,
                "total_score": 0.65
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.DecodingValidator:validate(java.nio.ByteBuffer[],int[],java.nio.ByteBuffer[])": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.23
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder:decode(org.apache.hadoop.io.erasurecode.ECChunk[],int[],org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawDecoder:decode(java.nio.ByteBuffer[],int[],java.nio.ByteBuffer[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSLegacyRawDecoder:decode(byte[][],int[],byte[][])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawDecoder:doDecode(org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.RSRawDecoder:doDecode(org.apache.hadoop.io.erasurecode.rawcoder.ByteArrayDecodingState)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:initBlock()": {
            "m1": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.18
            },
            "m2": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m6": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionOutputStream:internalReset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:writeRun()": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Merger:close()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer$BlockAppender:close()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor:cleanup()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$BlockReader:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:writeWritableOutputStream(java.io.DataOutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:readFields(java.io.DataInput)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:createTokenIdent(byte[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:processTokenAddOrUpdate(byte[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:processTokenRemoved(org.apache.curator.framework.recipes.cache.ChildData)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:getTokenInfoFromZK(java.lang.String,boolean)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:nextRawKey(org.apache.hadoop.io.DataOutputBuffer)": {
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.51
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:getCurrentValue(org.apache.hadoop.io.Writable)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.19
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.19
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:getCurrentValue(java.lang.Object)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.23
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:nextRaw(org.apache.hadoop.io.DataOutputBuffer,org.apache.hadoop.io.SequenceFile$ValueBytes)": {
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.48
            },
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:nextRawValue(org.apache.hadoop.io.SequenceFile$ValueBytes)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:getTokenInfoFromSQL(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.PermissionStatus:read(java.io.DataInput)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:readEnum(java.io.DataInput,java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:getDelegationKey(int)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$MetaIndex:write(java.io.DataOutput)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufHelper:getFixedByteString(org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.internal.ShadedProtobufHelper:protoFromToken(org.apache.hadoop.security.token.Token)": {
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:copyToken()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:createToken(org.apache.hadoop.security.UserGroupInformation,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenIdentifier:<init>(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.InstrumentedReadWriteLock:<init>(boolean,java.lang.String,org.slf4j.Logger,long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler$Call:invokeOnce()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:checkKey()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.29
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:getValue(org.apache.hadoop.io.BytesWritable)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.23
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:writeValue(java.io.OutputStream)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.35
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:read(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder:close()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:compareTo(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:equals(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:getDelegationToken(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:renewDelegationToken(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token,org.apache.hadoop.security.token.Token,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:cancelDelegationToken(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token,org.apache.hadoop.security.token.Token,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:chooseRandom(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup:sortByDistance(org.apache.hadoop.net.Node,org.apache.hadoop.net.Node[],int)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getInputStream(java.net.Socket,long)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getOutputStream(java.net.Socket,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.StatsDSink:writeMetric(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopologyWithNodeGroup:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:connect(java.net.Socket,java.net.SocketAddress,java.net.SocketAddress,int)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m8": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:<init>(java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSource,java.lang.Iterable,long,org.apache.hadoop.metrics2.impl.MetricsConfig)": {
            "getFilter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:snapshotMetrics(org.apache.hadoop.metrics2.impl.MetricsSourceAdapter,org.apache.hadoop.metrics2.impl.MetricsBufferBuilder)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.21,
                "total_score": 0.26
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.49
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:updateJmxCache()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.12
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.MBeans:register(java.lang.String,java.lang.String,java.util.Map,java.lang.Object)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:unregisterSource(java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:stopSources()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newInverseQuantiles(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ReadWriteDiskValidatorMetrics:<init>()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "newQuantiles": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:<init>(java.lang.String,double,long)": {
            "computeCapacity": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation:init(java.lang.Class)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation:init(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation:aggregateLocalStatesToGlobalMetrics(java.util.concurrent.ConcurrentMap)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newRate(java.lang.String,java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRates:init(java.lang.Class)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.DecayRpcSchedulerDetailedMetrics:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "tag": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.27
            },
            "info": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcDetailedMetrics:<init>(int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "tag": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.27
            },
            "info": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:addResponseTime(java.lang.String,org.apache.hadoop.ipc.Schedulable,org.apache.hadoop.ipc.ProcessingDetails)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:updateDeferredMetrics(java.lang.String,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:updateMetrics(org.apache.hadoop.ipc.Server$Call,long,boolean)": {
            "m2": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m3": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.53,
                "total_score": 0.27
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.92,
                "indegree_score": 0.77,
                "total_score": 0.64
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.56
            },
            "m7": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m8": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m9": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.14
            },
            "m10": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m11": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m12": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m13": {
                "count_score": 0.03,
                "dataflow_score": 0.33,
                "indegree_score": 0.33,
                "total_score": 0.24
            },
            "m14": {
                "count_score": 0.03,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m16": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m17": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m18": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m19": {
                "count_score": 0.03,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m20": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m21": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsSourceBuilder:add(java.lang.Object,java.lang.reflect.Method)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:getMetrics(org.apache.hadoop.metrics2.MetricsCollector,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateKeyLength()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateUGI(java.lang.String,org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:verifyFileIsValid(java.io.File,java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateShortName()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:getUser()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 0.76,
                "total_score": 0.56
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.33,
                "indegree_score": 0.72,
                "total_score": 0.42
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.util.ProtoUtil:getUgi(org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$UserInformationProto)": {
            "m5": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:<init>(org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Ls:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Count:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.RSErasureCodec:createEncoder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.HHXORErasureCodec:createEncoder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.DummyErasureCodec:createEncoder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.XORErasureCodec:createEncoder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.DummyErasureCodec:createDecoder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.XORErasureCodec:createDecoder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.RSErasureCodec:createDecoder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.codec.HHXORErasureCodec:createDecoder()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:checkAndUpdateMaps()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:createConnection()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:forceReloginFromKeytab()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:reloginFromKeytab(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:forceReloginFromTicketCache()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:reloginFromTicketCache()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec:createEncryptor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec:createDecryptor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$EncryptedQueueRefiller:fillQueueForKey(java.lang.String,java.util.Queue,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:generateEncryptedKey(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:drain(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:queueCall(org.apache.hadoop.ipc.Server$Call)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:createSocketAddrForHost(java.lang.String,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:canonicalizeHost(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getLocalInetAddress(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:sendSaslMessage(java.io.OutputStream,org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:writeConnectionContext(org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.security.SaslRpcServer$AuthMethod)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.48,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.7,
                "total_score": 0.47
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.19
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.48,
                "total_score": 0.38
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.48,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:sendRpcRequest(org.apache.hadoop.ipc.Client$Call)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.11
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getPriorityLevel(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:receiveRpcResponse()": {
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.54
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m14": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.46
            },
            "m17": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m18": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.13
            },
            "m26": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:processRpcRequest(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto,org.apache.hadoop.ipc.RpcWritable$Buffer)": {
            "m2": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.39,
                "total_score": 0.32
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.9,
                "total_score": 0.53
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m15": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m16": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m22": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m23": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.17
            },
            "m26": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.39,
                "total_score": 0.32
            },
            "m28": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.39,
                "total_score": 0.32
            },
            "m31": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.28
            },
            "m35": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m42": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:setupResponse(org.apache.hadoop.ipc.Server$RpcCall,org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto,org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto,org.apache.hadoop.io.Writable,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m14": {
                "count_score": 0.6,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.57
            },
            "m18": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:wrapWithSasl(org.apache.hadoop.ipc.Server$RpcCall)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m11": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:initializeAuthContext(int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.CacheableIPList:reset()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:remove(java.lang.Object)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.56
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.57
            }
        }
    },
    {
        "org.apache.hadoop.util.LightWeightCache:put(java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:toString(boolean,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Count:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.26
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage:toString(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSInputChecker:read(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.ExpressionFactory:createExpression(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFactory:getInstance(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:newKey()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SortedMapWritable:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.io.GenericWritable:readFields(java.io.DataInput)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.SerializationFactory:add(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.WritableSerialization$WritableDeserializer:deserialize(org.apache.hadoop.io.Writable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapWritable:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m7": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableFactories:newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getSocketFactoryFromProperty(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:decodeIdentifier()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskValidatorFactory:getInstance(java.lang.Class)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.NodeFencer:createFenceMethod(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedStatistics:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:refresh(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:lazyRefresh(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:<init>(int,int,int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:addRow()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:<init>(int,int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "createVector": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.RetouchedBloomFilter:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:printInstanceHelp(java.io.PrintStream,org.apache.hadoop.fs.shell.Command)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:loadProps(java.util.Properties,int,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:becomeActive()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:quitElection(boolean)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.PositionedReadable:readVectored(java.util.List,java.util.function.IntFunction)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:close()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.58
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:read(org.apache.hadoop.fs.impl.prefetch.BufferData)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:prefetch(org.apache.hadoop.fs.impl.prefetch.BufferData,java.time.Instant)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:<init>(java.lang.String[],java.lang.String[],long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.DurationStatisticSummary:<init>(java.lang.String,boolean,long,long,long,org.apache.hadoop.fs.statistics.MeanStatistic)": {
            "clone": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:aggregate(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "aggregateCounters": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "passthroughFn": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.27
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "aggregateGauges": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "aggregateMinimums": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "aggregateMaximums": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "aggregateMeanStatistics": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "copy": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSnapshot:<init>(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "snapshot": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "createMaps": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators:foreach(org.apache.hadoop.fs.RemoteIterator,org.apache.hadoop.util.functional.ConsumerRaisingIOE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenSecretManagerMetrics:trackInvocation(org.apache.hadoop.util.functional.InvocationRaisingIOE,java.lang.String,org.apache.hadoop.metrics2.lib.MutableRate)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:readFully(long,byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.crypto.CryptoFSDataInputStream:<init>(org.apache.hadoop.fs.FSDataInputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncodingStep:performCoding(java.nio.ByteBuffer[],java.nio.ByteBuffer[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable:writeObject(java.io.DataOutput,java.lang.Object,java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Invocation:write(java.io.DataOutput)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:requestPrefetch(int)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.19
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.72,
                "total_score": 0.63
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:getData(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.BufferPool:acquire(int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.33
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:processPathArgument(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:processPaths(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.RemoteIterator)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:resolvePartialGroupNames(java.lang.String,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.69
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellCommandExecutor:<init>(java.lang.String[],java.io.File)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:execCommand(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:execCommand(java.util.Map,java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:addAll(org.apache.hadoop.security.Credentials)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:mergeAll(org.apache.hadoop.security.Credentials)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DelegationTokenIssuer:addDelegationTokens(java.lang.String,org.apache.hadoop.security.Credentials)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:addToken(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:setWorkingDirectory(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:exists(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:getStatus(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:pathToFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getUriPath(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:setWorkingDirectory(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Stat:<init>(org.apache.hadoop.fs.Path,long,boolean,org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "makeQualified": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "toUri": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:makeQualified(org.apache.hadoop.fs.FileSystem)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:makeQualified(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:makeQualified(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:fixRelativePart(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:open(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileBlockLocations(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFsStatus(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:listCorruptFileBlocks(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:resolveAbstractFileSystems(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:removeAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:listXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:unsetStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.26
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:createMultipartUploader(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getInitialWorkingDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:getWorkingDirectory(com.jcraft.jsch.ChannelSftp)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:<init>()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getInitialWorkingDirectory": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:refreshStatus()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getUsed()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getUsed()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.RegexMountPoint:resolve(java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m16": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m19": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:checkDest(java.lang.String,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.57
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext$PathIterator:advance()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext:ifExists(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile:delete(org.apache.hadoop.fs.FileSystem,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile:delete(org.apache.hadoop.fs.FileSystem,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:findCurrentDirectory(java.util.Date)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:createForWrite(java.io.File,int)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:initFileSystem(java.net.URI)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:extractKMSPath(java.net.URI)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:checkPathsForReservedRaw(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:createInternal(org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.permission.FsPermission,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt,boolean)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.23
            },
            "m5": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.23,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.27
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.23
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getFileBlockLocations(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:mkdir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.36
            },
            "m2": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.23
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.17
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.17
            },
            "m7": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.38
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.22
            },
            "m13": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.23
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.27
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:listStatusForFallbackLink()": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.27
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.75,
                "total_score": 0.63
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.4
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.36
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m6": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.23
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.17
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.17
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.38
            },
            "m15": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:makeTrashRelativePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:innerPutPart(org.apache.hadoop.fs.Path,java.io.InputStream,int,org.apache.hadoop.fs.UploadHandle,long)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.12
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.47
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.33,
                "indegree_score": 0.36,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.26
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.3
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.36
            },
            "m15": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:getParent()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:getOptionalParentPath()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:getDirectoryContentsIterator()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:schemeFromPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.81,
                "total_score": 0.69
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:authorityFromPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.81,
                "total_score": 0.69
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:<init>(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path)": {
            "checkNotNull": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.11
            },
            "getFSofPath": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "getServerDefaults": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.2
            },
            "getFileBufferSize": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "getReplication": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "getBlockSize": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setVerifyChecksum(boolean,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:readFields(java.io.DataInput)": {
            "m4": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m6": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.36
            },
            "m7": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.28
            },
            "m8": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.26
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.27
            },
            "m11": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.71,
                "total_score": 0.37
            },
            "m12": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m13": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.69,
                "total_score": 0.36
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.68,
                "total_score": 0.36
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m17": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.3
            },
            "m18": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.26
            },
            "m19": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.14
            },
            "m20": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.93,
                "total_score": 0.46
            },
            "m21": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.48,
                "total_score": 0.28
            },
            "m22": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.45,
                "total_score": 0.27
            },
            "m23": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.32,
                "total_score": 0.22
            },
            "m24": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.37,
                "total_score": 0.24
            },
            "m25": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.16,
                "total_score": 0.15
            },
            "m26": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:<init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocatedFileStatus:<init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,boolean,boolean,org.apache.hadoop.fs.BlockLocation[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:<init>(org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder,org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getBlockSize": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getChecksumOpt": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getPermission": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:append(org.apache.hadoop.io.WritableComparable,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.service.AbstractService:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Metadata:equals(java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction:equals(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token$PrivateToken:equals(java.lang.Object)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:selectDelegationToken(org.apache.hadoop.security.Credentials)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.BasicDiskValidator:checkStatus(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:write1(byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecodingStep:performCoding(java.nio.ByteBuffer[],java.nio.ByteBuffer[])": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.2
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.rawcoder.DecodingValidator:validate(org.apache.hadoop.io.erasurecode.ECChunk[],int[],org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.ErasureDecodingStep:performCoding(org.apache.hadoop.io.erasurecode.ECChunk[],org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:setupRandPartA()": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:setupNoRandPartA()": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:finish()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:write0(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:finishDataBlock(boolean)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.63,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.63,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:parkCursorAtEnd()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:readTokenStorageStream(java.io.DataInputStream)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:getCandidateTokensForCleanup()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m10": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:getTokenInfoFromZK(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.39
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor:nextRawValue(org.apache.hadoop.io.SequenceFile$ValueBytes)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:removeExpiredStoredToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.21
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsServerDefaults:readFields(java.io.DataInput)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:writeProto(java.io.DataOutput)": {
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m6": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufHelper:protoFromToken(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenIdentifier:<init>(org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryInvocationHandler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.67,
                "indegree_score": 1.0,
                "total_score": 0.64
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.54
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:entry()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:compareCursorKeyTo(org.apache.hadoop.io.file.tfile.RawComparable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry:get(org.apache.hadoop.io.BytesWritable,org.apache.hadoop.io.BytesWritable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:inBlockAdvance(long)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:getDelegationToken(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:renewDelegationToken(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token,org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:cancelDelegationToken(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token,org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getInputStream(java.net.Socket)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getOutputStream(java.net.Socket)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.StatsDSink:putMetrics(org.apache.hadoop.metrics2.MetricsRecord)": {
            "m3": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.25
            },
            "m5": {
                "count_score": 0.37,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.51
            },
            "m2": {
                "count_score": 0.42,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.45
            },
            "m14": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:connect(java.net.Socket,java.net.SocketAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:sampleMetrics()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:getAttribute(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:getAttributes(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:getMBeanInfo()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.MBeans:register(java.lang.String,java.lang.String,java.lang.Object)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:stop()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.util.ReadWriteDiskValidatorMetrics:getMetric(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation:init(java.lang.Class,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.DecayRpcSchedulerDetailedMetrics:init(int)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation:snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder,boolean)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation:collectThreadLocalStates()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter:<init>(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSink,java.lang.String,org.apache.hadoop.metrics2.MetricsFilter,org.apache.hadoop.metrics2.MetricsFilter,org.apache.hadoop.metrics2.MetricsFilter,int,int,int,float,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "checkArg": {
                "count_score": 0.31,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "newRate": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.17
            },
            "newCounter": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "newGauge": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newRate(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newRate(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.DecayRpcSchedulerDetailedMetrics:create(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcDetailedMetrics:create(int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Handler:run()": {
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m17": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.26
            },
            "m18": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m19": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m21": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m11": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.09
            },
            "m12": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.09
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.14
            },
            "m22": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.17
            },
            "m23": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.09
            },
            "m24": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m26": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.32
            },
            "m25": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:dumpKeytab(java.io.File)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m14": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateJAAS(boolean)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.29
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateNTPConf()": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.31
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:getTokenRealOwner(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.11
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.util.ProtoUtil:getUgi(org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$IpcConnectionContextProto)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:getUid(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:getGid(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:getUserName(int,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:getGroupName(int,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:ensureParentZNode()": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.19
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m12": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:getActiveData()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:reEstablishSession()": {
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:checkTGTAndReloginFromKeytab()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:reloginFromKeytab()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:createSocketAddr(java.lang.String,int,java.lang.String,boolean,boolean)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getConnectAddress(java.net.InetSocketAddress)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:updateAddress()": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getCanonicalUri(java.net.URI,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:call(org.apache.hadoop.ipc.RPC$RpcKind,org.apache.hadoop.io.Writable,org.apache.hadoop.ipc.Client$ConnectionId,int,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.75,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m11": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:run()": {
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.util.CacheableIPList:isIn(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:waitForCompletion(org.apache.hadoop.ipc.RetryCache$CacheEntry)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.18
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.18
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:addCacheEntry(byte[],int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:addCacheEntryWithPayload(byte[],int,java.lang.Object)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:toString(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.QuotaUsage:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.ExpressionFactory:getExpression(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.ExpressionFactory:createExpression(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:buildDescription(org.apache.hadoop.fs.shell.find.ExpressionFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:getExpression(java.lang.Class)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandFactory:getInstance(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:<init>(java.lang.Class,org.apache.hadoop.conf.Configuration,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "newKey": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable:readObject(java.io.DataInput,org.apache.hadoop.io.ObjectWritable,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.56
            },
            "m15": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableFactories:newInstance(java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:decodeTokenIdentifier(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:identifierToString(java.lang.StringBuilder)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:printCredentials(org.apache.hadoop.security.Credentials,org.apache.hadoop.io.Text,java.io.PrintStream)": {
            "m13": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.37
            },
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.11
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.11
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.33
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.11
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m11": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m12": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskValidatorFactory:getInstance(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.NodeFencer:parseMethod(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "refresh": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.HostsFileReader:refresh()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.bloom.DynamicBloomFilter:add(org.apache.hadoop.util.bloom.Key)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResourceObject(org.apache.hadoop.conf.Configuration$Resource)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getProps()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.BufferedFSInputStream:readVectored(java.util.List,java.util.function.IntFunction)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataInputStream:readVectored(java.util.List,java.util.function.IntFunction)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:getInternal(org.apache.hadoop.fs.impl.prefetch.BufferData)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.7,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.66,
                "total_score": 0.45
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.21
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.fs.BlockLocation:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getFileBlockLocations(org.apache.hadoop.fs.FileStatus,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.DurationStatisticSummary:fetchDurationSummary(org.apache.hadoop.fs.statistics.IOStatistics,java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.impl.IOStatisticsContextImpl:snapshot()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.IOStatisticsSupport:snapshotIOStatistics(org.apache.hadoop.fs.statistics.IOStatistics)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsSnapshot_create(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators:toList(org.apache.hadoop.fs.RemoteIterator)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenSecretManagerMetrics:trackStoreToken(org.apache.hadoop.util.functional.InvocationRaisingIOE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenSecretManagerMetrics:trackUpdateToken(org.apache.hadoop.util.functional.InvocationRaisingIOE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenSecretManagerMetrics:trackRemoveToken(org.apache.hadoop.util.functional.InvocationRaisingIOE)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncodingStep:performCoding(org.apache.hadoop.io.erasurecode.ECChunk[],org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.EnumSetWritable:write(java.io.DataOutput)": {
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:processArgument(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:getUnixGroups(java.lang.String)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.69
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping$RawScriptBasedMapping:runResolveCommand(java.util.List,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m9": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell$ShellCommandExecutor:<init>(java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:readLink(java.io.File)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:execCommand(java.io.File,java.lang.String[])": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.22,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m2": {
                "count_score": 0.22,
                "dataflow_score": 0.67,
                "indegree_score": 0.97,
                "total_score": 0.65
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.43,
                "total_score": 0.3
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.54,
                "total_score": 0.45
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.7,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsNetgroupMapping:execShellGetUserForNetgroup(java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$TicketCacheRenewalRunnable:relogin()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.LocalKeyStoreProvider:stashOriginalFilePermissions()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:<init>(org.apache.hadoop.security.Credentials)": {
            "addAll": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:addCredentials(org.apache.hadoop.security.Credentials)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:createNonRecursive(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:toFile()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:mkdirsWithExistsAndPermissionCheck(org.apache.hadoop.fs.LocalFileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.38,
                "total_score": 0.53
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:setWorkingDirectory(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:getNativeFileLinkStatus(org.apache.hadoop.fs.Path,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getResolvedQualifiedPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.49
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:getEnclosingRoot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:makeQualified(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:listStatus(java.util.ArrayList,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:listStatus(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:processDeleteOnExit()": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:exists(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setWorkingDirectory(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.23
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:checkDest(java.lang.String,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:getContentSummary(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.19
            },
            "m2": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.67
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.25,
                "total_score": 0.29
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.16,
                "total_score": 0.25
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m11": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m12": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.38
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.2
            },
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.18
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getDelegationTokens(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:createSnapshot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.MultipartUploaderBuilderImpl:<init>(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.2
            },
            "getServerDefaults": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "getFileBufferSize": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.25
            },
            "getReplication": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.17
            },
            "getBlockSize": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommandWithMultiThread:hasMoreThanOneSourcePaths(java.util.LinkedList)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Truncate:waitForRecovery()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:tryResolveInRegexMountpoint(java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext$PathIterator:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.fs.Path[])": {
            "advance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext$PathIterator:next()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:ifExists(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.LocalKeyStoreProvider:initFileSystem(java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:archivePath(org.apache.hadoop.fs.Path)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getPathInHar(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.07,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.38
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:makeRelative(java.lang.String,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.42
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:getChecksumFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:createCollectorPath(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.2,
                "indegree_score": 0.63,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.33
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.6,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:parentExists()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.91,
                "total_score": 0.81
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Mkdir:processNonexistentPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.36,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.48
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.85,
                "total_score": 0.67
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:primitiveMkdir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Options$Rename[])": {
            "m1": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m4": {
                "count_score": 0.57,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:getNflyTmpPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:getChecksumFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.BulkDeleteUtils:validatePathIsUnderParent(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:isRoot()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:suffix(java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSLinkResolver:qualifySymlinkTarget(java.net.URI,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.52,
                "total_score": 0.61
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.09
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.09
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.25
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.52
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.34
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext:createPath(org.apache.hadoop.fs.Path,java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.09
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:createInternal(org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.permission.FsPermission,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt,boolean)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.17
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$FCDataOutputStreamBuilder:<init>(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "checkNotNull": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:<init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:<init>(org.apache.hadoop.fs.FileStatus)": {
            "getLen": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.32
            },
            "isDirectory": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "getReplication": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.17
            },
            "getBlockSize": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.14
            },
            "getModificationTime": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "getAccessTime": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.15
            },
            "getPermission": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "getOwner": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.19
            },
            "getGroup": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.18
            },
            "isSymlink": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.18
            },
            "getSymlink": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.14
            },
            "getPath": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Stat:parseExecResult(java.io.BufferedReader)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode:cloneStatus()": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.18
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.21
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.16
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.19
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocatedFileStatus:<init>(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.BlockLocation[])": {
            "getLen": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.36
            },
            "isDirectory": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "getReplication": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.26
            },
            "getBlockSize": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.24
            },
            "getModificationTime": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.28
            },
            "getAccessTime": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.25
            },
            "getPermission": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.28
            },
            "getOwner": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "getGroup": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.27
            },
            "getPath": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.38
            },
            "hasAcl": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            },
            "isEncrypted": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.1
            },
            "isErasureCoded": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.12
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "isSymlink": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.27
            },
            "getSymlink": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocatedFileStatus:<init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.BlockLocation[])": {
            "getAclBit": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getEncryptedBit": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getErasureCodedBit": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:build()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayFile$Writer:append(org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.24
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:selectDelegationToken(org.apache.hadoop.security.Credentials)": {
            "m1": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSOutputSummer:write(byte[],int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecodingStep:performCoding(org.apache.hadoop.io.erasurecode.ECChunk[],org.apache.hadoop.io.erasurecode.ECChunk[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:setupRandPartC()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:setupBlock()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:setupNoRandPartC()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:finalize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:close()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionOutputStream:finish()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:write(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2OutputStream:write(byte[],int,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer$ValueRegister:close()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:seekToEnd()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:close()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:readTokenStorageFile(java.io.File,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:getTokenInfoFromZK(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:removeStoredToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier,boolean)": {
            "m1": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.31
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.13
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:writeProtobufOutputStream(java.io.DataOutputStream)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:decodeToken(org.apache.hadoop.security.token.Token,org.apache.hadoop.io.Text)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager$DelegationTokenSecretManager:createIdentifier()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager$ZKSecretManager:createIdentifier()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSDelegationToken$KMSDelegationTokenIdentifier:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.LossyRetryInvocationHandler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:inBlockAdvance(org.apache.hadoop.io.file.tfile.RawComparable,boolean)": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.77
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$IpcStreams:<init>(java.net.Socket,int)": {
            "getInputStream": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "setInputStream": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getOutputStream": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "setOutputStream": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:onTimerEvent()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:publishMetricsNow()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:initSystemMBean()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:startMBeans()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:<init>(java.lang.String,int,org.apache.hadoop.ipc.DecayRpcScheduler)": {
            "setDelegate": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.3
            },
            "register": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "registerMetrics2Source": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue$MetricsProxy:<init>(java.lang.String)": {
            "register": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "instance": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:shutdown()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.ReadWriteDiskValidator:checkStatus(java.io.File)": {
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.24
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m15": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcDetailedMetrics:init(java.lang.Class)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages$RatesRoller:run()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages:collectThreadLocalStates()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:newSink(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSink,org.apache.hadoop.metrics2.impl.MetricsConfig)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:add(java.lang.String,long)": {
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.34
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:addTokenForOwnerStats(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:removeTokenForOwnerStats(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:getUidAllowingUnknown(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:getGidAllowingUnknown(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:getCurrentActive()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:<init>(java.lang.String,int,java.lang.String,java.util.List,java.util.List,org.apache.hadoop.ha.ActiveStandbyElector$ActiveStandbyElectorCallback,int,boolean,org.apache.hadoop.security.SecurityUtil$TruststoreKeystore)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "createConnection": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.23
            },
            "reEstablishSession": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:joinElectionInternal()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$KeytabRenewalRunnable:relogin()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:createSocketAddrUnresolved(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:createSocketAddr(java.lang.String,int,java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getConnectAddress(org.apache.hadoop.ipc.Server)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:setupConnection(org.apache.hadoop.security.UserGroupInformation)": {
            "m11": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.56,
                "total_score": 0.39
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.6,
                "total_score": 0.41
            },
            "m18": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.28
            },
            "m19": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            },
            "m21": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m22": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m23": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m25": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m27": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:call(org.apache.hadoop.ipc.RPC$RpcKind,org.apache.hadoop.io.Writable,org.apache.hadoop.ipc.Client$ConnectionId,java.util.concurrent.atomic.AtomicBoolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:call(org.apache.hadoop.ipc.RPC$RpcKind,org.apache.hadoop.io.Writable,org.apache.hadoop.ipc.Client$ConnectionId,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:call(org.apache.hadoop.ipc.RPC$RpcKind,org.apache.hadoop.io.Writable,org.apache.hadoop.ipc.Client$ConnectionId,int,java.util.concurrent.atomic.AtomicBoolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:waitForCompletion(org.apache.hadoop.ipc.RetryCache,byte[],int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RetryCache:waitForCompletion(org.apache.hadoop.ipc.RetryCache,java.lang.Object,byte[],int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.fs.ContentSummary:toString()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:getExpression(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:printInfo(java.io.PrintStream,java.lang.String,boolean)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.79,
                "total_score": 0.68
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.2
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.26
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.33,
                "indegree_score": 0.5,
                "total_score": 0.33
            },
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.35
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:displayError(java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:get(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:<init>(java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:<init>(java.lang.Class,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ObjectWritable:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Invocation:readFields(java.io.DataInput)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayWritable:readFields(java.io.DataInput)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:verifyToken(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.security.token.Token:toString()": {
            "m1": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:<init>(java.lang.String)": {
            "getInstance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.NodeFencer:parseMethods(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:append(org.apache.hadoop.io.WritableComparable,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.26
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(java.net.URL,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(org.apache.hadoop.fs.Path,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(java.io.InputStream,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(java.io.InputStream,java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setDeprecatedProperties()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:updatePropertiesWithDeprecatedKeys(org.apache.hadoop.conf.Configuration$DeprecationContext,java.lang.String[])": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:<init>(org.apache.hadoop.conf.Configuration)": {
            "getClassLoader": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            },
            "getProps": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getQuietMode": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "setQuietMode": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getAlternativeNames(java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.3
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getPropertySources(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:size()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:clear()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:iterator()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.42
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.3
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getValByRegex(java.lang.String)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:readVectored(java.util.List,java.util.function.IntFunction)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m11": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.23
            },
            "m18": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.CachingBlockManager:get(int)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SetReplication:waitForReplication()": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.25
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getFileBlockLocations(org.apache.hadoop.fs.Path,long,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getFileBlockLocations(org.apache.hadoop.fs.FileStatus,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.statistics.DurationStatisticSummary:fetchSuccessSummary(org.apache.hadoop.fs.statistics.IOStatistics,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsSnapshot_create()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedStatistics:iostatisticsSnapshot_retrieve(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.RemoteIterators:toArray(org.apache.hadoop.fs.RemoteIterator,java.lang.Object[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:createPassword(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.72
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.58,
                "total_score": 0.58
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.24
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.13
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.13
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.14
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:renewToken(org.apache.hadoop.security.token.Token,java.lang.String)": {
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "m3": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.23,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.26
            },
            "m7": {
                "count_score": 0.03,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.71
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.14
            },
            "m10": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.31
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.39
            },
            "m15": {
                "count_score": 0.03,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.38
            },
            "m16": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.23
            },
            "m17": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.12
            },
            "m19": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.17
            },
            "m22": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.12
            },
            "m23": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.15
            },
            "m25": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:cancelToken(org.apache.hadoop.security.token.Token,java.lang.String)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.28
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.26
            },
            "m4": {
                "count_score": 0.31,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.33
            },
            "m6": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.34
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            },
            "m11": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.41
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:processArguments(java.util.LinkedList)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:getGroups(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:getGroupsSet(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping$RawScriptBasedMapping:resolve(java.util.List)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HardLink:getLinkCount(java.io.File)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.28
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.33
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unTarUsingTar(java.io.File,java.io.File,boolean)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:symLink(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.31,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.79
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.29
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.23
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:chmod(java.lang.String,java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.21
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.39
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoLinux:getConf(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getSystemInfoInfoFromShell()": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.21
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.37
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.25
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:checkIsBashSupported()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.util.Shell:isSetsidSupported()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:loadPermissionInfoByNonNativeIO()": {
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.4
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.44
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "m14": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:setOwner(java.io.File,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:execSetPermission(java.io.File,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.37
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsNetgroupMapping:getUsersForNetgroup(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getCredentials()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.33
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.UserProvider:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:flush()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:checkDirInternal(org.apache.hadoop.fs.LocalFileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.57
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getEnclosingRoot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:listStatus(org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.PathFilter)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$FileContextFinalizer:run()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommandWithMultiThread:isMultiThreadNecessary(java.util.LinkedList)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Truncate:processArguments(java.util.LinkedList)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:resolve(java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m4": {
                "count_score": 0.24,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.28
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m11": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.07
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.16,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.23
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getFileHarStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:<init>(org.apache.hadoop.fs.ChecksumFs,org.apache.hadoop.fs.Path,int)": {
            "getReplication": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "getRawFs": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getChecksumFile": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.25
            },
            "getBytesPerSum": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "newCrc32": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.14,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSOutputSummer:<init>(org.apache.hadoop.fs.ChecksumFs,org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.permission.FsPermission,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt,boolean)": {
            "getBytesPerSum": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            },
            "newDataChecksum": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getRawFs": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getChecksumFile": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:processArguments(java.util.LinkedList)": {
            "m4": {
                "count_score": 0.56,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:mkdir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:rename(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Options$Rename[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Options$Rename[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.InternalOperations:rename(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Options$Rename[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$FsOperation:run(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:<init>(org.apache.hadoop.fs.ChecksumFileSystem,org.apache.hadoop.fs.Path,int)": {
            "getReplication": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getRawFileSystem": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getChecksumFile": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.24
            },
            "getBytesPerSum": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "newCrc32": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.4,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.86,
                "total_score": 0.73
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.64
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSOutputSummer:<init>(org.apache.hadoop.fs.ChecksumFileSystem,org.apache.hadoop.fs.Path,boolean,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.permission.FsPermission)": {
            "getBytesPerSum": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.23
            },
            "newDataChecksum": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.27
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getRawFileSystem": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.23
            },
            "getChecksumFile": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:isAncestor(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:fullPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:stripOutRoot(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:stripOutRoot(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:createCheckpoint(org.apache.hadoop.fs.Path,java.util.Date)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.32
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSLinkResolver:resolve(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.26
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.21
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.17,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Options$Rename[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:toFileStatus(org.apache.hadoop.fs.HarFileSystem$HarStatus)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.31
            },
            "m1": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m6": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.39
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.37
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.38
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.41
            },
            "m11": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.4
            },
            "m13": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:<init>(java.io.File,long,org.apache.hadoop.fs.FileSystem)": {
            "getLastAccessTime": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.34
            },
            "makeQualified": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileStatus:<init>(long,boolean,int,long,long,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:getFileStatus(org.apache.commons.net.ftp.FTPFile,org.apache.hadoop.fs.Path)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:setupRandPartB()": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:changeStateToProcessABlock()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:init()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:setupNoRandPartB()": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionOutputStream:close()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionOutputStream:write(int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionOutputStream:write(byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:verify(java.io.File,org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:printTokenFile(java.io.File,org.apache.hadoop.io.Text,org.apache.hadoop.conf.Configuration,java.io.PrintStream)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:getTokenInfo(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:syncLocalCacheWithZk(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:removeStoredToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:writeTokenStorageToStream(java.io.DataOutputStream,org.apache.hadoop.security.Credentials$SerializedFormat)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.28
            },
            "newArrayList": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "initSystemMBean": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:startMetricsMBeans()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter:start()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler$MetricsProxy:getInstance(java.lang.String,int,org.apache.hadoop.ipc.DecayRpcScheduler)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue$MetricsProxy:getInstance(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Server$WritableRpcInvoker:call(org.apache.hadoop.ipc.RPC$Server,java.lang.String,org.apache.hadoop.io.Writable,long)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.22
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m18": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m19": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m22": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.3
            },
            "m17": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.68,
                "total_score": 0.62
            },
            "m23": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Server:processCall(org.apache.hadoop.ipc.RPC$Server,java.lang.String,org.apache.hadoop.ipc.RpcWritable$Buffer,java.lang.String,org.apache.hadoop.ipc.RPC$Server$ProtoClassProtoImpl)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.41
            },
            "m13": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "m11": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.24
            },
            "m15": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m16": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker:call(org.apache.hadoop.ipc.RPC$Server,java.lang.String,org.apache.hadoop.ipc.RpcWritable$Buffer,java.lang.String,org.apache.hadoop.ipc.RPC$Server$ProtoClassProtoImpl)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.41
            },
            "m13": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "m11": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.24
            },
            "m15": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m16": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages$RatesRoller:<init>(org.apache.hadoop.metrics2.lib.MutableRollingAverages)": {
            "run": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:registerSink(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSink)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.51
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:newSink(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.impl.MetricsConfig)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRates:add(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:addPersistedDelegationToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier,long)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.41
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            },
            "m8": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.45
            },
            "m11": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m14": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:syncTokenOwnerStats()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:removeExpiredToken()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.2
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m13": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:<init>(java.lang.String,int,java.lang.String,java.util.List,java.util.List,org.apache.hadoop.ha.ActiveStandbyElector$ActiveStandbyElectorCallback,int,org.apache.hadoop.security.SecurityUtil$TruststoreKeystore)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:joinElection(byte[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:reJoinElection(int)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:createSocketAddr(java.lang.String,int,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Invoker:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.23
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.47
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.58,
                "total_score": 0.57
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.17
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.29
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
            "m2": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.43
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.49,
                "total_score": 0.52
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.43
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.13
            },
            "m18": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m20": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m19": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Invoker:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
            "m2": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.43
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.49,
                "total_score": 0.52
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.43
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.23
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.13
            },
            "m18": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m20": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m19": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:parseExpression(java.util.Deque)": {
            "m1": {
                "count_score": 0.44,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:printUsage(java.io.PrintStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:printUsage(java.io.PrintStream,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:printHelp(java.io.PrintStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:printHelp(java.io.PrintStream,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:get(java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.ByteWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.IntWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableComparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.Text$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.NullWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.LongWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.DoubleWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MD5Hash$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ShortWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.FloatWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BytesWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BooleanWritable$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.UTF8$Comparator:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:authenticate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.22
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.48,
                "total_score": 0.54
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.13
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.43
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.ha.NodeFencer:<init>(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "parseMethods": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:handleDeprecation(org.apache.hadoop.conf.Configuration$DeprecationContext,java.lang.String)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.33
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.13
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.13
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.25
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            },
            "m13": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.ha.ShellCommandFencer:setConfAsEnvVars(java.util.Map)": {
            "iterator": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:setHeaders(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.security.HttpCrossOriginFilterInitializer:getFilterParameters(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.SetReplication:processArguments(java.util.LinkedList)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getFileBlockLocations(org.apache.hadoop.fs.Path,long,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getFileBlockLocations(org.apache.hadoop.fs.FileStatus,long,long)": {
            "m1": {
                "count_score": 0.27,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.3
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.31
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.95,
                "total_score": 0.56
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.76,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:renewToken(org.apache.hadoop.security.token.Token,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:cancelToken(org.apache.hadoop.security.token.Token,java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:cancelToken(org.apache.hadoop.security.token.Token,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsNetgroupMapping:getGroups(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:unTar(java.io.File,java.io.File)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:chmod(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:setReadable(java.io.File,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:setWritable(java.io.File,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:setExecutable(java.io.File,boolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:refreshIfNeeded()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:loadPermissionInfo()": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.41
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:setPermission(java.io.File,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "m2": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.31
            },
            "m3": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m6": {
                "count_score": 0.52,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.41
            },
            "m8": {
                "count_score": 0.26,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsNetgroupMapping:cacheGroupsAdd(java.util.List)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:dumpTokens(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.21
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.31,
                "total_score": 0.47
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:logUserInfo(org.slf4j.Logger,java.lang.String,org.apache.hadoop.security.UserGroupInformation)": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:containsKmsDt(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.73,
                "total_score": 0.69
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:checkDir(org.apache.hadoop.fs.LocalFileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.DiskChecker:checkDirWithDiskIo(org.apache.hadoop.fs.LocalFileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:listStatus(org.apache.hadoop.fs.Path[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getEnclosingRoot(org.apache.hadoop.fs.Path)": {
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:append(org.apache.hadoop.fs.Path,int,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:createNonRecursive(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.76
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.36
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.9,
                "total_score": 0.76
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.75
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getFileChecksum(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:listLocatedStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.77
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:mkdirs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.96,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:removeAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:listXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getDefaultReplication(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.96,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getContentSummary(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getQuotaUsage(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:unsetStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getUsed()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.77
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.29
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getFileBlockLocations(org.apache.hadoop.fs.FileStatus,long,long)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.27,
                "total_score": 0.3
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.17,
                "total_score": 0.26
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.17,
                "total_score": 0.29
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.4,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:<init>(org.apache.hadoop.fs.ChecksumFs,org.apache.hadoop.fs.Path)": {
            "getFileBufferSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:open(org.apache.hadoop.fs.Path,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:createInternal(org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.permission.FsPermission,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommandWithMultiThread:processArguments(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.56
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.82
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:isValidName(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.37
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:createInternal(org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.permission.FsPermission,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getFileBlockLocations(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:listStatusIterator(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:mkdir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:removeAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:listXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:unsetStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m3": {
                "count_score": 0.31,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.09
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.63
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$WrappingRemoteIterator:next()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getChrootedPath(org.apache.hadoop.fs.viewfs.InodeTree$ResolveResult,org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.47
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.23
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.44,
                "dataflow_score": 0.67,
                "indegree_score": 0.63,
                "total_score": 0.59
            },
            "m4": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.77
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.63,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.44,
                "dataflow_score": 0.67,
                "indegree_score": 0.63,
                "total_score": 0.59
            },
            "m4": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.77
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.63,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Options$Rename[])": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.77
            },
            "m2": {
                "count_score": 0.22,
                "dataflow_score": 0.5,
                "indegree_score": 0.46,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.22,
                "dataflow_score": 0.5,
                "indegree_score": 0.35,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:fileStatusesInIndex(org.apache.hadoop.fs.HarFileSystem$HarStatus,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:deprecatedGetFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocatedFileStatus:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyStatus:<init>(org.apache.hadoop.fs.viewfs.ChRootedFileSystem,org.apache.hadoop.fs.FileStatus)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.05
            },
            "getPath": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "stripOutRoot": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsFileStatus:<init>(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:getFileStatus(com.jcraft.jsch.ChannelSftp,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.18
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.36
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.57,
                "total_score": 0.57
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.AbstractHttpFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:doGlob()": {
            "m1": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m2": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.11,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.03,
                "dataflow_score": 0.22,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.35
            },
            "m9": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m10": {
                "count_score": 0.03,
                "dataflow_score": 0.11,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m11": {
                "count_score": 0.03,
                "dataflow_score": 0.11,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "m15": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m4": {
                "count_score": 0.36,
                "dataflow_score": 1.0,
                "indegree_score": 0.91,
                "total_score": 0.77
            },
            "m17": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.2
            },
            "m19": {
                "count_score": 0.03,
                "dataflow_score": 0.11,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m18": {
                "count_score": 0.08,
                "dataflow_score": 0.22,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m22": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.41
            },
            "m20": {
                "count_score": 0.03,
                "dataflow_score": 0.11,
                "indegree_score": 0.56,
                "total_score": 0.27
            },
            "m23": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.35
            },
            "m24": {
                "count_score": 0.05,
                "dataflow_score": 0.22,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:notFoundStatus(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:getFileStatus(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.18
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.8,
                "total_score": 0.67
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.44
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:<init>(java.io.InputStream,org.apache.hadoop.io.compress.SplittableCompressionCodec$READ_MODE,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "init": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "skipToNextBlockMarker": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "changeStateToProcessABlock": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:read0()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell$Print:execute()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:cancelToken(org.apache.hadoop.security.token.Token,java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:writeTokenStorageToStream(java.io.DataOutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:registerSource(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSource)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker:call(org.apache.hadoop.ipc.RPC$Server,java.lang.String,org.apache.hadoop.ipc.RpcWritable$Buffer,long,java.lang.String,java.lang.String,long)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableRollingAverages:replaceScheduledTask(int,long,java.util.concurrent.TimeUnit)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:register(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSink)": {
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:configureSinks()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m11": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m13": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:recheckElectability()": {
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:reJoinElectionAfterFailureToBecomeActive()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:processWatchEvent(org.apache.zookeeper.ZooKeeper,org.apache.zookeeper.WatchedEvent)": {
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m8": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m11": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:createSocketAddr(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.28
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m13": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m15": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.14
            },
            "m17": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.MultiSchemeDelegationTokenAuthenticationHandler:authenticate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:handleDeprecation()": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:onlyKeyExists(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getRaw(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:set(java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.21
            },
            "m6": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.37
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.17
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.1
            },
            "m12": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:unset(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.22
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.ha.ShellCommandFencer:tryFence(org.apache.hadoop.ha.HAServiceTarget,java.lang.String)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.58
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m16": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:grantPermissions(java.io.File)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getVirtualMemorySize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getPhysicalMemorySize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getAvailableVirtualMemorySize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getAvailablePhysicalMemorySize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getNumProcessors()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getCpuFrequency()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getCumulativeCpuTime()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getCpuUsagePercentage()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getNumVCoresUsed()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getNetworkBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getNetworkBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getStorageBytesRead()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getStorageBytesWritten()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:getPermission()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:getOwner()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:getGroup()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:write(java.io.DataOutput)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.LocalKeyStoreProvider:flush()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsNetgroupMapping:cacheGroupsRefresh()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:delete(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getStatus()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemUtil:updateMountPointFsStatus(org.apache.hadoop.fs.viewfs.ViewFileSystem,java.util.Map,org.apache.hadoop.fs.viewfs.ViewFileSystem$MountPoint,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFs$ChecksumFSInputChecker:read(long,byte[],int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Put:processArguments(java.util.LinkedList)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:createNonRecursive(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:createNonRecursive(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:renameInternal(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.61
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.61
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:getFileLinkStatusInternal(org.apache.hadoop.fs.Path,boolean)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFsLocatedFileStatus:<init>(org.apache.hadoop.fs.LocatedFileStatus,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getFileBlockLocations(org.apache.hadoop.fs.FileStatus,long,long)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.99,
                "total_score": 0.62
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.76
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:getFileStatus(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:listStatus(org.apache.hadoop.fs.Path)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.33
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:exists(com.jcraft.jsch.ChannelSftp,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:getFileStatus(com.jcraft.jsch.ChannelSftp,com.jcraft.jsch.ChannelSftp$LsEntry,org.apache.hadoop.fs.Path)": {
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.22
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.21
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.43
            },
            "m11": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.38
            },
            "m14": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m18": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.16,
                "total_score": 0.25
            },
            "m19": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.16,
                "total_score": 0.25
            },
            "m20": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.64,
                "total_score": 0.59
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:isFile(com.jcraft.jsch.ChannelSftp,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Globber:glob()": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.23
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.16
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:exists(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:listStatus(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.24
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:isFile(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:<init>(java.io.InputStream,org.apache.hadoop.io.compress.SplittableCompressionCodec$READ_MODE)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:numberOfBytesTillNextMarker(java.io.InputStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:read(byte[],int,int)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker:call(org.apache.hadoop.ipc.RPC$Server,java.lang.String,org.apache.hadoop.io.Writable,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsRegistry:newMutableRollingAverages(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:verifyChangedServiceState(org.apache.hadoop.ha.HAServiceProtocol$HAServiceState)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:processResult(int,java.lang.String,java.lang.Object,java.lang.String)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector:processResult(int,java.lang.String,java.lang.Object,org.apache.zookeeper.data.Stat)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m18": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m19": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.ha.ActiveStandbyElector$WatcherWithClientRef:process(org.apache.zookeeper.WatchedEvent)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:createSocketAddr(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.util.Servers:parse(java.lang.String,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:buildDTServiceName(java.net.URI,int)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.51
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:asXmlDocument(java.lang.String,org.apache.hadoop.conf.ConfigRedactor)": {
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m10": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:substituteVars(java.lang.String)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurationServlet:applyChanges(java.io.PrintWriter,org.apache.hadoop.conf.Reconfigurable,javax.servlet.http.HttpServletRequest)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.89,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:set(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigurationWithLogging:set(java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:fullyDelete(java.io.File,boolean)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.util.SysInfoWindows:getNumCores()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemUtil:getStatus(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.32
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.97,
                "total_score": 0.57
            },
            "m11": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.18,
                "dataflow_score": 0.5,
                "indegree_score": 0.17,
                "total_score": 0.27
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m7": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.46
            },
            "m9": {
                "count_score": 0.18,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.Options$ChecksumOpt)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.34
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.68,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.45
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.35,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:wrapLocalFileStatus(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:rename(com.jcraft.jsch.ChannelSftp,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:listStatus(com.jcraft.jsch.ChannelSftp,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.39
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:mkdirs(com.jcraft.jsch.ChannelSftp,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.22,
                "total_score": 0.28
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.34
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:globStatus(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:globStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:rename(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.23
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.44,
                "total_score": 0.53
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.67,
                "indegree_score": 0.16,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.42
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.38
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:delete(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.34,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.34,
                "total_score": 0.33
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.27
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:mkdirs(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.44,
                "total_score": 0.52
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.16,
                "total_score": 0.26
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.37
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.22
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionInputStream:<init>(java.io.InputStream,long,long,org.apache.hadoop.io.compress.SplittableCompressionCodec$READ_MODE)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "readStreamHeader": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "updateReportedByteCount": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "updatePos": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionInputStream:internalReset()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:<init>(java.io.InputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.CBZip2InputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MutableMetricsFactory:newForField(java.lang.reflect.Field,org.apache.hadoop.metrics2.annotation.Metric,org.apache.hadoop.metrics2.lib.MetricsRegistry)": {
            "m3": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.05,
                "dataflow_score": 0.2,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m6": {
                "count_score": 0.05,
                "dataflow_score": 0.2,
                "indegree_score": 0.22,
                "total_score": 0.16
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.4,
                "indegree_score": 0.22,
                "total_score": 0.24
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.6,
                "indegree_score": 0.22,
                "total_score": 0.31
            },
            "m12": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.19
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m13": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m16": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.1
            },
            "m17": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m20": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController$ServiceStateCallBacks:reportServiceStatus(org.apache.hadoop.ha.HAServiceStatus)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:normalizeIP2HostName(java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getTokenServiceAddr(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:buildTokenService(java.net.URI)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink:init(org.apache.commons.configuration2.SubsetConfiguration)": {
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m12": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getCanonicalServiceName()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.44,
                "total_score": 0.58
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:getCanonicalServiceName()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:substituteCommonVariables(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:get(java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:get(java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurationServlet:doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.45
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.15
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m13": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:opt(java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:must(java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:setDefaultUri(org.apache.hadoop.conf.Configuration,java.net.URI)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLink(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkMergeSlash(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkFallback(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkMerge(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.URI[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkNfly(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkRegex(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:setHomeDirConf(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:setUMask(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodecFactory:setCodecClasses(org.apache.hadoop.conf.Configuration,java.util.List)": {
            "m7": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:setDefaultCompressionType(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authentication.server.ProxyUserAuthenticationFilter:getProxyuserConfiguration(javax.servlet.FilterConfig)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationFilter:getProxyuserConfiguration(javax.servlet.FilterConfig)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.security.CompositeGroupsMapping:prepareConf(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.53
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell:init(java.lang.String[])": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:setAuthenticationMethod(org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setInt(java.lang.String,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setLong(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setFloat(java.lang.String,float)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setDouble(java.lang.String,double)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setBoolean(java.lang.String,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setTimeDuration(java.lang.String,long,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setStorageSize(java.lang.String,double,org.apache.hadoop.conf.StorageUnit)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setPattern(java.lang.String,java.util.regex.Pattern)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setStrings(java.lang.String,java.lang.String[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setSocketAddr(java.lang.String,java.net.InetSocketAddress)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setClass(java.lang.String,java.lang.Class,java.lang.Class)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:readFields(java.io.DataInput)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.53
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:fullyDelete(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:fullyDeleteContents(java.io.File,boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsUsage$Df:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m5": {
                "count_score": 0.15,
                "dataflow_score": 0.67,
                "indegree_score": 0.48,
                "total_score": 0.44
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m7": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.13
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:open(org.apache.hadoop.fs.PathHandle,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.89,
                "total_score": 0.73
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:append(org.apache.hadoop.fs.Path,int,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.06,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.2
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.11
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:deprecatedGetFileLinkStatusInternal(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.22
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.39
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.31
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.29
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.33
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.3
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.33
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.32
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.31
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:fixFileStatus(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:delete(com.jcraft.jsch.ChannelSftp,org.apache.hadoop.fs.Path,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.34,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.34,
                "total_score": 0.33
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionInputStream:<init>(java.io.InputStream)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor,long,long,org.apache.hadoop.io.compress.SplittableCompressionCodec$READ_MODE)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionInputStream:read(byte[],int,int)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsSourceBuilder:add(java.lang.Object,java.lang.reflect.Field)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30:init(org.apache.commons.configuration2.SubsetConfiguration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getCanonicalServiceName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getCanonicalServiceName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.StorageType:getConf(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.StorageType,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:getTransferMode(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:setDataConnectionMode(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:getHomeDirValue(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.permission.FsPermission:getUMask(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlockFactory:<init>(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodecFactory:getCodecClasses(org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:getDefaultCompressionType(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.SocksSocketFactory:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.AbstractDNSToSwitchMapping:isSingleSwitchByScriptPolicy()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:createWebAppContext(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.security.authorize.AccessControlList,java.lang.String)": {
            "m11": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m16": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:stringifySecurityProperty(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateHadoopTokenFiles(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "m3": {
                "count_score": 0.3,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.3,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.26
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:locateKeystore()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.09,
                "total_score": 0.44
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:needsPassword()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getLocalHostName(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getClientPrincipal(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:needsPassword()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:getMetricsTimeUnit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:validateSslConfiguration(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTrimmed(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setIfUnset(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTimeDuration(java.lang.String,long,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTimeDuration(java.lang.String,java.lang.String,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getStorageSize(java.lang.String,java.lang.String,org.apache.hadoop.conf.StorageUnit)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.32
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getStorageSize(java.lang.String,double,org.apache.hadoop.conf.StorageUnit)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getPattern(java.lang.String,java.util.regex.Pattern)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getStringCollection(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getStrings(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getStrings(java.lang.String,java.lang.String[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTrimmedStringCollection(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTrimmedStrings(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTrimmedStrings(java.lang.String,java.lang.String[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getPropsWithPrefix(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:appendJSONProperty(com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.conf.ConfigRedactor)": {
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurationUtil:getChangedProperties(org.apache.hadoop.conf.Configuration,org.apache.hadoop.conf.Configuration)": {
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.13
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurableBase:reconfigureProperty(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.12
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigurationWithLogging:get(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.NodeFencer:create(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:getDefaultMountTableName(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:getCodecClassName(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:isNativeBzip2Loaded(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getDefaultSocketFactory(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.net.TableMapping$RawTableMapping:load()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.lib.StaticUserWebFilter:getUsernameFromConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$Builder:setEnabledProtocols(org.eclipse.jetty.util.ssl.SslContextFactory)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:parseStaticMapping(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.74
            },
            "m2": {
                "count_score": 0.43,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:printConfOpt(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil$TruststoreKeystore:<init>(org.apache.hadoop.conf.Configuration)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:getDirContext()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:spawnAutoRenewalThreadForUserCreds(boolean)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.13
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.39
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.65
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLFactory:getHostnameVerifier(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.65
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getAuthenticationMethod(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoCodec:getCodecClasses(org.apache.hadoop.conf.Configuration,org.apache.hadoop.crypto.CipherSuite)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.27
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.27
            }
        }
    },
    {
        "org.apache.hadoop.crypto.JceCtrCryptoCodec:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.crypto.random.OsSecureRandom:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProvider:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallerContext$Builder:<init>(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:getZKAcls(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.hash.Hash:getHashType(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getEnumSet(java.lang.String,java.lang.Class,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getRange(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigRedactor:<init>(org.apache.hadoop.conf.Configuration)": {
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getTrimmedStrings": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigurationWithLogging:get(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:getParentZnode()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:opt(java.lang.String,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:optLong(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:optDouble(java.lang.String,double)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:must(java.lang.String,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:mustLong(java.lang.String,long)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:mustDouble(java.lang.String,double)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:setDefaultUri(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkNfly(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String,java.net.URI[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.CompositeGroupsMapping:addMappingProvider(java.lang.String,java.lang.Class)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:setBlockSize(org.apache.hadoop.conf.Configuration,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:setWorkFactor(org.apache.hadoop.conf.Configuration,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:setIndexInterval(org.apache.hadoop.conf.Configuration,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:setPingInterval(org.apache.hadoop.conf.Configuration,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:setConnectTimeout(org.apache.hadoop.conf.Configuration,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:setIsNestedMountPointSupported(org.apache.hadoop.conf.Configuration,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:opt(java.lang.String,java.lang.String[])": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:must(java.lang.String,java.lang.String[])": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:updateConnectAddr(java.lang.String,java.net.InetSocketAddress)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:setProtocolEngine(org.apache.hadoop.conf.Configuration,java.lang.Class,java.lang.Class)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:fullyDeleteContents(java.io.File)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 0.98,
                "total_score": 0.65
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 1.0,
                "total_score": 0.66
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.32
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.33,
                "indegree_score": 0.17,
                "total_score": 0.23
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec$BZip2CompressionInputStream:read()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsSourceBuilder:<init>(java.lang.Object,org.apache.hadoop.metrics2.lib.MutableMetricsFactory)": {
            "checkNotNull": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.47
            },
            "initRegistry": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "getDeclaredFieldsIncludingInherited": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.11
            },
            "add": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "getDeclaredMethodsIncludingInherited": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:mkOneDirWithMode(org.apache.hadoop.fs.Path,java.io.File,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.56
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.44,
                "total_score": 0.51
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.39
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getUMask()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks:createFactory(java.lang.String,org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodecFactory:<init>(org.apache.hadoop.conf.Configuration)": {
            "getCodecClasses": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "addCodec": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "newInstance": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "initFileSystem": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "locateKeystore": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:replacePattern(java.lang.String[],java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC$Server:registerProtocolAndImpl(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.Class,java.lang.Object)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.39
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.29
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m11": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.46
            },
            "m12": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.67
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:getKeyProviderUri(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTrimmed(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getInt(java.lang.String,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getLong(java.lang.String,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getLongBytes(java.lang.String,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getFloat(java.lang.String,float)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getDouble(java.lang.String,double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getBoolean(java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getClass(java.lang.String,java.lang.Class)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:setBooleanIfUnset(java.lang.String,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTimeDuration(java.lang.String,long,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTimeDuration(java.lang.String,java.lang.String,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialProviderFactory:getProviders(org.apache.hadoop.conf.Configuration)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderFactory:getProviders(org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:parseServiceUserNames(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.avro.AvroReflectSerialization:getPackages()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:getRawCoderNames(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.28
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPropertiesResolver:getSaslProperties(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.security.SaslRpcServer$QualityOfProtection)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.51,
                "total_score": 0.58
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.77,
                "total_score": 0.68
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort:getKeyFiles()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyServers:refresh(org.apache.hadoop.conf.Configuration)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getInts(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getTimeDurations(java.lang.String,java.util.concurrent.TimeUnit)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getClasses(java.lang.String,java.lang.Class[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getFile(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.SerializationFactory:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getTrimmedStrings": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.25
            },
            "add": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPropertiesResolver:setConf(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.77,
                "total_score": 0.68
            }
        }
    },
    {
        "org.apache.hadoop.security.http.RestCsrfPreventionFilter:getFilterParams(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.http.XFrameOptionsFilter:getFilterParams(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:propagateOptions(org.apache.hadoop.fs.FSBuilder,org.apache.hadoop.conf.Configuration,java.lang.String,boolean)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurationUtil:parseChangedProperties(org.apache.hadoop.conf.Configuration,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurationServlet:printConf(java.io.PrintWriter,org.apache.hadoop.conf.Reconfigurable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLink(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkMergeSlash(org.apache.hadoop.conf.Configuration,java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkFallback(org.apache.hadoop.conf.Configuration,java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkMerge(org.apache.hadoop.conf.Configuration,java.net.URI[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:setHomeDirConf(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:getHomeDirValue(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:createEncoder(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.33,
                "indegree_score": 0.31,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.67,
                "indegree_score": 0.14,
                "total_score": 0.3
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:createDecoder(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.erasurecode.ErasureCodecOptions)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.33,
                "indegree_score": 0.31,
                "total_score": 0.27
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.67,
                "indegree_score": 0.14,
                "total_score": 0.3
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:getLibraryName(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:getBzip2CompressorType(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:getBzip2DecompressorType(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:getBzip2Decompressor(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.NetUtils:getSocketFactory(org.apache.hadoop.conf.Configuration,java.lang.Class)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.net.TableMapping$RawTableMapping:resolve(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.TableMapping$RawTableMapping:reloadCachedMappings()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.lib.StaticUserWebFilter:initFilter(org.apache.hadoop.http.FilterContainer,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager$HadoopZookeeperFactory:<init>(java.lang.String,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:goUpGroupHierarchy(java.util.Set,int,java.util.Set)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLFactory:init()": {
            "m8": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:isSimpleAuthentication(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.HadoopKerberosName:setConfiguration(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getAuthMethods(org.apache.hadoop.security.token.SecretManager,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoCodec:getInstance(org.apache.hadoop.conf.Configuration,org.apache.hadoop.crypto.CipherSuite)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:<init>(org.apache.hadoop.crypto.key.JavaKeyStoreProvider)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.hash.Hash:getInstance(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FlagSet:buildFlagSet(java.lang.Class,org.apache.hadoop.conf.Configuration,java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:bind(java.net.ServerSocket,java.net.InetSocketAddress,int,org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:writeXml(java.lang.String,java.io.Writer,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:dumpConfiguration(org.apache.hadoop.conf.Configuration,java.io.Writer)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.16
            },
            "m9": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigurationWithLogging:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:confirmFormat()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:opt(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:opt(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:opt(java.lang.String,float)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:opt(java.lang.String,double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:must(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:must(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:must(java.lang.String,float)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.AbstractFSBuilderImpl:must(java.lang.String,double)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:addLinkNfly(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.URI[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:handleEmptyDstDirectoryOnWindows(org.apache.hadoop.fs.Path,java.io.File,org.apache.hadoop.fs.Path,java.io.File)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.28
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsAnnotations:makeSource(java.lang.Object)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.lib.MetricsAnnotations:newSourceBuilder(java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:mkOneDir(java.io.File)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:mkdirsWithOptionalPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,boolean,int,short,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:create(org.apache.hadoop.fs.Path,java.util.EnumSet,org.apache.hadoop.fs.Options$CreateOpts[])": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.18,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.18,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.18,
                "total_score": 0.27
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:mkdir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.23
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.13,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.CompressionCodecFactory:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.09
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.38,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.KeyStoreProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.LocalKeyStoreProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getServerPrincipal(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getServerPrincipal(java.lang.String,java.net.InetAddress)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC$Server:addProtocol(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.Class,java.lang.Object)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:createKeyProvider(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.KMSUtil:getKeyProviderUri(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getDefaultUri(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.PassthroughCodec:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateKinitExecutable()": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.58,
                "total_score": 0.59
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.21
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getSocketAddr(java.lang.String,java.lang.String,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:updateConnectAddr(java.lang.String,java.lang.String,java.lang.String,java.net.InetSocketAddress)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.25
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.49
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:initializeMetadataCache(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$FSDataInputStreamBuilder:build()": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m12": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m13": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$FSDataInputStreamBuilder:build()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.06
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.14,
                "indegree_score": 0.15,
                "total_score": 0.13
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.14,
                "indegree_score": 0.15,
                "total_score": 0.13
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.14,
                "indegree_score": 0.15,
                "total_score": 0.13
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.21,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m11": {
                "count_score": 0.09,
                "dataflow_score": 0.21,
                "indegree_score": 0.15,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.21,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.21,
                "indegree_score": 0.15,
                "total_score": 0.15
            },
            "m16": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.15,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:setConfigurationFromURI(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.3,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.42
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:connect()": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.57,
                "dataflow_score": 0.5,
                "indegree_score": 0.87,
                "total_score": 0.67
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:<init>(org.apache.hadoop.fs.ChecksumFileSystem,org.apache.hadoop.fs.Path)": {
            "getInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureDataInputStreamBuilderImpl:initFromFS()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination$TargetFileSystem:create(org.apache.hadoop.fs.shell.PathData,boolean)": {
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.17
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.08,
                "total_score": 0.41
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:open(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:open(org.apache.hadoop.fs.PathHandle)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:append(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:append(org.apache.hadoop.fs.Path,boolean)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:setConf(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:getSumBufferSize(int,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache:<init>(org.apache.hadoop.conf.Configuration)": {
            "getInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "checkArgument": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.io.RawComparator,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Metadata)": {
            "get": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getInt": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:getBlockSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:getWorkFactor(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:createOutputStream(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.DefaultCodec:createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.Lz4Codec:createOutputStream(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.Lz4Codec:createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.Lz4Codec:createDecompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:createOutputStream(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.26
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:getCompressionLevel(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:getBufferSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:createOutputStream(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.GzipCodec:createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.SnappyCodec:createOutputStream(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.SnappyCodec:createCompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.SnappyCodec:createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.SnappyCodec:createDecompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.IOUtils:copyBytes(java.io.InputStream,java.io.OutputStream,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.IOUtils:copyBytes(java.io.InputStream,java.io.OutputStream,org.apache.hadoop.conf.Configuration,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile:getChunkBufferSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile:getFSInputBufferSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile:getFSOutputBufferSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:getBufferSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping$RawScriptBasedMapping:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$Builder:createHttpChannelConnector(org.eclipse.jetty.server.Server,org.eclipse.jetty.server.HttpConfiguration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:doOp(org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider$ProviderCallable,int,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.27
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProvider$Options:<init>(org.apache.hadoop.conf.Configuration)": {
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getInt": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoStreamUtils:getBufferSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:parseNumLevels(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getRpcTimeout(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:getPingInterval(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:getRpcTimeout(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WeightedTimeCostProvider:init(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:<init>(java.io.InputStream,org.apache.hadoop.conf.Configuration)": {
            "getInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.LineReader:<init>(java.io.InputStream,org.apache.hadoop.conf.Configuration,byte[])": {
            "getInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigurationWithLogging:getInt(java.lang.String,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort:getSshConnectTimeout()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.FailoverController:getGracefulFenceTimeout(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.FailoverController:getRpcTimeoutToNewActive(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:setTimeout(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FSBuilderSupport:getLong(java.lang.String,long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.29
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Rm:canBeSafelyDeleted(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.3
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getDefaultBlockSize()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DF:<init>(java.io.File,org.apache.hadoop.conf.Configuration)": {
            "getLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.GetSpaceUsed$Builder:getInterval()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GetSpaceUsed$Builder:getJitter()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO:ensureInitialized()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:<init>(org.apache.hadoop.conf.Configuration,boolean)": {
            "getLong": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.37
            },
            "get": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "updateStaticMapping": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.16
            },
            "updateMaps": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager$DelegationTokenSecretManager:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.Text)": {
            "getLong": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:parseDecayPeriodMillis(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.JvmPauseMonitor:serviceInit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigurationWithLogging:getLong(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HealthMonitor:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.ha.HAServiceTarget)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getLong": {
                "count_score": 0.6,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.43
            },
            "getInt": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:initBloomFilter(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigurationWithLogging:getFloat(java.lang.String,float)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:parseDecayFactor(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:initialize(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:initialize(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.FsCommand:processRawArguments(java.util.LinkedList)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:closeChildFileSystems(org.apache.hadoop.fs.FileSystem)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.24
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ConfigUtil:isNestedMountPointSupported(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:<init>(org.apache.hadoop.fs.viewfs.InodeTree$INodeDir,long,org.apache.hadoop.security.UserGroupInformation,java.net.URI,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.viewfs.InodeTree)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getBoolean": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.Lz4Codec:createCompressor()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:handleChecksumException(org.apache.hadoop.fs.ChecksumException)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.42
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.3
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryUtils:getMultipleLinearRandomRetry(org.apache.hadoop.conf.Configuration,java.lang.String,boolean,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.77
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm$1:isSupported()": {
            "getBoolean": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "newInstance": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addPrometheusServlet(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addDefaultApps(org.eclipse.jetty.server.handler.ContextHandlerCollection,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m13": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m14": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:addDefaultServlets(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.8,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.24
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:create(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSystem)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.security.HttpCrossOriginFilterInitializer:initFilter(org.apache.hadoop.http.FilterContainer,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$ListCommand:validate()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:getServerFailOverEnable(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:parseBackOffByResponseTimeEnabled(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:<init>(java.lang.Class,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "getInt": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "getBoolean": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.48
            },
            "getClientId": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getClientBackoffEnable(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getClientBackoffEnable(java.lang.String,int,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getPasswordFromConfig(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfigurationWithLogging:getBoolean(java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getFileSystemClass(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.31
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.27
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:createFileSystem(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.security.CompositeGroupsMapping:loadMappingProviders()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolEngine(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getQueueClass(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getQueueClass(java.lang.String,int,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getSchedulerClass(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.6,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.88
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.16
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:getSchedulerClass(java.lang.String,int,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.9
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getClass(java.lang.String,java.lang.Class,java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache:getInternal(java.net.URI,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem$Cache$Key)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.18
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.34,
                "total_score": 0.47
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.34
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m11": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m14": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.SQLDelegationTokenSecretManager:<init>(org.apache.hadoop.conf.Configuration)": {
            "getLong": {
                "count_score": 0.62,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getInt": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getTimeDuration": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.16
            },
            "getTokenInfoFromSQL": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedUnixGroupsMapping:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownHookManager:getShutdownTimeout(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell$Command:getCredentialProvider()": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getPasswordFromCredentialProviders(java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell$Command:getKeyProvider()": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.serializer.avro.AvroReflectSerialization:accept(java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:createRawEncoderWithFallback(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:createRawDecoderWithFallback(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort:createSession(java.lang.String,org.apache.hadoop.ha.SshFenceByTcpPort$Args)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyServers:refresh()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:parseCapacityWeights(int,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:<init>(org.apache.hadoop.ipc.Server,org.apache.hadoop.conf.Configuration)": {
            "getListenerAddress": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.21
            },
            "tag": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "getServerName": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getInts": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.18
            },
            "getBoolean": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "getMetricsTimeUnit": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "newQuantiles": {
                "count_score": 0.46,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:parseThresholds(java.lang.String,org.apache.hadoop.conf.Configuration,int)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WeightedRoundRobinMultiplexer:<init>(int,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "getInts": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getDefaultQueueWeights": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:parseBackOffResponseTimeThreshold(java.lang.String,org.apache.hadoop.conf.Configuration,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:getFilterInitializers(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getInstances(java.lang.String,java.lang.Class)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.DefaultStringifier:<init>(org.apache.hadoop.conf.Configuration,java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getSerializer": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getDeserializer": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:init(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FSDataOutputStream,boolean,java.lang.Class,java.lang.Class,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.io.SequenceFile$Metadata,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.24
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:getFactory(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.IngressPortBasedResolver:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.WhitelistBasedResolver:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.12
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.36
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureIOSupport:propagateOptions(org.apache.hadoop.fs.FSBuilder,org.apache.hadoop.conf.Configuration,java.lang.String,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.functional.FutureIO:propagateOptions(org.apache.hadoop.fs.FSBuilder,org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurableBase:getChangedProperties(org.apache.hadoop.conf.Configuration,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurationServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.util.NativeLibraryChecker:main(java.lang.String[])": {
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.22
            },
            "m7": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.25
            },
            "m6": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.13
            },
            "m10": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m11": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m12": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m15": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:getCompressorType()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:getDecompressorType()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:createDecompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.TableMapping:reloadCachedMappings()": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.net.TableMapping$RawTableMapping:reloadCachedMappings(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager$HadoopZookeeperFactory:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:lookupGroup(javax.naming.directory.SearchResult,javax.naming.directory.DirContext,int)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.HadoopKerberosName:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoCodec:getInstance(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:bind(java.net.ServerSocket,java.net.InetSocketAddress,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:writeXml(java.lang.String,java.io.Writer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:dumpConfiguration(org.apache.hadoop.conf.Configuration,java.lang.String,java.io.Writer)": {
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:formatZK(boolean,boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:registerSystemSource()": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:register(java.lang.String,java.lang.String,java.lang.Object)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.75,
                "indegree_score": 0.0,
                "total_score": 0.27
            },
            "m9": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.39
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.25,
                "indegree_score": 1.0,
                "total_score": 0.52
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:mkdirs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$FCDataOutputStreamBuilder:build()": {
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m15": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m17": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m20": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.BouncyCastleFipsKeyStoreProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.JavaKeyStoreProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.LocalBouncyCastleFipsKeyStoreProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:initSpnego(org.apache.hadoop.conf.Configuration,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.47
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.AuthenticationFilterInitializer:getFilterConfigMap(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:createCuratorClient(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.42,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.76
            },
            "m3": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.06,
                "dataflow_score": 0.25,
                "indegree_score": 0.86,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager$HadoopZookeeperFactory:setJaasConfiguration(org.apache.zookeeper.client.ZKClientConfig)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:getServerPrincipal(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m16": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC$Server:initProtocolMetaInfo(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSTokenRenewer:createKeyProvider(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:<init>(java.net.URI,org.apache.hadoop.crypto.key.kms.KMSClientProvider[],long,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.26
            },
            "getDtService": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "getKeyProviderUri": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "getCanonicalServiceName": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "shuffle": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "setClientTokenProvider": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getInt": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "checkState": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.37
            },
            "failoverOnNetworkException": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:decodeHarURI(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:get(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.29
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:newInstance(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:checkPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.16
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.09,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getSocketAddr(java.lang.String,java.lang.String,java.lang.String,int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.FutureDataInputStreamBuilder:build()": {
            "FUNC_MASK": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.47,
                "total_score": 0.53
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.44,
                "total_score": 0.32
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.67,
                "indegree_score": 0.44,
                "total_score": 0.42
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.43
            },
            "m6": {
                "count_score": 0.29,
                "dataflow_score": 0.67,
                "indegree_score": 0.47,
                "total_score": 0.47
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.14
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.2,
                "indegree_score": 0.09,
                "total_score": 0.12
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.2,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.6,
                "indegree_score": 0.32,
                "total_score": 0.38
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.3
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.09
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.37
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:getHomeDirectory()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:read(long,byte[],int,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "close": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureDataInputStreamBuilderImpl:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "initFromFS": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureDataInputStreamBuilderImpl:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.PathHandle)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "initFromFS": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:openFileOnInstance(org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileStatus,java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.6,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.KeyStoreProvider:getInputStreamForFile()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:loadFromPath(org.apache.hadoop.fs.Path,char[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:checkAppend(org.apache.hadoop.fs.FileSystem)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.io.RawComparator,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Compressor:<init>(org.apache.hadoop.conf.Configuration)": {
            "getBlockSize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getWorkFactor": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Compressor:reinit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm$2:createCompressionStream(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor,int)": {
            "getConf": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.11
            },
            "setInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "createOutputStream": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:init(boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.38,
                "total_score": 0.34
            },
            "m7": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.59
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.56
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.29
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.16
            },
            "m12": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.12
            },
            "m13": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.58,
                "total_score": 0.4
            },
            "m14": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m17": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.5,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm$2:createDecompressionStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor,int)": {
            "getConf": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "setInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "createInputStream": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.zstd.ZStandardCompressor:reinit(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:getCompressionBufferSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:getDecompressionBufferSize(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination$TargetFileSystem:writeStreamToFile(java.io.InputStream,org.apache.hadoop.fs.shell.PathData,boolean,boolean)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$Cat:printToStdout(java.io.InputStream)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:prepareAppendValue(int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader$RBlockState:<init>(org.apache.hadoop.io.file.tfile.Compression$Algorithm,org.apache.hadoop.fs.FSDataInputStream,org.apache.hadoop.io.file.tfile.BCFile$BlockRegion,org.apache.hadoop.conf.Configuration)": {
            "getDecompressor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "getOffset": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "getCompressedSize": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getFSInputBufferSize": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "returnDecompressor": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer$WBlockState:<init>(org.apache.hadoop.io.file.tfile.Compression$Algorithm,org.apache.hadoop.fs.FSDataOutputStream,org.apache.hadoop.io.BytesWritable,org.apache.hadoop.conf.Configuration)": {
            "getPos": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "getFSOutputBufferSize": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "setCapacity": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.17
            },
            "getBytes": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.35
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getCompressor": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "returnCompressor": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping:setConf(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMappingWithDependency$RawScriptBasedMappingWithDependency:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$Builder:createHttpsChannelConnector(org.eclipse.jetty.server.Server,org.eclipse.jetty.server.HttpConfiguration)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.15
            },
            "m13": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.38
            },
            "m16": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m17": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m18": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:getDelegationToken(java.lang.String)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:renewDelegationToken(org.apache.hadoop.security.token.Token)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:cancelDelegationToken(org.apache.hadoop.security.token.Token)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:generateEncryptedKey(java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:decryptEncryptedKey(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:reencryptEncryptedKey(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:reencryptEncryptedKeys(java.util.List)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:getKeyVersion(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:getKeys()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:getKeysMetadata(java.lang.String[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:getKeyVersions(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:getCurrentKey(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:getMetadata(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:createKey(java.lang.String,byte[],org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:createKey(java.lang.String,org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProvider:options(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoInputStream:<init>(java.io.InputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[])": {
            "getBufferSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:<init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[],long,boolean)": {
            "getBufferSize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$ConnectionId:<init>(java.net.InetSocketAddress,java.lang.Class,org.apache.hadoop.security.UserGroupInformation,int,org.apache.hadoop.io.retry.RetryPolicy,org.apache.hadoop.conf.Configuration)": {
            "getInt": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.53
            },
            "getBoolean": {
                "count_score": 0.43,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.48
            },
            "getPingInterval": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:getTimeout(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem$HarMetaData:parseMetaData()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.48,
                "total_score": 0.52
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.09
            },
            "m7": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m14": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.32
            },
            "m13": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.12
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.68,
                "total_score": 0.6
            },
            "m15": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.74,
                "total_score": 0.61
            },
            "m16": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m17": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.23
            }
        }
    },
    {
        "org.apache.hadoop.ha.FailoverController:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.ha.HAServiceProtocol$RequestSource)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.14
            },
            "getGracefulFenceTimeout": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.09
            },
            "getRpcTimeoutToNewActive": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "getInt": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "setInt": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:connect()": {
            "m2": {
                "count_score": 0.38,
                "dataflow_score": 0.5,
                "indegree_score": 0.96,
                "total_score": 0.65
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m14": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.51
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FSBuilderSupport:getPositiveLong(java.lang.String,long)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getDefaultBlockSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getServerDefaults()": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.11
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getDefaultBlockSize(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getDefaultBlockSize()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:reportChecksumFailure(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FSDataInputStream,long,org.apache.hadoop.fs.FSDataInputStream,long)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.fs.DU:<init>(org.apache.hadoop.fs.GetSpaceUsed$Builder)": {
            "getPath": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getInterval": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getJitter": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "getInitialUsed": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.CachingGetSpaceUsed:<init>(org.apache.hadoop.fs.GetSpaceUsed$Builder)": {
            "getPath": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getInterval": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getJitter": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getInitialUsed": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.WindowsGetSpaceUsed:<init>(org.apache.hadoop.fs.GetSpaceUsed$Builder)": {
            "getPath": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getInterval": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getJitter": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getInitialUsed": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.nativeio.NativeIO:getOwner(java.io.FileDescriptor)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m9": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ShellBasedIdMapping:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:initHM()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration)": {
            "initialize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:close()": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.21
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.12
            },
            "m8": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.41
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:next(org.apache.hadoop.io.DataOutputBuffer)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.68,
                "total_score": 0.67
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.retry.RetryUtils:getDefaultRetryPolicy(org.apache.hadoop.conf.Configuration,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm$1:getCodec()": {
            "isSupported": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm$1:createDecompressionStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor,int)": {
            "isSupported": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "setInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.Compression$Algorithm$1:createCompressionStream(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor,int)": {
            "isSupported": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.08
            },
            "setInt": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics$Singleton:init(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client:<init>(java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "getDefaultSocketFactory": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ClientCache:getClient(org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsUrlStreamHandlerFactory:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getFileSystemClass": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsUrlStreamHandlerFactory:createURLStreamHandler(java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ProviderUtils:excludeIncompatibleCredentialProviders(org.apache.hadoop.conf.Configuration,java.lang.Class)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.15,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.15
            },
            "m15": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m14": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:get(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.CompositeGroupsMapping:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcClientUtil:getProtocolMetaInfoProxy(java.lang.Object,org.apache.hadoop.conf.Configuration)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.39
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC$Builder:build()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicy:getInstance(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicy:getInstance(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.73,
                "total_score": 0.69
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme:getMountTableConfigLoader(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.74,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.GetSpaceUsed$Builder:getKlass()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getInstance(org.apache.hadoop.conf.Configuration,org.apache.hadoop.net.InnerNode$Factory)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.73,
                "total_score": 0.69
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.net.DomainNameResolverFactory:newInstance(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslPropertiesResolver:getInstance(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Timer)": {
            "getClass": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.3
            },
            "newInstance": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.35
            },
            "getLong": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.38
            },
            "getBoolean": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.39
            },
            "getInt": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "parseStaticMapping": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:validateSasl(java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.32
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.77,
                "total_score": 0.68
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:getInstance(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslCtrCryptoCodec:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownHookManager$HookEntry:<init>(java.lang.Runnable,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getShutdownTimeout": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownHookManager:shutdownExecutor(org.apache.hadoop.conf.Configuration)": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:getPasswordFromCredentialProviders(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getPassword(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:createRawEncoder(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.CodecUtil:createRawDecoder(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.io.erasurecode.ErasureCoderOptions)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.SshFenceByTcpPort:tryFence(org.apache.hadoop.ha.HAServiceTarget,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyServers:isProxyServer(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:<init>(java.lang.Class,java.lang.Class,boolean,int,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "parseNumLevels": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "createScheduler": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "parseCapacityWeights": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "getServerFailOverEnable": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "createCallQueueInstance": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ipc.CallQueueManager:swapQueue(java.lang.Class,java.lang.Class,int,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.54
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.67,
                "indegree_score": 1.0,
                "total_score": 0.64
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.ipc.metrics.RpcMetrics:create(org.apache.hadoop.ipc.Server,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:<init>(int,int,java.lang.String,int[],boolean,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getInstance": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "setDelegate": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:initializeWebServer(java.lang.String,java.lang.String,org.apache.hadoop.conf.Configuration,java.lang.String[])": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.15,
                "total_score": 0.38
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.38
            },
            "m18": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m20": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m21": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.2
            },
            "m22": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.36
            },
            "m24": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m25": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m26": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:parseCostProvider(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:parseIdentityProvider(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.DefaultStringifier:store(org.apache.hadoop.conf.Configuration,java.lang.Object,java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.13
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.09
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.io.DefaultStringifier:load(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.io.DefaultStringifier:storeArray(org.apache.hadoop.conf.Configuration,java.lang.Object[],java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.13,
                "total_score": 0.11
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.09
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.42
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.DefaultStringifier:loadArray(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.21
            },
            "now": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.21
            },
            "init": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.ReflectionUtils:copy(org.apache.hadoop.conf.Configuration,java.lang.Object,java.lang.Object)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.21
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.15
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FutureIOSupport:propagateOptions(org.apache.hadoop.fs.FSBuilder,org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ReconfigurableBase$ReconfigurationThread:run()": {
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "m6": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.25
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.11
            },
            "m13": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.42
            },
            "m12": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "m16": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:doGetGroups(java.lang.String,int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m14": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m18": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$DefaultCryptoExtension:generateEncryptedKey(java.lang.String)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.29
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.14
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.14
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.37
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$DefaultCryptoExtension:reencryptEncryptedKeys(java.util.List)": {
            "m1": {
                "count_score": 0.18,
                "dataflow_score": 0.8,
                "indegree_score": 0.22,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.03,
                "dataflow_score": 0.2,
                "indegree_score": 0.22,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.03,
                "dataflow_score": 0.2,
                "indegree_score": 0.22,
                "total_score": 0.16
            },
            "m8": {
                "count_score": 0.03,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.43
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.2,
                "indegree_score": 0.44,
                "total_score": 0.26
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.44,
                "total_score": 0.26
            },
            "m12": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.72
            },
            "m14": {
                "count_score": 0.03,
                "dataflow_score": 0.2,
                "indegree_score": 0.22,
                "total_score": 0.16
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.22,
                "total_score": 0.17
            },
            "m15": {
                "count_score": 0.03,
                "dataflow_score": 0.2,
                "indegree_score": 0.35,
                "total_score": 0.21
            },
            "m11": {
                "count_score": 0.09,
                "dataflow_score": 0.6,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "m17": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m18": {
                "count_score": 0.03,
                "dataflow_score": 0.2,
                "indegree_score": 0.44,
                "total_score": 0.25
            },
            "m19": {
                "count_score": 0.03,
                "dataflow_score": 0.2,
                "indegree_score": 0.4,
                "total_score": 0.23
            },
            "m20": {
                "count_score": 0.03,
                "dataflow_score": 0.4,
                "indegree_score": 0.13,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$DefaultCryptoExtension:decryptEncryptedKey(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.35,
                "total_score": 0.47
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.24
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.44,
                "total_score": 0.54
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.42
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.42
            },
            "m11": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:writeXml(java.io.Writer)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfServlet:writeResponse(org.apache.hadoop.conf.Configuration,java.io.Writer,java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:configureSources()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:create(org.apache.hadoop.fs.Path,boolean,boolean,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.11
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.41
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:createSymlink(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.77
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.66
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.4
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:getFilterProperties(org.apache.hadoop.conf.Configuration,java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authentication.server.ProxyUserAuthenticationFilterInitializer:createFilterConfig(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.AuthenticationFilterInitializer:initFilter(org.apache.hadoop.http.FilterContainer,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager:<init>(org.apache.hadoop.conf.Configuration)": {
            "getLong": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.1
            },
            "getInt": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "getBoolean": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.39
            },
            "get": {
                "count_score": 0.3,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.44
            },
            "createCuratorClient": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager$HadoopZookeeperFactory:newZooKeeper(java.lang.String,int,org.apache.zookeeper.Watcher,boolean,org.apache.zookeeper.client.ZKClientConfig)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:createSaslClient(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth)": {
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.3
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m14": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSTokenRenewer:renew(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSTokenRenewer:cancel(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:<init>(java.net.URI,org.apache.hadoop.crypto.key.kms.KMSClientProvider[],org.apache.hadoop.conf.Configuration)": {
            "monotonicNow": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:<init>(org.apache.hadoop.crypto.key.kms.KMSClientProvider[],long,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:getFS()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:<init>(java.net.URI,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,java.lang.String,boolean)": {
            "getDefaultPortIfDefined": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.23
            },
            "initialize": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.AbstractHttpFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.3,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.3,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createFileSystem(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.09
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.11
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.2,
                "total_score": 0.27
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.23
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.92,
                "total_score": 0.56
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.26
            },
            "m3": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m15": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m12": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.47
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme$ChildFsGetter:createFileSystem(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:checkPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:makeQualified(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:resolvePath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:checkPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AvroFSInput:<init>(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path)": {
            "getFileStatus": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.21
            },
            "getLen": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "openFile": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "withFileStatus": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.17
            },
            "build": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.23
            },
            "awaitFuture": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,boolean)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.04,
                "dataflow_score": 0.14,
                "indegree_score": 0.45,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m18": {
                "count_score": 0.04,
                "dataflow_score": 0.14,
                "indegree_score": 0.45,
                "total_score": 0.24
            },
            "m19": {
                "count_score": 0.04,
                "dataflow_score": 0.29,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m20": {
                "count_score": 0.04,
                "dataflow_score": 0.14,
                "indegree_score": 0.25,
                "total_score": 0.16
            },
            "m21": {
                "count_score": 0.09,
                "dataflow_score": 0.14,
                "indegree_score": 0.93,
                "total_score": 0.44
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.35
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.43,
                "indegree_score": 0.16,
                "total_score": 0.21
            },
            "m8": {
                "count_score": 0.04,
                "dataflow_score": 0.29,
                "indegree_score": 0.87,
                "total_score": 0.45
            },
            "m12": {
                "count_score": 0.04,
                "dataflow_score": 0.43,
                "indegree_score": 0.48,
                "total_score": 0.33
            },
            "m13": {
                "count_score": 0.04,
                "dataflow_score": 0.43,
                "indegree_score": 0.53,
                "total_score": 0.35
            },
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.29,
                "indegree_score": 0.25,
                "total_score": 0.2
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.71,
                "indegree_score": 0.41,
                "total_score": 0.39
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.3
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.57,
                "indegree_score": 0.68,
                "total_score": 0.46
            },
            "m23": {
                "count_score": 0.04,
                "dataflow_score": 0.14,
                "indegree_score": 0.16,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.fs.sftp.SFTPFileSystem:getWorkingDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$FSDataInputStreamBuilder:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$FSDataInputStreamBuilder:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.PathHandle)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.impl.DynamicWrappedIO:openFile(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileStatus,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:tryLoadFromPath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.14
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:loadAndReturnPerm(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:resetKeyStoreState(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:<init>(org.apache.hadoop.fs.FileSystem,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.bzip2.Bzip2Factory:getBzip2Compressor(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:initialize(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FSDataInputStream,long,long,org.apache.hadoop.conf.Configuration,boolean)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:createOutputStream(java.io.OutputStream,org.apache.hadoop.io.compress.Compressor)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:createCompressor()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:createDecompressor()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.ZStandardCodec:createDirectDecompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader:createReader(org.apache.hadoop.io.file.tfile.Compression$Algorithm,org.apache.hadoop.io.file.tfile.BCFile$BlockRegion)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer:prepareMetaBlock(java.lang.String,org.apache.hadoop.io.file.tfile.Compression$Algorithm)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer:prepareDataBlock()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMapping:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "setConf": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.net.ScriptBasedMappingWithDependency:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell:init(java.lang.String[])": {
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m18": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m16": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m15": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.21
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "m20": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.crypto.CryptoFSDataInputStream:<init>(org.apache.hadoop.fs.FSDataInputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:<init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[],long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$ConnectionId:getConnectionId(java.net.InetSocketAddress,java.lang.Class,org.apache.hadoop.security.UserGroupInformation,int,org.apache.hadoop.io.retry.RetryPolicy,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.9
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.05,
                "total_score": 0.36
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.1,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.42
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.05,
                "total_score": 0.21
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.32
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.47
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.2
            },
            "m3": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.17,
                "indegree_score": 0.34,
                "total_score": 0.2
            },
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.41
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.17,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m6": {
                "count_score": 0.27,
                "dataflow_score": 0.67,
                "indegree_score": 0.37,
                "total_score": 0.43
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.34
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.15
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m15": {
                "count_score": 0.07,
                "dataflow_score": 0.17,
                "indegree_score": 0.84,
                "total_score": 0.41
            },
            "m19": {
                "count_score": 0.07,
                "dataflow_score": 0.17,
                "indegree_score": 0.6,
                "total_score": 0.31
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:getHomeDirectory()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getServerDefaults()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getServerDefaults()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getServerDefaults()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getDefaultBlockSize(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,boolean)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.24
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.util.Progressable)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,short)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.26
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,short,org.apache.hadoop.util.Progressable)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,boolean,int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path,boolean,int,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getDefaultBlockSize(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getDefaultBlockSize(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FSDataOutputStreamBuilder:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "checkNotNull": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getInt": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "getDefaultReplication": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.13
            },
            "getDefaultBlockSize": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.fs.DFCachingGetSpaceUsed:<init>(org.apache.hadoop.fs.GetSpaceUsed$Builder)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getPath": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "getInterval": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:next(org.apache.hadoop.io.Writable)": {
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.63
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.98,
                "total_score": 0.57
            },
            "m12": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.17
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.14
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:next(java.lang.Object)": {
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.29
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.65
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.98,
                "total_score": 0.57
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m12": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m5": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.source.JvmMetrics:initSingleton(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker:<init>(java.lang.Class,org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,org.apache.hadoop.ipc.AlignmentContext)": {
            "getClient": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getProtocolName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.3
            },
            "getProtocolVersion": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ClientCache:getClient(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ClientCache:getClient(org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:getClient(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Invoker:<init>(java.lang.Class,org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,org.apache.hadoop.ipc.AlignmentContext)": {
            "getClient": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getProtocolName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.3
            },
            "getProtocolVersion": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine:getClient(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsUrlStreamHandlerFactory:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RpcClientUtil:isMethodSupported(java.lang.Object,java.lang.Class,org.apache.hadoop.ipc.RPC$RpcKind,long,java.lang.String)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.23
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m12": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.3
            },
            "m14": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m15": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.23
            },
            "m18": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.28,
                "total_score": 0.25
            },
            "m19": {
                "count_score": 0.11,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.23
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFCRpcServer:<init>(org.apache.hadoop.conf.Configuration,java.net.InetSocketAddress,org.apache.hadoop.ha.ZKFailoverController,org.apache.hadoop.security.authorize.PolicyProvider)": {
            "setProtocolEngine": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.4
            },
            "setProtocol": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "setInstance": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "setBindAddress": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "setPort": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "setNumHandlers": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "setVerbose": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "build": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "getBoolean": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.Trash:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getInstance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.GetSpaceUsed$Builder:build()": {
            "m1": {
                "count_score": 0.83,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.net.NetworkTopology:getInstance(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.net.DomainNameResolverFactory:newInstance(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:setConfigurationInternal(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 0.89,
                "total_score": 0.78
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:<init>(org.apache.hadoop.security.UserGroupInformation,java.lang.Class,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)": {
            "getInstance": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:refreshSuperUserGroupsConfiguration(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.crypto.OpensslSm4CtrCryptoCodec:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.ShutdownHookManager:addShutdownHook(java.lang.Runnable,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$Builder:getPasswordString(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:getPassword(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory:getPassword(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:getZKAuthInfos(org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.42
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.RSErasureEncoder:checkCreateRSRawEncoder()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncoder:checkCreateRSRawEncoder()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncoder:checkCreateXorRawEncoder()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecoder:checkCreateXorRawEncoder()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.XORErasureEncoder:prepareEncodingStep(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.XORErasureDecoder:prepareDecodingStep(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.RSErasureDecoder:checkCreateRSRawDecoder()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecoder:checkCreateRSRawDecoder()": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:refreshCallQueue(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.15,
                "total_score": 0.2
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.15,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.15,
                "total_score": 0.2
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.15,
                "total_score": 0.2
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.15,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:<init>(int,int,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "getDefaultQueueCapacityWeights": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.FairCallQueue:<init>(int,int,java.lang.String,boolean,org.apache.hadoop.conf.Configuration)": {
            "getDefaultQueueCapacityWeights": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.DecayRpcScheduler:<init>(int,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "parseDecayFactor": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "parseDecayPeriodMillis": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "parseIdentityProvider": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "parseCostProvider": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "parseThresholds": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "parseBackOffByResponseTimeEnabled": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "parseBackOffResponseTimeThreshold": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "parseServiceUserNames": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getInt": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "checkArgument": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.36
            },
            "create": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "init": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getMetricsTimeUnit": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getInstance": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "recomputeScheduleCache": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.WritableUtils:clone(org.apache.hadoop.io.Writable,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:getGroupsSet(java.lang.String)": {
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$DefaultCryptoExtension:reencryptEncryptedKey(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)": {
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.42,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.36,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.25,
                "indegree_score": 0.54,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.18,
                "total_score": 0.26
            },
            "m8": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 0.25,
                "indegree_score": 0.36,
                "total_score": 0.24
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.25,
                "indegree_score": 0.36,
                "total_score": 0.24
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.25,
                "indegree_score": 0.54,
                "total_score": 0.31
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 0.25,
                "indegree_score": 0.51,
                "total_score": 0.3
            },
            "m15": {
                "count_score": 0.06,
                "dataflow_score": 0.75,
                "indegree_score": 0.29,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:writeXml(java.io.OutputStream)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfServlet:writeResponse(org.apache.hadoop.conf.Configuration,java.io.Writer,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:configure(java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:create(org.apache.hadoop.fs.Path,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:createNonRecursive(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:constructSecretProvider(org.apache.hadoop.http.HttpServer2$Builder,javax.servlet.ServletContext)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authentication.server.ProxyUserAuthenticationFilterInitializer:initFilter(org.apache.hadoop.http.FilterContainer,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager$ZKSecretManager:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.Text)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager$HadoopZookeeperFactory:newZooKeeper(java.lang.String,int,org.apache.zookeeper.Watcher,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:selectSaslClient(java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FtpFs:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFs:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.local.RawLocalFs:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.76
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.53
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:checkDependencies(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.MultipartUploaderBuilderImpl:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "checkNotNull": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.37
            },
            "makeQualified": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.17
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getInt": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "getDefaultReplication": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.12
            },
            "getDefaultBlockSize": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.fs.FileStatus)": {
            "stringToUri": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.27
            },
            "makeQualified": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "setStat": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.18
            },
            "checkIfSchemeInferredFromPath": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.66
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getEnclosingRoot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:makeQualified(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.28
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:resolvePath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.BaseExpression:getFileStatus(org.apache.hadoop.fs.shell.PathData,int)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.2
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.14
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.72
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.59
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:resolvePath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.76
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.23
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:resolvePath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:fullPath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.21
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext$Util:copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createDataInputStreamBuilder(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createDataInputStreamBuilder(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.PathHandle)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:tryLoadIncompleteFlush(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.compress.BZip2Codec:createCompressor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader:getMetaBlock(java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader:getDataBlock(int)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.58,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer:close()": {
            "m1": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.41
            },
            "m2": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.41
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.11
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer:prepareMetaBlock(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Writer:prepareMetaBlock(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:initDataBlock()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.crypto.CryptoFSDataOutputStream:<init>(org.apache.hadoop.fs.FSDataOutputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[])": {
            "getPos": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.crypto.CryptoOutputStream:<init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.ftp.FTPFileSystem:getWorkingDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.27
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$AppendToFile:processArguments(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.27
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.34,
                "total_score": 0.49
            },
            "m6": {
                "count_score": 0.18,
                "dataflow_score": 1.0,
                "indegree_score": 0.5,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:close()": {
            "m1": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.42
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.51,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.19
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.77,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:createLogFile(org.apache.hadoop.fs.Path)": {
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.23
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:createOrAppendLogFile(org.apache.hadoop.fs.Path)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:save(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.Object,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.28
            },
            "now": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "init": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:createNewFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$FileSystemDataOutputStreamBuilder:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$TextRecordInputStream:read()": {
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.5,
                "indegree_score": 0.98,
                "total_score": 0.58
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.76
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker:<init>(java.lang.Class,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "getConnectionId": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine:getProxy(java.lang.Class,long,org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine:getProtocolMetaInfoProxy(org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine:getClient(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Invoker:<init>(java.lang.Class,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "getConnectionId": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getClient": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:getProxy(java.lang.Class,long,org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:getProtocolMetaInfoProxy(org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Invoker:<init>(java.lang.Class,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "getConnectionId": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.protocolPB.RefreshAuthorizationPolicyProtocolClientSideTranslatorPB:isMethodSupported(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.protocolPB.RefreshUserMappingsProtocolClientSideTranslatorPB:isMethodSupported(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolClientSideTranslatorPB:isMethodSupported(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.protocolPB.RefreshCallQueueProtocolClientSideTranslatorPB:isMethodSupported(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.tools.protocolPB.GetUserMappingsProtocolClientSideTranslatorPB:isMethodSupported(java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:initRPC()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.Trash:<init>(org.apache.hadoop.conf.Configuration)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.DU:main(java.lang.String[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.net.DomainNameResolverFactory:newInstance(org.apache.hadoop.conf.Configuration,java.net.URI,java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:setConfiguration(org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$TestingGroups:<init>(org.apache.hadoop.security.Groups)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:getUserToGroupsMappingService(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:getUserToGroupsMappingServiceWithLoadedConfiguration(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.authentication.server.ProxyUserAuthenticationFilter:init(javax.servlet.FilterConfig)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationFilter:init(javax.servlet.FilterConfig)": {
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:refreshSuperUserGroupsConfiguration(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:deleteOnExit(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceShutdownHook:register(int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.util.StringUtils:startupShutdownMessage(java.lang.Class,java.lang.String[],org.slf4j.Logger)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.73
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.5
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$Builder:loadSSLConfiguration()": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.39
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.25
            },
            "m5": {
                "count_score": 0.23,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m6": {
                "count_score": 0.31,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:loadSslConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:getPasswordForBindUser(java.lang.String)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory:createTrustManagersFromConfiguration(org.apache.hadoop.security.ssl.SSLFactory$Mode,java.lang.String,java.lang.String,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.52
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory:createKeyManagersFromConfiguration(org.apache.hadoop.security.ssl.SSLFactory$Mode,java.lang.String,long)": {
            "m1": {
                "count_score": 0.43,
                "dataflow_score": 0.75,
                "indegree_score": 0.12,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.75,
                "indegree_score": 1.0,
                "total_score": 0.71
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:getZKAuths(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:initZK()": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.69
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            },
            "m3": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.24,
                "total_score": 0.27
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.15,
                "total_score": 0.23
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.36,
                "total_score": 0.31
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.08
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.84,
                "total_score": 0.53
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.RSErasureEncoder:prepareEncodingStep(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureEncoder:prepareEncodingStep(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.RSErasureDecoder:prepareDecodingStep(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.erasurecode.coder.HHXORErasureDecoder:prepareDecodingStep(org.apache.hadoop.io.erasurecode.ECBlockGroup)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.RuleBasedLdapGroupsMapping:getGroupsSet(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "toUpperCase": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.28
            },
            "toLowerCase": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:getGroups(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:start()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.35
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:<init>(org.apache.hadoop.http.HttpServer2$Builder)": {
            "newArrayList": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getWebAppsPath": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.18
            },
            "createWebAppContext": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "constructSecretProvider": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "initializeWebServer": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenManager:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.Text)": {
            "getBoolean": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcClient:saslConnect(org.apache.hadoop.ipc.Client$IpcStreams)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 0.33,
                "total_score": 0.26
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.33,
                "indegree_score": 0.53,
                "total_score": 0.34
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.67,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.21
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m23": {
                "count_score": 0.17,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m25": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.fs.local.RawLocalFs:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploaderBuilder:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String)": {
            "lookupStat": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:getDirectoryContents()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:maybeIgnoreMissingDirectory(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.io.FileNotFoundException)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.AbstractHttpFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.76
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getEnclosingRoot(org.apache.hadoop.fs.Path)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.72,
                "total_score": 0.69
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.74,
                "total_score": 0.65
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.06,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getEnclosingRoot(org.apache.hadoop.fs.Path)": {
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.36
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.06,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getEnclosingRoot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.wrappedio.WrappedIO:fileSystem_getEnclosingRoot(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.74
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.28
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.28
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m7": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.29
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m12": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.12
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:create(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:createNonRecursive(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,int,short,long,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getFileBlockLocations(org.apache.hadoop.fs.FileStatus,long,long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getFileChecksum(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getFileChecksum(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:listLocatedStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:mkdirs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:append(org.apache.hadoop.fs.Path,int,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:setReplication(org.apache.hadoop.fs.Path,short)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:setTimes(org.apache.hadoop.fs.Path,long,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:modifyAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:removeAclEntries(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:removeDefaultAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:removeAcl(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:setAcl(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:setXAttr(org.apache.hadoop.fs.Path,java.lang.String,byte[],java.util.EnumSet)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getXAttrs(org.apache.hadoop.fs.Path,java.util.List)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:truncate(org.apache.hadoop.fs.Path,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:listXAttrs(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:removeXAttr(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:createSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:renameSnapshot(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:deleteSnapshot(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:resolvePath(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getContentSummary(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getQuotaUsage(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getDefaultBlockSize(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getDefaultReplication(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:satisfyStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:setStoragePolicy(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:unsetStoragePolicy(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:createFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:openFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:openFile(org.apache.hadoop.fs.PathHandle)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:locateKeystore()": {
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.16
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.39
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:checkTFileDataIndex()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.42
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.42
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getMetaBlock(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.BCFile$Reader:<init>(org.apache.hadoop.fs.FSDataInputStream,long,org.apache.hadoop.conf.Configuration)": {
            "size": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.16
            },
            "seek": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "readAndVerify": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "compatibleWith": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.13
            },
            "getMetaBlock": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.23
            },
            "close": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.27
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getBlockReader(int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:prepareMetaBlock(java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:close()": {
            "m2": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.18
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.2,
                "total_score": 0.42
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m4": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:prepareMetaBlock(java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:prepareAppendKey(int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getServerDefaults(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:copy(java.io.File,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.27
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.23
            },
            "m11": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.36
            },
            "m15": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.FileSystemMultipartUploader:innerComplete(org.apache.hadoop.fs.UploadHandle,org.apache.hadoop.fs.Path,java.util.Map)": {
            "m2": {
                "count_score": 0.21,
                "dataflow_score": 0.33,
                "indegree_score": 0.22,
                "total_score": 0.25
            },
            "m15": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.33
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m16": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m19": {
                "count_score": 0.14,
                "dataflow_score": 0.67,
                "indegree_score": 0.44,
                "total_score": 0.42
            },
            "m20": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.3
            },
            "m17": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.77,
                "total_score": 0.63
            },
            "m18": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.43
            },
            "m22": {
                "count_score": 0.07,
                "dataflow_score": 0.67,
                "indegree_score": 0.22,
                "total_score": 0.31
            },
            "m23": {
                "count_score": 0.07,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m25": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touch:touch(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.32
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touchz:touchz(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.03
            },
            "now": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "create": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.27
            },
            "init": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:rollLogDir()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:readIndex()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.36
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:next(org.apache.hadoop.io.WritableComparable,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Expunge:processArguments(java.util.LinkedList)": {
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.2
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "m8": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m6": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m7": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:getTrash()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.Groups:getUserToGroupsMappingService()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:initialize(org.apache.hadoop.conf.Configuration,boolean)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.3
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getUserToGroupsMappingService": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:<init>(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getUserToGroupsMappingService": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "buildACL": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:<init>(java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getUserToGroupsMappingService": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "buildACL": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:refreshSuperUserGroupsConfiguration()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:coreServiceLaunch(org.apache.hadoop.conf.Configuration,org.apache.hadoop.service.Service,java.util.List,boolean,boolean)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$Builder:build()": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.35
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m13": {
                "count_score": 0.36,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.51
            },
            "m17": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.38
            },
            "m19": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "m18": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:initializeBindUsers()": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.11
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory:init(org.apache.hadoop.security.ssl.SSLFactory$Mode)": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.36,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.52
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.78,
                "total_score": 0.49
            },
            "m4": {
                "count_score": 0.27,
                "dataflow_score": 0.83,
                "indegree_score": 0.98,
                "total_score": 0.72
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m13": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:start(java.util.List,boolean)": {
            "m1": {
                "count_score": 0.36,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:doRun(java.lang.String[])": {
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m4": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.22
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.security.RuleBasedLdapGroupsMapping:getGroups(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "toUpperCase": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.31
            },
            "toLowerCase": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.impl.MetricsSystemImpl:init(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:initTokenManager(java.util.Properties)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:setupSaslConnection(org.apache.hadoop.ipc.Client$IpcStreams)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.35
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.42
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.local.LocalFs:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:suffix(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:getPathDataForChild(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:recursePath(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpsFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.http.HttpFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:hasPathCapability(org.apache.hadoop.fs.Path,java.lang.String)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:delete(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode:updateFileStatus(org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.44,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.35
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:mkdirs(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.23
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getDefaultBlockSize()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getDefaultReplication()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,boolean,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.71
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.33,
                "indegree_score": 0.88,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.16,
                "total_score": 0.18
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m15": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.25
            },
            "m16": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.25,
                "total_score": 0.22
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.35
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.45,
                "total_score": 0.3
            },
            "m6": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.37
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.48,
                "total_score": 0.31
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.53,
                "total_score": 0.33
            },
            "m12": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileStatus,java.io.File,boolean,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.25,
                "indegree_score": 0.91,
                "total_score": 0.51
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m13": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.34,
                "total_score": 0.32
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.25,
                "indegree_score": 0.25,
                "total_score": 0.21
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.38,
                "total_score": 0.34
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.44,
                "total_score": 0.36
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:openFile(java.lang.String)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.07,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.2,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:openFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:openFile(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,int,long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileStatus)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.41
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.23
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.2
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.51,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.57
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:openFile(org.apache.hadoop.fs.PathHandle)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getFirstKey()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getLastKey()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getBlockContainsKey(org.apache.hadoop.io.file.tfile.RawComparable,boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getLocationByRecordNum(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getRecordNumByLocation(org.apache.hadoop.io.file.tfile.TFile$Reader$Location)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getKeyNear(long)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.52
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:<init>(org.apache.hadoop.fs.FSDataInputStream,long,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getMetaBlock": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "close": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.3
            },
            "getComparator": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "getBlockCount": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:initBlock(int)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:append(byte[],int,int,byte[],int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:getServerDefaults()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touch:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touch:processNonexistentPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touchz:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.23
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.TouchCommands$Touchz:processNonexistentPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.KeyStoreProvider:getOutputStreamForKeystore()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:writeToNew(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:midKey()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:finalKey(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.26
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.77,
                "total_score": 0.71
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:seekInternal(org.apache.hadoop.io.WritableComparable,boolean)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.29
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.26
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Merger:mergePass()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine:getProxy(java.lang.Class,long,org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,org.apache.hadoop.ipc.AlignmentContext)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.53
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:getCurrentTrashDir()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:getCurrentTrashDir(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:ensureInitialized()": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:setConfiguration(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ServiceAuthorizationManager:refreshWithLoadedConfiguration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.authorize.PolicyProvider)": {
            "m1": {
                "count_score": 0.53,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.86
            },
            "m2": {
                "count_score": 0.13,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.14
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "m5": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.DefaultImpersonationProvider:init(java.lang.String)": {
            "m4": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:getSip()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:launchService(org.apache.hadoop.conf.Configuration,org.apache.hadoop.service.Service,java.util.List,boolean,boolean)": {
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.security.LdapGroupsMapping:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            },
            "m4": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.37
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m6": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m7": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.53
            },
            "m9": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.47
            },
            "m12": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m19": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:start(java.util.List)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:init(java.util.Properties)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.local.LocalFs:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:copyStreamToTarget(java.io.InputStream,org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:getTargetPath(org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyOutputStream:cleanupAllTmpFiles()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyOutputStream:commit()": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.16
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.29
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:delete(org.apache.hadoop.fs.Path,boolean)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.23
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,boolean,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:repairAndOpen(org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode[],org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.22,
                "dataflow_score": 0.5,
                "indegree_score": 0.82,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.25
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.18,
                "total_score": 0.24
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "m12": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.29,
                "total_score": 0.28
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.74,
                "total_score": 0.46
            },
            "m15": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.18,
                "total_score": 0.39
            },
            "m18": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.13
            },
            "m20": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "m19": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.io.File,boolean,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:openForSequentialIO()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Head:dumpToOffset(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Tail:dumpFromOffset(org.apache.hadoop.fs.shell.PathData,long)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.13
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.29
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.45
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.27
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:openFile(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.util.JsonSerialization:load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:getRecordNumNear(long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:getRecordNum()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:<init>(org.apache.hadoop.io.file.tfile.TFile$Reader,org.apache.hadoop.io.file.tfile.TFile$Reader$Location,org.apache.hadoop.io.file.tfile.TFile$Reader$Location)": {
            "checkTFileDataIndex": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.28
            },
            "compareTo": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.17
            },
            "getBlockIndex": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.33
            },
            "initBlock": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "getRecordIndex": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.26
            },
            "inBlockAdvance": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:seekTo(org.apache.hadoop.io.file.tfile.TFile$Reader$Location)": {
            "m1": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.22
            },
            "m2": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.18
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:advance()": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.19
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.19
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Writer:append(byte[],byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:flush()": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.75,
                "indegree_score": 0.14,
                "total_score": 0.31
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.14,
                "total_score": 0.38
            },
            "m6": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m8": {
                "count_score": 0.18,
                "dataflow_score": 0.5,
                "indegree_score": 0.36,
                "total_score": 0.35
            },
            "m13": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m15": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m14": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m16": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:seekInternal(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:getClosest(org.apache.hadoop.io.WritableComparable,org.apache.hadoop.io.Writable,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isAuthenticationMethodEnabled(org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isKerberosKeyTabLoginRenewalEnabled()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getKerberosLoginRenewalExecutor()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:createUserForTesting(java.lang.String,java.lang.String[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.14
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:createProxyUserForTesting(java.lang.String,org.apache.hadoop.security.UserGroupInformation,java.lang.String[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.17
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getGroups()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getGroupsSet()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.32
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:doSubjectLogin(javax.security.auth.Subject,org.apache.hadoop.security.UserGroupInformation$LoginParams)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.11
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.39
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.81,
                "total_score": 0.5
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.35,
                "total_score": 0.31
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.39
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:init()": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.25
            },
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:refreshServiceAclWithLoadedConfiguration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.authorize.PolicyProvider)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.DefaultImpersonationProvider:getTestProvider()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:authorize(org.apache.hadoop.security.UserGroupInformation,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:authorize(org.apache.hadoop.security.UserGroupInformation,java.net.InetAddress)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:getDefaultImpersonationProvider()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:launchService(org.apache.hadoop.conf.Configuration,java.util.List,boolean,boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.RuleBasedLdapGroupsMapping:setConf(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.curator.ZKCuratorManager:start()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.MultiSchemeDelegationTokenAuthenticationHandler:init(java.util.Properties)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:copyFileToTarget(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.3
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.25
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.62
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.65
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:processPathArgument(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.25
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.79,
                "total_score": 0.71
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.23
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:recursePath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.07
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.37
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.14
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.23
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.07
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.13
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyOutputStream:close()": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,boolean,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:open(org.apache.hadoop.fs.Path,int)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.48,
                "total_score": 0.53
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.16
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.35
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.32
            },
            "m11": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Merge:processArguments(java.util.LinkedList)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.58,
                "total_score": 0.58
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.18,
                "total_score": 0.22
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.67,
                "indegree_score": 0.48,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$Cat:getInputStream(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Head:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Tail:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:createScanner()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:createScannerByRecordNum(long,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:<init>(org.apache.hadoop.io.file.tfile.TFile$Reader,long,long)": {
            "getLocationNear": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:seekTo(org.apache.hadoop.io.file.tfile.RawComparable,boolean)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.51
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:rewind()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:seek(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:getClosest(org.apache.hadoop.io.WritableComparable,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isSecurityEnabled()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:logoutUserFromKeytab()": {
            "m1": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.29
            },
            "m2": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.25
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.34,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.14
            },
            "m11": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m13": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m8": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.41
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:checkStat(java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getPrimaryGroupName()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getGroupNames()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:isUserInList(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.31
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getUGIFromSubject(javax.security.auth.Subject)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:createLoginUser(javax.security.auth.Subject)": {
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.19,
                "total_score": 0.24
            },
            "m5": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.38,
                "total_score": 0.32
            },
            "m6": {
                "count_score": 0.35,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.51
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.41,
                "total_score": 0.48
            },
            "m15": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m16": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.19,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.18
            },
            "m19": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.12
            },
            "m20": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.55,
                "total_score": 0.39
            },
            "m21": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.44,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.security.authentication.server.ProxyUserAuthenticationFilter:doFilter(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.95,
                "total_score": 0.59
            },
            "m12": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.73,
                "total_score": 0.5
            },
            "m10": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationFilter:doFilter(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m13": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.32
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler:managementOperation(org.apache.hadoop.security.authentication.server.AuthenticationToken,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.75,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.11
            },
            "m11": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.1
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.75,
                "indegree_score": 0.66,
                "total_score": 0.5
            },
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.21,
                "total_score": 0.17
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.5,
                "indegree_score": 0.62,
                "total_score": 0.41
            },
            "m19": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.48,
                "total_score": 0.28
            },
            "m17": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.18
            },
            "m21": {
                "count_score": 0.04,
                "dataflow_score": 0.75,
                "indegree_score": 0.21,
                "total_score": 0.32
            },
            "m22": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.22
            },
            "m23": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.48,
                "total_score": 0.37
            },
            "m24": {
                "count_score": 0.09,
                "dataflow_score": 0.25,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m25": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m27": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ProxyUsers:authorize(org.apache.hadoop.security.UserGroupInformation,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:authorizeConnection()": {
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.42,
                "total_score": 0.36
            },
            "m6": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.63
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.26,
                "total_score": 0.3
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.27
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommandWithMultiThread:copyFileToTarget(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:processPath(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.3
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.19
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:copyToLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:copyFromLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:copyToLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:copyFromLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalFileSystem:copyToLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$Cat:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.16,
                "total_score": 0.42
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:createScannerByByteRange(long,long)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:<init>(org.apache.hadoop.io.file.tfile.TFile$Reader,org.apache.hadoop.io.file.tfile.RawComparable,org.apache.hadoop.io.file.tfile.RawComparable)": {
            "begin": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "getBlockContainsKey": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            },
            "end": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "inBlockAdvance": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.23
            },
            "set": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.38
            },
            "seekTo": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:seekTo(byte[],int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:lowerBound(byte[],int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:upperBound(byte[],int,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Reader:seek(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:get(org.apache.hadoop.io.WritableComparable,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation$HadoopLoginModule:commit()": {
            "m4": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "m8": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolProxy(java.lang.Class,long,org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,org.apache.hadoop.ipc.AlignmentContext)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy,java.util.concurrent.atomic.AtomicBoolean)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.ipc.AlignmentContext)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:setFallBackToSimpleAuth(java.util.concurrent.atomic.AtomicBoolean)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:forceSecureOpenForRandomRead(java.io.File,java.lang.String,java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:forceSecureOpenFSDataInputStream(java.io.File,java.lang.String,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.22,
                "total_score": 0.29
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.28,
                "total_score": 0.31
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.28,
                "total_score": 0.31
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:forceSecureOpenForRead(java.io.File,java.lang.String,java.lang.String)": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.42
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.13
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getFileLinkStatus(org.apache.hadoop.fs.Path)": {
            "m4": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m6": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.09,
                "total_score": 0.05
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.26
            },
            "m13": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.22
            },
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.16
            },
            "m17": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.33
            },
            "m18": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.23
            },
            "m19": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.21
            },
            "m20": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.25
            },
            "m21": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.21
            },
            "m22": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.25
            },
            "m23": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.24
            },
            "m24": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.23
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.24
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.29
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.13
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.47,
                "total_score": 0.52
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getFileStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.13
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.31
            },
            "m2": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.31
            },
            "m27": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.14
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.11
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.11
            },
            "m11": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.32
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.16
            },
            "m18": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.36
            },
            "m19": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m20": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.28
            },
            "m21": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.26
            },
            "m22": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m23": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.27
            },
            "m24": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m25": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.29
            },
            "m26": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.28
            },
            "m31": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getAclStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.47,
                "total_score": 0.52
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:dumpUGI(java.lang.String,org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.36
            },
            "m2": {
                "count_score": 0.39,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.82
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.67,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.63,
                "total_score": 0.37
            },
            "m5": {
                "count_score": 0.06,
                "dataflow_score": 0.33,
                "indegree_score": 0.22,
                "total_score": 0.21
            },
            "m6": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.11
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.27
            },
            "m8": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:print()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.AccessControlList:isUserAllowed(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getLoginUser()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.22
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:loginUserFromSubject(javax.security.auth.Subject)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:processConnectionContext(org.apache.hadoop.ipc.RpcWritable$Buffer)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.22
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.16
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.11
            },
            "m7": {
                "count_score": 0.3,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.78
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.62,
                "total_score": 0.58
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m11": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m12": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.RawLocalFileSystem:moveFromLocalFile(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:createScannerByKey(org.apache.hadoop.io.file.tfile.RawComparable,org.apache.hadoop.io.file.tfile.RawComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:seekTo(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:lowerBound(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner:upperBound(byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Reader:get(org.apache.hadoop.io.WritableComparable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Reader:get(org.apache.hadoop.io.WritableComparable,org.apache.hadoop.io.Writable)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolProxy(java.lang.Class,long,org.apache.hadoop.ipc.Client$ConnectionId,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hadoop.io.retry.RetryPolicy)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:setupIOstreams(java.util.concurrent.atomic.AtomicBoolean)": {
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.56
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m11": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.14
            },
            "m12": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.14
            },
            "m13": {
                "count_score": 0.05,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.16
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m14": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m18": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m15": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m16": {
                "count_score": 0.05,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.16
            },
            "m19": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m20": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m22": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m23": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.12
            },
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.24
            },
            "m2": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:openForRandomRead(java.io.File,java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:openFSDataInputStream(java.io.File,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.29
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.SecureIOUtils:openForRead(java.io.File,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:getLinkTarget(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getContentSummary(org.apache.hadoop.fs.Path)": {
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.71
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.53
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.72
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.72
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.23
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.19
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.13
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.05
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.07
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.07
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.07
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.07
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs:getStatus(org.apache.hadoop.fs.Path)": {
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.72
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.53,
                "total_score": 0.54
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.73
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:userHasAdministratorAccess(javax.servlet.ServletContext,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ServiceAuthorizationManager:authorize(org.apache.hadoop.security.UserGroupInformation,java.lang.Class,org.apache.hadoop.conf.Configuration,java.net.InetAddress)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.14
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.DefaultImpersonationProvider:authorize(org.apache.hadoop.security.UserGroupInformation,java.net.InetAddress)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.35
            },
            "m2": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.77
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.17
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.49
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.13
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getCurrentUser()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.43
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isLoginKeytabBased()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:isLoginTicketBased()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:doAsLoginUserOrFatal(java.security.PrivilegedAction)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.49
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:doAsLoginUser(java.security.PrivilegedExceptionAction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:cedeActive(int)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:gracefulFailoverToYou()": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:createScannerByKey(byte[],byte[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:createScanner(org.apache.hadoop.io.file.tfile.RawComparable,org.apache.hadoop.io.file.tfile.RawComparable)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:hasAdministratorAccess(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:authorize(org.apache.hadoop.security.UserGroupInformation,java.lang.String,java.net.InetAddress)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getHomeDirectory()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.22
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:checkAccessPermissions(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.permission.FsAction)": {
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.28
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.26
            },
            "m12": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m10": {
                "count_score": 0.19,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.05
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.25
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.05
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.08,
                "total_score": 0.05
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.37
            },
            "m14": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:<init>()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getCurrentUser": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.44
            },
            "now": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "now": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.99,
                "total_score": 0.45
            },
            "getCurrentUser": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.4
            },
            "getBoolean": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "getType": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "get": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.InodeTree:<init>(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.URI,boolean)": {
            "getDefaultMountTableName": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.21
            },
            "getHomeDirValue": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.08
            },
            "isNestedMountPointSupported": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getCurrentUser": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.36
            },
            "iterator": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.14
            },
            "toString": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.11
            },
            "checkMntEntryKeyEqualsTarget": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "buildLinkRegexEntry": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "checkNotNull": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.37
            },
            "getRootDir": {
                "count_score": 0.16,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.15
            },
            "setInternalDirFs": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.08
            },
            "setRoot": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getLinkEntries": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getLinkType": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "getTarget": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.09
            },
            "addRegexMountEntry": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getSrc": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.08
            },
            "getSettings": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.08
            },
            "getUgi": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getConfig": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "createLink": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "addFallbackLink": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache$Key:<init>(java.net.URI,org.apache.hadoop.conf.Configuration,long)": {
            "toLowerCase": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "getCurrentUser": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:getHomeDirectory()": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.17
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:openConnection(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token,java.lang.String)": {
            "m1": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.95,
                "total_score": 0.55
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.53,
                "total_score": 0.39
            },
            "m6": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.31
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m10": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m11": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.2
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator:authenticate(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getBestUGI(java.lang.String,java.lang.String)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:loginUserFromKeytabAndReturnUGI(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.17
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.12,
                "total_score": 0.11
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:logAllUserInfo(org.slf4j.Logger,org.apache.hadoop.security.UserGroupInformation)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.43,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.39
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.UserProvider:<init>()": {
            "getCurrentUser": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getCredentials": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:doAsCurrentUser(java.security.PrivilegedExceptionAction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcServer:<init>(org.apache.hadoop.security.SaslRpcServer$AuthMethod)": {
            "getMechanismName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getCurrentUser": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getUserName": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.security.SaslRpcServer:create(org.apache.hadoop.ipc.Server$Connection,java.util.Map,org.apache.hadoop.security.token.SecretManager)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.06
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.UserProvider:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getCurrentUser": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "getCredentials": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getDoAsUser()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:waitForProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,int,org.apache.hadoop.io.retry.RetryPolicy,long)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.82,
                "total_score": 0.54
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.29,
                "total_score": 0.33
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection:shouldAuthenticateOverKrb()": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.32
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.22
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Resource:getRestrictParserDefault(java.lang.Object)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Client$Connection$1:run()": {
            "isLoginKeytabBased": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getLoginUser": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.3
            },
            "reloginFromKeytab": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.05
            },
            "isLoginTicketBased": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "reloginFromTicketCache": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getUserName": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getAddress": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.05
            },
            "getHostname": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.13
            },
            "wrapException": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:doKerberosRelogin()": {
            "m1": {
                "count_score": 0.36,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.51
            },
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.21
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.21
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.23
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:run(java.lang.String[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m7": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFCRpcServer:cedeActive(int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFCRpcServer:gracefulFailover()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile$Reader:createScanner(byte[],byte[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.ZKFCProtocolClientSideTranslatorPB:<init>(java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int)": {
            "setProtocolEngine": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.23
            },
            "getProtocolVersion": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            },
            "getCurrentUser": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getProxy": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:<init>(java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int)": {
            "setProtocolEngine": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.23
            },
            "getProtocolVersion": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            },
            "getCurrentUser": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "getProxy": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$Servlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.63,
                "total_score": 0.45
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.http.AdminAuthorizedServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2:isInstrumentationAccessAllowed(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.DelegateToFileSystem:getHomeDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getTrashRoot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getTrashRoots(boolean)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.32
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.64,
                "total_score": 0.66
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.73,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.85,
                "total_score": 0.71
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.17,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getHomeDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.AbstractFileSystem:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "initialize": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme:<init>()": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache$Key:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache:getUnique(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:getHomeDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:<init>(org.apache.hadoop.fs.AbstractFileSystem,org.apache.hadoop.conf.Configuration)": {
            "get": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.14
            },
            "getCurrentUser": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.39
            },
            "getInitialWorkingDirectory": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "getHomeDirectory": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.14
            },
            "getBoolean": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getHomeDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:getHomeDirectory()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:openConnection(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:get(java.net.URI,org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:newInstance(java.net.URI,org.apache.hadoop.conf.Configuration,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:getUGIFromTicketCache(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.29
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.23
            },
            "m3": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:loginFromKeytab()": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.17
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.12
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.12
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.12
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.33
            },
            "m11": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m12": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.21
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:loginUserFromKeytab(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.4,
                "total_score": 0.51
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:logAllUserInfo(org.apache.hadoop.security.UserGroupInformation)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getActualUgi()": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.2,
                "total_score": 0.42
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.76,
                "total_score": 0.38
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.36
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.22
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:buildNegotiateResponse(java.util.List)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:createSaslServer(org.apache.hadoop.security.SaslRpcServer$AuthMethod)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:waitForProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:waitForProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,int,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Resource:<init>(java.lang.Object,java.lang.String)": {
            "getRestrictParserDefault": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.tools.GetGroupsBase:getUgmProtocol()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceTarget:getZKFCProxy(org.apache.hadoop.conf.Configuration,int)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceTarget:getProxyForAddress(org.apache.hadoop.conf.Configuration,int,int,java.net.InetSocketAddress)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.jmx.JMXJsonServlet:isInstrumentationAccessAllowed(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.http.HttpServer2$StackServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.37
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.http.ProfileOutputServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.42
            },
            "m14": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.http.ProfileServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.36
            },
            "m9": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m10": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m11": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m12": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m15": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m24": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.2
            },
            "m27": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            }
        }
    },
    {
        "org.apache.hadoop.conf.ConfServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.43,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:moveToTrash(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m2": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.37
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.27
            },
            "m6": {
                "count_score": 0.32,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.17
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.33,
                "indegree_score": 0.89,
                "total_score": 0.5
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m11": {
                "count_score": 0.09,
                "dataflow_score": 0.33,
                "indegree_score": 0.83,
                "total_score": 0.46
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.42
            },
            "m14": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.39
            },
            "m17": {
                "count_score": 0.05,
                "dataflow_score": 0.33,
                "indegree_score": 0.44,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:getCurrentTrashDir()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:getCurrentTrashDir(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getTrashRoot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.84,
                "total_score": 0.67
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.68
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.38
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m11": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.88,
                "total_score": 0.41
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.23
            },
            "m13": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getTrashRoot(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault$Emptier:run()": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.92,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.47
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:createCheckpoint(java.util.Date)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.24
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:deleteCheckpoint(boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.24
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:getTrashRoots(boolean)": {
            "m4": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            },
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.38
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.14
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.21
            },
            "m13": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.29
            },
            "m19": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.75,
                "total_score": 0.63
            },
            "m11": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.6,
                "total_score": 0.58
            },
            "m20": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m14": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m16": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:getTrashRoots(boolean)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Test:testAccess(org.apache.hadoop.fs.shell.PathData,org.apache.hadoop.fs.permission.FsAction)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.79
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFs:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFs:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem:<init>(org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:addFileSystemForTesting(java.net.URI,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:removeFileSystemForTesting(java.net.URI,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem$Cache:get(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:newInstance(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileContext(org.apache.hadoop.fs.AbstractFileSystem,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL:openConnection(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:execute()": {
            "m2": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.25
            },
            "m5": {
                "count_score": 0.19,
                "dataflow_score": 1.0,
                "indegree_score": 0.71,
                "total_score": 0.64
            },
            "m6": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m8": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.18
            },
            "m13": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.07
            },
            "m14": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m18": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.11
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.36
            },
            "m19": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m22": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.11
            },
            "m23": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m24": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m25": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m26": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m27": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m28": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m29": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m30": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m31": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m37": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m38": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m32": {
                "count_score": 0.02,
                "dataflow_score": 1.0,
                "indegree_score": 0.62,
                "total_score": 0.55
            },
            "m33": {
                "count_score": 0.02,
                "dataflow_score": 0.5,
                "indegree_score": 0.16,
                "total_score": 0.22
            },
            "m34": {
                "count_score": 0.02,
                "dataflow_score": 0.5,
                "indegree_score": 0.16,
                "total_score": 0.22
            },
            "m35": {
                "count_score": 0.02,
                "dataflow_score": 0.5,
                "indegree_score": 0.25,
                "total_score": 0.26
            },
            "m36": {
                "count_score": 0.02,
                "dataflow_score": 0.5,
                "indegree_score": 0.25,
                "total_score": 0.26
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell:maybeDoLoginFromKeytabAndPrincipal(java.lang.String[])": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.UserGroupInformation:main(java.lang.String[])": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.21
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:login(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.28
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.79
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.18,
                "total_score": 0.41
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:createConnection(java.net.URL,java.lang.String)": {
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.29
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.29
            },
            "m10": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m15": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getDelegationToken(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.26
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.26
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.45
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:renewDelegationToken(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.25
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:cancelDelegationToken(org.apache.hadoop.security.token.Token)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.22
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.22
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:<init>(java.lang.String,int,java.lang.Class,int,int,int,org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.security.token.SecretManager,java.lang.String)": {
            "getInt": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "getQueueClassPrefix": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.07
            },
            "getQueueClass": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.07
            },
            "getSchedulerClass": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.07
            },
            "getClientBackoffEnable": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.07
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getBoolean": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.39
            },
            "getAuthMethods": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "buildNegotiateResponse": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getAddress": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.13
            },
            "create": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "setLogSlowRPC": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "getLong": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.3
            },
            "setLogSlowRPCThresholdTime": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "setPurgeIntervalNanos": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "isSecurityEnabled": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.25
            },
            "init": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.13
            },
            "getInstance": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.07
            },
            "addTerseLoggingExceptions": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:buildSaslNegotiateResponse()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:waitForProtocolProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:waitForProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,long)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(java.io.InputStream,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration$Resource:<init>(java.lang.Object)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.tools.GetGroupsBase:run(java.lang.String[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.47
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:gracefulFailoverThroughZKFCs(org.apache.hadoop.ha.HAServiceTarget)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:cedeRemoteActive(org.apache.hadoop.ha.HAServiceTarget,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceTarget:getHealthMonitorProxy(org.apache.hadoop.conf.Configuration,int,int)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceTarget:getProxyForAddress(org.apache.hadoop.conf.Configuration,int,java.net.InetSocketAddress)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.jmx.JMXJsonServlet:doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m16": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:createCheckpoint()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:deleteCheckpoint()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.TrashPolicyDefault:deleteCheckpointsImmediately()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Test:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.31
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:access(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsAction)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:get(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.48,
                "total_score": 0.53
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:newInstanceLocal(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.FsGetter:getNewInstance(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme$ChildFsGetter:getNewInstance(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:listStatusForFallbackLink()": {
            "m1": {
                "count_score": 0.18,
                "dataflow_score": 0.5,
                "indegree_score": 0.61,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.71,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.11
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.54,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.14
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 1.0,
                "indegree_score": 0.12,
                "total_score": 0.38
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.11
            },
            "m7": {
                "count_score": 0.09,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.41
            },
            "m12": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileContext(org.apache.hadoop.fs.AbstractFileSystem)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileContext(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:run(java.lang.String[])": {
            "m2": {
                "count_score": 0.21,
                "dataflow_score": 0.5,
                "indegree_score": 0.86,
                "total_score": 0.56
            },
            "m4": {
                "count_score": 0.21,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.23
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m12": {
                "count_score": 0.21,
                "dataflow_score": 1.0,
                "indegree_score": 0.68,
                "total_score": 0.64
            },
            "m13": {
                "count_score": 0.04,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.16
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell:init(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.SecurityUtil:login(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:call(java.net.HttpURLConnection,java.lang.Object,int,java.lang.Class,int)": {
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m16": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.42
            },
            "m19": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC$Server:<init>(java.lang.String,int,java.lang.Class,int,int,int,org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.security.token.SecretManager,java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "initProtocolMetaInfo": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:<init>(java.lang.String,int,java.lang.Class,int,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:<init>(java.lang.String,int,java.lang.Class,int,int,int,org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.security.token.SecretManager)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:processSaslMessage(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.14
            },
            "m11": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            }
        }
    },
    {
        "org.apache.hadoop.ipc.RPC:waitForProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(java.lang.String)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(java.net.URL)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:addResource(java.io.InputStream)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.ha.protocolPB.HAServiceProtocolClientSideTranslatorPB:<init>(java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)": {
            "setProtocolEngine": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "getProtocolVersion": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "getProxy": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:doGracefulFailover()": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.49
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "m11": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.39
            },
            "m13": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.ha.HealthMonitor:createProxy()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceTarget:getHealthMonitorProxy(org.apache.hadoop.conf.Configuration,int)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAServiceTarget:getProxy(org.apache.hadoop.conf.Configuration,int)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.HarFileSystem:initialize(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.35
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.15,
                "dataflow_score": 0.5,
                "indegree_score": 0.56,
                "total_score": 0.42
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.17
            },
            "m11": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.35
            },
            "m13": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.33
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.Trash:moveToAppropriateTrash(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.41,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.58
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.56,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.48
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.1
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.4
            },
            "m9": {
                "count_score": 0.22,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsUrlConnection:connect()": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.28
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m9": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.33
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:<init>(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "stringToUri": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "get": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getFSofPath(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.48,
                "total_score": 0.57
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getNamed(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:getLocal(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ChRootedFileSystem:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.FsGetter:get(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme$ChildFsGetter:get(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.Path:getFileSystem(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:getFileSystem()": {
            "m1": {
                "count_score": 0.75,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.05,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystem$InnerCache:get(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFs$InternalDirOfViewFs:listStatus(org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.3
            },
            "m2": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.31
            },
            "m27": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.14
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.11
            },
            "m6": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.2
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.11
            },
            "m11": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.31
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.28
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.11
            },
            "m18": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.36
            },
            "m19": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m20": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.28
            },
            "m21": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.26
            },
            "m22": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m23": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.27
            },
            "m24": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m25": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.29
            },
            "m26": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.28
            },
            "m31": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileContext(java.net.URI)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileContext(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.23
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getLocalFSFileContext(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:init(org.apache.commons.configuration2.SubsetConfiguration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.37
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.2
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:call(java.net.HttpURLConnection,java.lang.Object,int,java.lang.Class)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2$Server:<init>(java.lang.Class,java.lang.Object,org.apache.hadoop.conf.Configuration,java.lang.String,int,int,int,int,boolean,org.apache.hadoop.security.token.SecretManager,java.lang.String,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Server:<init>(java.lang.Class,java.lang.Object,org.apache.hadoop.conf.Configuration,java.lang.String,int,int,int,int,boolean,org.apache.hadoop.security.token.SecretManager,java.lang.String,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getProtocolInterfaces": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:saslProcess(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.24
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.38
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.11
            },
            "m18": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m19": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m20": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m22": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLFactory:readSSLConfiguration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.ssl.SSLFactory$Mode)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.27,
                "total_score": 0.46
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.49
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.security.authorize.ServiceAuthorizationManager:refresh(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.authorize.PolicyProvider)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.HCFSMountTableConfigLoader:load(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.18
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.09
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.87,
                "total_score": 0.67
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.22
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.54,
                "total_score": 0.39
            },
            "m16": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ha.HealthMonitor:tryConnect()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:isOtherTargetNodeActive(java.lang.String,boolean)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.14
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.3
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:transitionToStandby(org.apache.commons.cli.CommandLine)": {
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.32
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.24
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.44,
                "total_score": 0.39
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:checkHealth(org.apache.commons.cli.CommandLine)": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m8": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.23,
                "total_score": 0.32
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:getServiceState(org.apache.commons.cli.CommandLine)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m8": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:getAllServiceState()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m13": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:becomeActive()": {
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.37,
                "total_score": 0.34
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.67
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.37,
                "total_score": 0.34
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.37,
                "total_score": 0.49
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.23
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:becomeStandby()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.21,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:doCedeActive(int)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.4,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m4": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.72,
                "total_score": 0.62
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.16
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ha.FailoverController:preFailoverChecks(org.apache.hadoop.ha.HAServiceTarget,org.apache.hadoop.ha.HAServiceTarget,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.23,
                "total_score": 0.43
            },
            "m11": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.ha.FailoverController:tryGracefulFence(org.apache.hadoop.ha.HAServiceTarget)": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Rm:moveToTrash(org.apache.hadoop.fs.shell.PathData)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsUrlConnection:getInputStream()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:recursePath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.23
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.29
            },
            "m6": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.12
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.5,
                "indegree_score": 0.63,
                "total_score": 0.42
            },
            "m8": {
                "count_score": 0.18,
                "dataflow_score": 0.5,
                "indegree_score": 0.82,
                "total_score": 0.53
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.19
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.find.Find:isPathRecursable(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.28
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.55,
                "total_score": 0.55
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.3,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.4
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.38,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.34,
                "total_score": 0.2
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.11,
                "total_score": 0.07
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Head:expandArgument(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Tail:expandArgument(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystemLinkResolver:resolve(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.53
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.62
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "getLocal": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:copyFromLocalFile(boolean,boolean,org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:copyFromLocalFile(boolean,boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:copyToLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext:confChanged(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.98,
                "total_score": 0.76
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.48
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.17
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.18
            },
            "m8": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.3
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.21
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.41,
                "total_score": 0.2
            },
            "m11": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.conf.Configuration:getLocalPath(java.lang.String,java.lang.String)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode:<init>(java.lang.String,java.lang.String,java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme:getRawFileSystem(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.41
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.26
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme:getMountPathInfo(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.39
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.28
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.73
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.39
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.13
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.PathData:expandAsGlob(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.25,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.26
            },
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.21,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 0.91,
                "total_score": 0.75
            },
            "m9": {
                "count_score": 0.07,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.22
            },
            "m10": {
                "count_score": 0.07,
                "dataflow_score": 0.67,
                "indegree_score": 0.25,
                "total_score": 0.32
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.98,
                "total_score": 0.51
            },
            "m13": {
                "count_score": 0.07,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Reader$Option[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.74,
                "total_score": 0.29
            },
            "getFileSystem": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.36
            },
            "getLen": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "openFile": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "initialize": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Reader:initBloomFilter(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)": {
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFileDumper:dumpInfo(java.lang.String,java.io.PrintStream,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.01,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.28
            },
            "m3": {
                "count_score": 0.01,
                "dataflow_score": 0.1,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.01,
                "dataflow_score": 0.03,
                "indegree_score": 0.64,
                "total_score": 0.27
            },
            "m6": {
                "count_score": 0.01,
                "dataflow_score": 0.1,
                "indegree_score": 0.37,
                "total_score": 0.18
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.2,
                "indegree_score": 0.18,
                "total_score": 0.17
            },
            "m10": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m11": {
                "count_score": 0.02,
                "dataflow_score": 0.1,
                "indegree_score": 0.18,
                "total_score": 0.11
            },
            "m12": {
                "count_score": 0.02,
                "dataflow_score": 0.03,
                "indegree_score": 0.43,
                "total_score": 0.19
            },
            "m13": {
                "count_score": 0.01,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m14": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.15
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.07,
                "indegree_score": 0.29,
                "total_score": 0.15
            },
            "m17": {
                "count_score": 0.04,
                "dataflow_score": 0.07,
                "indegree_score": 0.18,
                "total_score": 0.1
            },
            "m22": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.08
            },
            "m23": {
                "count_score": 0.02,
                "dataflow_score": 0.03,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "m7": {
                "count_score": 0.03,
                "dataflow_score": 0.07,
                "indegree_score": 0.18,
                "total_score": 0.1
            },
            "m19": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.37
            },
            "m32": {
                "count_score": 0.01,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.22
            },
            "m33": {
                "count_score": 0.08,
                "dataflow_score": 0.7,
                "indegree_score": 0.0,
                "total_score": 0.23
            },
            "m35": {
                "count_score": 0.01,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.12
            },
            "m36": {
                "count_score": 0.02,
                "dataflow_score": 0.07,
                "indegree_score": 0.29,
                "total_score": 0.14
            },
            "m39": {
                "count_score": 0.01,
                "dataflow_score": 0.03,
                "indegree_score": 0.29,
                "total_score": 0.13
            },
            "m40": {
                "count_score": 0.01,
                "dataflow_score": 0.03,
                "indegree_score": 0.52,
                "total_score": 0.22
            },
            "m5": {
                "count_score": 0.01,
                "dataflow_score": 0.03,
                "indegree_score": 0.9,
                "total_score": 0.37
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:readTokenStorageFile(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.22
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.28
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.12
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.38
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.75
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:writeTokenStorageFile(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.Credentials$SerializedFormat)": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.77,
                "total_score": 0.56
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.5,
                "indegree_score": 0.6,
                "total_score": 0.49
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.KeyStoreProvider:initFileSystem(java.net.URI)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.JavaKeyStoreProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.24
            },
            "unnestUri": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.31
            },
            "getFileSystem": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "locateKeystore": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:getLibJars(org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.21
            },
            "m9": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:initFs()": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.44
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getLocalFSFileContext()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$AvroFileInputStream:<init>(org.apache.hadoop.fs.FileStatus)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getFileContext": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.22
            },
            "getPath": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileContext:getFileContext()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getKeyVersion(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.19
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.73
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.84,
                "total_score": 0.7
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getCurrentKey(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.19
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.73
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.84,
                "total_score": 0.7
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getKeys()": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.52,
                "total_score": 0.61
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getKeysMetadata(java.lang.String[])": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.75
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.95,
                "total_score": 0.59
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:createKeyInternal(java.lang.String,byte[],org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.27
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.09
            },
            "m7": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m8": {
                "count_score": 0.23,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.07
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.57
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.96,
                "total_score": 0.71
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.91,
                "total_score": 0.69
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.5,
                "indegree_score": 0.43,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:invalidateCache(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.75
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.93,
                "total_score": 0.58
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:decryptEncryptedKey(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.08,
                "total_score": 0.36
            },
            "m2": {
                "count_score": 0.15,
                "dataflow_score": 1.0,
                "indegree_score": 0.39,
                "total_score": 0.5
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.33,
                "indegree_score": 0.15,
                "total_score": 0.19
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.33,
                "indegree_score": 0.21,
                "total_score": 0.24
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.33,
                "indegree_score": 0.21,
                "total_score": 0.21
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m9": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.21,
                "total_score": 0.1
            },
            "m12": {
                "count_score": 0.05,
                "dataflow_score": 0.67,
                "indegree_score": 0.5,
                "total_score": 0.41
            },
            "m13": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.46,
                "total_score": 0.5
            },
            "m15": {
                "count_score": 0.05,
                "dataflow_score": 0.67,
                "indegree_score": 0.43,
                "total_score": 0.39
            },
            "m16": {
                "count_score": 0.05,
                "dataflow_score": 0.33,
                "indegree_score": 0.08,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:reencryptEncryptedKey(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.25,
                "total_score": 0.43
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.51,
                "total_score": 0.55
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.33,
                "indegree_score": 0.31,
                "total_score": 0.25
            },
            "m4": {
                "count_score": 0.19,
                "dataflow_score": 0.33,
                "indegree_score": 0.36,
                "total_score": 0.3
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.33,
                "indegree_score": 0.36,
                "total_score": 0.27
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.33,
                "indegree_score": 1.0,
                "total_score": 0.51
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.33,
                "indegree_score": 0.19,
                "total_score": 0.2
            },
            "m11": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            },
            "m12": {
                "count_score": 0.05,
                "dataflow_score": 0.67,
                "indegree_score": 0.59,
                "total_score": 0.45
            },
            "m13": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.54
            },
            "m15": {
                "count_score": 0.05,
                "dataflow_score": 0.67,
                "indegree_score": 0.54,
                "total_score": 0.43
            },
            "m16": {
                "count_score": 0.05,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:reencryptEncryptedKeys(java.util.List)": {
            "m1": {
                "count_score": 0.19,
                "dataflow_score": 1.0,
                "indegree_score": 0.65,
                "total_score": 0.62
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.25,
                "indegree_score": 0.42,
                "total_score": 0.28
            },
            "m4": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.47,
                "total_score": 0.27
            },
            "m5": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.51,
                "total_score": 0.29
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.25,
                "indegree_score": 0.54,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.25,
                "indegree_score": 0.54,
                "total_score": 0.32
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.25,
                "indegree_score": 1.0,
                "total_score": 0.51
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m12": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.71,
                "total_score": 0.37
            },
            "m13": {
                "count_score": 0.04,
                "dataflow_score": 0.5,
                "indegree_score": 0.69,
                "total_score": 0.44
            },
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.25,
                "indegree_score": 0.67,
                "total_score": 0.35
            },
            "m18": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.13
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getKeyVersions(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.19
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.92,
                "total_score": 0.73
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.84,
                "total_score": 0.55
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:getMetadata(java.lang.String)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.34
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.75
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.73
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.21
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:deleteKey(java.lang.String)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.62
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.89,
                "total_score": 0.73
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.5,
                "indegree_score": 0.77,
                "total_score": 0.53
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine2:getServer(java.lang.Class,java.lang.Object,java.lang.String,int,int,int,int,boolean,org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.token.SecretManager,java.lang.String,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine$Server:<init>(java.lang.Class,java.lang.Object,org.apache.hadoop.conf.Configuration,java.lang.String,int,int,int,int,boolean,org.apache.hadoop.security.token.SecretManager,java.lang.String,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine:getServer(java.lang.Class,java.lang.Object,java.lang.String,int,int,int,int,boolean,org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.token.SecretManager,java.lang.String,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Server:<init>(java.lang.Class,java.lang.Object,org.apache.hadoop.conf.Configuration,java.lang.String,int,int,int,int,boolean,org.apache.hadoop.security.token.SecretManager,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:saslReadAndProcess(org.apache.hadoop.ipc.RpcWritable$Buffer)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            }
        }
    },
    {
        "org.apache.hadoop.security.ssl.SSLFactory:<init>(org.apache.hadoop.security.ssl.SSLFactory$Mode,org.apache.hadoop.conf.Configuration)": {
            "readSSLConfiguration": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "getBoolean": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "getClass": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.3
            },
            "newInstance": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.4
            },
            "getStrings": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.2
            },
            "getTrimmedStrings": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.24
            },
            "join": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.2
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server:refreshServiceAcl(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.authorize.PolicyProvider)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HealthMonitor:loopUntilConnected()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:transitionToActive(org.apache.commons.cli.CommandLine)": {
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.65,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.23
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.44,
                "total_score": 0.38
            },
            "m11": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.44,
                "total_score": 0.53
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:doFence(org.apache.hadoop.ha.HAServiceTarget)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.35
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ha.FailoverController:failover(org.apache.hadoop.ha.HAServiceTarget,org.apache.hadoop.ha.HAServiceTarget,boolean,boolean)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.65,
                "total_score": 0.45
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.29,
                "total_score": 0.31
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.29,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Delete$Rm:processPath(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.18
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Put:expandArgument(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$Merge:processOptions(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.27
            },
            "m2": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.46,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CopyCommands$AppendToFile:expandArgument(java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:getLocalDestination(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:moveFromLocalFile(org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:copyFromLocalFile(boolean,boolean,org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:copyFromLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:copyFromLocalFile(boolean,boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:copyToLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext:getLocalPathForWrite(java.lang.String,long,org.apache.hadoop.conf.Configuration,boolean)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.35
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext:getLocalPathToRead(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.09
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext:getAllLocalPathsToRead(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:<init>(java.net.URI[],org.apache.hadoop.conf.Configuration,int,java.util.EnumSet,org.apache.hadoop.fs.viewfs.FsGetter)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.08
            },
            "getClass": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.73,
                "total_score": 0.38
            },
            "newInstance": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "getNewInstance": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.12
            },
            "getRack": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "getInstance": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "sortByDistance": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:runAll()": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:expandArgument(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.CommandWithDestination:getRemoteDestination(java.util.LinkedList)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)": {
            "makeQualified": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "file": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Reader:<init>(org.apache.hadoop.fs.FSDataInputStream,int,long,long,org.apache.hadoop.conf.Configuration)": {
            "stream": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "start": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.23
            },
            "length": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.23
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:createDataFileReader(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Reader$Option[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.81,
                "total_score": 0.77
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor:nextRawKey()": {
            "m2": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.12
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.12
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.38
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.34
            },
            "m8": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.3
            },
            "m9": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m10": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Writer$Option[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.16
            },
            "now": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getValue": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.14
            },
            "getFileSystem": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.27
            },
            "getDefaultReplication": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.24
            },
            "getDefaultBlockSize": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.25
            },
            "exists": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.35
            },
            "file": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.2
            },
            "getKeyClass": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.52,
                "total_score": 0.21
            },
            "getValueClass": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.18
            },
            "getMetadata": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "metadata": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.17
            },
            "getCompressionType": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.12
            },
            "getCompressionCodec": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.12
            },
            "close": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.23
            },
            "create": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.45,
                "total_score": 0.18
            },
            "getCodec": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "init": {
                "count_score": 0.02,
                "dataflow_score": 0.0,
                "indegree_score": 0.35,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.io.file.tfile.TFile:main(java.lang.String[])": {
            "m1": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.27
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.security.Credentials:writeTokenStorageFile(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:doFormattedWrite(java.io.File,java.lang.String,org.apache.hadoop.security.Credentials,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:rollLogDirIfNeeded()": {
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.09
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:getJarsInDirectory(java.lang.String,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.36,
                "total_score": 0.49
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.89,
                "total_score": 0.7
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.14,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.15
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.36
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Display$Text:getInputStream(org.apache.hadoop.fs.shell.PathData)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.67,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:createKey(java.lang.String,org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:createKey(java.lang.String,byte[],org.apache.hadoop.crypto.key.KeyProvider$Options)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:rollNewVersionInternal(java.lang.String,byte[])": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.33
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.74
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.72
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.55,
                "total_score": 0.42
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:invalidateCache(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.ProtobufRpcEngine:getServer(java.lang.Class,java.lang.Object,java.lang.String,int,int,int,int,boolean,org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.token.SecretManager,java.lang.String,org.apache.hadoop.ipc.AlignmentContext)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Server:<init>(java.lang.Class,java.lang.Object,org.apache.hadoop.conf.Configuration,java.lang.String,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Server:<init>(java.lang.Object,org.apache.hadoop.conf.Configuration,java.lang.String,int,int,int,int,boolean,org.apache.hadoop.security.token.SecretManager)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:processRpcOutOfBandRequest(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto,org.apache.hadoop.ipc.RpcWritable$Buffer)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:connect(java.net.URL)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:<init>(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "extractKMSPath": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "createServiceURL": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "getDtService": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "buildTokenService": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "init": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.09
            },
            "getInt": {
                "count_score": 0.45,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.54
            },
            "getFloat": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:runCmd(java.lang.String[])": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m14": {
                "count_score": 0.1,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m13": {
                "count_score": 0.1,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m12": {
                "count_score": 0.1,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m11": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.ha.ZKFailoverController:fenceOldActive(byte[])": {
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:copyFromLocalFile(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:moveFromLocalFile(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:copyFromLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:copyToLocalFile(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:moveToLocalFile(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:copyToLocalFile(boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:getLocalPathForWrite(java.lang.String,long,org.apache.hadoop.conf.Configuration,boolean)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext:createTmpFileForWrite(java.lang.String,long,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.39
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:getLocalPathToRead(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:getAllLocalPathsToRead(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:<init>(java.net.URI[],org.apache.hadoop.conf.Configuration,int,java.util.EnumSet)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.viewfs.NflyFSystem:createFileSystem(java.net.URI[],org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.fs.viewfs.FsGetter)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:expandArguments(java.util.LinkedList)": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:open(org.apache.hadoop.fs.Path,org.apache.hadoop.io.WritableComparator,org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Reader$Option[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.39
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.94,
                "total_score": 0.72
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.67,
                "total_score": 0.62
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue:adjustPriorityQueue(org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor)": {
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.18
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$BlockCompressWriter:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Writer$Option[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "getInt": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$RecordCompressWriter:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Writer$Option[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:getTokenFile(java.io.File,java.lang.String,org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,java.lang.String,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.72
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m13": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.3,
                "total_score": 0.46
            },
            "m14": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.35
            },
            "m15": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.74
            },
            "m17": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.65
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:aliasTokenFile(java.io.File,java.lang.String,org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.32
            },
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.33
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.37
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.61
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.8,
                "total_score": 0.68
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.39
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.25
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:appendTokenFiles(java.util.ArrayList,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.56,
                "total_score": 0.22
            },
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.24
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.32
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.56,
                "total_score": 0.58
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:removeTokenFromFile(boolean,java.io.File,java.lang.String,org.apache.hadoop.io.Text,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.32
            },
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.33
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.37
            },
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.11
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.76
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.8,
                "total_score": 0.65
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:renewTokenFile(java.io.File,java.lang.String,org.apache.hadoop.io.Text,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.75,
                "total_score": 0.63
            },
            "m9": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.85,
                "total_score": 0.37
            },
            "m2": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.2,
                "total_score": 0.11
            },
            "m4": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.75,
                "total_score": 0.33
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m7": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 1.0,
                "indegree_score": 0.55,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtFileOperations:importTokenFile(java.io.File,java.lang.String,org.apache.hadoop.io.Text,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.54,
                "total_score": 0.56
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.07
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.11
            },
            "m5": {
                "count_score": 0.29,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.79
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.6
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.17,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.metrics2.sink.RollingFileSystemSink:putMetrics(org.apache.hadoop.metrics2.MetricsRecord)": {
            "m1": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.81,
                "total_score": 0.38
            },
            "m7": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m11": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.22
            },
            "m2": {
                "count_score": 0.13,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m12": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.26,
                "total_score": 0.12
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:getJarsInDirectory(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:expandWildcard(java.util.List,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.94,
                "total_score": 0.77
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            },
            "m10": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:rollNewVersion(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider:rollNewVersion(java.lang.String,byte[])": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:deleteKey(java.lang.String)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:rollNewVersion(java.lang.String,byte[])": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider:rollNewVersion(java.lang.String)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.WritableRpcEngine$Server:<init>(java.lang.Object,org.apache.hadoop.conf.Configuration,java.lang.String,int)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:processOneRpc(java.nio.ByteBuffer)": {
            "m11": {
                "count_score": 0.11,
                "dataflow_score": 0.75,
                "indegree_score": 0.61,
                "total_score": 0.5
            },
            "m8": {
                "count_score": 0.22,
                "dataflow_score": 1.0,
                "indegree_score": 0.61,
                "total_score": 0.61
            },
            "m15": {
                "count_score": 0.11,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.11
            },
            "m17": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m16": {
                "count_score": 0.11,
                "dataflow_score": 0.5,
                "indegree_score": 0.0,
                "total_score": 0.18
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.34
            },
            "m6": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.19
            },
            "m10": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.9,
                "total_score": 0.39
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:process(java.lang.String)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$Factory:createProviders(org.apache.hadoop.conf.Configuration,java.net.URL,int,java.lang.String)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.ha.HAAdmin:run(java.lang.String[])": {
            "m5": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileSystem:completeLocalOutput(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.ChecksumFileSystem:copyToLocalFile(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.11
            },
            "m5": {
                "count_score": 0.21,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.43
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.96,
                "total_score": 0.38
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.49,
                "total_score": 0.54
            },
            "m10": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 0.85,
                "total_score": 0.53
            },
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.59
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:getLocalPathForWrite(java.lang.String,long,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:createTmpFileForWrite(java.lang.String,long,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:processRawArguments(java.util.LinkedList)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:<init>(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Reader$Option[])": {
            "getValue": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "getInt": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.5
            },
            "open": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue:next()": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.49
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.18
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.25
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Writer$Option[])": {
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.86,
                "total_score": 0.72
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell$Get:execute()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell$Edit:execute()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell$Append:execute()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell$Remove:execute()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell$Renew:execute()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell$Import:execute()": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:createJarWithClassPath(java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.util.Map)": {
            "m2": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.48
            },
            "m13": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.09
            },
            "m16": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.89,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.54,
                "total_score": 0.25
            },
            "m17": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.util.ApplicationClassLoader:constructUrlsFromClasspath(java.lang.String)": {
            "m6": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m8": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:validateFiles(java.lang.String,boolean)": {
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.18
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.59,
                "total_score": 0.41
            },
            "m17": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m14": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.34
            },
            "m15": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.5,
                "indegree_score": 0.64,
                "total_score": 0.44
            },
            "m18": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.39,
                "total_score": 0.19
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:readAndProcess()": {
            "m17": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m11": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m15": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m16": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Connection:unwrapPacketAndProcessRpcs(byte[])": {
            "m11": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            },
            "m10": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:doGetLevel()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:doSetLevel()": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.kms.KMSClientProvider$Factory:createProvider(java.net.URI,org.apache.hadoop.conf.Configuration)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.85
            },
            "m10": {
                "count_score": 0.5,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.45
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.FilterFileSystem:completeLocalOutput(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlockFactory:createTmpFileForWrite(java.lang.String,long,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.77,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.82,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.LocalDirAllocator:getLocalPathForWrite(java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.shell.Command:run(java.lang.String[])": {
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.86,
                "total_score": 0.37
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.3
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.43,
                "total_score": 0.2
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "comparator": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Reader:<init>(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Reader$Option[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "initBloomFilter": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:cloneFileAttributes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.2,
                "indegree_score": 0.78,
                "total_score": 0.42
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.25
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.2,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.2,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.31
            },
            "m5": {
                "count_score": 0.08,
                "dataflow_score": 0.2,
                "indegree_score": 0.95,
                "total_score": 0.47
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.2,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.6,
                "indegree_score": 0.71,
                "total_score": 0.49
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.2,
                "indegree_score": 0.45,
                "total_score": 0.26
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.71
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile:fix(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,boolean,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.07
            },
            "m1": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.41
            },
            "m2": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.3
            },
            "m3": {
                "count_score": 0.07,
                "dataflow_score": 0.33,
                "indegree_score": 0.42,
                "total_score": 0.29
            },
            "m4": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.17
            },
            "m7": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.29,
                "total_score": 0.14
            },
            "m8": {
                "count_score": 0.07,
                "dataflow_score": 0.67,
                "indegree_score": 0.76,
                "total_score": 0.53
            },
            "m9": {
                "count_score": 0.04,
                "dataflow_score": 0.33,
                "indegree_score": 0.49,
                "total_score": 0.31
            },
            "m10": {
                "count_score": 0.04,
                "dataflow_score": 0.33,
                "indegree_score": 0.51,
                "total_score": 0.31
            },
            "m11": {
                "count_score": 0.04,
                "dataflow_score": 1.0,
                "indegree_score": 0.49,
                "total_score": 0.51
            },
            "m12": {
                "count_score": 0.11,
                "dataflow_score": 0.33,
                "indegree_score": 0.36,
                "total_score": 0.28
            },
            "m13": {
                "count_score": 0.04,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m16": {
                "count_score": 0.04,
                "dataflow_score": 0.33,
                "indegree_score": 0.11,
                "total_score": 0.15
            },
            "m14": {
                "count_score": 0.04,
                "dataflow_score": 0.33,
                "indegree_score": 0.33,
                "total_score": 0.24
            },
            "m15": {
                "count_score": 0.04,
                "dataflow_score": 0.33,
                "indegree_score": 0.0,
                "total_score": 0.11
            },
            "m17": {
                "count_score": 0.07,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SortPass:flush(int,int,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,boolean)": {
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.2,
                "indegree_score": 0.56,
                "total_score": 0.32
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.2,
                "indegree_score": 0.77,
                "total_score": 0.41
            },
            "m3": {
                "count_score": 0.12,
                "dataflow_score": 0.2,
                "indegree_score": 0.88,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.21,
                "total_score": 0.16
            },
            "m5": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.96,
                "total_score": 0.46
            },
            "m6": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m7": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.77,
                "total_score": 0.39
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.47,
                "total_score": 0.19
            },
            "m8": {
                "count_score": 0.06,
                "dataflow_score": 0.2,
                "indegree_score": 0.47,
                "total_score": 0.27
            },
            "m9": {
                "count_score": 0.06,
                "dataflow_score": 1.0,
                "indegree_score": 0.96,
                "total_score": 0.7
            },
            "m10": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m11": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.64,
                "total_score": 0.28
            },
            "m12": {
                "count_score": 0.12,
                "dataflow_score": 0.2,
                "indegree_score": 0.56,
                "total_score": 0.32
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.io.SequenceFile$Writer$Option[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.84,
                "total_score": 0.34
            },
            "getInt": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "getValue": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "getKeyClass": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.15,
                "total_score": 0.08
            },
            "get": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.4,
                "total_score": 0.17
            },
            "newKey": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.14
            },
            "getFileSystem": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.25
            },
            "mkdirs": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.55,
                "total_score": 0.24
            },
            "file": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.51,
                "total_score": 0.24
            },
            "keyClass": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.26
            },
            "prependOptions": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.31,
                "total_score": 0.16
            },
            "createWriter": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.26
            },
            "valueClass": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.25
            },
            "compression": {
                "count_score": 0.06,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.78,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.78,
                "total_score": 0.69
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.33
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.43
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.73
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.32
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.12
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.72
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.24,
                "total_score": 0.16
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.39
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.83,
                "total_score": 0.69
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)": {
            "m1": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.67,
                "total_score": 0.31
            },
            "m3": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.41
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.57,
                "total_score": 0.27
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.18,
                "total_score": 0.11
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.93,
                "total_score": 0.71
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,int,short,long,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)": {
            "m1": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.38
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.97,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m5": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m6": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m7": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.36
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.68,
                "total_score": 0.3
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.61,
                "total_score": 0.27
            },
            "m11": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.97,
                "total_score": 0.72
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.util.Progressable)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.6,
                "total_score": 0.29
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.42
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.91,
                "total_score": 0.72
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FSDataOutputStream,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.io.SequenceFile$Metadata)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.43
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.34
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.18
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.73
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FSDataOutputStream,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec)": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.44
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.35
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.95,
                "total_score": 0.74
            }
        }
    },
    {
        "org.apache.hadoop.fs.FileUtil:createJarWithClassPath(java.lang.String,org.apache.hadoop.fs.Path,java.util.Map)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ApplicationClassLoader:<init>(java.lang.String,java.lang.ClassLoader,java.util.List)": {
            "constructUrlsFromClasspath": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:validateFiles(java.lang.String)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Listener:doRead(java.nio.channels.SelectionKey)": {
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.16
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:sendLogLevelRequest()": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.fs.store.DataBlocks$DiskBlockFactory:create(long,int,org.apache.hadoop.fs.store.BlockUploadStatistics)": {
            "m3": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:getTempFilePath(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.LocalDirAllocator)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.83,
                "total_score": 0.41
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.87,
                "total_score": 0.42
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:run(java.lang.String[])": {
            "m1": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.45
            },
            "m4": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.33,
                "total_score": 0.45
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.15
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m13": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.53,
                "total_score": 0.23
            },
            "m15": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.39
            },
            "m16": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m17": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.71
            },
            "m20": {
                "count_score": 0.05,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.31
            },
            "m23": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m21": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m11": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.33,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,org.apache.hadoop.conf.Configuration,boolean)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Reader:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,org.apache.hadoop.conf.Configuration)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue:merge()": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.94,
                "total_score": 0.37
            },
            "m2": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m3": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m4": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.17,
                "total_score": 0.08
            },
            "m7": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.51,
                "total_score": 0.29
            },
            "m8": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.27,
                "total_score": 0.2
            },
            "m5": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.27,
                "total_score": 0.12
            },
            "m12": {
                "count_score": 0.1,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m13": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m14": {
                "count_score": 0.05,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.19
            },
            "m15": {
                "count_score": 0.05,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.56
            },
            "m16": {
                "count_score": 0.05,
                "dataflow_score": 0.5,
                "indegree_score": 0.27,
                "total_score": 0.27
            },
            "m19": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.64,
                "total_score": 0.59
            },
            "m20": {
                "count_score": 0.05,
                "dataflow_score": 0.5,
                "indegree_score": 0.27,
                "total_score": 0.27
            },
            "m21": {
                "count_score": 0.05,
                "dataflow_score": 0.5,
                "indegree_score": 0.27,
                "total_score": 0.27
            },
            "m22": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m24": {
                "count_score": 0.05,
                "dataflow_score": 0.25,
                "indegree_score": 0.92,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter$SortPass:run(boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.17
            },
            "m3": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.36,
                "total_score": 0.17
            },
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.41
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.98,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.41
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.31
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m16": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.io.SequenceFile$Writer$Option[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "getFileSystem": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.95,
                "total_score": 0.53
            },
            "initBloomFilter": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.ArrayFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "keyClass": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "valueClass": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "keyClass": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.15
            },
            "valueClass": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.35
            },
            "compression": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "progressable": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "keyClass": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.27
            },
            "valueClass": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.4
            },
            "compression": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "progressable": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "keyClass": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.18
            },
            "valueClass": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.38
            },
            "compression": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,java.lang.Class)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "comparator": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "valueClass": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.43
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "comparator": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "valueClass": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.38
            },
            "compression": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "comparator": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "valueClass": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.35
            },
            "compression": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "progressable": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "comparator": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            },
            "valueClass": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.4
            },
            "compression": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "progressable": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.37,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Merger:open(org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.Path)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.27,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m2": {
                "count_score": 0.18,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.59,
                "total_score": 0.26
            },
            "m5": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.49,
                "total_score": 0.22
            },
            "m6": {
                "count_score": 0.09,
                "dataflow_score": 0.0,
                "indegree_score": 0.8,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileContext,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.io.SequenceFile$Metadata,java.util.EnumSet,org.apache.hadoop.fs.Options$CreateOpts[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.8
            },
            "m2": {
                "count_score": 0.33,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.4
            },
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.util.Classpath:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.69,
                "total_score": 0.31
            },
            "m4": {
                "count_score": 0.44,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.13
            },
            "m7": {
                "count_score": 0.22,
                "dataflow_score": 0.0,
                "indegree_score": 0.66,
                "total_score": 0.33
            },
            "m12": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            },
            "m13": {
                "count_score": 0.11,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.03
            }
        }
    },
    {
        "org.apache.hadoop.util.RunJar:createClassLoader(java.io.File,java.io.File)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m9": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m12": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "m13": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:processGeneralOptions(org.apache.commons.cli.CommandLine)": {
            "m3": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m5": {
                "count_score": 0.23,
                "dataflow_score": 1.0,
                "indegree_score": 0.22,
                "total_score": 0.46
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m7": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 0.75,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "m10": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m11": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.1
            },
            "m12": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.01
            },
            "m16": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.32,
                "total_score": 0.14
            },
            "m17": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.48,
                "total_score": 0.2
            },
            "m23": {
                "count_score": 0.03,
                "dataflow_score": 0.0,
                "indegree_score": 0.7,
                "total_score": 0.29
            },
            "m22": {
                "count_score": 0.03,
                "dataflow_score": 0.25,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m24": {
                "count_score": 0.03,
                "dataflow_score": 0.25,
                "indegree_score": 0.28,
                "total_score": 0.2
            },
            "m25": {
                "count_score": 0.03,
                "dataflow_score": 0.25,
                "indegree_score": 0.82,
                "total_score": 0.41
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Listener$Reader:doRunLoop()": {
            "m16": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m5": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel$CLI:run(java.lang.String[])": {
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:getCacheFilePath(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.LocalDirAllocator)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:isCacheSpaceAvailable(long,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.LocalDirAllocator)": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:merge(java.util.List,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:merge(org.apache.hadoop.fs.Path[],boolean,int,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.23,
                "total_score": 0.17
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:merge(org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.Path,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.72,
                "total_score": 0.36
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            },
            "m6": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.16,
                "total_score": 0.14
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:merge(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "m2": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:sortPass(boolean)": {
            "m3": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m4": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "get": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.util.Progressable)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.io.WritableComparator,java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.BloomMapFile$Writer:<init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class,java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.58,
                "total_score": 0.26
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.26
            },
            "m7": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 1.0,
                "total_score": 0.66
            },
            "m8": {
                "count_score": 0.2,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.26
            },
            "m10": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.33
            },
            "m9": {
                "count_score": 0.1,
                "dataflow_score": 1.0,
                "indegree_score": 0.24,
                "total_score": 0.43
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.14,
                "total_score": 0.06
            },
            "m4": {
                "count_score": 0.1,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.4
            }
        }
    },
    {
        "org.apache.hadoop.io.SetFile$Writer:<init>(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.MapFile$Merger:merge(org.apache.hadoop.fs.Path[],boolean,org.apache.hadoop.fs.Path)": {
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 0.64,
                "total_score": 0.46
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 0.5,
                "indegree_score": 1.0,
                "total_score": 0.6
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.35
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile:createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,int,short,long,boolean,org.apache.hadoop.io.SequenceFile$CompressionType,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.io.SequenceFile$Metadata)": {
            "m2": {
                "count_score": 0.14,
                "dataflow_score": 0.25,
                "indegree_score": 1.0,
                "total_score": 0.52
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.25,
                "indegree_score": 0.5,
                "total_score": 0.32
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.5,
                "total_score": 0.24
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.25,
                "indegree_score": 0.5,
                "total_score": 0.32
            },
            "m8": {
                "count_score": 0.14,
                "dataflow_score": 0.25,
                "indegree_score": 0.5,
                "total_score": 0.32
            },
            "m9": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            }
        }
    },
    {
        "org.apache.hadoop.util.RunJar:run(java.lang.String[])": {
            "m13": {
                "count_score": 0.29,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.37
            },
            "m21": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m22": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.71,
                "total_score": 0.33
            },
            "m23": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m24": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m25": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:parseGeneralOptions(org.apache.commons.cli.Options,java.lang.String[])": {
            "m1": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m5": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            },
            "m7": {
                "count_score": 0.33,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.1
            }
        }
    },
    {
        "org.apache.hadoop.ipc.Server$Listener$Reader:run()": {
            "m6": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.fs.impl.prefetch.SingleFilePerBlockCache:put(int,java.nio.ByteBuffer,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.LocalDirAllocator)": {
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            },
            "m6": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.13
            },
            "m7": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.22,
                "total_score": 0.13
            },
            "m9": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.62,
                "total_score": 0.29
            },
            "m10": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m13": {
                "count_score": 0.12,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.34
            },
            "m14": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.44,
                "total_score": 0.21
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m17": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:merge(org.apache.hadoop.fs.Path[],boolean,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:mergePass(org.apache.hadoop.fs.Path)": {
            "m3": {
                "count_score": 0.43,
                "dataflow_score": 1.0,
                "indegree_score": 0.88,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.14,
                "dataflow_score": 0.67,
                "indegree_score": 0.32,
                "total_score": 0.37
            },
            "m5": {
                "count_score": 0.14,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.24
            },
            "m6": {
                "count_score": 0.14,
                "dataflow_score": 1.0,
                "indegree_score": 0.32,
                "total_score": 0.47
            },
            "m7": {
                "count_score": 0.14,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.44
            }
        }
    },
    {
        "org.apache.hadoop.util.RunJar:main(java.lang.String[])": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:<init>(org.apache.hadoop.conf.Configuration,org.apache.commons.cli.Options,java.lang.String[])": {
            "parseGeneralOptions": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:sortAndIterate(org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.Path,boolean)": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.29
            },
            "m2": {
                "count_score": 0.12,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.04
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.26,
                "total_score": 0.48
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:merge(org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.91,
                "total_score": 0.41
            },
            "m2": {
                "count_score": 0.17,
                "dataflow_score": 0.67,
                "indegree_score": 1.0,
                "total_score": 0.65
            },
            "m3": {
                "count_score": 0.17,
                "dataflow_score": 0.67,
                "indegree_score": 0.0,
                "total_score": 0.25
            },
            "m4": {
                "count_score": 0.17,
                "dataflow_score": 0.33,
                "indegree_score": 0.14,
                "total_score": 0.2
            },
            "m5": {
                "count_score": 0.17,
                "dataflow_score": 1.0,
                "indegree_score": 0.14,
                "total_score": 0.4
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.42,
                "total_score": 0.22
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:sort(org.apache.hadoop.fs.Path[],org.apache.hadoop.fs.Path,boolean)": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.93,
                "total_score": 0.45
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.15
            },
            "m3": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 1.0,
                "total_score": 0.78
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher$MinimalGenericOptionsParser:<init>(org.apache.hadoop.conf.Configuration,org.apache.commons.cli.Options,java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:<init>(org.apache.commons.cli.Options,java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:<init>(java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.GenericOptionsParser:<init>(org.apache.hadoop.conf.Configuration,java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.io.SequenceFile$Sorter:sort(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)": {
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:createGenericOptionsParser(org.apache.hadoop.conf.Configuration,java.lang.String[])": {
            "<init>": {
                "count_score": 0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.util.ConfTest:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.42
            },
            "m7": {
                "count_score": 0.69,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.21
            },
            "m12": {
                "count_score": 0.15,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m22": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            }
        }
    },
    {
        "org.apache.hadoop.util.ToolRunner:run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String[])": {
            "m1": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m2": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.61
            },
            "m3": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.63,
                "total_score": 0.61
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.31
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.46
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:parseCommandArgs(org.apache.hadoop.conf.Configuration,java.util.List)": {
            "m1": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.45
            },
            "m6": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m7": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.19,
                "total_score": 0.08
            },
            "m8": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            },
            "m9": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.3,
                "total_score": 0.17
            },
            "m13": {
                "count_score": 0.17,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.05
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:exec(org.apache.hadoop.conf.Configuration,java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            },
            "close": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            }
        }
    },
    {
        "org.apache.hadoop.security.token.DtUtilShell:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.alias.CredentialShell:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.crypto.key.KeyShell:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.util.ToolRunner:run(org.apache.hadoop.util.Tool,java.lang.String[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:extractCommandOptions(org.apache.hadoop.conf.Configuration,java.util.List)": {
            "m4": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.security.KDiag:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m5": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.36
            },
            "m6": {
                "count_score": 0.2,
                "dataflow_score": 1.0,
                "indegree_score": 0.18,
                "total_score": 0.43
            },
            "m1": {
                "count_score": 0.4,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.12
            },
            "m4": {
                "count_score": 0.2,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.06
            }
        }
    },
    {
        "org.apache.hadoop.fs.FsShell:main(java.lang.String[])": {
            "m1": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.38
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.4
            },
            "m2": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.28,
                "total_score": 0.19
            },
            "m5": {
                "count_score": 0.25,
                "dataflow_score": 1.0,
                "indegree_score": 0.28,
                "total_score": 0.49
            },
            "m4": {
                "count_score": 0.25,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.08
            }
        }
    },
    {
        "org.apache.hadoop.log.LogLevel:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m1": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.7
            }
        }
    },
    {
        "org.apache.hadoop.util.FindClass:main(java.lang.String[])": {
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.79,
                "total_score": 0.47
            },
            "m1": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.55
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:launchServiceAndExit(java.util.List)": {
            "m4": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m6": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m7": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m8": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m9": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m10": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m12": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m13": {
                "count_score": 0.08,
                "dataflow_score": 1.0,
                "indegree_score": 0.0,
                "total_score": 0.32
            },
            "m11": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            },
            "m14": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 1.0,
                "total_score": 0.43
            },
            "m15": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.02
            },
            "m18": {
                "count_score": 0.08,
                "dataflow_score": 0.0,
                "indegree_score": 0.63,
                "total_score": 0.28
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:serviceMain(java.util.List)": {
            "m4": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            },
            "<init>": {
                "count_score": 0.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.0
            },
            "m3": {
                "count_score": 0.5,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.15
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:main(java.lang.String[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    },
    {
        "org.apache.hadoop.service.launcher.ServiceLauncher:serviceMain(java.lang.String[])": {
            "m2": {
                "count_score": 1.0,
                "dataflow_score": 0.0,
                "indegree_score": 0.0,
                "total_score": 0.3
            }
        }
    }
]